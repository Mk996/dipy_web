{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.tracking/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>"}, "next": {"link": "../dipy.workflows/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "meta": {}, "body": "<div class=\"section\" id=\"module-dipy.viz\">\n<span id=\"viz\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code><a class=\"headerlink\" href=\"#module-dipy.viz\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.LooseVersion\" title=\"dipy.viz.LooseVersion\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">LooseVersion</span></code></a>([vstring])</p></td>\n<td><p>Version numbering for anarchists and software realists.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.fetch_viz_icons\" title=\"dipy.viz.fetch_viz_icons\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fetch_viz_icons</span></code></a>()</p></td>\n<td><p>Download icons for fury</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.optional_package\" title=\"dipy.viz.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.read_viz_icons\" title=\"dipy.viz.read_viz_icons\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">read_viz_icons</span></code></a>([style,\u00a0fname])</p></td>\n<td><p>Read specific icon from specific style.</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.viz.app\">\n<span id=\"module-viz-app\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.app</span></code><a class=\"headerlink\" href=\"#module-dipy.viz.app\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.GlobalHorizon\" title=\"dipy.viz.app.GlobalHorizon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.Horizon\" title=\"dipy.viz.app.Horizon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Horizon</span></code></a>([tractograms,\u00a0images,\u00a0pams,\u00a0\u2026])</p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.Space\" title=\"dipy.viz.app.Space\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Space</span></code></a></p></td>\n<td><p>Enum to simplify future change to convention</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram\" title=\"dipy.viz.app.StatefulTractogram\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a>(streamlines,\u00a0reference,\u00a0space)</p></td>\n<td><p>Class for stateful representation of collections of streamlines Object designed to be identical no matter the file format (trk, tck, vtk, fib, dpy).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.Streamlines\" title=\"dipy.viz.app.Streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Streamlines</span></code></a></p></td>\n<td><p>alias of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">nibabel.streamlines.array_sequence.ArraySequence</span></code></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.apply_shader\" title=\"dipy.viz.app.apply_shader\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_shader</span></code></a>(hz,\u00a0actor)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.build_label\" title=\"dipy.viz.app.build_label\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">build_label</span></code></a>(text[,\u00a0font_size,\u00a0bold])</p></td>\n<td><p>Simple utility function to build labels</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.distinguishable_colormap\" title=\"dipy.viz.app.distinguishable_colormap\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">distinguishable_colormap</span></code></a>([bg,\u00a0exclude,\u00a0\u2026])</p></td>\n<td><p>Generate colors that are maximally perceptually distinct.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.horizon\" title=\"dipy.viz.app.horizon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">horizon</span></code></a>([tractograms,\u00a0images,\u00a0pams,\u00a0\u2026])</p></td>\n<td><p>Interactive medical visualization - Invert the Horizon!</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.length\" title=\"dipy.viz.app.length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">length</span></code></a></p></td>\n<td><p>Euclidean length of streamlines</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.optional_package\" title=\"dipy.viz.app.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.qbx_and_merge\" title=\"dipy.viz.app.qbx_and_merge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">qbx_and_merge</span></code></a>(streamlines,\u00a0thresholds[,\u00a0\u2026])</p></td>\n<td><p>Run QuickBundlesX and then run again on the centroids of the last layer</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.save_tractogram\" title=\"dipy.viz.app.save_tractogram\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">save_tractogram</span></code></a>(sft,\u00a0filename[,\u00a0\u2026])</p></td>\n<td><p>Save the stateful tractogram in any format (trk, tck, vtk, fib, dpy)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.setup_module\" title=\"dipy.viz.app.setup_module\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup_module</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.slicer_panel\" title=\"dipy.viz.app.slicer_panel\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">slicer_panel</span></code></a>(scene,\u00a0iren[,\u00a0data,\u00a0affine,\u00a0\u2026])</p></td>\n<td><p>Slicer panel with slicer included</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.viz.gmem\">\n<span id=\"module-viz-gmem\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.gmem</span></code><a class=\"headerlink\" href=\"#module-dipy.viz.gmem\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.gmem.GlobalHorizon\" title=\"dipy.viz.gmem.GlobalHorizon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.viz.panel\">\n<span id=\"module-viz-panel\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.panel</span></code><a class=\"headerlink\" href=\"#module-dipy.viz.panel\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.panel.GlobalHorizon\" title=\"dipy.viz.panel.GlobalHorizon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.panel.build_label\" title=\"dipy.viz.panel.build_label\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">build_label</span></code></a>(text[,\u00a0font_size,\u00a0bold])</p></td>\n<td><p>Simple utility function to build labels</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.panel.optional_package\" title=\"dipy.viz.panel.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.panel.setup_module\" title=\"dipy.viz.panel.setup_module\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup_module</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.panel.slicer_panel\" title=\"dipy.viz.panel.slicer_panel\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">slicer_panel</span></code></a>(scene,\u00a0iren[,\u00a0data,\u00a0affine,\u00a0\u2026])</p></td>\n<td><p>Slicer panel with slicer included</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.viz.projections\">\n<span id=\"module-viz-projections\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.projections</span></code><a class=\"headerlink\" href=\"#module-dipy.viz.projections\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Visualization tools for 2D projections of 3D functions on the sphere, such as\nODFs.</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.projections.doctest_skip_parser\" title=\"dipy.viz.projections.doctest_skip_parser\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">doctest_skip_parser</span></code></a>(func)</p></td>\n<td><p>Decorator replaces custom skip test markup in doctests.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.projections.optional_package\" title=\"dipy.viz.projections.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.projections.setup_module\" title=\"dipy.viz.projections.setup_module\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup_module</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.projections.sph_project\" title=\"dipy.viz.projections.sph_project\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sph_project</span></code></a>(vertices,\u00a0val[,\u00a0ax,\u00a0vmin,\u00a0vmax,\u00a0\u2026])</p></td>\n<td><p>Draw a signal on a 2D projection of the sphere.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.viz.regtools\">\n<span id=\"module-viz-regtools\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.regtools</span></code><a class=\"headerlink\" href=\"#module-dipy.viz.regtools\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.draw_lattice_2d\" title=\"dipy.viz.regtools.draw_lattice_2d\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">draw_lattice_2d</span></code></a>(nrows,\u00a0ncols,\u00a0delta)</p></td>\n<td><p>Create a regular lattice of nrows x ncols squares.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.optional_package\" title=\"dipy.viz.regtools.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.overlay_images\" title=\"dipy.viz.regtools.overlay_images\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">overlay_images</span></code></a>(img0,\u00a0img1[,\u00a0title0,\u00a0\u2026])</p></td>\n<td><p>Plot two images one on top of the other using red and green channels.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.overlay_slices\" title=\"dipy.viz.regtools.overlay_slices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">overlay_slices</span></code></a>(L,\u00a0R[,\u00a0slice_index,\u00a0\u2026])</p></td>\n<td><p>Plot three overlaid slices from the given volumes.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.plot_2d_diffeomorphic_map\" title=\"dipy.viz.regtools.plot_2d_diffeomorphic_map\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_2d_diffeomorphic_map</span></code></a>(mapping[,\u00a0delta,\u00a0\u2026])</p></td>\n<td><p>Draw the effect of warping a regular lattice by a diffeomorphic map.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.plot_slices\" title=\"dipy.viz.regtools.plot_slices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_slices</span></code></a>(V[,\u00a0slice_indices,\u00a0fname])</p></td>\n<td><p>Plot 3 slices from the given volume: 1 sagital, 1 coronal and 1 axial</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.setup_module\" title=\"dipy.viz.regtools.setup_module\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup_module</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.regtools.simple_plot\" title=\"dipy.viz.regtools.simple_plot\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">simple_plot</span></code></a>(file_name,\u00a0title,\u00a0x,\u00a0y,\u00a0xlabel,\u00a0\u2026)</p></td>\n<td><p>Saves the simple plot with given x and y values</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"looseversion\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.LooseVersion\" title=\"dipy.viz.LooseVersion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LooseVersion</span></code></a><a class=\"headerlink\" href=\"#looseversion\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.LooseVersion\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.</code><code class=\"sig-name descname\">LooseVersion</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.LooseVersion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">distutils.version.Version</span></code></p>\n<p>Version numbering for anarchists and software realists.\nImplements the standard interface for version number classes as\ndescribed above.  A version number consists of a series of numbers,\nseparated by either periods or strings of letters.  When comparing\nversion numbers, the numeric components will be compared\nnumerically, and the alphabetic components lexically.  The following\nare all valid version numbers, in no particular order:</p>\n<blockquote>\n<div><p>1.5.1\n1.5.2b2\n161\n3.10a\n8.02\n3.4j\n1996.07.12\n3.2.pl0\n3.1.1.6\n2g6\n11g\n0.960923\n2.2beta29\n1.13++\n5.5.kw\n2.0b1pl0</p>\n</div></blockquote>\n<p>In fact, there is no such thing as an invalid version number under\nthis scheme; the rules for comparison are simple and predictable,\nbut may not always give the results you want (for some definition\nof \u201cwant\u201d).</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 47%\" />\n<col style=\"width: 53%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>parse</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.viz.LooseVersion.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.LooseVersion.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.viz.LooseVersion.component_re\">\n<code class=\"sig-name descname\">component_re</code><em class=\"property\"> = re.compile('(\\\\d+ | [a-z]+ | \\\\.)', re.VERBOSE)</em><a class=\"headerlink\" href=\"#dipy.viz.LooseVersion.component_re\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.LooseVersion.parse\">\n<code class=\"sig-name descname\">parse</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">vstring</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.LooseVersion.parse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fetch-viz-icons\">\n<h3>fetch_viz_icons<a class=\"headerlink\" href=\"#fetch-viz-icons\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.fetch_viz_icons\">\n<code class=\"sig-prename descclassname\">dipy.viz.</code><code class=\"sig-name descname\">fetch_viz_icons</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.fetch_viz_icons\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Download icons for fury</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"optional-package\">\n<h3>optional_package<a class=\"headerlink\" href=\"#optional-package\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.optional_package\">\n<code class=\"sig-prename descclassname\">dipy.viz.</code><code class=\"sig-name descname\">optional_package</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"k\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"read-viz-icons\">\n<h3>read_viz_icons<a class=\"headerlink\" href=\"#read-viz-icons\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.read_viz_icons\">\n<code class=\"sig-prename descclassname\">dipy.viz.</code><code class=\"sig-name descname\">read_viz_icons</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">style='icomoon'</em>, <em class=\"sig-param\">fname='infinity.png'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.read_viz_icons\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read specific icon from specific style.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>style</strong><span class=\"classifier\">str</span></dt><dd><p>Current icon style. Default is icomoon.</p>\n</dd>\n<dt><strong>fname</strong><span class=\"classifier\">str</span></dt><dd><p>Filename of icon. This should be found in folder HOME/.fury/style/.\nDefault is infinity.png.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>path</strong><span class=\"classifier\">str</span></dt><dd><p>Complete path of icon.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"globalhorizon\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.app.GlobalHorizon\" title=\"dipy.viz.app.GlobalHorizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a><a class=\"headerlink\" href=\"#globalhorizon\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.app.GlobalHorizon\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">GlobalHorizon</code><a class=\"headerlink\" href=\"#dipy.viz.app.GlobalHorizon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.GlobalHorizon.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.GlobalHorizon.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"horizon\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.app.Horizon\" title=\"dipy.viz.app.Horizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Horizon</span></code></a><a class=\"headerlink\" href=\"#horizon\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.app.Horizon\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">Horizon</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">tractograms=None</em>, <em class=\"sig-param\">images=None</em>, <em class=\"sig-param\">pams=None</em>, <em class=\"sig-param\">cluster=False</em>, <em class=\"sig-param\">cluster_thr=15.0</em>, <em class=\"sig-param\">random_colors=False</em>, <em class=\"sig-param\">length_gt=0</em>, <em class=\"sig-param\">length_lt=1000</em>, <em class=\"sig-param\">clusters_gt=0</em>, <em class=\"sig-param\">clusters_lt=10000</em>, <em class=\"sig-param\">world_coords=True</em>, <em class=\"sig-param\">interactive=True</em>, <em class=\"sig-param\">out_png='tmp.png'</em>, <em class=\"sig-param\">recorded_events=None</em>, <em class=\"sig-param\">return_showm=False</em>, <em class=\"sig-param\">bg_color=(0</em>, <em class=\"sig-param\">0</em>, <em class=\"sig-param\">0)</em>, <em class=\"sig-param\">order_transparent=True</em>, <em class=\"sig-param\">buan=False</em>, <em class=\"sig-param\">buan_colors=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.Horizon.add_cluster_actors\" title=\"dipy.viz.app.Horizon.add_cluster_actors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_cluster_actors</span></code></a>(scene,\u00a0tractograms,\u00a0threshold)</p></td>\n<td><p>Add streamline actors to the scene</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 71%\" />\n<col style=\"width: 29%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>build_scene</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>build_show</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><p><strong>remove_cluster_actors</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Horizon.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">tractograms=None</em>, <em class=\"sig-param\">images=None</em>, <em class=\"sig-param\">pams=None</em>, <em class=\"sig-param\">cluster=False</em>, <em class=\"sig-param\">cluster_thr=15.0</em>, <em class=\"sig-param\">random_colors=False</em>, <em class=\"sig-param\">length_gt=0</em>, <em class=\"sig-param\">length_lt=1000</em>, <em class=\"sig-param\">clusters_gt=0</em>, <em class=\"sig-param\">clusters_lt=10000</em>, <em class=\"sig-param\">world_coords=True</em>, <em class=\"sig-param\">interactive=True</em>, <em class=\"sig-param\">out_png='tmp.png'</em>, <em class=\"sig-param\">recorded_events=None</em>, <em class=\"sig-param\">return_showm=False</em>, <em class=\"sig-param\">bg_color=(0</em>, <em class=\"sig-param\">0</em>, <em class=\"sig-param\">0)</em>, <em class=\"sig-param\">order_transparent=True</em>, <em class=\"sig-param\">buan=False</em>, <em class=\"sig-param\">buan_colors=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interactive medical visualization - Invert the Horizon!</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>tractograms</strong><span class=\"classifier\">sequence of StatefulTractograms</span></dt><dd><p>StatefulTractograms are used for making sure that the coordinate\nsystems are correct</p>\n</dd>\n<dt><strong>images</strong><span class=\"classifier\">sequence of tuples</span></dt><dd><p>Each tuple contains data and affine</p>\n</dd>\n<dt><strong>pams</strong><span class=\"classifier\">sequence of PeakAndMetrics</span></dt><dd><p>Contains peak directions and spherical harmonic coefficients</p>\n</dd>\n<dt><strong>cluster</strong><span class=\"classifier\">bool</span></dt><dd><p>Enable QuickBundlesX clustering</p>\n</dd>\n<dt><strong>cluster_thr</strong><span class=\"classifier\">float</span></dt><dd><p>Distance threshold used for clustering. Default value 15.0 for\nsmall animal data you may need to use something smaller such\nas 2.0. The threshold is in mm. For this parameter to be active\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster</span></code> should be enabled.</p>\n</dd>\n<dt><strong>random_colors</strong><span class=\"classifier\">bool</span></dt><dd><p>Given multiple tractograms have been included then each tractogram\nwill be shown with different color</p>\n</dd>\n<dt><strong>length_gt</strong><span class=\"classifier\">float</span></dt><dd><p>Clusters with average length greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_gt</span></code> amount\nin mm will be shown.</p>\n</dd>\n<dt><strong>length_lt</strong><span class=\"classifier\">float</span></dt><dd><p>Clusters with average length less than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_lt</span></code> amount in mm\nwill be shown.</p>\n</dd>\n<dt><strong>clusters_gt</strong><span class=\"classifier\">int</span></dt><dd><p>Clusters with size greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_gt</span></code> will be shown.</p>\n</dd>\n<dt><strong>clusters_lt</strong><span class=\"classifier\">int</span></dt><dd><p>Clusters with size less than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_lt</span></code> will be shown.</p>\n</dd>\n<dt><strong>world_coords</strong><span class=\"classifier\">bool</span></dt><dd><p>Show data in their world coordinates (not native voxel coordinates)\nDefault True.</p>\n</dd>\n<dt><strong>interactive</strong><span class=\"classifier\">bool</span></dt><dd><p>Allow user interaction. If False then Horizon goes on stealth mode\nand just saves pictures.</p>\n</dd>\n<dt><strong>out_png</strong><span class=\"classifier\">string</span></dt><dd><p>Filename of saved picture.</p>\n</dd>\n<dt><strong>recorded_events</strong><span class=\"classifier\">string</span></dt><dd><p>File path to replay recorded events</p>\n</dd>\n<dt><strong>return_showm</strong><span class=\"classifier\">bool</span></dt><dd><p>Return ShowManager object. Used only at Python level. Can be used\nfor extending Horizon\u2019s cababilities externally and for testing\npurposes.</p>\n</dd>\n<dt><strong>bg_color</strong><span class=\"classifier\">ndarray or list or tuple</span></dt><dd><p>Define the background color of the scene.\nDefault is black (0, 0, 0)</p>\n</dd>\n<dt><strong>order_transparent</strong><span class=\"classifier\">bool</span></dt><dd><p>Default True. Use depth peeling to sort transparent objects.\nIf True also enables anti-aliasing.</p>\n</dd>\n<dt><strong>buan</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>Enables BUAN framework visualization. Default is False.</p>\n</dd>\n<dt><strong>buan_colors</strong><span class=\"classifier\">list, optional</span></dt><dd><p>List of colors for bundles.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r984363f17fa0-horizon-ismrm19\"><span class=\"brackets\">Horizon_ISMRM19</span></dt>\n<dd><p>Garyfallidis E., M-A. Cote, B.Q. Chandio,\nS. Fadnavis, J. Guaje, R. Aggarwal, E. St-Onge, K.S. Juneja,\nS. Koudoro, D. Reagan, DIPY Horizon: fast, modular, unified and\nadaptive visualization, Proceedings of: International Society of\nMagnetic Resonance in Medicine (ISMRM), Montreal, Canada, 2019.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Horizon.add_cluster_actors\">\n<code class=\"sig-name descname\">add_cluster_actors</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scene</em>, <em class=\"sig-param\">tractograms</em>, <em class=\"sig-param\">threshold</em>, <em class=\"sig-param\">enable_callbacks=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon.add_cluster_actors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add streamline actors to the scene</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>scene</strong><span class=\"classifier\">Scene</span></dt><dd></dd>\n<dt><strong>tractograms</strong><span class=\"classifier\">list</span></dt><dd><p>list of tractograms</p>\n</dd>\n<dt><strong>threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Cluster threshold</p>\n</dd>\n<dt><strong>enable_callbacks</strong><span class=\"classifier\">bool</span></dt><dd><p>Enable callbacks for selecting clusters</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Horizon.build_scene\">\n<code class=\"sig-name descname\">build_scene</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon.build_scene\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Horizon.build_show\">\n<code class=\"sig-name descname\">build_show</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scene</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon.build_show\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Horizon.remove_cluster_actors\">\n<code class=\"sig-name descname\">remove_cluster_actors</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scene</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Horizon.remove_cluster_actors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"space\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.app.Space\" title=\"dipy.viz.app.Space\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Space</span></code></a><a class=\"headerlink\" href=\"#space\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.app.Space\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">Space</code><a class=\"headerlink\" href=\"#dipy.viz.app.Space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/enum.html#enum.Enum\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">enum.Enum</span></code></a></p>\n<p>Enum to simplify future change to convention</p>\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.Space.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.Space.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.viz.app.Space.RASMM\">\n<code class=\"sig-name descname\">RASMM</code><em class=\"property\"> = 'rasmm'</em><a class=\"headerlink\" href=\"#dipy.viz.app.Space.RASMM\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.viz.app.Space.VOX\">\n<code class=\"sig-name descname\">VOX</code><em class=\"property\"> = 'vox'</em><a class=\"headerlink\" href=\"#dipy.viz.app.Space.VOX\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.viz.app.Space.VOXMM\">\n<code class=\"sig-name descname\">VOXMM</code><em class=\"property\"> = 'voxmm'</em><a class=\"headerlink\" href=\"#dipy.viz.app.Space.VOXMM\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"statefultractogram\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram\" title=\"dipy.viz.app.StatefulTractogram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a><a class=\"headerlink\" href=\"#statefultractogram\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.app.StatefulTractogram\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">StatefulTractogram</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">streamlines</em>, <em class=\"sig-param\">reference</em>, <em class=\"sig-param\">space</em>, <em class=\"sig-param\">origin=&lt;Origin.NIFTI: 'center'&gt;</em>, <em class=\"sig-param\">data_per_point=None</em>, <em class=\"sig-param\">data_per_streamline=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Class for stateful representation of collections of streamlines\nObject designed to be identical no matter the file format\n(trk, tck, vtk, fib, dpy). Facilitate transformation between space and\ndata manipulation for each streamline / point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.affine\" title=\"dipy.viz.app.StatefulTractogram.affine\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">affine</span></code></a></dt><dd><p>Getter for the reference affine</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.data_per_point\" title=\"dipy.viz.app.StatefulTractogram.data_per_point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">data_per_point</span></code></a></dt><dd><p>Getter for data_per_point</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.data_per_streamline\" title=\"dipy.viz.app.StatefulTractogram.data_per_streamline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">data_per_streamline</span></code></a></dt><dd><p>Getter for data_per_streamline</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.dimensions\" title=\"dipy.viz.app.StatefulTractogram.dimensions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dimensions</span></code></a></dt><dd><p>Getter for the reference dimensions</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.origin\" title=\"dipy.viz.app.StatefulTractogram.origin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">origin</span></code></a></dt><dd><p>Getter for origin standard</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.space\" title=\"dipy.viz.app.StatefulTractogram.space\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">space</span></code></a></dt><dd><p>Getter for the current space</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.space_attributes\" title=\"dipy.viz.app.StatefulTractogram.space_attributes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">space_attributes</span></code></a></dt><dd><p>Getter for spatial attribute</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.streamlines\" title=\"dipy.viz.app.StatefulTractogram.streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">streamlines</span></code></a></dt><dd><p>Partially safe getter for streamlines</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.voxel_order\" title=\"dipy.viz.app.StatefulTractogram.voxel_order\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">voxel_order</span></code></a></dt><dd><p>Getter for the reference voxel order</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.voxel_sizes\" title=\"dipy.viz.app.StatefulTractogram.voxel_sizes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">voxel_sizes</span></code></a></dt><dd><p>Getter for the reference voxel sizes</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.are_compatible\" title=\"dipy.viz.app.StatefulTractogram.are_compatible\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">are_compatible</span></code></a>(sft_1,\u00a0sft_2)</p></td>\n<td><p>Compatibility verification of two StatefulTractogram to ensure space, origin, data_per_point and data_per_streamline consistency</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.compute_bounding_box\" title=\"dipy.viz.app.StatefulTractogram.compute_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">compute_bounding_box</span></code></a>()</p></td>\n<td><p>Compute the bounding box of the streamlines in their current state</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.from_sft\" title=\"dipy.viz.app.StatefulTractogram.from_sft\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_sft</span></code></a>(streamlines,\u00a0sft[,\u00a0data_per_point,\u00a0\u2026])</p></td>\n<td><p>Create an instance of <cite>StatefulTractogram</cite> from another instance of <cite>StatefulTractogram</cite>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.get_data_per_point_keys\" title=\"dipy.viz.app.StatefulTractogram.get_data_per_point_keys\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_data_per_point_keys</span></code></a>()</p></td>\n<td><p>Return a list of the data_per_point attribute names</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.get_data_per_streamline_keys\" title=\"dipy.viz.app.StatefulTractogram.get_data_per_streamline_keys\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_data_per_streamline_keys</span></code></a>()</p></td>\n<td><p>Return a list of the data_per_streamline attribute names</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.get_streamlines_copy\" title=\"dipy.viz.app.StatefulTractogram.get_streamlines_copy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_streamlines_copy</span></code></a>()</p></td>\n<td><p>Safe getter for streamlines (for slicing)</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.is_bbox_in_vox_valid\" title=\"dipy.viz.app.StatefulTractogram.is_bbox_in_vox_valid\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_bbox_in_vox_valid</span></code></a>()</p></td>\n<td><p>Verify that the bounding box is valid in voxel space.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.remove_invalid_streamlines\" title=\"dipy.viz.app.StatefulTractogram.remove_invalid_streamlines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">remove_invalid_streamlines</span></code></a>([epsilon])</p></td>\n<td><p>Remove streamlines with invalid coordinates from the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_center\" title=\"dipy.viz.app.StatefulTractogram.to_center\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_center</span></code></a>()</p></td>\n<td><p>Safe function to shift streamlines so the center of voxel is the origin</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_corner\" title=\"dipy.viz.app.StatefulTractogram.to_corner\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_corner</span></code></a>()</p></td>\n<td><p>Safe function to shift streamlines so the corner of voxel is the origin</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_origin\" title=\"dipy.viz.app.StatefulTractogram.to_origin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_origin</span></code></a>(target_origin)</p></td>\n<td><p>Safe function to change streamlines to a particular origin standard False means NIFTI (center) and True means TrackVis (corner)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_rasmm\" title=\"dipy.viz.app.StatefulTractogram.to_rasmm\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_rasmm</span></code></a>()</p></td>\n<td><p>Safe function to transform streamlines and update state</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_space\" title=\"dipy.viz.app.StatefulTractogram.to_space\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_space</span></code></a>(target_space)</p></td>\n<td><p>Safe function to transform streamlines to a particular space using an enum and update state</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_vox\" title=\"dipy.viz.app.StatefulTractogram.to_vox\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_vox</span></code></a>()</p></td>\n<td><p>Safe function to transform streamlines and update state</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.viz.app.StatefulTractogram.to_voxmm\" title=\"dipy.viz.app.StatefulTractogram.to_voxmm\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_voxmm</span></code></a>()</p></td>\n<td><p>Safe function to transform streamlines and update state</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">streamlines</em>, <em class=\"sig-param\">reference</em>, <em class=\"sig-param\">space</em>, <em class=\"sig-param\">origin=&lt;Origin.NIFTI: 'center'&gt;</em>, <em class=\"sig-param\">data_per_point=None</em>, <em class=\"sig-param\">data_per_streamline=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a strict, state-aware, robust tractogram</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>streamlines</strong><span class=\"classifier\">list or ArraySequence</span></dt><dd><p>Streamlines of the tractogram</p>\n</dd>\n<dt><strong>reference</strong><span class=\"classifier\">Nifti or Trk filename, Nifti1Image or TrkFile,</span></dt><dd><p>Nifti1Header, trk.header (dict) or another Stateful Tractogram\nReference that provides the spatial attributes.\nTypically a nifti-related object from the native diffusion used for\nstreamlines generation</p>\n</dd>\n<dt><strong>space</strong><span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Space)</span></dt><dd><p>Current space in which the streamlines are (vox, voxmm or rasmm)\nAfter tracking the space is VOX, after loading with nibabel\nthe space is RASMM</p>\n</dd>\n<dt><strong>origin</strong><span class=\"classifier\">Enum (dipy.io.stateful_tractogram.Origin), optional</span></dt><dd><p>Current origin in which the streamlines are (center or corner)\nAfter loading with nibabel the origin is CENTER</p>\n</dd>\n<dt><strong>data_per_point</strong><span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items, each items has Y_i items\nX being the number of streamlines\nY_i being the number of points on streamlines #i</p>\n</dd>\n<dt><strong>data_per_streamline</strong><span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items\nX being the number of streamlines</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Very important to respect the convention, verify that streamlines\nmatch the reference and are effectively in the right space.</p>\n<p>Any change to the number of streamlines, data_per_point or\ndata_per_streamline requires particular verification.</p>\n<p>In a case of manipulation not allowed by this object, use Nibabel\ndirectly and be careful.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.affine\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">affine</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.affine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference affine</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.are_compatible\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">are_compatible</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sft_1</em>, <em class=\"sig-param\">sft_2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compatibility verification of two StatefulTractogram to ensure space,\norigin, data_per_point and data_per_streamline consistency</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.compute_bounding_box\">\n<code class=\"sig-name descname\">compute_bounding_box</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.compute_bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the bounding box of the streamlines in their current state</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>output</strong><span class=\"classifier\">ndarray</span></dt><dd><p>8 corners of the XYZ aligned box, all zeros if no streamlines</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.data_per_point\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">data_per_point</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.data_per_point\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for data_per_point</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.data_per_streamline\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">data_per_streamline</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.data_per_streamline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for data_per_streamline</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.dimensions\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">dimensions</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.dimensions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference dimensions</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.from_sft\">\n<em class=\"property\">static </em><code class=\"sig-name descname\">from_sft</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">streamlines</em>, <em class=\"sig-param\">sft</em>, <em class=\"sig-param\">data_per_point=None</em>, <em class=\"sig-param\">data_per_streamline=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.from_sft\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an instance of <cite>StatefulTractogram</cite> from another instance\nof <cite>StatefulTractogram</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>streamlines</strong><span class=\"classifier\">list or ArraySequence</span></dt><dd><p>Streamlines of the tractogram</p>\n</dd>\n<dt><strong>sft</strong><span class=\"classifier\">StatefulTractgram,</span></dt><dd><p>The other StatefulTractgram to copy the space_attribute AND\nstate from.</p>\n</dd>\n<dt><strong>data_per_point</strong><span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items, each items has Y_i items\nX being the number of streamlines\nY_i being the number of points on streamlines #i</p>\n</dd>\n<dt><strong>data_per_streamline</strong><span class=\"classifier\">dict, optional</span></dt><dd><p>Dictionary in which each key has X items\nX being the number of streamlines</p>\n</dd>\n<dt><strong>\u2014\u2013</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.get_data_per_point_keys\">\n<code class=\"sig-name descname\">get_data_per_point_keys</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.get_data_per_point_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a list of the data_per_point attribute names</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.get_data_per_streamline_keys\">\n<code class=\"sig-name descname\">get_data_per_streamline_keys</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.get_data_per_streamline_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a list of the data_per_streamline attribute names</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.get_streamlines_copy\">\n<code class=\"sig-name descname\">get_streamlines_copy</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.get_streamlines_copy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe getter for streamlines (for slicing)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.is_bbox_in_vox_valid\">\n<code class=\"sig-name descname\">is_bbox_in_vox_valid</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.is_bbox_in_vox_valid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Verify that the bounding box is valid in voxel space.\nNegative coordinates or coordinates above the volume dimensions\nare considered invalid in voxel space.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>output</strong><span class=\"classifier\">bool</span></dt><dd><p>Are the streamlines within the volume of the associated reference</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.origin\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">origin</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.origin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for origin standard</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.remove_invalid_streamlines\">\n<code class=\"sig-name descname\">remove_invalid_streamlines</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">epsilon=0.001</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.remove_invalid_streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove streamlines with invalid coordinates from the object.\nWill also remove the data_per_point and data_per_streamline.\nInvalid coordinates are any X,Y,Z values above the reference\ndimensions or below zero</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>epsilon</strong><span class=\"classifier\">float (optional)</span></dt><dd><p>Epsilon value for the bounding box verification.\nDefault is 1e-6.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>output</strong><span class=\"classifier\">tuple</span></dt><dd><p>Tuple of two list, indices_to_remove, indices_to_keep</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.space\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">space</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the current space</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.space_attributes\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">space_attributes</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.space_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for spatial attribute</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.streamlines\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">streamlines</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Partially safe getter for streamlines</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_center\">\n<code class=\"sig-name descname\">to_center</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_center\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to shift streamlines so the center of voxel is\nthe origin</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_corner\">\n<code class=\"sig-name descname\">to_corner</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_corner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to shift streamlines so the corner of voxel is\nthe origin</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_origin\">\n<code class=\"sig-name descname\">to_origin</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">target_origin</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_origin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to change streamlines to a particular origin standard\nFalse means NIFTI (center) and True means TrackVis (corner)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_rasmm\">\n<code class=\"sig-name descname\">to_rasmm</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_rasmm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_space\">\n<code class=\"sig-name descname\">to_space</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">target_space</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_space\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines to a particular space using\nan enum and update state</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_vox\">\n<code class=\"sig-name descname\">to_vox</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_vox\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.to_voxmm\">\n<code class=\"sig-name descname\">to_voxmm</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.to_voxmm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Safe function to transform streamlines and update state</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.voxel_order\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">voxel_order</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.voxel_order\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference voxel order</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.viz.app.StatefulTractogram.voxel_sizes\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">voxel_sizes</code><a class=\"headerlink\" href=\"#dipy.viz.app.StatefulTractogram.voxel_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Getter for the reference voxel sizes</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"streamlines\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.app.Streamlines\" title=\"dipy.viz.app.Streamlines\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Streamlines</span></code></a><a class=\"headerlink\" href=\"#streamlines\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"attribute\">\n<dt id=\"dipy.viz.app.Streamlines\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">Streamlines</code><a class=\"headerlink\" href=\"#dipy.viz.app.Streamlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">nibabel.streamlines.array_sequence.ArraySequence</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"apply-shader\">\n<h3>apply_shader<a class=\"headerlink\" href=\"#apply-shader\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.apply_shader\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">apply_shader</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">hz</em>, <em class=\"sig-param\">actor</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.apply_shader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"build-label\">\n<h3>build_label<a class=\"headerlink\" href=\"#build-label\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.build_label\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">build_label</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">text</em>, <em class=\"sig-param\">font_size=18</em>, <em class=\"sig-param\">bold=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.build_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple utility function to build labels</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>text</strong><span class=\"classifier\">str</span></dt><dd></dd>\n<dt><strong>font_size</strong><span class=\"classifier\">int</span></dt><dd></dd>\n<dt><strong>bold</strong><span class=\"classifier\">bool</span></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>label</strong><span class=\"classifier\">TextBlock2D</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"distinguishable-colormap\">\n<h3>distinguishable_colormap<a class=\"headerlink\" href=\"#distinguishable-colormap\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.distinguishable_colormap\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">distinguishable_colormap</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">bg=(0</em>, <em class=\"sig-param\">0</em>, <em class=\"sig-param\">0)</em>, <em class=\"sig-param\">exclude=[]</em>, <em class=\"sig-param\">nb_colors=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.distinguishable_colormap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate colors that are maximally perceptually distinct.</p>\n<p>This function generates a set of colors which are distinguishable\nby reference to the \u201cLab\u201d color space, which more closely matches\nhuman color perception than RGB. Given an initial large list of possible\ncolors, it iteratively chooses the entry in the list that is farthest (in\nLab space) from all previously-chosen entries. While this \u201cgreedy\u201d\nalgorithm does not yield a global maximum, it is simple and efficient.\nMoreover, the sequence of colors is consistent no matter how many you\nrequest, which facilitates the users\u2019 ability to learn the color order\nand avoids major changes in the appearance of plots when adding or\nremoving lines.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>bg</strong><span class=\"classifier\">tuple (optional)</span></dt><dd><p>Background RGB color, to make sure that your colors are also\ndistinguishable from the background. Default: (0, 0, 0).</p>\n</dd>\n<dt><strong>exclude</strong><span class=\"classifier\">list of tuples (optional)</span></dt><dd><p>Additional RGB colors to be distinguishable from.</p>\n</dd>\n<dt><strong>nb_colors</strong><span class=\"classifier\">int (optional)</span></dt><dd><p>Number of colors desired. Default: generate as many colors as needed.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt>iterable of ndarray</dt><dd><p>If <cite>nb_colors</cite> is provided, returns a list of RBG colors.\nOtherwise, yields the next RBG color maximally perceptually\ndistinct from previous ones.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Code was initially in matlab and was rewritten in Python for dipy by\nthe Dipy Team. Thank you Tim Holy for putting this online. Visit\n<a class=\"reference external\" href=\"http://www.mathworks.com/matlabcentral/fileexchange/29702\">http://www.mathworks.com/matlabcentral/fileexchange/29702</a> for the\noriginal implementation (v1.2), 14 Dec 2010 (Updated 07 Feb 2011).</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz.colormap</span> <span class=\"k\">import</span> <span class=\"n\">distinguishable_colormap</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Generate 5 colors</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">c</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"n\">distinguishable_colormap</span><span class=\"p\">())]</span>\n<span class=\"go\">[array([ 0.,  1.,  0.]),</span>\n<span class=\"go\"> array([ 1.,  0.,  1.]),</span>\n<span class=\"go\"> array([ 1.        ,  0.75862069,  0.03448276]),</span>\n<span class=\"go\"> array([ 0.        ,  1.        ,  0.89655172]),</span>\n<span class=\"go\"> array([ 0.        ,  0.17241379,  1.        ])]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id2\">\n<h3>horizon<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.horizon\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">horizon</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">tractograms=None</em>, <em class=\"sig-param\">images=None</em>, <em class=\"sig-param\">pams=None</em>, <em class=\"sig-param\">cluster=False</em>, <em class=\"sig-param\">cluster_thr=15.0</em>, <em class=\"sig-param\">random_colors=False</em>, <em class=\"sig-param\">bg_color=(0</em>, <em class=\"sig-param\">0</em>, <em class=\"sig-param\">0)</em>, <em class=\"sig-param\">order_transparent=True</em>, <em class=\"sig-param\">length_gt=0</em>, <em class=\"sig-param\">length_lt=1000</em>, <em class=\"sig-param\">clusters_gt=0</em>, <em class=\"sig-param\">clusters_lt=10000</em>, <em class=\"sig-param\">world_coords=True</em>, <em class=\"sig-param\">interactive=True</em>, <em class=\"sig-param\">buan=False</em>, <em class=\"sig-param\">buan_colors=None</em>, <em class=\"sig-param\">out_png='tmp.png'</em>, <em class=\"sig-param\">recorded_events=None</em>, <em class=\"sig-param\">return_showm=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.horizon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interactive medical visualization - Invert the Horizon!</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>tractograms</strong><span class=\"classifier\">sequence of StatefulTractograms</span></dt><dd><p>StatefulTractograms are used for making sure that the coordinate\nsystems are correct</p>\n</dd>\n<dt><strong>images</strong><span class=\"classifier\">sequence of tuples</span></dt><dd><p>Each tuple contains data and affine</p>\n</dd>\n<dt><strong>pams</strong><span class=\"classifier\">sequence of PeakAndMetrics</span></dt><dd><p>Contains peak directions and spherical harmonic coefficients</p>\n</dd>\n<dt><strong>cluster</strong><span class=\"classifier\">bool</span></dt><dd><p>Enable QuickBundlesX clustering</p>\n</dd>\n<dt><strong>cluster_thr</strong><span class=\"classifier\">float</span></dt><dd><p>Distance threshold used for clustering. Default value 15.0 for\nsmall animal data you may need to use something smaller such\nas 2.0. The threshold is in mm. For this parameter to be active\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster</span></code> should be enabled.</p>\n</dd>\n<dt><strong>random_colors</strong><span class=\"classifier\">bool</span></dt><dd><p>Given multiple tractograms have been included then each tractogram\nwill be shown with different color</p>\n</dd>\n<dt><strong>bg_color</strong><span class=\"classifier\">ndarray or list or tuple</span></dt><dd><p>Define the background color of the scene. Default is black (0, 0, 0)</p>\n</dd>\n<dt><strong>order_transparent</strong><span class=\"classifier\">bool</span></dt><dd><p>Default True. Use depth peeling to sort transparent objects.\nIf True also enables anti-aliasing.</p>\n</dd>\n<dt><strong>length_gt</strong><span class=\"classifier\">float</span></dt><dd><p>Clusters with average length greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_gt</span></code> amount\nin mm will be shown.</p>\n</dd>\n<dt><strong>length_lt</strong><span class=\"classifier\">float</span></dt><dd><p>Clusters with average length less than <code class=\"docutils literal notranslate\"><span class=\"pre\">length_lt</span></code> amount in mm\nwill be shown.</p>\n</dd>\n<dt><strong>clusters_gt</strong><span class=\"classifier\">int</span></dt><dd><p>Clusters with size greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_gt</span></code> will be shown.</p>\n</dd>\n<dt><strong>clusters_lt</strong><span class=\"classifier\">int</span></dt><dd><p>Clusters with size less than <code class=\"docutils literal notranslate\"><span class=\"pre\">clusters_lt</span></code> will be shown.</p>\n</dd>\n<dt><strong>world_coords</strong><span class=\"classifier\">bool</span></dt><dd><p>Show data in their world coordinates (not native voxel coordinates)\nDefault True.</p>\n</dd>\n<dt><strong>interactive</strong><span class=\"classifier\">bool</span></dt><dd><p>Allow user interaction. If False then Horizon goes on stealth mode\nand just saves pictures.</p>\n</dd>\n<dt><strong>buan</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>Enables BUAN framework visualization. Default is False.</p>\n</dd>\n<dt><strong>buan_colors</strong><span class=\"classifier\">list, optional</span></dt><dd><p>List of colors for bundles.</p>\n</dd>\n<dt><strong>out_png</strong><span class=\"classifier\">string</span></dt><dd><p>Filename of saved picture.</p>\n</dd>\n<dt><strong>recorded_events</strong><span class=\"classifier\">string</span></dt><dd><p>File path to replay recorded events</p>\n</dd>\n<dt><strong>return_showm</strong><span class=\"classifier\">bool</span></dt><dd><p>Return ShowManager object. Used only at Python level. Can be used\nfor extending Horizon\u2019s cababilities externally and for testing\npurposes.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r171dccc25b00-horizon-ismrm19\"><span class=\"brackets\">Horizon_ISMRM19</span></dt>\n<dd><p>Garyfallidis E., M-A. Cote, B.Q. Chandio,\nS. Fadnavis, J. Guaje, R. Aggarwal, E. St-Onge, K.S. Juneja,\nS. Koudoro, D. Reagan, DIPY Horizon: fast, modular, unified and\nadaptive visualization, Proceedings of: International Society of\nMagnetic Resonance in Medicine (ISMRM), Montreal, Canada, 2019.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"length\">\n<h3>length<a class=\"headerlink\" href=\"#length\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.length\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">length</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Euclidean length of streamlines</p>\n<p>Length is in mm only if streamlines are expressed in world coordinates.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>streamlines</strong><span class=\"classifier\">ndarray or a list or <a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.Streamlines\" title=\"dipy.tracking.Streamlines\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.tracking.Streamlines</span></code></a></span></dt><dd><p>If ndarray, must have shape (N,3) where N is the number of points\nof the streamline.\nIf list, each item must be ndarray shape (Ni,3) where Ni is the number\nof points of streamline i.\nIf <a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.Streamlines\" title=\"dipy.tracking.Streamlines\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.tracking.Streamlines</span></code></a>, its <cite>common_shape</cite> must be 3.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>lengths</strong><span class=\"classifier\">scalar or ndarray shape (N,)</span></dt><dd><p>If there is only one streamline, a scalar representing the length of the\nstreamline.\nIf there are several streamlines, ndarray containing the length of every\nstreamline.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">import</span> <span class=\"n\">length</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamline</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">expected_length</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">4</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">streamline</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">expected_length</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">streamline</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">([</span><span class=\"n\">streamline</span><span class=\"p\">,</span> <span class=\"n\">streamline</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">expected_lengths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">expected_length</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">expected_length</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lengths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">lengths</span><span class=\"p\">,</span> <span class=\"n\">expected_lengths</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">([])</span>\n<span class=\"go\">0.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]))</span>\n<span class=\"go\">0.0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id4\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.optional_package\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">optional_package</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"k\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"qbx-and-merge\">\n<h3>qbx_and_merge<a class=\"headerlink\" href=\"#qbx-and-merge\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.qbx_and_merge\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">qbx_and_merge</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">streamlines</em>, <em class=\"sig-param\">thresholds</em>, <em class=\"sig-param\">nb_pts=20</em>, <em class=\"sig-param\">select_randomly=None</em>, <em class=\"sig-param\">rng=None</em>, <em class=\"sig-param\">verbose=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.qbx_and_merge\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run QuickBundlesX and then run again on the centroids of the last layer</p>\n<p>Running again QuickBundles at a layer has the effect of merging\nsome of the clusters that maybe originally devided because of branching.\nThis function help obtain a result at a QuickBundles quality but with\nQuickBundlesX speed. The merging phase has low cost because it is applied\nonly on the centroids rather than the entire dataset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>streamlines</strong><span class=\"classifier\">Streamlines</span></dt><dd></dd>\n<dt><strong>thresholds</strong><span class=\"classifier\">sequence</span></dt><dd><p>List of distance thresholds for QuickBundlesX.</p>\n</dd>\n<dt><strong>nb_pts</strong><span class=\"classifier\">int</span></dt><dd><p>Number of points for discretizing each streamline</p>\n</dd>\n<dt><strong>select_randomly</strong><span class=\"classifier\">int</span></dt><dd><p>Randomly select a specific number of streamlines. If None all the\nstreamlines are used.</p>\n</dd>\n<dt><strong>rng</strong><span class=\"classifier\">RandomState</span></dt><dd><p>If None then RandomState is initialized internally.</p>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">bool, optional.</span></dt><dd><p>If True, log information. Default False.</p>\n</dd>\n<dt><strong>Returns</strong></dt><dd></dd>\n<dt><strong>\u2014\u2014-</strong></dt><dd></dd>\n<dt><strong>clusters</strong><span class=\"classifier\">obj</span></dt><dd><p>Contains the clusters of the last layer of QuickBundlesX after merging.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r2d7ef898ecc1-garyfallidis12\"><span class=\"brackets\">Garyfallidis12</span></dt>\n<dd><p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</p>\n</dd>\n<dt class=\"label\" id=\"r2d7ef898ecc1-garyfallidis16\"><span class=\"brackets\">Garyfallidis16</span></dt>\n<dd><p>Garyfallidis E. et al. QuickBundlesX: Sequential\nclustering of millions of streamlines in multiple\nlevels of detail at record execution time. Proceedings\nof the, International Society of Magnetic Resonance\nin Medicine (ISMRM). Singapore, 4187, 2016.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"save-tractogram\">\n<h3>save_tractogram<a class=\"headerlink\" href=\"#save-tractogram\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.save_tractogram\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">save_tractogram</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sft</em>, <em class=\"sig-param\">filename</em>, <em class=\"sig-param\">bbox_valid_check=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.save_tractogram\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Save the stateful tractogram in any format (trk, tck, vtk, fib, dpy)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sft</strong><span class=\"classifier\">StatefulTractogram</span></dt><dd><p>The stateful tractogram to save</p>\n</dd>\n<dt><strong>filename</strong><span class=\"classifier\">string</span></dt><dd><p>Filename with valid extension</p>\n</dd>\n<dt><strong>bbox_valid_check</strong><span class=\"classifier\">bool</span></dt><dd><p>Verification for negative voxel coordinates or values above the\nvolume dimensions. Default is True, to enforce valid file.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>output</strong><span class=\"classifier\">bool</span></dt><dd><p>True if the saving operation was successful</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"setup-module\">\n<h3>setup_module<a class=\"headerlink\" href=\"#setup-module\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.setup_module\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">setup_module</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.setup_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"slicer-panel\">\n<h3>slicer_panel<a class=\"headerlink\" href=\"#slicer-panel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.app.slicer_panel\">\n<code class=\"sig-prename descclassname\">dipy.viz.app.</code><code class=\"sig-name descname\">slicer_panel</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scene</em>, <em class=\"sig-param\">iren</em>, <em class=\"sig-param\">data=None</em>, <em class=\"sig-param\">affine=None</em>, <em class=\"sig-param\">world_coords=False</em>, <em class=\"sig-param\">pam=None</em>, <em class=\"sig-param\">mask=None</em>, <em class=\"sig-param\">mem=&lt;dipy.viz.gmem.GlobalHorizon object&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.app.slicer_panel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Slicer panel with slicer included</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>scene</strong><span class=\"classifier\">Scene</span></dt><dd></dd>\n<dt><strong>iren</strong><span class=\"classifier\">Interactor</span></dt><dd></dd>\n<dt><strong>data</strong><span class=\"classifier\">3d ndarray</span></dt><dd></dd>\n<dt><strong>affine</strong><span class=\"classifier\">4x4 ndarray</span></dt><dd></dd>\n<dt><strong>world_coords</strong><span class=\"classifier\">bool</span></dt><dd><p>If True then the affine is applied.</p>\n</dd>\n<dt><strong>peaks</strong><span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>Default None</p>\n</dd>\n<dt><strong>mem :</strong></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>panel</strong><span class=\"classifier\">Panel</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id7\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.gmem.GlobalHorizon\" title=\"dipy.viz.gmem.GlobalHorizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.gmem.GlobalHorizon\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.gmem.</code><code class=\"sig-name descname\">GlobalHorizon</code><a class=\"headerlink\" href=\"#dipy.viz.gmem.GlobalHorizon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"method\">\n<dt id=\"dipy.viz.gmem.GlobalHorizon.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.gmem.GlobalHorizon.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id8\">\n<h3><a class=\"reference internal\" href=\"#dipy.viz.panel.GlobalHorizon\" title=\"dipy.viz.panel.GlobalHorizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a><a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.viz.panel.GlobalHorizon\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.viz.panel.</code><code class=\"sig-name descname\">GlobalHorizon</code><a class=\"headerlink\" href=\"#dipy.viz.panel.GlobalHorizon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<dl class=\"method\">\n<dt id=\"dipy.viz.panel.GlobalHorizon.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.panel.GlobalHorizon.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id9\">\n<h3>build_label<a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.panel.build_label\">\n<code class=\"sig-prename descclassname\">dipy.viz.panel.</code><code class=\"sig-name descname\">build_label</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">text</em>, <em class=\"sig-param\">font_size=18</em>, <em class=\"sig-param\">bold=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.panel.build_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple utility function to build labels</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>text</strong><span class=\"classifier\">str</span></dt><dd></dd>\n<dt><strong>font_size</strong><span class=\"classifier\">int</span></dt><dd></dd>\n<dt><strong>bold</strong><span class=\"classifier\">bool</span></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>label</strong><span class=\"classifier\">TextBlock2D</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id10\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.panel.optional_package\">\n<code class=\"sig-prename descclassname\">dipy.viz.panel.</code><code class=\"sig-name descname\">optional_package</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.panel.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"k\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id11\">\n<h3>setup_module<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.panel.setup_module\">\n<code class=\"sig-prename descclassname\">dipy.viz.panel.</code><code class=\"sig-name descname\">setup_module</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.panel.setup_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"id12\">\n<h3>slicer_panel<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.panel.slicer_panel\">\n<code class=\"sig-prename descclassname\">dipy.viz.panel.</code><code class=\"sig-name descname\">slicer_panel</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">scene</em>, <em class=\"sig-param\">iren</em>, <em class=\"sig-param\">data=None</em>, <em class=\"sig-param\">affine=None</em>, <em class=\"sig-param\">world_coords=False</em>, <em class=\"sig-param\">pam=None</em>, <em class=\"sig-param\">mask=None</em>, <em class=\"sig-param\">mem=&lt;dipy.viz.gmem.GlobalHorizon object&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.panel.slicer_panel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Slicer panel with slicer included</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>scene</strong><span class=\"classifier\">Scene</span></dt><dd></dd>\n<dt><strong>iren</strong><span class=\"classifier\">Interactor</span></dt><dd></dd>\n<dt><strong>data</strong><span class=\"classifier\">3d ndarray</span></dt><dd></dd>\n<dt><strong>affine</strong><span class=\"classifier\">4x4 ndarray</span></dt><dd></dd>\n<dt><strong>world_coords</strong><span class=\"classifier\">bool</span></dt><dd><p>If True then the affine is applied.</p>\n</dd>\n<dt><strong>peaks</strong><span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>Default None</p>\n</dd>\n<dt><strong>mem :</strong></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>panel</strong><span class=\"classifier\">Panel</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"doctest-skip-parser\">\n<h3>doctest_skip_parser<a class=\"headerlink\" href=\"#doctest-skip-parser\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.projections.doctest_skip_parser\">\n<code class=\"sig-prename descclassname\">dipy.viz.projections.</code><code class=\"sig-name descname\">doctest_skip_parser</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.projections.doctest_skip_parser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator replaces custom skip test markup in doctests.</p>\n<p>Say a function has a docstring:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"c1\"># skip if not HAVE_AMODULE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"o\">+</span> <span class=\"k\">else</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"c1\"># skip if HAVE_BMODULE</span>\n</pre></div>\n</div>\n<p>This decorator will evaluate the expresssion after <code class=\"docutils literal notranslate\"><span class=\"pre\">skip</span> <span class=\"pre\">if</span></code>.  If this\nevaluates to True, then the comment is replaced by <code class=\"docutils literal notranslate\"><span class=\"pre\">#</span> <span class=\"pre\">doctest:</span> <span class=\"pre\">+SKIP</span></code>.\nIf False, then the comment is just removed. The expression is evaluated in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">globals</span></code> scope of <cite>func</cite>.</p>\n<p>For example, if the module global <code class=\"docutils literal notranslate\"><span class=\"pre\">HAVE_AMODULE</span></code> is False, and module\nglobal <code class=\"docutils literal notranslate\"><span class=\"pre\">HAVE_BMODULE</span></code> is False, the returned function will have\ndocstring:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> \n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"o\">+</span> <span class=\"k\">else</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id13\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.projections.optional_package\">\n<code class=\"sig-prename descclassname\">dipy.viz.projections.</code><code class=\"sig-name descname\">optional_package</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.projections.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"k\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id14\">\n<h3>setup_module<a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.projections.setup_module\">\n<code class=\"sig-prename descclassname\">dipy.viz.projections.</code><code class=\"sig-name descname\">setup_module</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.projections.setup_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"sph-project\">\n<h3>sph_project<a class=\"headerlink\" href=\"#sph-project\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.projections.sph_project\">\n<code class=\"sig-prename descclassname\">dipy.viz.projections.</code><code class=\"sig-name descname\">sph_project</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">vertices</em>, <em class=\"sig-param\">val</em>, <em class=\"sig-param\">ax=None</em>, <em class=\"sig-param\">vmin=None</em>, <em class=\"sig-param\">vmax=None</em>, <em class=\"sig-param\">cmap=None</em>, <em class=\"sig-param\">cbar=True</em>, <em class=\"sig-param\">tri=False</em>, <em class=\"sig-param\">boundary=False</em>, <em class=\"sig-param\">**basemap_args</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.projections.sph_project\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Draw a signal on a 2D projection of the sphere.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>vertices</strong><span class=\"classifier\">(N,3) ndarray</span></dt><dd><p>unit vector points of the sphere</p>\n</dd>\n<dt><strong>val: (N) ndarray</strong></dt><dd><p>Function values.</p>\n</dd>\n<dt><strong>ax</strong><span class=\"classifier\">mpl axis, optional</span></dt><dd><p>If specified, draw onto this existing axis instead.</p>\n</dd>\n<dt><strong>vmin, vmax</strong><span class=\"classifier\">floats</span></dt><dd><p>Values to cut the z</p>\n</dd>\n<dt><strong>cmap</strong><span class=\"classifier\">mpl colormap</span></dt><dd></dd>\n<dt><strong>cbar: Whether to add the color-bar to the figure</strong></dt><dd></dd>\n<dt><strong>triang</strong><span class=\"classifier\">Whether to display the plot triangulated as a pseudo-color plot.</span></dt><dd></dd>\n<dt><strong>boundary</strong><span class=\"classifier\">Whether to draw the boundary around the projection</span></dt><dd></dd>\n<dt><strong>in a black line</strong></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>ax</strong><span class=\"classifier\">axis</span></dt><dd><p>Matplotlib figure axis</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">default_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span> <span class=\"o\">=</span> <span class=\"n\">default_sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sph_project</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)))</span> \n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"draw-lattice-2d\">\n<h3>draw_lattice_2d<a class=\"headerlink\" href=\"#draw-lattice-2d\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.draw_lattice_2d\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">draw_lattice_2d</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">nrows</em>, <em class=\"sig-param\">ncols</em>, <em class=\"sig-param\">delta</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.draw_lattice_2d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a regular lattice of nrows x ncols squares.</p>\n<p>Creates an image (2D array) of a regular lattice of nrows x ncols squares.\nThe size of each square is delta x delta pixels (not counting the\nseparation lines). The lines are one pixel width.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>nrows</strong><span class=\"classifier\">int</span></dt><dd><p>the number of squares to be drawn vertically</p>\n</dd>\n<dt><strong>ncols</strong><span class=\"classifier\">int</span></dt><dd><p>the number of squares to be drawn horizontally</p>\n</dd>\n<dt><strong>delta</strong><span class=\"classifier\">int</span></dt><dd><p>the size of each square of the grid. Each square is delta x delta\npixels</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>lattice</strong><span class=\"classifier\">array, shape (R, C)</span></dt><dd><p>the image (2D array) of the segular lattice. The shape (R, C) of the\narray is given by\nR = 1 + (delta + 1) * nrows\nC = 1 + (delta + 1) * ncols</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id15\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.optional_package\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">optional_package</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em>, <em class=\"sig-param\">trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"k\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"overlay-images\">\n<h3>overlay_images<a class=\"headerlink\" href=\"#overlay-images\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.overlay_images\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">overlay_images</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">img0</em>, <em class=\"sig-param\">img1</em>, <em class=\"sig-param\">title0=''</em>, <em class=\"sig-param\">title_mid=''</em>, <em class=\"sig-param\">title1=''</em>, <em class=\"sig-param\">fname=None</em>, <em class=\"sig-param\">**fig_kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.overlay_images\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Plot two images one on top of the other using red and green channels.</p>\n<p>Creates a figure containing three images: the first image to the left\nplotted on the red channel of a color image, the second to the right\nplotted on the green channel of a color image and the two given images on\ntop of each other using the red channel for the first image and the green\nchannel for the second one. It is assumed that both images have the same\nshape. The intended use of this function is to visually assess the quality\nof a registration result.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>img0</strong><span class=\"classifier\">array, shape(R, C)</span></dt><dd><p>the image to be plotted on the red channel, to the left of the figure</p>\n</dd>\n<dt><strong>img1</strong><span class=\"classifier\">array, shape(R, C)</span></dt><dd><p>the image to be plotted on the green channel, to the right of the\nfigure</p>\n</dd>\n<dt><strong>title0</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the title to be written on top of the image to the left. By default, no\ntitle is displayed.</p>\n</dd>\n<dt><strong>title_mid</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the title to be written on top of the middle image. By default, no\ntitle is displayed.</p>\n</dd>\n<dt><strong>title1</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the title to be written on top of the image to the right. By default,\nno title is displayed.</p>\n</dd>\n<dt><strong>fname</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the file name to write the resulting figure. If None (default), the\nimage is not saved.</p>\n</dd>\n<dt><strong>fig_kwargs: extra parameters for saving figure, e.g. `dpi=300`.</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"overlay-slices\">\n<h3>overlay_slices<a class=\"headerlink\" href=\"#overlay-slices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.overlay_slices\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">overlay_slices</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">L</em>, <em class=\"sig-param\">R</em>, <em class=\"sig-param\">slice_index=None</em>, <em class=\"sig-param\">slice_type=1</em>, <em class=\"sig-param\">ltitle='Left'</em>, <em class=\"sig-param\">rtitle='Right'</em>, <em class=\"sig-param\">fname=None</em>, <em class=\"sig-param\">**fig_kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.overlay_slices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Plot three overlaid slices from the given volumes.</p>\n<p>Creates a figure containing three images: the gray scale k-th slice of\nthe first volume (L) to the left, where k=slice_index, the k-th slice of\nthe second volume (R) to the right and the k-th slices of the two given\nimages on top of each other using the red channel for the first volume and\nthe green channel for the second one. It is assumed that both volumes have\nthe same shape. The intended use of this function is to visually assess the\nquality of a registration result.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>L</strong><span class=\"classifier\">array, shape (S, R, C)</span></dt><dd><p>the first volume to extract the slice from plotted to the left</p>\n</dd>\n<dt><strong>R</strong><span class=\"classifier\">array, shape (S, R, C)</span></dt><dd><p>the second volume to extract the slice from, plotted to the right</p>\n</dd>\n<dt><strong>slice_index</strong><span class=\"classifier\">int (optional)</span></dt><dd><p>the index of the slices (along the axis given by slice_type) to be\noverlaid. If None, the slice along the specified axis is used</p>\n</dd>\n<dt><strong>slice_type</strong><span class=\"classifier\">int (optional)</span></dt><dd><p>the type of slice to be extracted:\n0=sagital, 1=coronal (default), 2=axial.</p>\n</dd>\n<dt><strong>ltitle</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the string to be written as the title of the left image. By default,\nno title is displayed.</p>\n</dd>\n<dt><strong>rtitle</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the string to be written as the title of the right image. By default,\nno title is displayed.</p>\n</dd>\n<dt><strong>fname</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the name of the file to write the image to. If None (default), the\nfigure is not saved to disk.</p>\n</dd>\n<dt><strong>fig_kwargs: extra parameters for saving figure, e.g. `dpi=300`.</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"plot-2d-diffeomorphic-map\">\n<h3>plot_2d_diffeomorphic_map<a class=\"headerlink\" href=\"#plot-2d-diffeomorphic-map\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.plot_2d_diffeomorphic_map\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">plot_2d_diffeomorphic_map</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">mapping</em>, <em class=\"sig-param\">delta=10</em>, <em class=\"sig-param\">fname=None</em>, <em class=\"sig-param\">direct_grid_shape=None</em>, <em class=\"sig-param\">direct_grid2world=-1</em>, <em class=\"sig-param\">inverse_grid_shape=None</em>, <em class=\"sig-param\">inverse_grid2world=-1</em>, <em class=\"sig-param\">show_figure=True</em>, <em class=\"sig-param\">**fig_kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.plot_2d_diffeomorphic_map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Draw the effect of warping a regular lattice by a diffeomorphic map.</p>\n<p>Draws a diffeomorphic map by showing the effect of the deformation on a\nregular grid. The resulting figure contains two images: the direct\ntransformation is plotted to the left, and the inverse transformation is\nplotted to the right.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>mapping</strong><span class=\"classifier\">DiffeomorphicMap object</span></dt><dd><p>the diffeomorphic map to be drawn</p>\n</dd>\n<dt><strong>delta</strong><span class=\"classifier\">int, optional</span></dt><dd><p>the size (in pixels) of the squares of the regular lattice to be used\nto plot the warping effects. Each square will be delta x delta pixels.\nBy default, the size will be 10 pixels.</p>\n</dd>\n<dt><strong>fname</strong><span class=\"classifier\">string, optional</span></dt><dd><p>the name of the file the figure will be written to. If None (default),\nthe figure will not be saved to disk.</p>\n</dd>\n<dt><strong>direct_grid_shape</strong><span class=\"classifier\">tuple, shape (2,), optional</span></dt><dd><p>the shape of the grid image after being deformed by the direct\ntransformation. By default, the shape of the deformed grid is the\nsame as the grid of the displacement field, which is by default\nequal to the shape of the fixed image. In other words, the resulting\ndeformed grid (deformed by the direct transformation) will normally\nhave the same shape as the fixed image.</p>\n</dd>\n<dt><strong>direct_grid2world</strong><span class=\"classifier\">array, shape (3, 3), optional</span></dt><dd><p>the affine transformation mapping the direct grid\u2019s coordinates to\nphysical space. By default, this transformation will correspond to\nthe image-to-world transformation corresponding to the default\ndirect_grid_shape (in general, if users specify a direct_grid_shape,\nthey should also specify direct_grid2world).</p>\n</dd>\n<dt><strong>inverse_grid_shape</strong><span class=\"classifier\">tuple, shape (2,), optional</span></dt><dd><p>the shape of the grid image after being deformed by the inverse\ntransformation. By default, the shape of the deformed grid under the\ninverse transform is the same as the image used as \u201cmoving\u201d when\nthe diffeomorphic map was generated by a registration algorithm\n(so it corresponds to the effect of warping the static image towards\nthe moving).</p>\n</dd>\n<dt><strong>inverse_grid2world</strong><span class=\"classifier\">array, shape (3, 3), optional</span></dt><dd><p>the affine transformation mapping inverse grid\u2019s coordinates to\nphysical space. By default, this transformation will correspond to\nthe image-to-world transformation corresponding to the default\ninverse_grid_shape (in general, if users specify an inverse_grid_shape,\nthey should also specify inverse_grid2world).</p>\n</dd>\n<dt><strong>show_figure</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>if True (default), the deformed grids will be plotted using matplotlib,\nelse the grids are just returned</p>\n</dd>\n<dt><strong>fig_kwargs: extra parameters for saving figure, e.g. `dpi=300`.</strong></dt><dd></dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>warped_forward</strong><span class=\"classifier\">array</span></dt><dd><p>Image with the grid showing the effect of transforming the moving image to\nthe static image.  The shape will be <cite>direct_grid_shape</cite> if specified,\notherwise the shape of the static image.</p>\n</dd>\n<dt><strong>warped_backward</strong><span class=\"classifier\">array</span></dt><dd><p>Image with the grid showing the effect of transforming the static image to\nthe moving image.  Shape will be <cite>inverse_grid_shape</cite> if specified,\notherwise the shape of the moving image.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>The default value for the affine transformation is \u201c-1\u201d to handle the case\nin which the user provides \u201cNone\u201d as input meaning \u201cidentity\u201d. If we used\nNone as default, we wouldn\u2019t know if the user specifically wants to use\nthe identity (specifically passing None) or if it was left unspecified,\nmeaning to use the appropriate default matrix.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"plot-slices\">\n<h3>plot_slices<a class=\"headerlink\" href=\"#plot-slices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.plot_slices\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">plot_slices</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">V</em>, <em class=\"sig-param\">slice_indices=None</em>, <em class=\"sig-param\">fname=None</em>, <em class=\"sig-param\">**fig_kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.plot_slices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Plot 3 slices from the given volume: 1 sagital, 1 coronal and 1 axial</p>\n<p>Creates a figure showing the axial, coronal and sagittal slices at the\nrequested positions of the given volume. The requested slices are specified\nby slice_indices.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>V</strong><span class=\"classifier\">array, shape (S, R, C)</span></dt><dd><p>the 3D volume to extract the slices from</p>\n</dd>\n<dt><strong>slice_indices</strong><span class=\"classifier\">array, shape (3,) (optional)</span></dt><dd><p>the indices of the sagital (slice_indices[0]), coronal\n(slice_indices[1])\nand axial (slice_indices[2]) slices to be displayed. If None, the\nmiddle slices along each direction are displayed.</p>\n</dd>\n<dt><strong>fname</strong><span class=\"classifier\">string (optional)</span></dt><dd><p>the name of the file to save the figure to. If None (default), the\nfigure is not saved to disk.</p>\n</dd>\n<dt><strong>fig_kwargs: extra parameters for saving figure, e.g. `dpi=300`.</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id16\">\n<h3>setup_module<a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.setup_module\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">setup_module</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.setup_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"simple-plot\">\n<h3>simple_plot<a class=\"headerlink\" href=\"#simple-plot\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.viz.regtools.simple_plot\">\n<code class=\"sig-prename descclassname\">dipy.viz.regtools.</code><code class=\"sig-name descname\">simple_plot</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">file_name</em>, <em class=\"sig-param\">title</em>, <em class=\"sig-param\">x</em>, <em class=\"sig-param\">y</em>, <em class=\"sig-param\">xlabel</em>, <em class=\"sig-param\">ylabel</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.viz.regtools.simple_plot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Saves the simple plot with given x and y values</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>file_name</strong><span class=\"classifier\">string</span></dt><dd><p>file name for saving the plot</p>\n</dd>\n<dt><strong>title</strong><span class=\"classifier\">string</span></dt><dd><p>title of the plot</p>\n</dd>\n<dt><strong>x</strong><span class=\"classifier\">integer list</span></dt><dd><p>x-axis values to be plotted</p>\n</dd>\n<dt><strong>y</strong><span class=\"classifier\">integer list</span></dt><dd><p>y-axis values to be plotted</p>\n</dd>\n<dt><strong>xlabel</strong><span class=\"classifier\">string</span></dt><dd><p>label for x-axis</p>\n</dd>\n<dt><strong>ylable</strong><span class=\"classifier\">string</span></dt><dd><p>label for y-axis</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.workflows", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "N", "next"], ["reference/dipy.tracking", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "P", "previous"]], "sourcename": "reference/dipy.viz.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.viz.app\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.app</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.viz.gmem\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.gmem</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.viz.panel\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.panel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.viz.projections\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.projections</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.viz.regtools\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz.regtools</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#looseversion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LooseVersion</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#fetch-viz-icons\">fetch_viz_icons</a></li>\n<li><a class=\"reference internal\" href=\"#optional-package\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#read-viz-icons\">read_viz_icons</a></li>\n<li><a class=\"reference internal\" href=\"#globalhorizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#horizon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Horizon</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#space\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Space</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#statefultractogram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StatefulTractogram</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#streamlines\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Streamlines</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#apply-shader\">apply_shader</a></li>\n<li><a class=\"reference internal\" href=\"#build-label\">build_label</a></li>\n<li><a class=\"reference internal\" href=\"#distinguishable-colormap\">distinguishable_colormap</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">horizon</a></li>\n<li><a class=\"reference internal\" href=\"#length\">length</a></li>\n<li><a class=\"reference internal\" href=\"#id4\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#qbx-and-merge\">qbx_and_merge</a></li>\n<li><a class=\"reference internal\" href=\"#save-tractogram\">save_tractogram</a></li>\n<li><a class=\"reference internal\" href=\"#setup-module\">setup_module</a></li>\n<li><a class=\"reference internal\" href=\"#slicer-panel\">slicer_panel</a></li>\n<li><a class=\"reference internal\" href=\"#id7\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id8\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GlobalHorizon</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id9\">build_label</a></li>\n<li><a class=\"reference internal\" href=\"#id10\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#id11\">setup_module</a></li>\n<li><a class=\"reference internal\" href=\"#id12\">slicer_panel</a></li>\n<li><a class=\"reference internal\" href=\"#doctest-skip-parser\">doctest_skip_parser</a></li>\n<li><a class=\"reference internal\" href=\"#id13\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#id14\">setup_module</a></li>\n<li><a class=\"reference internal\" href=\"#sph-project\">sph_project</a></li>\n<li><a class=\"reference internal\" href=\"#draw-lattice-2d\">draw_lattice_2d</a></li>\n<li><a class=\"reference internal\" href=\"#id15\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#overlay-images\">overlay_images</a></li>\n<li><a class=\"reference internal\" href=\"#overlay-slices\">overlay_slices</a></li>\n<li><a class=\"reference internal\" href=\"#plot-2d-diffeomorphic-map\">plot_2d_diffeomorphic_map</a></li>\n<li><a class=\"reference internal\" href=\"#plot-slices\">plot_slices</a></li>\n<li><a class=\"reference internal\" href=\"#id16\">setup_module</a></li>\n<li><a class=\"reference internal\" href=\"#simple-plot\">simple_plot</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.viz", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}