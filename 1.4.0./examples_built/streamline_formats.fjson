{"parents": [], "prev": null, "next": null, "title": "Read/Write streamline files", "meta": {}, "body": "<div class=\"section\" id=\"read-write-streamline-files\">\n<span id=\"example-streamline-formats\"></span><h1>Read/Write streamline files<a class=\"headerlink\" href=\"#read-write-streamline-files\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"overview\">\n<h2>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">DIPY_</span></a> can read and write many different file formats. In this example\nwe give a short introduction on how to use it for loading or saving\nstreamlines. The new statefull tractogram class was made to reduce errors\ncaused by spatial transformation and complex file format convention.</p>\n<p>Read <a class=\"reference internal\" href=\"../../faq/#faq\"><span class=\"std std-ref\">Frequently Asked Questions</span></a></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">nibabel</span> <span class=\"k\">as</span> <span class=\"nn\">nib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.stateful_tractogram</span> <span class=\"k\">import</span> <span class=\"n\">Space</span><span class=\"p\">,</span> <span class=\"n\">StatefulTractogram</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.streamline</span> <span class=\"k\">import</span> <span class=\"n\">load_tractogram</span><span class=\"p\">,</span> <span class=\"n\">save_tractogram</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.utils</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">create_nifti_header</span><span class=\"p\">,</span> <span class=\"n\">get_reference_info</span><span class=\"p\">,</span>\n                           <span class=\"n\">is_header_compatible</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">import</span> <span class=\"n\">select_random_set_of_streamlines</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.utils</span> <span class=\"k\">import</span> <span class=\"n\">density_map</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data.fetcher</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">fetch_file_formats</span><span class=\"p\">,</span>\n                               <span class=\"n\">get_file_formats</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>First fetch the dataset that contains 5 tractography file of 5 file formats:</p>\n<ul class=\"simple\">\n<li><p>cc_m_sub.trk</p></li>\n<li><p>laf_m_sub.tck</p></li>\n<li><p>lpt_m_sub.fib</p></li>\n<li><p>raf_m_sub.vtk</p></li>\n<li><p>rpt_m_sub.dpy</p></li>\n</ul>\n<p>And their reference anatomy, common to all 5 files:</p>\n<ul class=\"simple\">\n<li><p>template0.nii.gz</p></li>\n</ul>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fetch_file_formats</span><span class=\"p\">()</span>\n<span class=\"n\">bundles_filename</span><span class=\"p\">,</span> <span class=\"n\">ref_anat_filename</span> <span class=\"o\">=</span> <span class=\"n\">get_file_formats</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">bundles_filename</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">))</span>\n<span class=\"n\">reference_anatomy</span> <span class=\"o\">=</span> <span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">ref_anat_filename</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Load tractogram will support 5 file formats, functions like load_trk or\nload_tck will simply be restricted to one file format</p>\n<p>TRK files contain their own header (when writen properly), so they\ntechnically do not need a reference. (See how below)</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">cc_trk</span> <span class=\"pre\">=</span> <span class=\"pre\">load_tractogram(bundles_filename[0],</span> <span class=\"pre\">'same')</span></code></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cc_sft</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"p\">)</span>\n<span class=\"n\">laf_sft</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">)</span>\n<span class=\"n\">raf_sft</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>These files contain invalid streamlines (negative values once in voxel space)\nThis is not considered a valid tractography file, but it is possible to load\nit anyway.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">lpt_sft</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span>\n                          <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">rpt_sft</span> <span class=\"o\">=</span> <span class=\"n\">load_tractogram</span><span class=\"p\">(</span><span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span>\n                          <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The function <code class=\"docutils literal notranslate\"><span class=\"pre\">load_tractogram</span></code> requires a reference, any of the following\ninputs is considered valid (as long as they are in the same share space)\n- Nifti filename\n- Trk filename\n- nib.nifti1.Nifti1Image\n- nib.streamlines.trk.TrkFile\n- nib.nifti1.Nifti1Header\n- Trk header (dict)\n- Stateful Tractogram</p>\n<p>The reason why this parameters is required is to guarantee all informations\nrelated to space attribute are always present.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">dimensions</span><span class=\"p\">,</span> <span class=\"n\">voxel_sizes</span><span class=\"p\">,</span> <span class=\"n\">voxel_order</span> <span class=\"o\">=</span> <span class=\"n\">get_reference_info</span><span class=\"p\">(</span>\n    <span class=\"n\">reference_anatomy</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">affine</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dimensions</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">voxel_sizes</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">voxel_order</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you have a Trk file that was generated using a particular anatomy,\nto be considered valid all fields must correspond between the headers.\nIt can be easily verified using this function, which also accept\nthe same variety of input as <code class=\"docutils literal notranslate\"><span class=\"pre\">get_reference_info</span></code></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">is_header_compatible</span><span class=\"p\">(</span><span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">bundles_filename</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n</pre></div>\n</div>\n<p>If a TRK was generated with a valid header, but the reference NIFTI was lost\na header can be generated to then generate a fake NIFTI file.</p>\n<p>If you wish to manually save Trk and Tck file using nibabel streamlines\nAPI for more freedom of action (not recommended for beginners) you can\ncreate a valid header using create_tractogram_header</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nifti_header</span> <span class=\"o\">=</span> <span class=\"n\">create_nifti_header</span><span class=\"p\">(</span><span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">dimensions</span><span class=\"p\">,</span> <span class=\"n\">voxel_sizes</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">dimensions</span><span class=\"p\">),</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;fake.nii.gz&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">ref_anat_filename</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Once loaded, no matter the original file format, the stateful tractogram is\nself-contained and maintains a valid state. By requiring a reference the\ntractogram\u2019s spatial transformation can be easily manipulated.</p>\n<p>Let\u2019s save all files as TRK to visualize in TrackVis for example.\nHowever, when loaded the lpt and rpt files contain invalid streamlines and\nfor particular operations/tools/functions it is safer to remove them</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cc.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">laf_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;laf.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">raf_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;raf.trk&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">is_bbox_in_vox_valid</span><span class=\"p\">())</span>\n<span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">remove_invalid_streamlines</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">is_bbox_in_vox_valid</span><span class=\"p\">())</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lpt.trk&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">is_bbox_in_vox_valid</span><span class=\"p\">())</span>\n<span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">remove_invalid_streamlines</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">is_bbox_in_vox_valid</span><span class=\"p\">())</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rpt.trk&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Some functions in DIPY require streamlines to be in voxel space so computation\ncan be perfomed on a grid (connectivity matrix, ROIs masking, density map).\nThe stateful tractogram class provides safe functions for such manipulation.\nThese functions can be called safely over and over, by knowing in which state\nthe tractogram is operating, and compute only necessary transformations</p>\n<p>No matter the state, functions such as <code class=\"docutils literal notranslate\"><span class=\"pre\">save_tractogram</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">removing_invalid_coordinates</span></code> can be called safely and the transformations\nare handled internally when needed.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">to_voxmm</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">space</span><span class=\"p\">)</span>\n<span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">to_rasmm</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">space</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now lets move them all to voxel space, subsample them to 100 streamlines,\ncompute a density map and save everything for visualisation in another\nsoftware such as Trackvis or MI-Brain.</p>\n<p>To access volume information in a grid, the corner of the voxel must be\nconsidered the origin in order to prevent negative values.\nAny operation doing interpolation or accessing a grid must use the\nfunction \u2018to_vox()\u2019 and \u2018to_corner()\u2019</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">to_vox</span><span class=\"p\">()</span>\n<span class=\"n\">laf_sft</span><span class=\"o\">.</span><span class=\"n\">to_vox</span><span class=\"p\">()</span>\n<span class=\"n\">raf_sft</span><span class=\"o\">.</span><span class=\"n\">to_vox</span><span class=\"p\">()</span>\n<span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">to_vox</span><span class=\"p\">()</span>\n<span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">to_vox</span><span class=\"p\">()</span>\n\n<span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">to_corner</span><span class=\"p\">()</span>\n<span class=\"n\">laf_sft</span><span class=\"o\">.</span><span class=\"n\">to_corner</span><span class=\"p\">()</span>\n<span class=\"n\">raf_sft</span><span class=\"o\">.</span><span class=\"n\">to_corner</span><span class=\"p\">()</span>\n<span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">to_corner</span><span class=\"p\">()</span>\n<span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">to_corner</span><span class=\"p\">()</span>\n\n<span class=\"n\">cc_streamlines_vox</span> <span class=\"o\">=</span> <span class=\"n\">select_random_set_of_streamlines</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">streamlines</span><span class=\"p\">,</span>\n                                                      <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">laf_streamlines_vox</span> <span class=\"o\">=</span> <span class=\"n\">select_random_set_of_streamlines</span><span class=\"p\">(</span><span class=\"n\">laf_sft</span><span class=\"o\">.</span><span class=\"n\">streamlines</span><span class=\"p\">,</span>\n                                                       <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">raf_streamlines_vox</span> <span class=\"o\">=</span> <span class=\"n\">select_random_set_of_streamlines</span><span class=\"p\">(</span><span class=\"n\">raf_sft</span><span class=\"o\">.</span><span class=\"n\">streamlines</span><span class=\"p\">,</span>\n                                                       <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">lpt_streamlines_vox</span> <span class=\"o\">=</span> <span class=\"n\">select_random_set_of_streamlines</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"o\">.</span><span class=\"n\">streamlines</span><span class=\"p\">,</span>\n                                                       <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">rpt_streamlines_vox</span> <span class=\"o\">=</span> <span class=\"n\">select_random_set_of_streamlines</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"o\">.</span><span class=\"n\">streamlines</span><span class=\"p\">,</span>\n                                                       <span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Same dimensions for every stateful tractogram, can be re-use</span>\n<span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">dimensions</span><span class=\"p\">,</span> <span class=\"n\">voxel_sizes</span><span class=\"p\">,</span> <span class=\"n\">voxel_order</span> <span class=\"o\">=</span> <span class=\"n\">cc_sft</span><span class=\"o\">.</span><span class=\"n\">space_attributes</span>\n<span class=\"n\">cc_density</span> <span class=\"o\">=</span> <span class=\"n\">density_map</span><span class=\"p\">(</span><span class=\"n\">cc_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dimensions</span><span class=\"p\">)</span>\n<span class=\"n\">laf_density</span> <span class=\"o\">=</span> <span class=\"n\">density_map</span><span class=\"p\">(</span><span class=\"n\">laf_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dimensions</span><span class=\"p\">)</span>\n<span class=\"n\">raf_density</span> <span class=\"o\">=</span> <span class=\"n\">density_map</span><span class=\"p\">(</span><span class=\"n\">raf_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dimensions</span><span class=\"p\">)</span>\n<span class=\"n\">lpt_density</span> <span class=\"o\">=</span> <span class=\"n\">density_map</span><span class=\"p\">(</span><span class=\"n\">lpt_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dimensions</span><span class=\"p\">)</span>\n<span class=\"n\">rpt_density</span> <span class=\"o\">=</span> <span class=\"n\">density_map</span><span class=\"p\">(</span><span class=\"n\">rpt_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">dimensions</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Replacing streamlines is possible, but if the state was modified between\noperations such as this one is not recommended:\n-&gt; cc_sft.streamlines = cc_streamlines_vox</p>\n<p>It is recommended to re-create a new StatefulTractogram object and\nexplicitly specify in which space the streamlines are. Be careful to follow\nthe order of operations.</p>\n<p>If the tractogram was from a Trk file with metadata, this will be lost.\nIf you wish to keep metadata while manipulating the number or the order\nlook at the function StatefulTractogram.remove_invalid_streamlines() for more\ndetails</p>\n<p>It is important to mention that once the object is created in a consistent state\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">save_tractogram</span></code> function will save a valid file. And then the function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">load_tractogram</span></code> will load them in a valid state.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cc_sft</span> <span class=\"o\">=</span> <span class=\"n\">StatefulTractogram</span><span class=\"p\">(</span><span class=\"n\">cc_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"o\">.</span><span class=\"n\">VOX</span><span class=\"p\">)</span>\n<span class=\"n\">laf_sft</span> <span class=\"o\">=</span> <span class=\"n\">StatefulTractogram</span><span class=\"p\">(</span><span class=\"n\">laf_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"o\">.</span><span class=\"n\">VOX</span><span class=\"p\">)</span>\n<span class=\"n\">raf_sft</span> <span class=\"o\">=</span> <span class=\"n\">StatefulTractogram</span><span class=\"p\">(</span><span class=\"n\">raf_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"o\">.</span><span class=\"n\">VOX</span><span class=\"p\">)</span>\n<span class=\"n\">lpt_sft</span> <span class=\"o\">=</span> <span class=\"n\">StatefulTractogram</span><span class=\"p\">(</span><span class=\"n\">lpt_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"o\">.</span><span class=\"n\">VOX</span><span class=\"p\">)</span>\n<span class=\"n\">rpt_sft</span> <span class=\"o\">=</span> <span class=\"n\">StatefulTractogram</span><span class=\"p\">(</span><span class=\"n\">rpt_streamlines_vox</span><span class=\"p\">,</span> <span class=\"n\">reference_anatomy</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"o\">.</span><span class=\"n\">VOX</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">laf_sft</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">raf_sft</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"p\">))</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">cc_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cc_1000.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">laf_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;laf_1000.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">raf_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;raf_1000.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">lpt_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lpt_1000.trk&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">save_tractogram</span><span class=\"p\">(</span><span class=\"n\">rpt_sft</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rpt_1000.trk&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">cc_density</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;cc_density.nii.gz&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">laf_density</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;laf_density.nii.gz&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">raf_density</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;raf_density.nii.gz&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">lpt_density</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;lpt_density.nii.gz&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">rpt_density</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">nifti_header</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;rpt_density.nii.gz&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/a9a9e4d2177f5c0f5f54fdbc6840934a/streamline_formats.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/streamline_formats.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Read/Write streamline files</a><ul>\n<li><a class=\"reference internal\" href=\"#overview\">Overview</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/streamline_formats", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}