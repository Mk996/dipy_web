{"parents": [], "prev": null, "next": null, "title": "Visualize bundles and metrics on bundles", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-visualization-viz-bundles-py\"><span class=\"std std-ref\">here</span></a>     to download the full example code</p>\n</div>\n<div class=\"sphx-glr-example-title section\" id=\"visualize-bundles-and-metrics-on-bundles\">\n<span id=\"sphx-glr-examples-built-visualization-viz-bundles-py\"></span><h1>Visualize bundles and metrics on bundles<a class=\"headerlink\" href=\"#visualize-bundles-and-metrics-on-bundles\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>First, let\u2019s download some available datasets. Here we are using a dataset\nwhich provides metrics and bundles.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">fetch_bundles_2_subjects</span><span class=\"p\">,</span> <span class=\"n\">read_bundles_2_subjects</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">import</span> <span class=\"n\">transform_streamlines</span>\n\n<span class=\"n\">fetch_bundles_2_subjects</span><span class=\"p\">()</span>\n<span class=\"n\">dix</span> <span class=\"o\">=</span> <span class=\"n\">read_bundles_2_subjects</span><span class=\"p\">(</span><span class=\"n\">subj_id</span><span class=\"o\">=</span><span class=\"s1\">&#39;subj_1&#39;</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;fa&#39;</span><span class=\"p\">],</span>\n                              <span class=\"n\">bundles</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;cg.left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cst.right&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Store fractional anisotropy.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fa</span> <span class=\"o\">=</span> <span class=\"n\">dix</span><span class=\"p\">[</span><span class=\"s1\">&#39;fa&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Store grid to world transformation matrix.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">dix</span><span class=\"p\">[</span><span class=\"s1\">&#39;affine&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Store the cingulum bundle. A bundle is a list of streamlines.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"n\">dix</span><span class=\"p\">[</span><span class=\"s1\">&#39;cg.left&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>It happened that this bundle is in world coordinates and therefore we need to\ntransform it into native image coordinates so that it is in the same\ncoordinate space as the <code class=\"docutils literal notranslate\"><span class=\"pre\">fa</span></code> image.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bundle_native</span> <span class=\"o\">=</span> <span class=\"n\">transform_streamlines</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">inv</span><span class=\"p\">(</span><span class=\"n\">affine</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"show-every-streamline-with-an-orientation-color\">\n<h2>Show every streamline with an orientation color<a class=\"headerlink\" href=\"#show-every-streamline-with-an-orientation-color\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This is the default option when you are using <code class=\"docutils literal notranslate\"><span class=\"pre\">line</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">streamtube</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n\n<span class=\"n\">stream_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">set_camera</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">176.42</span><span class=\"p\">,</span> <span class=\"mf\">118.52</span><span class=\"p\">,</span> <span class=\"mf\">128.20</span><span class=\"p\">),</span>\n                 <span class=\"n\">focal_point</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">113.30</span><span class=\"p\">,</span> <span class=\"mf\">128.31</span><span class=\"p\">,</span> <span class=\"mf\">76.56</span><span class=\"p\">),</span>\n                 <span class=\"n\">view_up</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.18</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">0.98</span><span class=\"p\">))</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Uncomment the line below to show to display the window</span>\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle1.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_001.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/koudoro/miniconda3/envs/dipy-env-37/lib/python3.7/site-packages/vtkmodules/util/numpy_support.py:66: DeprecationWarning: Converting `np.character` to a dtype is deprecated. The current result is `np.dtype(np.str_)` which is not strictly correct. Note that `np.character` is generally deprecated and &#39;S1&#39; should be used.\n  if numpy_array_type == key or \\\n/Users/koudoro/miniconda3/envs/dipy-env-37/lib/python3.7/site-packages/vtkmodules/util/numpy_support.py:68: DeprecationWarning: Converting `np.character` to a dtype is deprecated. The current result is `np.dtype(np.str_)` which is not strictly correct. Note that `np.character` is generally deprecated and &#39;S1&#39; should be used.\n  numpy_array_type == numpy.dtype(key):\n/Users/koudoro/miniconda3/envs/dipy-env-37/lib/python3.7/site-packages/fury/utils.py:97: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify &#39;dtype=object&#39; when creating the ndarray\n  data = np.array(data)\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id1\">\n<img alt=\"examples_built/visualization/bundle1.png\" src=\"examples_built/visualization/bundle1.png\" />\n<p class=\"caption\"><span class=\"caption-text\">One orientation color for every streamline.</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>You may wonder how we knew how to set the camera. This is very easy. You just\nneed to run <code class=\"docutils literal notranslate\"><span class=\"pre\">window.show</span></code> once see how you want to see the object and then\nclose the window and call the <code class=\"docutils literal notranslate\"><span class=\"pre\">camera_info</span></code> method which prints the\nposition, focal point and view up vectors of the camera.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">camera_info</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span># Active Camera\n   Position (-237.76, 115.97, 138.55)\n   Focal Point (112.80, 127.81, 76.06)\n   View Up (0.18, 0.00, 0.98)\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"show-every-point-with-a-value-from-a-volume-with-default-colormap\">\n<h2>Show every point with a value from a volume with default colormap<a class=\"headerlink\" href=\"#show-every-point-with-a-value-from-a-volume-with-default-colormap\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Here we will need to input the <code class=\"docutils literal notranslate\"><span class=\"pre\">fa</span></code> map in <code class=\"docutils literal notranslate\"><span class=\"pre\">streamtube</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">line</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">stream_actor2</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">,</span> <span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can also show the scalar bar.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">scalar_bar</span><span class=\"p\">()</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor2</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle2.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_002.png\" />\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"examples_built/visualization/bundle2.png\" src=\"examples_built/visualization/bundle2.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Every point with a color from FA.</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n</div>\n<div class=\"section\" id=\"show-every-point-with-a-value-from-a-volume-with-your-colormap\">\n<h2>Show every point with a value from a volume with your colormap<a class=\"headerlink\" href=\"#show-every-point-with-a-value-from-a-volume-with-your-colormap\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Here we will need to input the <code class=\"docutils literal notranslate\"><span class=\"pre\">fa</span></code> map in <code class=\"docutils literal notranslate\"><span class=\"pre\">streamtube</span></code></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n\n<span class=\"n\">hue</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>  <span class=\"c1\"># red only</span>\n<span class=\"n\">saturation</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>  <span class=\"c1\"># white to red</span>\n\n<span class=\"n\">lut_cmap</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">colormap_lookup_table</span><span class=\"p\">(</span><span class=\"n\">hue_range</span><span class=\"o\">=</span><span class=\"n\">hue</span><span class=\"p\">,</span>\n                                       <span class=\"n\">saturation_range</span><span class=\"o\">=</span><span class=\"n\">saturation</span><span class=\"p\">)</span>\n\n<span class=\"n\">stream_actor3</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">,</span> <span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n                           <span class=\"n\">lookup_colormap</span><span class=\"o\">=</span><span class=\"n\">lut_cmap</span><span class=\"p\">)</span>\n<span class=\"n\">bar2</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">scalar_bar</span><span class=\"p\">(</span><span class=\"n\">lut_cmap</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor3</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">bar2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle3.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_003.png\" />\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"examples_built/visualization/bundle3.png\" src=\"examples_built/visualization/bundle3.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Every point with a color from FA using a non default colormap.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n</div>\n<div class=\"section\" id=\"show-every-bundle-with-a-specific-color\">\n<h2>Show every bundle with a specific color<a class=\"headerlink\" href=\"#show-every-bundle-with-a-specific-color\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>You can have a bundle with a specific color. In this example, we are chosing\norange.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">stream_actor4</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle4.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_004.png\" />\n<div class=\"figure align-center\" id=\"id4\">\n<img alt=\"examples_built/visualization/bundle4.png\" src=\"examples_built/visualization/bundle4.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Entire bundle with a specific color.</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n</div>\n<div class=\"section\" id=\"show-every-streamline-of-a-bundle-with-a-different-color\">\n<h2>Show every streamline of a bundle with a different color<a class=\"headerlink\" href=\"#show-every-streamline-of-a-bundle-with-a-different-color\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Let\u2019s make a colormap where every streamline of the bundle is colored by its\nlength.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">import</span> <span class=\"n\">length</span>\n\n<span class=\"n\">lengths</span> <span class=\"o\">=</span> <span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">)</span>\n\n<span class=\"n\">hue</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>  <span class=\"c1\"># blue only</span>\n<span class=\"n\">saturation</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>  <span class=\"c1\"># black to white</span>\n\n<span class=\"n\">lut_cmap</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">colormap_lookup_table</span><span class=\"p\">(</span>\n    <span class=\"n\">scale_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">lengths</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(),</span> <span class=\"n\">lengths</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()),</span>\n    <span class=\"n\">hue_range</span><span class=\"o\">=</span><span class=\"n\">hue</span><span class=\"p\">,</span>\n    <span class=\"n\">saturation_range</span><span class=\"o\">=</span><span class=\"n\">saturation</span><span class=\"p\">)</span>\n\n<span class=\"n\">stream_actor5</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">,</span> <span class=\"n\">lengths</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n                           <span class=\"n\">lookup_colormap</span><span class=\"o\">=</span><span class=\"n\">lut_cmap</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor5</span><span class=\"p\">)</span>\n<span class=\"n\">bar3</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">scalar_bar</span><span class=\"p\">(</span><span class=\"n\">lut_cmap</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">bar3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle5.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_005.png\" />\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/visualization/bundle5.png\" src=\"examples_built/visualization/bundle5.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Color every streamline by the length of the streamline</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n</div>\n<div class=\"section\" id=\"show-every-point-of-every-streamline-with-a-different-color\">\n<h2>Show every point of every streamline with a different color<a class=\"headerlink\" href=\"#show-every-point-of-every-streamline-with-a-different-color\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In this case in which we want to have a color per point and per streamline,\nwe can create a list of the colors to correspond to the list of streamlines\n(bundles). Here in <code class=\"docutils literal notranslate\"><span class=\"pre\">colors</span></code> we will insert some random RGB colors.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">streamline</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">streamline</span> <span class=\"ow\">in</span> <span class=\"n\">bundle_native</span><span class=\"p\">]</span>\n\n<span class=\"n\">stream_actor6</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">bundle_native</span><span class=\"p\">,</span> <span class=\"n\">colors</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor6</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(scene, size=(600, 600), reset_camera=False)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundle6.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img alt=\"viz bundles\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_viz_bundles_006.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/koudoro/miniconda3/envs/dipy-env-37/lib/python3.7/site-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify &#39;dtype=object&#39; when creating the ndarray\n  return array(a, dtype, copy=False, order=order)\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id6\">\n<img alt=\"examples_built/visualization/bundle6.png\" src=\"examples_built/visualization/bundle6.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Random colors per points per streamline.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>In summary, we showed that there are many useful ways for visualizing maps\non bundles.</p>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  5.786 seconds)</p>\n<div class=\"sphx-glr-footer class sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-visualization-viz-bundles-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/c664126254638a9203f492bc5f81ccaf/viz_bundles.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">viz_bundles.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/932d2683974d5c1f2c00a27fdf4ceda2/viz_bundles.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">viz_bundles.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/visualization/viz_bundles.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Visualize bundles and metrics on bundles</a><ul>\n<li><a class=\"reference internal\" href=\"#show-every-streamline-with-an-orientation-color\">Show every streamline with an orientation color</a></li>\n<li><a class=\"reference internal\" href=\"#show-every-point-with-a-value-from-a-volume-with-default-colormap\">Show every point with a value from a volume with default colormap</a></li>\n<li><a class=\"reference internal\" href=\"#show-every-point-with-a-value-from-a-volume-with-your-colormap\">Show every point with a value from a volume with your colormap</a></li>\n<li><a class=\"reference internal\" href=\"#show-every-bundle-with-a-specific-color\">Show every bundle with a specific color</a></li>\n<li><a class=\"reference internal\" href=\"#show-every-streamline-of-a-bundle-with-a-different-color\">Show every streamline of a bundle with a different color</a></li>\n<li><a class=\"reference internal\" href=\"#show-every-point-of-every-streamline-with-a-different-color\">Show every point of every streamline with a different color</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/visualization/viz_bundles", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}