{"parents": [], "prev": null, "next": null, "title": "Denoise images using Local PCA via empirical thresholds", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-denoising-denoise-localpca-py\"><span class=\"std std-ref\">here</span></a>     to download the full example code</p>\n</div>\n<div class=\"sphx-glr-example-title section\" id=\"denoise-images-using-local-pca-via-empirical-thresholds\">\n<span id=\"sphx-glr-examples-built-denoising-denoise-localpca-py\"></span><h1>Denoise images using Local PCA via empirical thresholds<a class=\"headerlink\" href=\"#denoise-images-using-local-pca-via-empirical-thresholds\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>PCA-based denoising algorithms are effective denoising methods because they\nexplore the redundancy of the multi-dimensional information of\ndiffusion-weighted datasets. In this example, we will show how to\nperform the PCA-based denoising using the algorithm proposed by Manjon et al.\n<a class=\"reference internal\" href=\"../denoise_mppca/#manjon2013\" id=\"id1\"><span>[Manjon2013]</span></a>.</p>\n<p>This algorithm involves the following steps:</p>\n<ul class=\"simple\">\n<li><p>First, we estimate the local noise variance at each voxel.</p></li>\n<li><p>Then, we apply PCA in local patches around each voxel over the gradient\ndirections.</p></li>\n<li><p>Finally, we threshold the eigenvalues based on the local estimate of sigma\nand then do a PCA reconstruction</p></li>\n</ul>\n<p>To perform PCA denoising without a prior noise standard deviation estimate\nplease see the following example instead: <span class=\"xref std std-ref\">denoise_mppca</span></p>\n<p>Let\u2019s load the necessary modules</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nibabel</span> <span class=\"k\">as</span> <span class=\"nn\">nib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"k\">import</span> <span class=\"n\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.denoise.localpca</span> <span class=\"k\">import</span> <span class=\"n\">localpca</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.denoise.pca_noise_estimate</span> <span class=\"k\">import</span> <span class=\"n\">pca_noise_estimate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"k\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n</pre></div>\n</div>\n<p>Load one of the datasets. These data were acquired with 63 gradients and 1\nnon-diffusion (b=0) image.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dwi_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bvec_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;isbi2013_2shell&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">dwi_fname</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">dwi_bval_fname</span><span class=\"p\">,</span> <span class=\"n\">dwi_bvec_fname</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Input Volume&quot;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Input Volume (50, 50, 50, 64)\n</pre></div>\n</div>\n<div class=\"section\" id=\"estimate-the-noise-standard-deviation\">\n<h2>Estimate the noise standard deviation<a class=\"headerlink\" href=\"#estimate-the-noise-standard-deviation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We use the <code class=\"docutils literal notranslate\"><span class=\"pre\">pca_noise_estimate</span></code> method to estimate the value of sigma to be\nused in local PCA algorithm proposed by Manjon et al. <a class=\"reference internal\" href=\"../denoise_mppca/#manjon2013\" id=\"id2\"><span>[Manjon2013]</span></a>.\nIt takes both data and the gradient table object as input and returns an\nestimate of local noise standard deviation as a 3D array. We return a\nsmoothed version, where a Gaussian filter with radius 3 voxels has been\napplied to the estimate of the noise before returning it.</p>\n<p>We correct for the bias due to Rician noise, based on an equation developed\nby Koay and Basser <a class=\"reference internal\" href=\"#koay2006\" id=\"id3\"><span>[Koay2006]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">pca_noise_estimate</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">correct_bias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">smooth</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sigma estimation time&quot;</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Sigma estimation time 1.7190608978271484\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"perform-the-localpca-using-the-function-localpca\">\n<h2>Perform the localPCA using the function <cite>localpca</cite><a class=\"headerlink\" href=\"#perform-the-localpca-using-the-function-localpca\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The localpca algorithm takes into account the multi-dimensional information\nof the diffusion MR data. It performs PCA on local 4D patch and\nthen removes the noise components by thresholding the lowest eigenvalues.\nThe eigenvalue threshold will be computed from the local variance estimate\nperformed by the <code class=\"docutils literal notranslate\"><span class=\"pre\">pca_noise_estimate</span></code> function, if this is inputted in the\nmain <code class=\"docutils literal notranslate\"><span class=\"pre\">localpca</span></code> function. The relationship between the noise variance\nestimate and the eigenvalue threshold can be adjusted using the input\nparameter <code class=\"docutils literal notranslate\"><span class=\"pre\">tau_factor</span></code>. According to Manjon et al. <a class=\"reference internal\" href=\"../denoise_mppca/#manjon2013\" id=\"id4\"><span>[Manjon2013]</span></a>, this\nparameter is set to 2.3.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n\n<span class=\"n\">denoised_arr</span> <span class=\"o\">=</span> <span class=\"n\">localpca</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"p\">,</span> <span class=\"n\">tau_factor</span><span class=\"o\">=</span><span class=\"mf\">2.3</span><span class=\"p\">,</span> <span class=\"n\">patch_radius</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time taken for local PCA (slow)&quot;</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">time</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Time taken for local PCA (slow) 169.60715007781982\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">localpca</span></code> function returns the denoised data which is plotted below\n(middle panel) together with the original version of the data (left panel)\nthe algorithm residual (right panel) .</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sli</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n<span class=\"n\">gra</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n<span class=\"n\">orig</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">sli</span><span class=\"p\">,</span> <span class=\"n\">gra</span><span class=\"p\">]</span>\n<span class=\"n\">den</span> <span class=\"o\">=</span> <span class=\"n\">denoised_arr</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">sli</span><span class=\"p\">,</span> <span class=\"n\">gra</span><span class=\"p\">]</span>\n<span class=\"n\">rms_diff</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">((</span><span class=\"n\">orig</span> <span class=\"o\">-</span> <span class=\"n\">den</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">orig</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Original&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">den</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Denoised Output&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">rms_diff</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Residual&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_axis_off</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;denoised_localpca.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">&#39;tight&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;The result saved in denoised_localpca.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"denoise localpca\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_denoise_localpca_001.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>The result saved in denoised_localpca.png\n</pre></div>\n</div>\n<div class=\"figure align-center\">\n<img alt=\"examples_built/denoising/denoised_localpca.png\" src=\"examples_built/denoising/denoised_localpca.png\" />\n</div>\n<p>Below we show how the denoised data can be saved.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">Nifti1Image</span><span class=\"p\">(</span><span class=\"n\">denoised_arr</span><span class=\"p\">,</span>\n                         <span class=\"n\">affine</span><span class=\"p\">),</span> <span class=\"s1\">&#39;denoised_localpca.nii.gz&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Entire denoised data saved in denoised_localpca.nii.gz&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Entire denoised data saved in denoised_localpca.nii.gz\n</pre></div>\n</div>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"manjon2013\"><span class=\"brackets\">Manjon2013</span><span class=\"fn-backref\">(<a href=\"#id1\">1</a>,<a href=\"#id2\">2</a>,<a href=\"#id4\">3</a>)</span></dt>\n<dd><p>Manjon JV, Coupe P, Concha L, Buades A, Collins DL \u201cDiffusion\nWeighted Image Denoising Using Overcomplete Local PCA\u201d (2013)\nPLoS ONE 8(9): e73021. doi:10.1371/journal.pone.0073021.</p>\n</dd>\n<dt class=\"label\" id=\"koay2006\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id3\">Koay2006</a></span></dt>\n<dd><p>Koay CG, Basser PJ (2006). \u201cAnalytically exact correction\nscheme for signal extraction from noisy magnitude MR signals\u201d.\nJMR 179: 317-322.</p>\n</dd>\n</dl>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 2 minutes  54.364 seconds)</p>\n<div class=\"sphx-glr-footer class sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-denoising-denoise-localpca-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/a8b506a3e809bb4f93639cb521dd8579/denoise_localpca.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">denoise_localpca.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/0e327d3fc45ac31b064608f5162dab38/denoise_localpca.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">denoise_localpca.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/denoising/denoise_localpca.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Denoise images using Local PCA via empirical thresholds</a><ul>\n<li><a class=\"reference internal\" href=\"#estimate-the-noise-standard-deviation\">Estimate the noise standard deviation</a></li>\n<li><a class=\"reference internal\" href=\"#perform-the-localpca-using-the-function-localpca\">Perform the localPCA using the function <cite>localpca</cite></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/denoising/denoise_localpca", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}