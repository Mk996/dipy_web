{"parents": [], "prev": null, "next": null, "title": "Intravoxel incoherent motion", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-reconstruction-reconst-ivim-py\"><span class=\"std std-ref\">here</span></a>     to download the full example code</p>\n</div>\n<div class=\"sphx-glr-example-title section\" id=\"intravoxel-incoherent-motion\">\n<span id=\"sphx-glr-examples-built-reconstruction-reconst-ivim-py\"></span><h1>Intravoxel incoherent motion<a class=\"headerlink\" href=\"#intravoxel-incoherent-motion\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The intravoxel incoherent motion (IVIM) model describes diffusion\nand perfusion in the signal acquired with a diffusion MRI sequence\nthat contains multiple low b-values. The IVIM model can be understood\nas an adaptation of the work of Stejskal and Tanner <a class=\"reference internal\" href=\"../../../reference_cmd/dipy_fit_ivim/#stejskal65\" id=\"id1\"><span>[Stejskal65]</span></a>\nin biological tissue, and was proposed by Le Bihan <a class=\"reference internal\" href=\"../../../reference_cmd/dipy_fit_ivim/#lebihan84\" id=\"id2\"><span>[LeBihan84]</span></a>.\nThe model assumes two compartments: a slow moving compartment,\nwhere particles diffuse in a Brownian fashion as a consequence of thermal\nenergy, and a fast moving compartment (the vascular compartment), where\nblood moves as a consequence of a pressure gradient. In the first compartment,\nthe diffusion coefficient is <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> while in the second compartment, a\npseudo diffusion term <span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span> is introduced that describes the\ndisplacement of the blood elements in an assumed randomly laid out vascular\nnetwork, at the macroscopic level. According to <a class=\"reference internal\" href=\"../../../reference_cmd/dipy_fit_ivim/#lebihan84\" id=\"id3\"><span>[LeBihan84]</span></a>,\n<span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span> is greater than <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span>.</p>\n<p>The IVIM model expresses the MRI signal as follows:</p>\n<blockquote>\n<div><div class=\"math notranslate nohighlight\">\n\\[S(b)=S_0(fe^{-bD^*}+(1-f)e^{-bD})\\]</div>\n</div></blockquote>\n<p>where <span class=\"math notranslate nohighlight\">\\(\\mathbf{b}\\)</span> is the diffusion gradient weighing value (which is dependent\non the measurement parameters), <span class=\"math notranslate nohighlight\">\\(\\mathbf{S_{0}}\\)</span> is the signal in the absence\nof diffusion gradient sensitization, <span class=\"math notranslate nohighlight\">\\(\\mathbf{f}\\)</span> is the perfusion\nfraction, <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> is the diffusion coefficient and <span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span> is\nthe pseudo-diffusion constant, due to vascular contributions.</p>\n<p>In the following example we show how to fit the IVIM model on a\ndiffusion-weighted dataset and visualize the diffusion and pseudo-diffusion\ncoefficients. First, we import all relevant modules:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.ivim</span> <span class=\"k\">import</span> <span class=\"n\">IvimModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"k\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">load_nifti_data</span>\n</pre></div>\n</div>\n<p>We get an IVIM dataset using <a href=\"#id13\"><span class=\"problematic\" id=\"id14\">DIPY_</span></a>\u2019s data fetcher <code class=\"docutils literal notranslate\"><span class=\"pre\">read_ivim</span></code>.\nThis dataset was acquired with 21 b-values in 3 different directions.\nVolumes corresponding to different directions were registered to each\nother, and averaged across directions. Thus, this dataset has 4 dimensions,\nwith the length of the last dimension corresponding to the number\nof b-values. In order to use this model the data should contain signals\nmeasured at 0 bvalue.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fraw</span><span class=\"p\">,</span> <span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;ivim&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The gtab contains a GradientTable object (information about the gradients\ne.g. b-values and b-vectors). We get the data from the file using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">load_nifti_data</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti_data</span><span class=\"p\">(</span><span class=\"n\">fraw</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">,</span> <span class=\"n\">b0_threshold</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>data.shape (256, 256, 54, 21)\n</pre></div>\n</div>\n<p>The data has 54 slices, with 256-by-256 voxels in each slice. The fourth\ndimension corresponds to the b-values in the gtab. Let us visualize the data\nby taking a slice midway(z=33) at <span class=\"math notranslate nohighlight\">\\(\\mathbf{b} = 0\\)</span>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">33</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axhline</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axvline</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">170</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">&quot;ivim_data_slice.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<img alt=\"reconst ivim\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_reconst_ivim_001.png\" />\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/reconstruction/ivim_data_slice.png\" src=\"examples_built/reconstruction/ivim_data_slice.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heat map of a slice of data</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>The region around the intersection of the cross-hairs in the figure\ncontains cerebral spinal fluid (CSF), so it should have a very high\n<span class=\"math notranslate nohighlight\">\\(\\mathbf{f}\\)</span> and <span class=\"math notranslate nohighlight\">\\(\\mathbf{D^*}\\)</span>, the area just medial to that is white matter\nso that should be lower, and the region more laterally contains a mixture of\ngray matter and CSF. That should give us some contrast to see the\nvalues varying across the regions.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">155</span>\n<span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">170</span>\n<span class=\"n\">data_slice</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">x1</span><span class=\"p\">:</span><span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">:</span><span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">x1</span><span class=\"p\">:</span><span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">:</span><span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">&quot;gray&quot;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">&quot;CSF_slice.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<img alt=\"reconst ivim\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_reconst_ivim_002.png\" />\n<div class=\"figure align-center\" id=\"id6\">\n<img alt=\"examples_built/reconstruction/CSF_slice.png\" src=\"examples_built/reconstruction/CSF_slice.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heat map of the CSF slice selected.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Now that we have prepared the datasets we can go forward with\nthe ivim fit. We provide two methods of fitting the parameters of the IVIM\nmulti-exponential model explained above. We first fit the model with a simple\nfitting approach by passing the option <cite>fit_method=\u2019trr\u2019</cite>. This method uses\na two-stage approach: first, a linear fit used to get quick initial guesses\nfor the parameters <span class=\"math notranslate nohighlight\">\\(\\mathbf{S_{0}}\\)</span> and <span class=\"math notranslate nohighlight\">\\(\\mathbf{D}\\)</span> by considering b-values\ngreater than <code class=\"docutils literal notranslate\"><span class=\"pre\">split_b_D</span></code> (default: 400))and assuming a mono-exponential\nsignal. This is based on the assumption that at high b-values the signal can\nbe approximated as a mono exponential decay and by taking the logarithm of\nthe signal values a linear fit can be obtained. Another linear fit for <code class=\"docutils literal notranslate\"><span class=\"pre\">S0</span></code>\n(bvals &lt; <code class=\"docutils literal notranslate\"><span class=\"pre\">split_b_S0</span></code> (default: 200)) follows and <code class=\"docutils literal notranslate\"><span class=\"pre\">f</span></code> is estimated using\n<span class=\"math notranslate nohighlight\">\\(1 - S0_{prime}/S0\\)</span>. Then a non-linear least-squares fitting is performed to\nfit <code class=\"docutils literal notranslate\"><span class=\"pre\">D_star</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">f</span></code>. If the <code class=\"docutils literal notranslate\"><span class=\"pre\">two_stage</span></code> flag is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> while\ninitializing the model, a final non-linear least squares fitting is performed\nfor all the parameters. All initializations for the model such as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">split_b_D</span></code> are passed while creating the <code class=\"docutils literal notranslate\"><span class=\"pre\">IvimModel</span></code>. If you are using\nScipy 0.17, you can also set bounds by setting\n<code class=\"docutils literal notranslate\"><span class=\"pre\">bounds=([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">0.,0.],</span> <span class=\"pre\">[np.inf,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">1.]))</span></code> while initializing the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">IvimModel</span></code>.</p>\n<p>For brevity, we focus on a small section of the slice as selected aboove,\nto fit the IVIM model. First, we instantiate the IvimModel object.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ivimmodel</span> <span class=\"o\">=</span> <span class=\"n\">IvimModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">fit_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;trr&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/koudoro/Software/dipy/dipy/reconst/ivim.py:151: UserWarning: Bounds for this fit have been set from experiments and literature survey. To change the bounds, please input your bounds in model definition...\n  warnings.warn(bounds_warning, UserWarning)\n</pre></div>\n</div>\n<p>To fit the model, call the <cite>fit</cite> method and pass the data for fitting.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ivimfit</span> <span class=\"o\">=</span> <span class=\"n\">ivimmodel</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data_slice</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/koudoro/Software/dipy/dipy/reconst/ivim.py:434: UserWarning: x0 obtained from linear fitting is not feasibile as initial guess for leastsq while estimating f and D_star. Using parameters from the linear fit.\n  warnings.warn(warningMsg, UserWarning)\n/Users/koudoro/Software/dipy/dipy/reconst/ivim.py:507: UserWarning: x0 is unfeasible for leastsq fitting. Returning x0 values from the linear fit.\n  warnings.warn(warningMsg, UserWarning)\n/Users/koudoro/Software/dipy/dipy/reconst/ivim.py:344: UserWarning: Bounds are violated for leastsq fitting. Returning parameters from linear fit\n  warnings.warn(warningMsg, UserWarning)\n</pre></div>\n</div>\n<p>The fit method creates a IvimFit object which contains the\nparameters of the model obtained after fitting. These are accessible\nthrough the <cite>model_params</cite> attribute of the IvimFit object.\nThe parameters are arranged as a 4D array, corresponding to the spatial\ndimensions of the data, and the last dimension (of length 4)\ncorresponding to the model parameters according to the following\norder : <span class=\"math notranslate nohighlight\">\\(\\mathbf{S_{0}, f, D^*, D}\\)</span>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ivimparams</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">model_params</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;ivimparams.shape : </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ivimparams</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>ivimparams.shape : (65, 80, 4)\n</pre></div>\n</div>\n<p>As we see, we have a 20x20 slice at the height z = 33. Thus we\nhave 400 voxels. We will now plot the parameters obtained from the\nfit for a voxel and also various maps for the entire slice.\nThis will give us an idea about the diffusion and perfusion in\nthat section. Let(i, j) denote the coordinate of the voxel. We have\nalready fixed the z component as 33 and hence we will get a slice\nwhich is 33 units above.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span>\n<span class=\"n\">estimated_params</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">model_params</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">estimated_params</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[3.97863113e+03 2.00000000e-01 1.69394176e-03 6.71052305e-04]\n</pre></div>\n</div>\n<p>Now we can map the perfusion and diffusion maps for the slice. We\nwill plot a heatmap showing the values using a colormap. It will be\nuseful to define a plotting function for the heatmap here since we\nwill use it to plot for all the IVIM parameters. We will need to specify\nthe lower and upper limits for our data. For example, the perfusion\nfractions should be in the range (0,1). Similarly, the diffusion and\npseudo-diffusion constants are much smaller than 1. We pass an argument\ncalled <code class=\"docutils literal notranslate\"><span class=\"pre\">variable</span></code> to out plotting function which gives the label for\nthe plot.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">plot_map</span><span class=\"p\">(</span><span class=\"n\">raw_data</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"p\">,</span> <span class=\"n\">limits</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">lower</span><span class=\"p\">,</span> <span class=\"n\">upper</span> <span class=\"o\">=</span> <span class=\"n\">limits</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Map for </span><span class=\"si\">{}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">variable</span><span class=\"p\">))</span>\n    <span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">raw_data</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span> <span class=\"n\">clim</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"p\">,</span> <span class=\"n\">upper</span><span class=\"p\">),</span>\n                   <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">&quot;gray&quot;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let us get the various plots with <cite>fit_method = \u2018trr\u2019</cite> so that we can\nvisualize them in one page</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">S0_predicted</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Predicted S0&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">),</span> <span class=\"s2\">&quot;predicted_S0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">data_slice</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Measured S0&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">),</span> <span class=\"s2\">&quot;measured_S0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">perfusion_fraction</span><span class=\"p\">,</span> <span class=\"s2\">&quot;f&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s2\">&quot;perfusion_fraction.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">D_star</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D*&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">),</span> <span class=\"s2\">&quot;perfusion_coeff.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.001</span><span class=\"p\">),</span> <span class=\"s2\">&quot;diffusion_coeff.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_003.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_004.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_005.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_006.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_007.png\" />\n</li>\n</ul>\n<p>Next, we will fit the same model with a more refined optimization process\nwith <cite>fit_method=\u2019VarPro\u2019</cite> (for \u201cVariable Projection\u201d). The VarPro computes\nthe IVIM parameters using the MIX approach <a class=\"reference internal\" href=\"#farooq16\" id=\"id4\"><span>[Farooq16]</span></a>. This algorithm uses\nthree different optimizers. It starts with a differential evolution algorithm\nand fits the parameters in the power of exponentials. Then the fitted\nparameters in the first step are utilized to make a linear convex problem.\nUsing a convex optimization, the volume fractions are determined. The last\nstep is non-linear least-squares fitting on all the parameters. The results\nof the first and second optimizers are utilized as the initial values for the\nlast step of the algorithm.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># As opposed to the `&#39;trr&#39;` fitting method, this approach does not need to set</span>\n<span class=\"c1\"># any thresholds on the bvals to differentiate between the perfusion</span>\n<span class=\"c1\"># (pseudo-diffusion) and diffusion portions and fits the parameters</span>\n<span class=\"c1\"># simultaneously. Making use of the three step optimization mentioned above</span>\n<span class=\"c1\"># increases the convergence basin for fitting the multi-exponential functions</span>\n<span class=\"c1\"># of microstructure models. This method has been described in further detail in</span>\n<span class=\"c1\"># [Fadnavis19]_ and [Farooq16]_.</span>\n\n<span class=\"n\">ivimmodel_vp</span> <span class=\"o\">=</span> <span class=\"n\">IvimModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">fit_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;VarPro&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ivimfit_vp</span> <span class=\"o\">=</span> <span class=\"n\">ivimmodel_vp</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data_slice</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>/Users/koudoro/Software/dipy/dipy/reconst/ivim.py:157: UserWarning: Bounds for this fit have been set from experiments and literature survey. To change the bounds, please input your bounds in model definition...\n  warnings.warn(bounds_warning, UserWarning)\n</pre></div>\n</div>\n<p>Just like the <cite>\u2018trr\u2019</cite> fit method, <cite>\u2018VarPro\u2019</cite> creates a IvimFit object which\ncontains the parameters of the model obtained after fitting. These are\naccessible through the <cite>model_params</cite> attribute of the IvimFit object.\nThe parameters are arranged as a 4D array, corresponding to the spatial\ndimensions of the data, and the last dimension (of length 4)\ncorresponding to the model parameters according to the following\norder : <span class=\"math notranslate nohighlight\">\\(\\mathbf{S_{0}, f, D^*, D}\\)</span>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span>\n<span class=\"n\">estimated_params</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">model_params</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">estimated_params</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[4.15609783e+03 1.09732577e-01 9.86659300e-03 7.19170291e-04]\n</pre></div>\n</div>\n<p>To compare the fit using <cite>fit_method=\u2019VarPro\u2019</cite> and <cite>fit_method=\u2019trr\u2019</cite>, we can\nplot one voxel\u2019s signal and the model fit using both methods.</p>\n<p>We will use the <cite>predict</cite> method of the IvimFit objects, to get the predicted\nsignal, based on each one of the model fit methods.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"o\">.</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">data_slice</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:],</span>\n           <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">&quot;green&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;Measured signal&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">ivim_trr_predict</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"o\">.</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">ivim_trr_predict</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;trr prediction&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">S0_est</span><span class=\"p\">,</span> <span class=\"n\">f_est</span><span class=\"p\">,</span> <span class=\"n\">D_star_est</span><span class=\"p\">,</span> <span class=\"n\">D_est</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit</span><span class=\"o\">.</span><span class=\"n\">model_params</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n\n<span class=\"n\">text_fit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;trr param estimates: </span><span class=\"se\">\\n</span><span class=\"s2\"> S0=</span><span class=\"si\">{:06.3f}</span><span class=\"s2\"> f=</span><span class=\"si\">{:06.4f}</span><span class=\"se\">\\n</span><span class=\"s2\"></span>\n<span class=\"s2\">            D*=</span><span class=\"si\">{:06.5f}</span><span class=\"s2\"> D=</span><span class=\"si\">{:06.5f}</span><span class=\"s2\">&quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">S0_est</span><span class=\"p\">,</span> <span class=\"n\">f_est</span><span class=\"p\">,</span> <span class=\"n\">D_star_est</span><span class=\"p\">,</span> <span class=\"n\">D_est</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"mf\">0.65</span><span class=\"p\">,</span> <span class=\"mf\">0.80</span><span class=\"p\">,</span> <span class=\"n\">text_fit</span><span class=\"p\">,</span> <span class=\"n\">horizontalalignment</span><span class=\"o\">=</span><span class=\"s1\">&#39;center&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">verticalalignment</span><span class=\"o\">=</span><span class=\"s1\">&#39;center&#39;</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">transAxes</span><span class=\"p\">)</span>\n\n<span class=\"n\">ivim_predict_vp</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"o\">.</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">ivim_predict_vp</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;VarPro prediction&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;bvalues&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Signals&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">S0_est</span><span class=\"p\">,</span> <span class=\"n\">f_est</span><span class=\"p\">,</span> <span class=\"n\">D_star_est</span><span class=\"p\">,</span> <span class=\"n\">D_est</span> <span class=\"o\">=</span> <span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">model_params</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n\n<span class=\"n\">text_fit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;VarPro param estimates: </span><span class=\"se\">\\n</span><span class=\"s2\"> S0=</span><span class=\"si\">{:06.3f}</span><span class=\"s2\"> f=</span><span class=\"si\">{:06.4f}</span><span class=\"se\">\\n</span><span class=\"s2\"></span>\n<span class=\"s2\">            D*=</span><span class=\"si\">{:06.5f}</span><span class=\"s2\"> D=</span><span class=\"si\">{:06.5f}</span><span class=\"s2\">&quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">S0_est</span><span class=\"p\">,</span> <span class=\"n\">f_est</span><span class=\"p\">,</span> <span class=\"n\">D_star_est</span><span class=\"p\">,</span> <span class=\"n\">D_est</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"mf\">0.65</span><span class=\"p\">,</span> <span class=\"mf\">0.50</span><span class=\"p\">,</span> <span class=\"n\">text_fit</span><span class=\"p\">,</span> <span class=\"n\">horizontalalignment</span><span class=\"o\">=</span><span class=\"s1\">&#39;center&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">verticalalignment</span><span class=\"o\">=</span><span class=\"s1\">&#39;center&#39;</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">transAxes</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"s1\">&#39;upper right&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">&quot;ivim_voxel_plot.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"reconst ivim\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_reconst_ivim_008.png\" />\n<div class=\"figure align-center\" id=\"id7\">\n<img alt=\"examples_built/reconstruction/ivim_voxel_plot.png\" src=\"examples_built/reconstruction/ivim_voxel_plot.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Plot of the signal from one voxel.</span><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Let us get the various plots with <cite>fit_method = \u2018VarPro\u2019</cite> so that we can\nvisualize them in one page</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">S0_predicted</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Predicted S0&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">),</span>\n         <span class=\"s2\">&quot;predicted_S0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">data_slice</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Measured S0&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">),</span> <span class=\"s2\">&quot;measured_S0.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">perfusion_fraction</span><span class=\"p\">,</span> <span class=\"s2\">&quot;f&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s2\">&quot;perfusion_fraction.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">D_star</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D*&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">),</span> <span class=\"s2\">&quot;perfusion_coeff.png&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">plot_map</span><span class=\"p\">(</span><span class=\"n\">ivimfit_vp</span><span class=\"o\">.</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.001</span><span class=\"p\">),</span> <span class=\"s2\">&quot;diffusion_coeff.png&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_009.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_010.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_011.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_012.png\" />\n</li>\n<li><img alt=\"reconst ivim\" class=\"sphx-glr-multi-img\" src=\"../../../_images/sphx_glr_reconst_ivim_013.png\" />\n</li>\n</ul>\n<div class=\"figure align-center\" id=\"id8\">\n<img alt=\"examples_built/reconstruction/predicted_S0.png\" src=\"examples_built/reconstruction/predicted_S0.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heatmap of S0 predicted from the fit</span><a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"figure align-center\" id=\"id9\">\n<img alt=\"examples_built/reconstruction/measured_S0.png\" src=\"examples_built/reconstruction/measured_S0.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heatmap of measured signal at bvalue = 0.</span><a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"figure align-center\" id=\"id10\">\n<img alt=\"examples_built/reconstruction/perfusion_fraction.png\" src=\"examples_built/reconstruction/perfusion_fraction.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heatmap of perfusion fraction values predicted from the fit</span><a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"figure align-center\" id=\"id11\">\n<img alt=\"examples_built/reconstruction/perfusion_coeff.png\" src=\"examples_built/reconstruction/perfusion_coeff.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heatmap of perfusion coefficients predicted from the fit.</span><a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"figure align-center\" id=\"id12\">\n<img alt=\"examples_built/reconstruction/diffusion_coeff.png\" src=\"examples_built/reconstruction/diffusion_coeff.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Heatmap of diffusion coefficients predicted from the fit</span><a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>References:</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"stejskal65\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">Stejskal65</a></span></dt>\n<dd><p>Stejskal, E. O.; Tanner, J. E. (1 January 1965).\n\u201cSpin Diffusion Measurements: Spin Echoes in the Presence\nof a Time-Dependent Field Gradient\u201d. The Journal of Chemical\nPhysics 42 (1): 288. Bibcode: 1965JChPh..42..288S.\ndoi:10.1063/1.1695690.</p>\n</dd>\n<dt class=\"label\" id=\"lebihan84\"><span class=\"brackets\">LeBihan84</span><span class=\"fn-backref\">(<a href=\"#id2\">1</a>,<a href=\"#id3\">2</a>)</span></dt>\n<dd><p>Le Bihan, Denis, et al. \u201cSeparation of diffusion\nand perfusion in intravoxel incoherent motion MR\nimaging.\u201d Radiology 168.2 (1988): 497-505.</p>\n</dd>\n<dt class=\"label\" id=\"fadnavis19\"><span class=\"brackets\">Fadnavis19</span></dt>\n<dd><p>Fadnavis, Shreyas et.al. \u201cMicroLearn: Framework for machine\nlearning, reconstruction, optimization and microstructure\nmodeling, Proceedings of: International Society of Magnetic\nResonance in Medicine (ISMRM), Montreal, Canada, 2019.</p>\n</dd>\n<dt class=\"label\" id=\"farooq16\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id4\">Farooq16</a></span></dt>\n<dd><p>Farooq, Hamza, et al. \u201cMicrostructure Imaging of Crossing (MIX)\nWhite Matter Fibers from diffusion MRI.\u201d Scientific reports 6\n(2016).</p>\n</dd>\n</dl>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 15 minutes  12.099 seconds)</p>\n<div class=\"sphx-glr-footer class sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-reconstruction-reconst-ivim-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/73b9103d6dfa7998533e51b180342d10/reconst_ivim.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_ivim.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e2b2882acc3e416665a51960fff85191/reconst_ivim.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_ivim.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/reconstruction/reconst_ivim.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Intravoxel incoherent motion</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/reconstruction/reconst_ivim", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}