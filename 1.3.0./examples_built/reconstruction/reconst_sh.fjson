{"parents": [], "prev": null, "next": null, "title": "Signal Reconstruction Using Spherical Harmonics", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-reconstruction-reconst-sh-py\"><span class=\"std std-ref\">here</span></a>     to download the full example code</p>\n</div>\n<div class=\"sphx-glr-example-title section\" id=\"signal-reconstruction-using-spherical-harmonics\">\n<span id=\"sphx-glr-examples-built-reconstruction-reconst-sh-py\"></span><h1>Signal Reconstruction Using Spherical Harmonics<a class=\"headerlink\" href=\"#signal-reconstruction-using-spherical-harmonics\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This example shows how you can use a spherical harmonics (SH) function to\nreconstruct any spherical function using <a href=\"#id6\"><span class=\"problematic\" id=\"id7\">DIPY_</span></a>. In order to generate a\nsignal, we will use the sphere created in <a class=\"reference internal\" href=\"../../gradients_spheres/#example-gradients-spheres\"><span class=\"std std-ref\">Gradients and Spheres</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gradients_spheres</span> <span class=\"k\">import</span> <span class=\"n\">sph</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-pytb notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;/Users/koudoro/Software/dipy/doc/examples/reconstruction/reconst_sh.py&quot;</span>, line <span class=\"m\">12</span>, in <span class=\"n\">&lt;module&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">gradients_spheres</span> <span class=\"kn\">import</span> <span class=\"n\">sph</span>\n<span class=\"gr\">ModuleNotFoundError</span>: <span class=\"n\">No module named &#39;gradients_spheres&#39;</span>\n</pre></div>\n</div>\n<p>We now need to create our initial signal. To do so, we will use our sphere\u2019s\nvertices as the sampled points of our spherical function (SF). We will\nuse <code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor_odf</span></code> to simulate an ODF. For more information on how to\nuse <a href=\"#id8\"><span class=\"problematic\" id=\"id9\">DIPY_</span></a> to simulate a signal and ODF, see\n<a class=\"reference internal\" href=\"../../simulate_multi_tensor/#example-simulate-multi-tensor\"><span class=\"std std-ref\">MultiTensor Simulation</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"k\">import</span> <span class=\"n\">multi_tensor_odf</span>\n\n<span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.00015</span><span class=\"p\">,</span> <span class=\"mf\">0.00015</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.00015</span><span class=\"p\">,</span> <span class=\"mf\">0.00015</span><span class=\"p\">]])</span>\n<span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">sph</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">])</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n\n<span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sph</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as symm_signal.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;symm_signal.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id1\">\n<img alt=\"examples_built/reconstruction/symm_signal.png\" src=\"examples_built/reconstruction/symm_signal.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Illustration of the simulated signal sampled on a sphere of 64 points\nper hemisphere</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>We can now express this signal as a series of SH coefficients using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf_to_sh</span></code>. This function converts a series of SF coefficients in a series\nof SH coefficients. For more information on SH basis, see <a class=\"reference internal\" href=\"../../../theory/sh_basis/#sh-basis\"><span class=\"std std-ref\">Spherical Harmonic bases</span></a>.\nFor this example, we will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> basis up to a maximum SH\norder of 8.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shm</span> <span class=\"k\">import</span> <span class=\"n\">sf_to_sh</span>\n\n<span class=\"c1\"># Change this value to try out other bases</span>\n<span class=\"n\">sh_basis</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;descoteaux07&#39;</span>\n<span class=\"c1\"># Change this value to try other maximum orders</span>\n<span class=\"n\">sh_order</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>\n\n<span class=\"n\">sh_coeffs</span> <span class=\"o\">=</span> <span class=\"n\">sf_to_sh</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">,</span> <span class=\"n\">sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">sh_coeffs</span></code> is an array containing the SH coefficients multiplying the SH\nfunctions of the chosen basis. We can use it as input of <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_to_sf</span></code> to\nreconstruct our original signal. We will now reproject our signal on a high\nresolution sphere using <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_to_sf</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shm</span> <span class=\"k\">import</span> <span class=\"n\">sh_to_sf</span>\n\n<span class=\"n\">high_res_sph</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">subdivide</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">reconst</span> <span class=\"o\">=</span> <span class=\"n\">sh_to_sf</span><span class=\"p\">(</span><span class=\"n\">sh_coeffs</span><span class=\"p\">,</span> <span class=\"n\">high_res_sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">reconst</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">high_res_sph</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving output as symm_reconst.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;symm_reconst.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"examples_built/reconstruction/symm_reconst.png\" src=\"examples_built/reconstruction/symm_reconst.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Reconstruction of a symmetric signal on a high resolution sphere using a\nsymmetric basis</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>While a symmetric SH basis works well for reconstructing symmetric SF, it\nfails to do so on asymmetric signals. We will now create such a signal by\nusing a different ODF for each hemisphere of our sphere.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]])</span>\n<span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n<span class=\"n\">odf2</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">sph</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">])</span>\n\n<span class=\"n\">n_pts_hemisphere</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sph</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">asym_odf</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[:</span><span class=\"n\">n_pts_hemisphere</span><span class=\"p\">],</span> <span class=\"n\">odf2</span><span class=\"p\">[</span><span class=\"n\">n_pts_hemisphere</span><span class=\"p\">:])</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">asym_odf</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sph</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving output as asym_signal.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;asym_signal.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"examples_built/reconstruction/asym_signal.png\" src=\"examples_built/reconstruction/asym_signal.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Illustration of an asymmetric signal sampled on a sphere of 64\npoints per hemisphere</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Let\u2019s try to reconstruct this SF using a symmetric SH basis.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sh_coeffs</span> <span class=\"o\">=</span> <span class=\"n\">sf_to_sh</span><span class=\"p\">(</span><span class=\"n\">asym_odf</span><span class=\"p\">,</span> <span class=\"n\">sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n<span class=\"n\">reconst</span> <span class=\"o\">=</span> <span class=\"n\">sh_to_sf</span><span class=\"p\">(</span><span class=\"n\">sh_coeffs</span><span class=\"p\">,</span> <span class=\"n\">high_res_sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">reconst</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">high_res_sph</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving output as asym_reconst.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;asym_reconst.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id4\">\n<img alt=\"examples_built/reconstruction/asym_reconst.png\" src=\"examples_built/reconstruction/asym_reconst.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Reconstruction of an asymmetric signal using a symmetric SH basis</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>As we can see, a symmetric basis fails to properly represent asymmetric SF.\nFortunately, <a href=\"#id10\"><span class=\"problematic\" id=\"id11\">DIPY_</span></a> also implements full SH bases, which can deal with\nsymmetric as well as asymmetric signals. For this tutorial, we will\ndemonstrate it using the <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07_full</span></code> SH basis.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Change this value to try out other bases</span>\n<span class=\"n\">sh_basis</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;descoteaux07_full&#39;</span>\n\n<span class=\"n\">sh_coeffs</span> <span class=\"o\">=</span> <span class=\"n\">sf_to_sh</span><span class=\"p\">(</span><span class=\"n\">asym_odf</span><span class=\"p\">,</span> <span class=\"n\">sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n<span class=\"n\">reconst</span> <span class=\"o\">=</span> <span class=\"n\">sh_to_sf</span><span class=\"p\">(</span><span class=\"n\">sh_coeffs</span><span class=\"p\">,</span> <span class=\"n\">high_res_sph</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"p\">,</span> <span class=\"n\">sh_basis</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">reconst</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">high_res_sph</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving output as asym_reconst_full.png&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;asym_reconst_full.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/reconstruction/asym_reconst_full.png\" src=\"examples_built/reconstruction/asym_reconst_full.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Reconstruction of an asymmetric signal using a full SH basis</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>As we can see, a full SH basis properly reconstruct asymmetric signal.</p>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.004 seconds)</p>\n<div class=\"sphx-glr-footer class sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-reconstruction-reconst-sh-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/7230e41572a0e5dbb76f195ef672225b/reconst_sh.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">reconst_sh.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e18f86c2e0d84e6ed7b3655f961436c8/reconst_sh.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">reconst_sh.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/reconstruction/reconst_sh.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Signal Reconstruction Using Spherical Harmonics</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/reconstruction/reconst_sh", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}