{"parents": [], "prev": null, "next": null, "title": "Extracting AFQ tract profiles from segmented bundles", "meta": {}, "body": "<div class=\"section\" id=\"extracting-afq-tract-profiles-from-segmented-bundles\">\n<span id=\"example-afq-tract-profiles\"></span><h1>Extracting AFQ tract profiles from segmented bundles<a class=\"headerlink\" href=\"#extracting-afq-tract-profiles-from-segmented-bundles\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>In this example, we will extract the values of a statistic from a\nvolume, using the coordinates along the length of a bundle. These are called\n<cite>tract profiles</cite></p>\n<p>One of the challenges of extracting tract profiles is that some of the\nstreamlines in a bundle may diverge significantly from the bundle in some\nlocations. To overcome this challenge, we will use a strategy similar to that\ndescribed in <a class=\"reference internal\" href=\"../streamlines_analysis/afq_tract_profiles/#yeatman2012\" id=\"id1\"><span>[Yeatman2012]</span></a>: We will weight the contribution of each streamline\nto the bundle profile based on how far this streamline is from the mean\ntrajectory of the bundle at that location.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.stats.analysis</span> <span class=\"k\">as</span> <span class=\"nn\">dsa</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">as</span> <span class=\"nn\">dts</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"k\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">AveragePointwiseEuclideanMetric</span><span class=\"p\">,</span>\n                                 <span class=\"n\">ResampleFeature</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data.fetcher</span> <span class=\"k\">import</span> <span class=\"n\">get_two_hcp842_bundles</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">as</span> <span class=\"nn\">dpd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.streamline</span> <span class=\"k\">import</span> <span class=\"n\">load_trk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os.path</span> <span class=\"k\">as</span> <span class=\"nn\">op</span>\n</pre></div>\n</div>\n<p>To get started, we will grab the bundles that were extracted in the bundle\nextraction example. If the example has not been run yet, these files don\u2019t\nyet exist, and we\u2019ll need to run that example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">&quot;CST_L.trk&quot;</span><span class=\"p\">)</span> <span class=\"ow\">and</span>\n        <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">&quot;AF_L.trk&quot;</span><span class=\"p\">)</span> <span class=\"ow\">and</span>\n        <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">&quot;slr_transform.npy&quot;</span><span class=\"p\">)):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">bundle_extraction</span>\n</pre></div>\n</div>\n<p>Either way, we can use the <cite>dipy.io</cite> API to read in the bundles from file.\n<cite>load_trk</cite> returns both the streamlines, as well as header information.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cst_l</span> <span class=\"o\">=</span> <span class=\"n\">load_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;CST_L.trk&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;same&quot;</span><span class=\"p\">,</span> <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streamlines</span>\n<span class=\"n\">af_l</span> <span class=\"o\">=</span> <span class=\"n\">load_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;AF_L.trk&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;same&quot;</span><span class=\"p\">,</span> <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streamlines</span>\n\n<span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;slr_transform.npy&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In the next step, we need to make sure that all the streamlines in each bundle\nare oriented the same way. For example, for the CST, we want to make sure that\nall the bundles have their cortical termination at one end of the streamline.\nThis is that when we later extract values from a volume, we won\u2019t have\ndifferent streamlines going in opposite directions.</p>\n<p>To orient all the streamlines in each bundles, we will create standard\nstreamlines, by finding the centroids of the left AF and CST bundle models.</p>\n<p>The advantage of using the model bundles is that we can use the same standard\nfor different subjects, which means that we\u2019ll get roughly the same orientation</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">model_af_l_file</span><span class=\"p\">,</span> <span class=\"n\">model_cst_l_file</span> <span class=\"o\">=</span> <span class=\"n\">get_two_hcp842_bundles</span><span class=\"p\">()</span>\n\n<span class=\"n\">model_af_l</span> <span class=\"o\">=</span> <span class=\"n\">load_trk</span><span class=\"p\">(</span><span class=\"n\">model_af_l_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;same&quot;</span><span class=\"p\">,</span>\n                      <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streamlines</span>\n<span class=\"n\">model_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">load_trk</span><span class=\"p\">(</span><span class=\"n\">model_cst_l_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;same&quot;</span><span class=\"p\">,</span>\n                       <span class=\"n\">bbox_valid_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">streamlines</span>\n\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">ResampleFeature</span><span class=\"p\">(</span><span class=\"n\">nb_points</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Since we are going to include all of the streamlines in the single cluster\nfrom the streamlines, we set the threshold to <cite>np.inf</cite>. We pull out the\ncentroid as the standard.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n\n<span class=\"n\">cluster_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">model_cst_l</span><span class=\"p\">)</span>\n<span class=\"n\">standard_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">cluster_cst_l</span><span class=\"o\">.</span><span class=\"n\">centroids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">cluster_af_l</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">model_af_l</span><span class=\"p\">)</span>\n<span class=\"n\">standard_af_l</span> <span class=\"o\">=</span> <span class=\"n\">cluster_af_l</span><span class=\"o\">.</span><span class=\"n\">centroids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>We use the centroid streamline for each atlas bundle as the standard to orient\nall of the streamlines in each bundle from the individual subject. Here, the\naffine used is the one from the transform between the atlas and individual\ntractogram. This is so that the orienting is done relative to the space of the\nindividual, and not relative to the atlas space.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">oriented_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">dts</span><span class=\"o\">.</span><span class=\"n\">orient_by_streamline</span><span class=\"p\">(</span><span class=\"n\">cst_l</span><span class=\"p\">,</span> <span class=\"n\">standard_cst_l</span><span class=\"p\">)</span>\n<span class=\"n\">oriented_af_l</span> <span class=\"o\">=</span> <span class=\"n\">dts</span><span class=\"o\">.</span><span class=\"n\">orient_by_streamline</span><span class=\"p\">(</span><span class=\"n\">af_l</span><span class=\"p\">,</span> <span class=\"n\">standard_af_l</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Read volumetric data from an image corresponding to this subject.</p>\n<p>For the purpose of this, we\u2019ve extracted only the FA within the bundles in\nquestion, but in real use, this is where you would add the FA map of your\nsubject.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">dpd</span><span class=\"o\">.</span><span class=\"n\">fetch_bundle_fa_hcp</span><span class=\"p\">()</span>\n\n<span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">fa_affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hcp_bundle_fa.nii.gz&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Calculate weights for each bundle:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">w_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">dsa</span><span class=\"o\">.</span><span class=\"n\">gaussian_weights</span><span class=\"p\">(</span><span class=\"n\">oriented_cst_l</span><span class=\"p\">)</span>\n<span class=\"n\">w_af_l</span> <span class=\"o\">=</span> <span class=\"n\">dsa</span><span class=\"o\">.</span><span class=\"n\">gaussian_weights</span><span class=\"p\">(</span><span class=\"n\">oriented_af_l</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>And then use the weights to calculate the tract profiles for each bundle</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">profile_cst_l</span> <span class=\"o\">=</span> <span class=\"n\">dsa</span><span class=\"o\">.</span><span class=\"n\">afq_profile</span><span class=\"p\">(</span><span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">oriented_cst_l</span><span class=\"p\">,</span> <span class=\"n\">fa_affine</span><span class=\"p\">,</span>\n                                <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"n\">w_cst_l</span><span class=\"p\">)</span>\n\n<span class=\"n\">profile_af_l</span> <span class=\"o\">=</span> <span class=\"n\">dsa</span><span class=\"o\">.</span><span class=\"n\">afq_profile</span><span class=\"p\">(</span><span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">oriented_af_l</span><span class=\"p\">,</span> <span class=\"n\">fa_affine</span><span class=\"p\">,</span>\n                               <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"n\">w_af_l</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ax1</span><span class=\"p\">,</span> <span class=\"n\">ax2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">profile_cst_l</span><span class=\"p\">)</span>\n<span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Fractional anisotropy&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Node along CST&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">profile_af_l</span><span class=\"p\">)</span>\n<span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Node along AF&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">&quot;tract_profiles&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"../../_images/tract_profiles.png\" src=\"../../_images/tract_profiles.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Bundle profiles for the fractional anisotropy in the left CST (left) and left\nAF (right).</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"section\" id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"yeatman2012\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">Yeatman2012</a></span></dt>\n<dd><p>Yeatman, Jason D., Robert F. Dougherty, Nathaniel J. Myall,\nBrian A. Wandell, and Heidi M. Feldman. 2012. \u201cTract Profiles of White\nMatter Properties: Automating Fiber-Tract Quantification\u201d PloS One 7 (11):\ne49790.</p>\n</dd>\n<dt class=\"label\" id=\"garyfallidis17\"><span class=\"brackets\">Garyfallidis17</span></dt>\n<dd><p>Garyfallidis et al. Recognition of white matter bundles\nusing local and global streamline-based registration and clustering,\nNeuroimage, 2017.</p>\n</dd>\n<dt class=\"label\" id=\"garyfallidis12\"><span class=\"brackets\">Garyfallidis12</span></dt>\n<dd><p>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience, vol 6, no 175, 2012.</p>\n</dd>\n</dl>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/e344c36d129dda8d2f2bcac50ee292fd/afq_tract_profiles.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/afq_tract_profiles.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Extracting AFQ tract profiles from segmented bundles</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/afq_tract_profiles", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}