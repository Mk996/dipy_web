{"parents": [], "prev": null, "next": null, "title": "Symmetric Diffeomorphic Registration in 2D", "meta": {}, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-built-registration-syn-registration-2d-py\"><span class=\"std std-ref\">here</span></a>     to download the full example code</p>\n</div>\n<div class=\"sphx-glr-example-title section\" id=\"symmetric-diffeomorphic-registration-in-2d\">\n<span id=\"sphx-glr-examples-built-registration-syn-registration-2d-py\"></span><h1>Symmetric Diffeomorphic Registration in 2D<a class=\"headerlink\" href=\"#symmetric-diffeomorphic-registration-in-2d\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This example explains how to register 2D images using the Symmetric\nNormalization (SyN) algorithm proposed by Avants et al. <a class=\"reference internal\" href=\"../../syn_registration_3d/#avants09\" id=\"id1\"><span>[Avants09]</span></a>\n(also implemented in the ANTs software <a class=\"reference internal\" href=\"../../syn_registration_3d/#avants11\" id=\"id2\"><span>[Avants11]</span></a>)</p>\n<p>We will perform the classic Circle-To-C experiment for diffeomorphic\nregistration</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.imwarp</span> <span class=\"k\">import</span> <span class=\"n\">SymmetricDiffeomorphicRegistration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.metrics</span> <span class=\"k\">import</span> <span class=\"n\">SSDMetric</span><span class=\"p\">,</span> <span class=\"n\">CCMetric</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.align.imwarp</span> <span class=\"k\">as</span> <span class=\"nn\">imwarp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">load_nifti_data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.mask</span> <span class=\"k\">import</span> <span class=\"n\">median_otsu</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">regtools</span>\n\n\n<span class=\"n\">fname_moving</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;reg_o&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">fname_static</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;reg_c&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">moving</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fname_moving</span><span class=\"p\">)</span>\n<span class=\"n\">static</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fname_static</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To visually check the overlap of the static image with the transformed moving\nimage, we can plot them on top of each other with different channels to see\nwhere the differences are located</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Moving&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;input_images.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_001.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\">\n<img alt=\"examples_built/registration/input_images.png\" src=\"examples_built/registration/input_images.png\" />\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">#    Input images.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># We want to find an invertible map that transforms the moving image (circle)</span>\n<span class=\"c1\"># into the static image (the C letter).</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># The first decision we need to make is what similarity metric is appropriate</span>\n<span class=\"c1\"># for our problem. In this example we are using two binary images, so the Sum</span>\n<span class=\"c1\"># of Squared Differences (SSD) is a good choice.</span>\n\n<span class=\"n\">dim</span> <span class=\"o\">=</span> <span class=\"n\">static</span><span class=\"o\">.</span><span class=\"n\">ndim</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">SSDMetric</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we define an instance of the registration class. The SyN algorithm uses\na multi-resolution approach by building a Gaussian Pyramid. We instruct the\nregistration instance to perform at most <span class=\"math notranslate nohighlight\">\\([n_0, n_1, ..., n_k]\\)</span> iterations at\neach level of the pyramid. The 0-th level corresponds to the finest\nresolution.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">level_iters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">]</span>\n\n<span class=\"n\">sdr</span> <span class=\"o\">=</span> <span class=\"n\">SymmetricDiffeomorphicRegistration</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">level_iters</span><span class=\"p\">,</span> <span class=\"n\">inv_iter</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we execute the optimization, which returns a DiffeomorphicMap object,\nthat can be used to register images back and forth between the static and\nmoving domains</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mapping</span> <span class=\"o\">=</span> <span class=\"n\">sdr</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>It is a good idea to visualize the resulting deformation map to make sure the\nresult is reasonable (at least, visually)</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">plot_2d_diffeomorphic_map</span><span class=\"p\">(</span><span class=\"n\">mapping</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">&#39;diffeomorphic_map.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_002.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>(array([[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 127.     , 127.00001, ...,   0.     , 127.     ,\n        127.     ],\n       [  0.     , 127.00001, 127.     , ...,   0.     , 127.     ,\n        127.     ],\n       ...,\n       [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 127.     , 127.     , ...,   0.     , 127.     ,\n        127.     ],\n       [  0.     , 127.     , 127.     , ...,   0.     , 127.     ,\n        127.     ]], dtype=float32), array([[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 126.87221, 126.88522, ...,   0.     , 127.     ,\n        127.     ],\n       [  0.     , 126.86069, 127.     , ...,   0.     , 127.     ,\n        127.     ],\n       ...,\n       [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 127.     , 127.     , ...,   0.     , 127.     ,\n        127.     ],\n       [  0.     , 127.     , 127.     , ...,   0.     , 127.     ,\n        127.     ]], dtype=float32))\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"examples_built/registration/diffeomorphic_map.png\" src=\"examples_built/registration/diffeomorphic_map.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Deformed lattice under the resulting diffeomorphic map.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Now let\u2019s warp the moving image and see if it gets similar to the static\nimage</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">warped_moving</span> <span class=\"o\">=</span> <span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;linear&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">warped_moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;Warped moving&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;direct_warp_result.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_003.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id4\">\n<img alt=\"examples_built/registration/direct_warp_result.png\" src=\"examples_built/registration/direct_warp_result.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Moving image transformed under the (direct) transformation in green on top\nof the static image (in red).</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>And we can also apply the inverse mapping to verify that the warped static\nimage is similar to the moving image</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">warped_static</span> <span class=\"o\">=</span> <span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">transform_inverse</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"s1\">&#39;linear&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">warped_static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Warped static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;Moving&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inverse_warp_result.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_004.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/registration/inverse_warp_result.png\" src=\"examples_built/registration/inverse_warp_result.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Static image transformed under the (inverse) transformation in red on top\nof the moving image (in green).</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Now let\u2019s register a couple of slices from a b0 image using the Cross\nCorrelation metric. Also, let\u2019s inspect the evolution of the registration.\nTo do this we will define a function that will be called by the registration\nobject at each stage of the optimization process. We will draw the current\nwarped images after finishing each resolution.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">callback_CC</span><span class=\"p\">(</span><span class=\"n\">sdr</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Status indicates at which stage of the optimization we currently are</span>\n    <span class=\"c1\"># For now, we will only react at the end of each resolution of the scale</span>\n    <span class=\"c1\"># space</span>\n    <span class=\"k\">if</span> <span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"n\">imwarp</span><span class=\"o\">.</span><span class=\"n\">RegistrationStages</span><span class=\"o\">.</span><span class=\"n\">SCALE_END</span><span class=\"p\">:</span>\n        <span class=\"c1\"># get the current images from the metric</span>\n        <span class=\"n\">wmoving</span> <span class=\"o\">=</span> <span class=\"n\">sdr</span><span class=\"o\">.</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">moving_image</span>\n        <span class=\"n\">wstatic</span> <span class=\"o\">=</span> <span class=\"n\">sdr</span><span class=\"o\">.</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">static_image</span>\n        <span class=\"c1\"># draw the images on top of each other with different colors</span>\n        <span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">wmoving</span><span class=\"p\">,</span> <span class=\"n\">wstatic</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Warped moving&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span>\n                                <span class=\"s1\">&#39;Warped static&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we are ready to configure and run the registration. First load the data</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">t1_name</span><span class=\"p\">,</span> <span class=\"n\">b0_name</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;syn_data&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti_data</span><span class=\"p\">(</span><span class=\"n\">b0_name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We first remove the skull from the b0 volume</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">b0_mask</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">median_otsu</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">median_radius</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">numpass</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>And select two slices to try the 2D registration</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">static</span> <span class=\"o\">=</span> <span class=\"n\">b0_mask</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"mi\">40</span><span class=\"p\">]</span>\n<span class=\"n\">moving</span> <span class=\"o\">=</span> <span class=\"n\">b0_mask</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"mi\">38</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>After loading the data, we instantiate the Cross-Correlation metric. The\nmetric receives three parameters: the dimension of the input images, the\nstandard deviation of the Gaussian Kernel to be used to regularize the\ngradient and the radius of the window to be used for evaluating the local\nnormalized cross correlation.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sigma_diff</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>\n<span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">CCMetric</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sigma_diff</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s use a scale space of 3 levels</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">level_iters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">]</span>\n<span class=\"n\">sdr</span> <span class=\"o\">=</span> <span class=\"n\">SymmetricDiffeomorphicRegistration</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">level_iters</span><span class=\"p\">)</span>\n<span class=\"n\">sdr</span><span class=\"o\">.</span><span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">callback_CC</span>\n</pre></div>\n</div>\n<p>And execute the optimization</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mapping</span> <span class=\"o\">=</span> <span class=\"n\">sdr</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">)</span>\n\n<span class=\"n\">warped</span> <span class=\"o\">=</span> <span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">moving</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can see the effect of the warping by switching between the images before\nand after registration</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Moving&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;t1_slices_input.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_005.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id6\">\n<img alt=\"examples_built/registration/t1_slices_input.png\" src=\"examples_built/registration/t1_slices_input.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Input images.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">,</span> <span class=\"n\">warped</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Warped moving&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;t1_slices_res.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_006.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id7\">\n<img alt=\"examples_built/registration/t1_slices_res.png\" src=\"examples_built/registration/t1_slices_res.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Moving image transformed under the (direct) transformation in green on top\nof the static image (in red).</span><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>And we can apply the inverse warping too</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">inv_warped</span> <span class=\"o\">=</span> <span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">transform_inverse</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"p\">)</span>\n<span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">overlay_images</span><span class=\"p\">(</span><span class=\"n\">inv_warped</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Warped static&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Overlay&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;moving&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;t1_slices_res2.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_007.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 640x480 with 3 Axes&gt;\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id8\">\n<img alt=\"examples_built/registration/t1_slices_res2.png\" src=\"examples_built/registration/t1_slices_res2.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Static image transformed under the (inverse) transformation in red on top\nof the moving image (in green).</span><a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>Finally, let\u2019s see the deformation</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regtools</span><span class=\"o\">.</span><span class=\"n\">plot_2d_diffeomorphic_map</span><span class=\"p\">(</span><span class=\"n\">mapping</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;diffeomorphic_map_b0s.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img alt=\"syn registration 2d\" class=\"sphx-glr-single-img\" src=\"../../../_images/sphx_glr_syn_registration_2d_008.png\" />\n<p class=\"sphx-glr-script-out\">Out:</p>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>(array([[  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 126.99999, 127.00001, ..., 127.     ,   0.     ,\n        127.     ],\n       [  0.     , 127.     , 127.     , ..., 127.     ,   0.     ,\n        127.     ],\n       ...,\n       [  0.     , 127.     , 127.     , ..., 127.     ,   0.     ,\n        127.     ],\n       [  0.     ,   0.     ,   0.     , ...,   0.     ,   0.     ,\n          0.     ],\n       [  0.     , 127.     , 127.     , ..., 127.     ,   0.     ,\n        127.     ]], dtype=float32), array([[  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,\n          0.      ],\n       [  0.      , 126.99708 , 126.999725, ..., 127.      ,   0.      ,\n        127.      ],\n       [  0.      , 126.99444 , 127.      , ..., 127.      ,   0.      ,\n        127.      ],\n       ...,\n       [  0.      , 127.      , 127.      , ..., 127.      ,   0.      ,\n        127.      ],\n       [  0.      ,   0.      ,   0.      , ...,   0.      ,   0.      ,\n          0.      ],\n       [  0.      , 127.      , 127.      , ..., 127.      ,   0.      ,\n        127.      ]], dtype=float32))\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id9\">\n<img alt=\"examples_built/registration/diffeomorphic_map_b0s.png\" src=\"examples_built/registration/diffeomorphic_map_b0s.png\" />\n<p class=\"caption\"><span class=\"caption-text\">Deformed lattice under the resulting diffeomorphic map.</span><a class=\"headerlink\" href=\"#id9\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<div class=\"section\" id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"avants09\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">Avants09</a></span></dt>\n<dd><p>Avants, B. B., Epstein, C. L., Grossman, M., &amp; Gee, J. C.\n(2009). Symmetric Diffeomorphic Image Registration with Cross-Correlation:\nEvaluating Automated Labeling of Elderly and Neurodegenerative Brain,</p>\n<blockquote>\n<div><p>12(1), 26-41.</p>\n</div></blockquote>\n</dd>\n<dt class=\"label\" id=\"avants11\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id2\">Avants11</a></span></dt>\n<dd><p>Avants, B. B., Tustison, N., &amp; Song, G. (2011). Advanced\nNormalization Tools (ANTS), 1-35.</p>\n</dd>\n</dl>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  32.009 seconds)</p>\n<div class=\"sphx-glr-footer class sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-built-registration-syn-registration-2d-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/fc29030457cd5eecef3954dda570a30d/syn_registration_2d.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">syn_registration_2d.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e95096adcd567eb601b8beb00bf2c4b0/syn_registration_2d.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">syn_registration_2d.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/registration/syn_registration_2d.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Symmetric Diffeomorphic Registration in 2D</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/registration/syn_registration_2d", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}