{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "DIPY Workflows Interfaces"}], "prev": {"link": "../data_fetch/", "title": "Downloading DIPY datasets"}, "next": {"link": "../gibbs_unringing_flow/", "title": "Gibbs Unringing"}, "title": "Denoising", "meta": {}, "body": "<div class=\"section\" id=\"denoising\">\n<span id=\"denoise-flow\"></span><h1>Denoising<a class=\"headerlink\" href=\"#denoising\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This tutorial walks through the steps to denoise diffusion-weighted MR images using DIPY.\nMultiple denoising methods are available in DIPY.</p>\n<p>You can try these methods using your own data; we will be using the data in DIPY.\nYou can check how to <a class=\"reference internal\" href=\"../data_fetch/#data-fetch\"><span class=\"std std-ref\">fetch the DIPY data</span></a>.</p>\n<div class=\"section\" id=\"denoising-using-local-pca\">\n<h2>Denoising using Local PCA<a class=\"headerlink\" href=\"#denoising-using-local-pca\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>PCA-based denoising algorithms are effective denoising methods because they explore\nthe redundancy of the multi-dimensional information of diffusion-weighted datasets.</p>\n<p>The algorithm to perform the PCA-based denoising involves the following steps:</p>\n<ul class=\"simple\">\n<li><p>First, we estimate the local noise variance at each voxel.</p></li>\n<li><p>Then, we apply PCA in local patches around each voxel over the gradient directions.</p></li>\n<li><p>Finally, we threshold the eigenvalues based on the local estimate of sigma and then do a PCA reconstruction</p></li>\n</ul>\n<p>We are using <code class=\"docutils literal notranslate\"><span class=\"pre\">stanford_hardi</span></code> dataset. You can also use your own data.</p>\n<p>The workflow for the LPCA denoising requires the paths to the diffusion input file,\nas well as the b-values and b-vectors files.</p>\n<p>You may want to create an output directory to save the denoised data:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">denoise_lpca_output</span>\n</pre></div>\n</div>\n<p>Run the following command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_denoise_lpca</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bval</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">stanford_hardi</span><span class=\"o\">/</span><span class=\"n\">HARDI150</span><span class=\"o\">.</span><span class=\"n\">bvec</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;denoise_lpca_output&quot;</span>\n</pre></div>\n</div>\n<p>This command will denoise the diffusion image and save it to the directory\n<code class=\"docutils literal notranslate\"><span class=\"pre\">denoise_lpca_output</span></code>.</p>\n<p>In case, you did not specify <code class=\"docutils literal notranslate\"><span class=\"pre\">out_dir</span></code>, the denoised diffusion image will\nbe saved to a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">dwi_lpca.nii.gz</span></code> by default, located in the\ninput directory also by default.</p>\n<p>Note: Depending on the parameters\u2019 values, the effect of the denoising can\nbe subtle or even hardly noticeable, apparent or visible, depending on the\nchoice. Users are encouraged to carefully choose the parameters.</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 50%\" />\n<col style=\"width: 50%\" />\n</colgroup>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Before Denoising</p></th>\n<th class=\"head\"><p>After Denoising</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_original.png?raw=true\"><img alt=\"image1\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_LPCA.png?raw=true\"><img alt=\"image2\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_LPCA.png?raw=true\" /></a></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"denoising-using-marcenko-pastur-pca\">\n<h2>Denoising using Marcenko-Pastur PCA<a class=\"headerlink\" href=\"#denoising-using-marcenko-pastur-pca\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The PCA-based denoising algorithm exploits the redundancy across the diffusion-\nweighted images. This algorithm has been shown to provide an optimal compromise\nbetween noise suppression and loss of anatomical information for different\ntechniques such as DTI, spherical deconvolution and DKI.</p>\n<p>The basic idea behind the PCA-based denoising algorithms is to remove the components\nof the data that are classified as noise. The Principal Components classification\ncan be performed based on prior noise variance estimates or automatically based\non the Marcenko-Pastur distribution. In addition to noise suppression, the PCA\nalgorithm can be used to get the standard deviation of the noise.</p>\n<p>We will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">sherbrooke_3shell</span></code> dataset in DIPY to showcase this denoising method.\nAs with any other workflow in DIPY, you can also use your own data!</p>\n<p>Create a directory where to save the denoised image (e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">denoise_mppca_output</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mkdir</span> <span class=\"n\">denoise_mppca_output</span>\n</pre></div>\n</div>\n<p>In order to run the MPPCA denoising method, we need to specify the location of the\ndiffusion data file, followed by the optional arguments. In this case, we will be\nspecifying the <code class=\"docutils literal notranslate\"><span class=\"pre\">patch</span> <span class=\"pre\">radius</span></code> value and <code class=\"docutils literal notranslate\"><span class=\"pre\">output</span> <span class=\"pre\">directory</span></code>.</p>\n<p>So, we will run the command as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_denoise_mppca</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">sherbrooke_3shell</span><span class=\"o\">/</span><span class=\"n\">HRADI193</span><span class=\"o\">.</span><span class=\"n\">nii</span><span class=\"o\">.</span><span class=\"n\">gz</span> <span class=\"o\">--</span><span class=\"n\">patch_radius</span> <span class=\"mi\">10</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;denoise_mppca_output&quot;</span>\n</pre></div>\n</div>\n<p>This command will denoise the diffusion image and save it to the specified output directory.</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 50%\" />\n<col style=\"width: 50%\" />\n</colgroup>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Before Denoising</p></th>\n<th class=\"head\"><p>After Denoising</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_original.png?raw=true\"><img alt=\"image3\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_denoise_MPPCA.png?raw=true\"><img alt=\"image4\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_denoise_MPPCA.png?raw=true\" /></a></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"denoising-using-nlmeans\">\n<h2>Denoising using NLMEANS<a class=\"headerlink\" href=\"#denoising-using-nlmeans\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Using the non-local means filter <a class=\"reference internal\" href=\"#coupe08\" id=\"id1\"><span>[Coupe08]</span></a> and <a class=\"reference internal\" href=\"#coupe11\" id=\"id2\"><span>[Coupe11]</span></a>, you can denoise 3D or 4D\nimages and boost the SNR of your datasets.</p>\n<p>We will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">cfin_multib</span></code> dataset in DIPY to showcase this denoising method.\nAs with any other workflow in DIPY, you can also use your own data!</p>\n<p>In order to run the NLMEANS denoising method, we need to specify the location of the\ndiffusion data file, followed by the optional arguments. In this case, we will be\nspecifying the <code class=\"docutils literal notranslate\"><span class=\"pre\">sigma</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">patch</span> <span class=\"pre\">radius</span></code> values and <code class=\"docutils literal notranslate\"><span class=\"pre\">output</span> <span class=\"pre\">directory</span></code>.</p>\n<p>Create a directory where to save the denoised image (e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">denoise_nlmeans_output</span></code>):</p>\n<p>Then, we will run the command as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dipy_denoise_nlmeans</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">cfin_multib</span><span class=\"o\">/</span><span class=\"n\">__DTI_AX_ep2d_2_5_iso_33d_20141015095334_4</span><span class=\"o\">.</span><span class=\"n\">nii</span> <span class=\"o\">--</span><span class=\"n\">sigma</span> <span class=\"mi\">2</span> <span class=\"o\">--</span><span class=\"n\">patch_radius</span> <span class=\"mi\">2</span> <span class=\"o\">--</span><span class=\"n\">out_dir</span> <span class=\"s2\">&quot;denoise_nlmeans_output&quot;</span>\n</pre></div>\n</div>\n<p>The command will denoise the input diffusion volume and write the result to the specified\noutput directory.</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 50%\" />\n<col style=\"width: 50%\" />\n</colgroup>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Before Denoising</p></th>\n<th class=\"head\"><p>After Denoising</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_original.png?raw=true\"><img alt=\"image5\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_NLMEANS.png?raw=true\"><img alt=\"image6\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_NLMEANS.png?raw=true\" /></a></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"overview-of-denoising-methods\">\n<h2>Overview of Denoising Methods<a class=\"headerlink\" href=\"#overview-of-denoising-methods\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Note: Users are recommended to zoom (click on each image) to see the denoising effect.</p>\n<div class=\"section\" id=\"diffusion\">\n<h3>Diffusion<a class=\"headerlink\" href=\"#diffusion\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n</colgroup>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Dataset</p></th>\n<th class=\"head\"><p>Original Image</p></th>\n<th class=\"head\"><p>Denoise LCPA</p></th>\n<th class=\"head\"><p>Denoise MPPCA</p></th>\n<th class=\"head\"><p>Denoise NLMEANS</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p>sherbrooke_3shell</p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_original.png?raw=true\"><img alt=\"image7\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_denoise_LPCA.png?raw=true\"><img alt=\"image8\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_denoise_LPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_denoise_MPPCA.png?raw=true\"><img alt=\"image9\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_3shell_denoise_MPPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_denoise_NLMEANS.png?raw=true\"><img alt=\"image10\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/sherbrooke_denoise_NLMEANS.png?raw=true\" /></a></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p>stanford_hardi</p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_original.png?raw=true\"><img alt=\"image11\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_LPCA.png?raw=true\"><img alt=\"image12\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_LPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_MPPCA.png?raw=true\"><img alt=\"image13\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_MPPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_NLMEANS.png?raw=true\"><img alt=\"image14\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_denoise_NLMEANS.png?raw=true\" /></a></p></td>\n</tr>\n<tr class=\"row-even\"><td><p>cfin_multib</p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_original.png?raw=true\"><img alt=\"image15\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_LPCA.png?raw=true\"><img alt=\"image16\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_LPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_MPPCA.png?raw=true\"><img alt=\"image17\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_MPPCA.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_NLMEANS.png?raw=true\"><img alt=\"image18\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/cfin_multib_denoise_NLMEANS.png?raw=true\" /></a></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"structural\">\n<h3>Structural<a class=\"headerlink\" href=\"#structural\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 33%\" />\n<col style=\"width: 33%\" />\n<col style=\"width: 33%\" />\n</colgroup>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Dataset</p></th>\n<th class=\"head\"><p>Original Image</p></th>\n<th class=\"head\"><p>Denoise NLMEANS</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p>stanford_hardi T1</p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_t1_original.png?raw=true\"><img alt=\"image19\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_t1_original.png?raw=true\" /></a></p></td>\n<td><p><a class=\"reference internal\" href=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_t1_NLMEANS.png?raw=true\"><img alt=\"image20\" class=\"align-middle\" src=\"https://github.com/dipy/dipy_data/blob/master/stanford_hardi_t1_NLMEANS.png?raw=true\" /></a></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"coupe08\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">Coupe08</a></span></dt>\n<dd><p>P. Coupe, P. Yger, S. Prima, P. Hellier, C. Kervrann, C. Barillot,\n\u201cAn Optimized Blockwise Non Local Means Denoising Filter for 3D Magnetic\nResonance Images\u201d, IEEE Transactions on Medical Imaging, 27(4):425-441, 2008</p>\n</dd>\n<dt class=\"label\" id=\"coupe11\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id2\">Coupe11</a></span></dt>\n<dd><p>Pierrick Coupe, Jose Manjon, Montserrat Robles, Louis Collins.\n\u201cAdaptive Multiresolution Non-Local Means Filter for 3D MR Image Denoising\u201d\nIET Image Processing, Institution of Engineering and Technology, 2011</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["interfaces/gibbs_unringing_flow", "Gibbs Unringing", "N", "next"], ["interfaces/data_fetch", "Downloading DIPY datasets", "P", "previous"]], "sourcename": "interfaces/denoise_flow.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Denoising</a><ul>\n<li><a class=\"reference internal\" href=\"#denoising-using-local-pca\">Denoising using Local PCA</a></li>\n<li><a class=\"reference internal\" href=\"#denoising-using-marcenko-pastur-pca\">Denoising using Marcenko-Pastur PCA</a></li>\n<li><a class=\"reference internal\" href=\"#denoising-using-nlmeans\">Denoising using NLMEANS</a></li>\n<li><a class=\"reference internal\" href=\"#overview-of-denoising-methods\">Overview of Denoising Methods</a><ul>\n<li><a class=\"reference internal\" href=\"#diffusion\">Diffusion</a></li>\n<li><a class=\"reference internal\" href=\"#structural\">Structural</a></li>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "interfaces/denoise_flow", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}