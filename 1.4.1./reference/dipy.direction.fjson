{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.denoise/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>"}, "next": {"link": "../dipy.io/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "meta": {}, "body": "<div class=\"section\" id=\"module-dipy.direction\">\n<span id=\"direction\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code><a class=\"headerlink\" href=\"#module-dipy.direction\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.BootDirectionGetter\" title=\"dipy.direction.BootDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.ClosestPeakDirectionGetter\" title=\"dipy.direction.ClosestPeakDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a></p></td>\n<td><p>A direction getter that returns the closest odf peak to previous tracking direction.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.DeterministicMaximumDirectionGetter\" title=\"dipy.direction.DeterministicMaximumDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a></p></td>\n<td><p>Return direction of a sphere with the highest probability mass function (pmf).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.EuDXDirectionGetter\" title=\"dipy.direction.EuDXDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a></p></td>\n<td><p>Deterministic Direction Getter based on peak directions.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.InTemporaryDirectory\" title=\"dipy.direction.InTemporaryDirectory\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a>([suffix,\u00a0prefix,\u00a0dir])</p></td>\n<td><p>Create, return, and change directory to a temporary directory</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.PeaksAndMetrics\" title=\"dipy.direction.PeaksAndMetrics\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a></p></td>\n<td><p><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.ProbabilisticDirectionGetter\" title=\"dipy.direction.ProbabilisticDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a></p></td>\n<td><p>Randomly samples direction of a sphere based on probability mass function (pmf).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.Sphere\" title=\"dipy.direction.Sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a>([x,\u00a0y,\u00a0z,\u00a0theta,\u00a0phi,\u00a0xyz,\u00a0faces,\u00a0edges])</p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.repeat\" title=\"dipy.direction.repeat\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a>(object\u00a0[,times])</p></td>\n<td><p>for the specified number of times.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.Pool\" title=\"dipy.direction.Pool\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Pool</span></code></a>([processes,\u00a0initializer,\u00a0initargs,\u00a0\u2026])</p></td>\n<td><p>Returns a process pool object</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.deprecated_params\" title=\"dipy.direction.deprecated_params\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">deprecated_params</span></code></a>(old_name[,\u00a0new_name,\u00a0\u2026])</p></td>\n<td><p>Deprecate a <em>renamed</em> or <em>removed</em> function argument.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.determine_num_processes\" title=\"dipy.direction.determine_num_processes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">determine_num_processes</span></code></a>(num_processes)</p></td>\n<td><p>Determine the effective number of processes for parallelization.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.gfa\" title=\"dipy.direction.gfa\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gfa</span></code></a>(samples)</p></td>\n<td><p>The general fractional anisotropy of a function evaluated on the unit sphere</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.local_maxima\" title=\"dipy.direction.local_maxima\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">local_maxima</span></code></a></p></td>\n<td><p>Local maxima of a function evaluated on a discrete set of points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.ndindex\" title=\"dipy.direction.ndindex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ndindex</span></code></a>(shape)</p></td>\n<td><p>An N-dimensional iterator object to index arrays.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peak_directions\" title=\"dipy.direction.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code></a>(odf,\u00a0sphere[,\u00a0\u2026])</p></td>\n<td><p>Get the directions of odf peaks.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peak_directions_nl\" title=\"dipy.direction.peak_directions_nl\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions_nl</span></code></a>(sphere_eval[,\u00a0\u2026])</p></td>\n<td><p>Non Linear Direction Finder.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks_from_model\" title=\"dipy.direction.peaks_from_model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peaks_from_model</span></code></a>(model,\u00a0data,\u00a0sphere,\u00a0\u2026[,\u00a0\u2026])</p></td>\n<td><p>Fit the model to data and computes peaks and metrics</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.remove_similar_vertices\" title=\"dipy.direction.remove_similar_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">remove_similar_vertices</span></code></a></p></td>\n<td><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.reshape_peaks_for_visualization\" title=\"dipy.direction.reshape_peaks_for_visualization\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reshape_peaks_for_visualization</span></code></a>(peaks)</p></td>\n<td><p>Reshape peaks for visualization.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.search_descending\" title=\"dipy.direction.search_descending\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">search_descending</span></code></a></p></td>\n<td><p><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.sh_to_sf_matrix\" title=\"dipy.direction.sh_to_sf_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sh_to_sf_matrix</span></code></a>(sphere[,\u00a0sh_order,\u00a0\u2026])</p></td>\n<td><p>Matrix that transforms Spherical harmonics (SH) to spherical function (SF).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.warn\" title=\"dipy.direction.warn\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">warn</span></code></a>(/,\u00a0message[,\u00a0category,\u00a0stacklevel,\u00a0source])</p></td>\n<td><p>Issue a warning, or maybe ignore it or raise an exception.</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.direction.bootstrap_direction_getter\">\n<span id=\"module-direction-bootstrap-direction-getter\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.bootstrap_direction_getter</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.bootstrap_direction_getter\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter\" title=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.bootstrap_direction_getter.BootPmfGen\" title=\"dipy.direction.bootstrap_direction_getter.BootPmfGen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.direction.closest_peak_direction_getter\">\n<span id=\"module-direction-closest-peak-direction-getter\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.closest_peak_direction_getter</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.closest_peak_direction_getter\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BaseDirectionGetter</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BasePmfDirectionGetter</span></code></a></p></td>\n<td><p>A base class for dynamic direction getters</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a></p></td>\n<td><p>A direction getter that returns the closest odf peak to previous tracking direction.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PmfGenDirectionGetter</span></code></a></p></td>\n<td><p>A base class for direction getter using a pmf</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.order_from_ncoef\" title=\"dipy.direction.closest_peak_direction_getter.order_from_ncoef\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">order_from_ncoef</span></code></a>(ncoef[,\u00a0full_basis])</p></td>\n<td><p>Given a number <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> of coefficients, calculate back the <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.peak_directions\" title=\"dipy.direction.closest_peak_direction_getter.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code></a>(odf,\u00a0sphere[,\u00a0\u2026])</p></td>\n<td><p>Get the directions of odf peaks.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.warn\" title=\"dipy.direction.closest_peak_direction_getter.warn\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">warn</span></code></a>(/,\u00a0message[,\u00a0category,\u00a0stacklevel,\u00a0source])</p></td>\n<td><p>Issue a warning, or maybe ignore it or raise an exception.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.direction.peaks\">\n<span id=\"module-direction-peaks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.peaks</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.peaks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.EuDXDirectionGetter\" title=\"dipy.direction.peaks.EuDXDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a></p></td>\n<td><p>Deterministic Direction Getter based on peak directions.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.InTemporaryDirectory\" title=\"dipy.direction.peaks.InTemporaryDirectory\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a>([suffix,\u00a0prefix,\u00a0dir])</p></td>\n<td><p>Create, return, and change directory to a temporary directory</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"dipy.direction.peaks.PeaksAndMetrics\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a></p></td>\n<td><p><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.Sphere\" title=\"dipy.direction.peaks.Sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a>([x,\u00a0y,\u00a0z,\u00a0theta,\u00a0phi,\u00a0xyz,\u00a0faces,\u00a0edges])</p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.repeat\" title=\"dipy.direction.peaks.repeat\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a>(object\u00a0[,times])</p></td>\n<td><p>for the specified number of times.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.Pool\" title=\"dipy.direction.peaks.Pool\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Pool</span></code></a>([processes,\u00a0initializer,\u00a0initargs,\u00a0\u2026])</p></td>\n<td><p>Returns a process pool object</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.deprecated_params\" title=\"dipy.direction.peaks.deprecated_params\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">deprecated_params</span></code></a>(old_name[,\u00a0new_name,\u00a0\u2026])</p></td>\n<td><p>Deprecate a <em>renamed</em> or <em>removed</em> function argument.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.determine_num_processes\" title=\"dipy.direction.peaks.determine_num_processes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">determine_num_processes</span></code></a>(num_processes)</p></td>\n<td><p>Determine the effective number of processes for parallelization.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.gfa\" title=\"dipy.direction.peaks.gfa\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gfa</span></code></a>(samples)</p></td>\n<td><p>The general fractional anisotropy of a function evaluated on the unit sphere</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.local_maxima\" title=\"dipy.direction.peaks.local_maxima\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">local_maxima</span></code></a></p></td>\n<td><p>Local maxima of a function evaluated on a discrete set of points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.ndindex\" title=\"dipy.direction.peaks.ndindex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ndindex</span></code></a>(shape)</p></td>\n<td><p>An N-dimensional iterator object to index arrays.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code></a>(odf,\u00a0sphere[,\u00a0\u2026])</p></td>\n<td><p>Get the directions of odf peaks.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions_nl\" title=\"dipy.direction.peaks.peak_directions_nl\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions_nl</span></code></a>(sphere_eval[,\u00a0\u2026])</p></td>\n<td><p>Non Linear Direction Finder.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.peaks_from_model\" title=\"dipy.direction.peaks.peaks_from_model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peaks_from_model</span></code></a>(model,\u00a0data,\u00a0sphere,\u00a0\u2026[,\u00a0\u2026])</p></td>\n<td><p>Fit the model to data and computes peaks and metrics</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.remove_similar_vertices\" title=\"dipy.direction.peaks.remove_similar_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">remove_similar_vertices</span></code></a></p></td>\n<td><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.reshape_peaks_for_visualization\" title=\"dipy.direction.peaks.reshape_peaks_for_visualization\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reshape_peaks_for_visualization</span></code></a>(peaks)</p></td>\n<td><p>Reshape peaks for visualization.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.search_descending\" title=\"dipy.direction.peaks.search_descending\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">search_descending</span></code></a></p></td>\n<td><p><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.sh_to_sf_matrix\" title=\"dipy.direction.peaks.sh_to_sf_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sh_to_sf_matrix</span></code></a>(sphere[,\u00a0sh_order,\u00a0\u2026])</p></td>\n<td><p>Matrix that transforms Spherical harmonics (SH) to spherical function (SF).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.warn\" title=\"dipy.direction.peaks.warn\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">warn</span></code></a>(/,\u00a0message[,\u00a0category,\u00a0stacklevel,\u00a0source])</p></td>\n<td><p>Issue a warning, or maybe ignore it or raise an exception.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.direction.pmf\">\n<span id=\"module-direction-pmf\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.pmf</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.pmf\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.pmf.BootPmfGen\" title=\"dipy.direction.pmf.BootPmfGen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">PmfGen</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.pmf.SHCoeffPmfGen\" title=\"dipy.direction.pmf.SHCoeffPmfGen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SHCoeffPmfGen</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.pmf.SimplePmfGen\" title=\"dipy.direction.pmf.SimplePmfGen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SimplePmfGen</span></code></a></p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.pmf.cart2sphere\" title=\"dipy.direction.pmf.cart2sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cart2sphere</span></code></a>(x,\u00a0y,\u00a0z)</p></td>\n<td><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.direction.probabilistic_direction_getter\">\n<span id=\"module-direction-probabilistic-direction-getter\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.probabilistic_direction_getter</span></code><a class=\"headerlink\" href=\"#module-dipy.direction.probabilistic_direction_getter\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Implementation of a probabilistic direction getter based on sampling from\ndiscrete distribution (pmf) at each step of the tracking.</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a></p></td>\n<td><p>Return direction of a sphere with the highest probability mass function (pmf).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a></p></td>\n<td><p>Randomly samples direction of a sphere based on probability mass function (pmf).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.peak_directions\" title=\"dipy.direction.probabilistic_direction_getter.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code></a>(odf,\u00a0sphere[,\u00a0\u2026])</p></td>\n<td><p>Get the directions of odf peaks.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.random\" title=\"dipy.direction.probabilistic_direction_getter.random\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">random</span></code></a>()</p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"bootdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.BootDirectionGetter\" title=\"dipy.direction.BootDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#bootdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.BootDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">BootDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.BootDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.BootDirectionGetter.from_data\" title=\"dipy.direction.BootDirectionGetter.from_data\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_data</span></code></a></p></td>\n<td><p>Create a BootDirectionGetter using HARDI data and an ODF type model</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.BootDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.BootDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.BootDirectionGetter.from_data\">\n<code class=\"sig-name descname\">from_data</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.BootDirectionGetter.from_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a BootDirectionGetter using HARDI data and an ODF type model</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>data</strong><span class=\"classifier\">ndarray, float, (\u2026, N)</span></dt><dd><p>Diffusion MRI data with N volumes.</p>\n</dd>\n<dt><strong>model</strong><span class=\"classifier\">dipy diffusion model</span></dt><dd><p>Must provide fit with odf method.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float (0, 90)</span></dt><dd><p>Maximum angle between tract segments. This angle can be more\ngenerous (larger) than values typically used with probabilistic\ndirection getters.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The sphere used to sample the diffusion ODF.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">even int</span></dt><dd><p>The order of the SH \u201cmodel\u201d used to estimate bootstrap residuals.</p>\n</dd>\n<dt><strong>max_attempts</strong><span class=\"classifier\">int</span></dt><dd><p>Max number of bootstrap samples used to find tracking direction\nbefore giving up.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Threshold for ODF functions.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Relative threshold for excluding ODF peaks.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Angular threshold for excluding ODF peaks.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"closestpeakdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.ClosestPeakDirectionGetter\" title=\"dipy.direction.ClosestPeakDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#closestpeakdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.ClosestPeakDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">ClosestPeakDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.ClosestPeakDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter</span></code></a></p>\n<p>A direction getter that returns the closest odf peak to previous tracking\ndirection.</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.ClosestPeakDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.ClosestPeakDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"deterministicmaximumdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.DeterministicMaximumDirectionGetter\" title=\"dipy.direction.DeterministicMaximumDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#deterministicmaximumdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.DeterministicMaximumDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">DeterministicMaximumDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.DeterministicMaximumDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter</span></code></a></p>\n<p>Return direction of a sphere with the highest probability mass\nfunction (pmf).</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.DeterministicMaximumDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.DeterministicMaximumDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"eudxdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.EuDXDirectionGetter\" title=\"dipy.direction.EuDXDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#eudxdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.EuDXDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">EuDXDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.direction_getter.DirectionGetter\" title=\"dipy.tracking.direction_getter.DirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.tracking.direction_getter.DirectionGetter</span></code></a></p>\n<p>Deterministic Direction Getter based on peak directions.</p>\n<p>This class contains the cython portion of the code for PeaksAndMetrics and\nis not meant to be used on its own.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>ang_thr</strong></dt><dd></dd>\n<dt><strong>qa_thr</strong></dt><dd></dd>\n<dt><strong>total_weight</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.EuDXDirectionGetter.initial_direction\" title=\"dipy.direction.EuDXDirectionGetter.initial_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></a></p></td>\n<td><p>The best starting directions for fiber tracking from point</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.EuDXDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.EuDXDirectionGetter.ang_thr\">\n<code class=\"sig-name descname\">ang_thr</code><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter.ang_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.EuDXDirectionGetter.initial_direction\">\n<code class=\"sig-name descname\">initial_direction</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter.initial_direction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The best starting directions for fiber tracking from point</p>\n<p>All the valid peaks in the voxel closest to point are returned as\ninitial directions.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.EuDXDirectionGetter.qa_thr\">\n<code class=\"sig-name descname\">qa_thr</code><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter.qa_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.EuDXDirectionGetter.total_weight\">\n<code class=\"sig-name descname\">total_weight</code><a class=\"headerlink\" href=\"#dipy.direction.EuDXDirectionGetter.total_weight\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"intemporarydirectory\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.InTemporaryDirectory\" title=\"dipy.direction.InTemporaryDirectory\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a><a class=\"headerlink\" href=\"#intemporarydirectory\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.InTemporaryDirectory\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">InTemporaryDirectory</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">suffix=''</em>, <em class=\"sig-param\">prefix='tmp'</em>, <em class=\"sig-param\">dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.InTemporaryDirectory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">nibabel.tmpdirs.TemporaryDirectory</span></code></p>\n<p>Create, return, and change directory to a temporary directory</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_cwd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"n\">InTemporaryDirectory</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tmpdir</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wt&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;some text&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">my_cwd</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 52%\" />\n<col style=\"width: 48%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>cleanup</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.InTemporaryDirectory.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">suffix=''</em>, <em class=\"sig-param\">prefix='tmp'</em>, <em class=\"sig-param\">dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.InTemporaryDirectory.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peaksandmetrics\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.PeaksAndMetrics\" title=\"dipy.direction.PeaksAndMetrics\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a><a class=\"headerlink\" href=\"#peaksandmetrics\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.PeaksAndMetrics\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">PeaksAndMetrics</code><a class=\"headerlink\" href=\"#dipy.direction.PeaksAndMetrics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.reconst/#dipy.reconst.eudx_direction_getter.EuDXDirectionGetter\" title=\"dipy.reconst.eudx_direction_getter.EuDXDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.reconst.eudx_direction_getter.EuDXDirectionGetter</span></code></a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>ang_thr</strong></dt><dd></dd>\n<dt><strong>qa_thr</strong></dt><dd></dd>\n<dt><strong>total_weight</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>The best starting directions for fiber tracking from point</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.PeaksAndMetrics.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.PeaksAndMetrics.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"probabilisticdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.ProbabilisticDirectionGetter\" title=\"dipy.direction.ProbabilisticDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#probabilisticdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.ProbabilisticDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">ProbabilisticDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.ProbabilisticDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter</span></code></a></p>\n<p>Randomly samples direction of a sphere based on probability mass\nfunction (pmf).</p>\n<p>The main constructors for this class are current from_pmf and from_shcoeff.\nThe pmf gives the probability that each direction on the sphere should be\nchosen as the next direction. To get the true pmf from the \u201craw pmf\u201d\ndirections more than <code class=\"docutils literal notranslate\"><span class=\"pre\">max_angle</span></code> degrees from the incoming direction are\nset to 0 and the result is normalized.</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.ProbabilisticDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.ProbabilisticDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Direction getter from a pmf generator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>pmf_gen</strong><span class=\"classifier\">PmfGen</span></dt><dd><p>Used to get probability mass function for selecting tracking\ndirections.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float, [0, 90]</span></dt><dd><p>The maximum allowed angle between incoming direction and new\ndirection.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The set of directions to be used for tracking.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float [0., 1.]</span></dt><dd><p>Used to remove direction from the probability mass function for\nselecting the tracking direction.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.direction.peaks.peak_directions</span></code></a></dt><dd></dd>\n</dl>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.Sphere\" title=\"dipy.direction.Sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a><a class=\"headerlink\" href=\"#sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.Sphere\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">Sphere</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">x=None</em>, <em class=\"sig-param\">y=None</em>, <em class=\"sig-param\">z=None</em>, <em class=\"sig-param\">theta=None</em>, <em class=\"sig-param\">phi=None</em>, <em class=\"sig-param\">xyz=None</em>, <em class=\"sig-param\">faces=None</em>, <em class=\"sig-param\">edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x, y, z</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>theta, phi</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt><strong>xyz</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>faces</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt><strong>edges</strong><span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Attributes</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>x</strong></dt><dd></dd>\n<dt><strong>y</strong></dt><dd></dd>\n<dt><strong>z</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.Sphere.find_closest\" title=\"dipy.direction.Sphere.find_closest\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">find_closest</span></code></a>(xyz)</p></td>\n<td><p>Find the index of the vertex in the Sphere closest to the input vector</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.Sphere.subdivide\" title=\"dipy.direction.Sphere.subdivide\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">subdivide</span></code></a>([n])</p></td>\n<td><p>Subdivides each face of the sphere into four new faces.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 55%\" />\n<col style=\"width: 45%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>edges</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>faces</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><p><strong>vertices</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">x=None</em>, <em class=\"sig-param\">y=None</em>, <em class=\"sig-param\">z=None</em>, <em class=\"sig-param\">theta=None</em>, <em class=\"sig-param\">phi=None</em>, <em class=\"sig-param\">xyz=None</em>, <em class=\"sig-param\">faces=None</em>, <em class=\"sig-param\">edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.edges\">\n<code class=\"sig-name descname\">edges</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.faces\">\n<code class=\"sig-name descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.find_closest\">\n<code class=\"sig-name descname\">find_closest</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>xyz</strong><span class=\"classifier\">array-like, 3 elements</span></dt><dd><p>A unit vector</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>idx</strong><span class=\"classifier\">int</span></dt><dd><p>The index into the Sphere.vertices array that gives the closest\nvertex (in angle).</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.subdivide\">\n<code class=\"sig-name descname\">subdivide</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subdivides each face of the sphere into four new faces.</p>\n<p>New vertices are created at a, b, and c. Then each face [x, y, z] is\ndivided into faces [x, a, c], [y, a, b], [z, b, c], and [a, b, c].</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>      <span class=\"n\">y</span>\n      <span class=\"o\">/</span>\\\n     <span class=\"o\">/</span>  \\\n   <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"n\">b</span>\n   <span class=\"o\">/</span>\\    <span class=\"o\">/</span>\\\n  <span class=\"o\">/</span>  \\  <span class=\"o\">/</span>  \\\n <span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"o\">/</span><span class=\"n\">____</span>\\\n<span class=\"n\">x</span>      <span class=\"n\">c</span>     <span class=\"n\">z</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>n</strong><span class=\"classifier\">int, optional</span></dt><dd><p>The number of subdivisions to preform.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>new_sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The subdivided sphere.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.vertices\">\n<code class=\"sig-name descname\">vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Sphere.vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.x\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">x</code><a class=\"headerlink\" href=\"#dipy.direction.Sphere.x\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.y\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">y</code><a class=\"headerlink\" href=\"#dipy.direction.Sphere.y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.Sphere.z\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">z</code><a class=\"headerlink\" href=\"#dipy.direction.Sphere.z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"repeat\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.repeat\" title=\"dipy.direction.repeat\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a><a class=\"headerlink\" href=\"#repeat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.repeat\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">repeat</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">object</em><span class=\"optional\">[</span>, <em class=\"sig-param\">times</em><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; create an iterator which returns the object<a class=\"headerlink\" href=\"#dipy.direction.repeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>for the specified number of times.  If not specified, returns the object\nendlessly.</p>\n<dl class=\"method\">\n<dt id=\"dipy.direction.repeat.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.repeat.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pool\">\n<h3>Pool<a class=\"headerlink\" href=\"#pool\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.Pool\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">Pool</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">processes=None</em>, <em class=\"sig-param\">initializer=None</em>, <em class=\"sig-param\">initargs=()</em>, <em class=\"sig-param\">maxtasksperchild=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.Pool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a process pool object</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"deprecated-params\">\n<h3>deprecated_params<a class=\"headerlink\" href=\"#deprecated-params\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.deprecated_params\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">deprecated_params</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">old_name</em>, <em class=\"sig-param\">new_name=None</em>, <em class=\"sig-param\">since=''</em>, <em class=\"sig-param\">until=''</em>, <em class=\"sig-param\">version_comparator=&lt;function cmp_pkg_version&gt;</em>, <em class=\"sig-param\">arg_in_kwargs=False</em>, <em class=\"sig-param\">warn_class=&lt;class 'dipy.utils.deprecator.ArgsDeprecationWarning'&gt;</em>, <em class=\"sig-param\">error_class=&lt;class 'dipy.utils.deprecator.ExpiredDeprecationError'&gt;</em>, <em class=\"sig-param\">alternative=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.deprecated_params\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Deprecate a <em>renamed</em> or <em>removed</em> function argument.</p>\n<p>The decorator assumes that the argument with the <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> was removed\nfrom the function signature and the <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> replaced it at the\n<strong>same position</strong> in the signature.  If the <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> argument is\ngiven when calling the decorated function the decorator will catch it and\nissue a deprecation warning and pass it on as <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> argument.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>old_name</strong><span class=\"classifier\">str or list/tuple thereof</span></dt><dd><p>The old name of the argument.</p>\n</dd>\n<dt><strong>new_name</strong><span class=\"classifier\">str or list/tuple thereof or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, optional</span></dt><dd><p>The new name of the argument. Set this to <cite>None</cite> to remove the\nargument <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> instead of renaming it.</p>\n</dd>\n<dt><strong>since</strong><span class=\"classifier\">str or number or list/tuple thereof, optional</span></dt><dd><p>The release at which the old argument became deprecated.</p>\n</dd>\n<dt><strong>until</strong><span class=\"classifier\">str or number or list/tuple thereof, optional</span></dt><dd><p>Last released version at which this function will still raise a\ndeprecation warning.  Versions higher than this will raise an\nerror.</p>\n</dd>\n<dt><strong>version_comparator</strong><span class=\"classifier\">callable</span></dt><dd><p>Callable accepting string as argument, and return 1 if string\nrepresents a higher version than encoded in the <code class=\"docutils literal notranslate\"><span class=\"pre\">version_comparator</span></code>,\n0 if the version is equal, and -1 if the version is lower. For example,\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">version_comparator</span></code> may compare the input version string to the\ncurrent package version string.</p>\n</dd>\n<dt><strong>arg_in_kwargs</strong><span class=\"classifier\">bool or list/tuple thereof, optional</span></dt><dd><p>If the argument is not a named argument (for example it\nwas meant to be consumed by <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code>) set this to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.  Otherwise the decorator will throw an Exception\nif the <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> cannot be found in the signature of\nthe decorated function.\nDefault is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt><strong>warn_class</strong><span class=\"classifier\">warning, optional</span></dt><dd><p>Warning to be issued.</p>\n</dd>\n<dt><strong>error_class</strong><span class=\"classifier\">Exception, optional</span></dt><dd><p>Error to be issued</p>\n</dd>\n<dt><strong>alternative</strong><span class=\"classifier\">str, optional</span></dt><dd><p>An alternative function or class name that the user may use in\nplace of the deprecated object if <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> is None. The deprecation\nwarning will tell the user about this alternative if provided.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt>TypeError</dt><dd><p>If the new argument name cannot be found in the function\nsignature and arg_in_kwargs was False or if it is used to\ndeprecate the name of the <code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code>-, <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code>-like arguments.\nAt runtime such an Error is raised if both the new_name\nand old_name were specified when calling the function and\n\u201crelax=False\u201d.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>This function is based on the Astropy (major modification).\n<a class=\"reference external\" href=\"https://github.com/astropy/astropy\">https://github.com/astropy/astropy</a>. See COPYING file distributed along with\nthe astropy package for the copyright and license terms.</p>\n<p class=\"rubric\">Examples</p>\n<p>The deprecation warnings are not shown in the following examples.\nTo deprecate a positional or keyword argument::\n&gt;&gt;&gt; from dipy.utils.deprecator import deprecated_params\n&gt;&gt;&gt; &#64;deprecated_params(\u2018sig\u2019, \u2018sigma\u2019, \u20180.3\u2019)\n\u2026 def test(sigma):\n\u2026     return sigma\n&gt;&gt;&gt; test(2)\n2\n&gt;&gt;&gt; test(sigma=2)\n2\n&gt;&gt;&gt; test(sig=2)  # doctest: +SKIP\n2</p>\n<p>It is also possible to replace multiple arguments. The <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">since</span></code> have to be <cite>tuple</cite> or <cite>list</cite> and contain the\nsame number of entries::\n&gt;&gt;&gt; &#64;deprecated_params([\u2018a\u2019, \u2018b\u2019], [\u2018alpha\u2019, \u2018beta\u2019],\n\u2026                    [\u20180.2\u2019, 0.4])\n\u2026 def test(alpha, beta):\n\u2026     return alpha, beta\n&gt;&gt;&gt; test(a=2, b=3)  # doctest: +SKIP\n(2, 3)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"determine-num-processes\">\n<h3>determine_num_processes<a class=\"headerlink\" href=\"#determine-num-processes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.determine_num_processes\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">determine_num_processes</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">num_processes</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.determine_num_processes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determine the effective number of processes for parallelization.</p>\n<ul class=\"simple\">\n<li><p>For <cite>num_processes = None`</cite> return the maximum number of cores retrieved</p></li>\n</ul>\n<p>by cpu_count().</p>\n<ul class=\"simple\">\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">0</span></code>, return this value.</p></li>\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">0</span></code>, return the maximal number of cores minus</p></li>\n</ul>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">|num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1|</span></code>. In particular <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">=</span> <span class=\"pre\">-1</span></code> will use as\nmany cores as possible.</p>\n<ul class=\"simple\">\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">=</span> <span class=\"pre\">0</span></code> a ValueError is raised.</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>num_processes</strong><span class=\"classifier\">int or None</span></dt><dd><p>Desired number of processes to be used.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gfa\">\n<h3>gfa<a class=\"headerlink\" href=\"#gfa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.gfa\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">gfa</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">samples</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The general fractional anisotropy of a function evaluated\non the unit sphere</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>samples</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Values of data on the unit sphere.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>gfa</strong><span class=\"classifier\">ndarray</span></dt><dd><p>GFA evaluated in each entry of the array, along the last dimension.\nAn <cite>np.nan</cite> is returned for coordinates that contain all-zeros in\n<cite>samples</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>The GFA is defined as <a class=\"reference internal\" href=\"#rbd5d437e381d-1\" id=\"id1\">[1]</a></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\\<span class=\"n\">sqrt</span><span class=\"p\">{</span>\\<span class=\"n\">frac</span><span class=\"p\">{</span><span class=\"n\">n</span> \\<span class=\"n\">sum_i</span><span class=\"p\">{(</span>\\<span class=\"n\">Psi_i</span> <span class=\"o\">-</span> <span class=\"o\">&lt;</span>\\<span class=\"n\">Psi</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">}}{(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> \\<span class=\"nb\">sum</span><span class=\"p\">{</span>\\<span class=\"n\">Psi_i</span> <span class=\"o\">^</span> <span class=\"mi\">2</span><span class=\"p\">}}}</span>\n</pre></div>\n</div>\n<p>Where <span class=\"math notranslate nohighlight\">\\(\\Psi\\)</span> is an orientation distribution function sampled discretely on\nthe unit sphere and angle brackets denote average over the samples on the\nsphere.</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"rbd5d437e381d-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">1</a></span></dt>\n<dd><p>Quality assessment of High Angular Resolution Diffusion Imaging\ndata using bootstrap on Q-ball reconstruction. J. Cohen Adad, M.\nDescoteaux, L.L. Wald. JMRI 33: 1194-1208.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"local-maxima\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#local-maxima\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.local_maxima\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">array, 1d, dtype=double</span></dt><dd><p>The function evaluated on a set of discrete points.</p>\n</dd>\n<dt><strong>edges</strong><span class=\"classifier\">array (N, 2)</span></dt><dd><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>peak_values</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</dd>\n<dt><strong>peak_indices</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.core.sphere</span></code></a></dt><dd></dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>A point is a local maximum if it is &gt; at least one neighbor and &gt;= all\nneighbors. If no points meet the above criteria, 1 maximum is returned such\nthat <cite>odf[maximum] == max(odf)</cite>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ndindex\">\n<h3>ndindex<a class=\"headerlink\" href=\"#ndindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.ndindex\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">ndindex</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>shape</strong><span class=\"classifier\">tuple of ints</span></dt><dd><p>The dimensions of the array.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peak-directions\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#peak-directions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peak_directions\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">peak_directions</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">odf</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold=0.5</em>, <em class=\"sig-param\">min_separation_angle=25</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks.</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">1d ndarray</span></dt><dd><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Only peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N vertices for sphere, one for each peak</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak values</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak indices of the directions on the sphere</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peak-directions-nl\">\n<h3>peak_directions_nl<a class=\"headerlink\" href=\"#peak-directions-nl\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peak_directions_nl\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">peak_directions_nl</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sphere_eval</em>, <em class=\"sig-param\">relative_peak_threshold=0.25</em>, <em class=\"sig-param\">min_separation_angle=25</em>, <em class=\"sig-param\">sphere=&lt;dipy.core.sphere.HemiSphere object&gt;</em>, <em class=\"sig-param\">xtol=1e-07</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peak_directions_nl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Non Linear Direction Finder.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sphere_eval</strong><span class=\"classifier\">callable</span></dt><dd><p>A function which can be evaluated on a sphere.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>A discrete Sphere. The points on the sphere will be used for initial\nestimate of maximums.</p>\n</dd>\n<dt><strong>xtol</strong><span class=\"classifier\">float</span></dt><dd><p>Relative tolerance for optimization.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">array (N, 3)</span></dt><dd><p>Points on the sphere corresponding to N local maxima on the sphere.</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">array (N,)</span></dt><dd><p>Value of sphere_eval at each point on directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peaks-from-model\">\n<h3>peaks_from_model<a class=\"headerlink\" href=\"#peaks-from-model\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks_from_model\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">peaks_from_model</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">model</em>, <em class=\"sig-param\">data</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold</em>, <em class=\"sig-param\">min_separation_angle</em>, <em class=\"sig-param\">mask=None</em>, <em class=\"sig-param\">return_odf=False</em>, <em class=\"sig-param\">return_sh=True</em>, <em class=\"sig-param\">gfa_thr=0</em>, <em class=\"sig-param\">normalize_peaks=False</em>, <em class=\"sig-param\">sh_order=8</em>, <em class=\"sig-param\">sh_basis_type=None</em>, <em class=\"sig-param\">npeaks=5</em>, <em class=\"sig-param\">B=None</em>, <em class=\"sig-param\">invB=None</em>, <em class=\"sig-param\">parallel=False</em>, <em class=\"sig-param\">num_processes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks_from_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the model to data and computes peaks and metrics</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>model</strong><span class=\"classifier\">a model instance</span></dt><dd><p><cite>model</cite> will be used to fit the data.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90] The minimum distance between</span></dt><dd><p>directions. If two peaks are too close only the larger of the two is\nreturned.</p>\n</dd>\n<dt><strong>mask</strong><span class=\"classifier\">array, optional</span></dt><dd><p>If <cite>mask</cite> is provided, voxels that are False in <cite>mask</cite> are skipped and\nno peaks are returned.</p>\n</dd>\n<dt><strong>return_odf</strong><span class=\"classifier\">bool</span></dt><dd><p>If True, the odfs are returned.</p>\n</dd>\n<dt><strong>return_sh</strong><span class=\"classifier\">bool</span></dt><dd><p>If True, the odf as spherical harmonics coefficients is returned</p>\n</dd>\n<dt><strong>gfa_thr</strong><span class=\"classifier\">float</span></dt><dd><p>Voxels with gfa less than <cite>gfa_thr</cite> are skipped, no peaks are returned.</p>\n</dd>\n<dt><strong>normalize_peaks</strong><span class=\"classifier\">bool</span></dt><dd><p>If true, all peak values are calculated relative to <cite>max(odf)</cite>.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 8).</p>\n</dd>\n<dt><strong>sh_basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 <a class=\"reference internal\" href=\"#r42d7cfcc4bc3-2\" id=\"id2\">[2]</a> basis, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#r42d7cfcc4bc3-1\" id=\"id3\">[1]</a> basis\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>sh_smooth</strong><span class=\"classifier\">float, optional</span></dt><dd><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</dd>\n<dt><strong>npeaks</strong><span class=\"classifier\">int</span></dt><dd><p>Maximum number of peaks found (default 5 peaks).</p>\n</dd>\n<dt><strong>B</strong><span class=\"classifier\">ndarray, optional</span></dt><dd><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</dd>\n<dt><strong>invB</strong><span class=\"classifier\">ndarray, optional</span></dt><dd><p>Inverse of B.</p>\n</dd>\n<dt><strong>parallel: bool</strong></dt><dd><p>If True, use multiprocessing to compute peaks and metric\n(default False). Temporary files are saved in the default temporary\ndirectory of the system. It can be changed using <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">tempfile</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">tempfile.tempdir</span> <span class=\"pre\">=</span> <span class=\"pre\">'/path/to/tempdir'</span></code>.</p>\n</dd>\n<dt><strong>num_processes: int, optional</strong></dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number of\ncores minus <a href=\"#id46\"><span class=\"problematic\" id=\"id47\">|num_processes + 1|</span></a> is used (enter -1 to use as many cores\nas possible). 0 raises an error.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>pam</strong><span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>An object with <code class=\"docutils literal notranslate\"><span class=\"pre\">gfa</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_values</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">peak_indices</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">odf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">shm_coeffs</span></code> as attributes</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r42d7cfcc4bc3-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id3\">1</a></span></dt>\n<dd><p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</dd>\n<dt class=\"label\" id=\"r42d7cfcc4bc3-2\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id2\">2</a></span></dt>\n<dd><p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"remove-similar-vertices\">\n<h3>remove_similar_vertices<a class=\"headerlink\" href=\"#remove-similar-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.remove_similar_vertices\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">remove_similar_vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.remove_similar_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p>\n<p>Returns vertices that are at least theta degrees from any other vertex.\nVertex v and -v are considered the same so if v and -v are both in\n<cite>vertices</cite> only one is kept. Also if v and w are both in vertices, w must\nbe separated by theta degrees from both v and -v to be unique.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>vertices</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N unit vectors.</p>\n</dd>\n<dt><strong>theta</strong><span class=\"classifier\">float</span></dt><dd><p>The minimum separation between vertices in degrees.</p>\n</dd>\n<dt><strong>return_mapping</strong><span class=\"classifier\">{False, True}, optional</span></dt><dd><p>If True, return <cite>mapping</cite> as well as <cite>vertices</cite> and maybe <cite>indices</cite>\n(see below).</p>\n</dd>\n<dt><strong>return_indices</strong><span class=\"classifier\">{False, True}, optional</span></dt><dd><p>If True, return <cite>indices</cite> as well as <cite>vertices</cite> and maybe <cite>mapping</cite>\n(see below).</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>unique_vertices</strong><span class=\"classifier\">(M, 3) ndarray</span></dt><dd><p>Vertices sufficiently separated from one another.</p>\n</dd>\n<dt><strong>mapping</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>For each element <code class=\"docutils literal notranslate\"><span class=\"pre\">vertices[i]</span></code> (<span class=\"math notranslate nohighlight\">\\(i \\in 0..N-1\\)</span>), the index <span class=\"math notranslate nohighlight\">\\(j\\)</span> to a\nvertex in <cite>unique_vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">vertices[i]</span></code>.  Only returned if <cite>return_mapping</cite> is True.</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p><cite>indices</cite> gives the reverse of <cite>mapping</cite>.  For each element\n<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_vertices[j]</span></code> (<span class=\"math notranslate nohighlight\">\\(j \\in 0..M-1\\)</span>), the index <span class=\"math notranslate nohighlight\">\\(i\\)</span> to a vertex in\n<cite>vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_vertices[j]</span></code>.  If there is more than one element of\n<cite>vertices</cite> that is less than theta degrees from <cite>unique_vertices[j]</cite>,\nreturn the first (lowest index) matching value.  Only return if\n<cite>return_indices</cite> is True.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reshape-peaks-for-visualization\">\n<h3>reshape_peaks_for_visualization<a class=\"headerlink\" href=\"#reshape-peaks-for-visualization\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.reshape_peaks_for_visualization\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">reshape_peaks_for_visualization</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">peaks</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.reshape_peaks_for_visualization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reshape peaks for visualization.</p>\n<p>Reshape and convert to float32 a set of peaks for visualisation with mrtrix\nor the fibernavigator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>peaks: nd array (\u2026, N, 3) or PeaksAndMetrics object</strong></dt><dd><p>The peaks to be reshaped and converted to float32.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>peaks</strong><span class=\"classifier\">nd array (\u2026, 3*N)</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"search-descending\">\n<h3>search_descending<a class=\"headerlink\" href=\"#search-descending\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.search_descending\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">search_descending</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.search_descending\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></p>\n<p>Call <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>. Return value <cite>i</cite> will be the\nsmallest index in the descending array <cite>a</cite> such that <code class=\"docutils literal notranslate\"><span class=\"pre\">a[i]</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">T</span></code>.\nEquivalently, <cite>i</cite> will be the largest index such that <code class=\"docutils literal notranslate\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.\nIf all values in <cite>a</cite> are &gt;= T, return the length of array <cite>a</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>a</strong><span class=\"classifier\">ndarray, ndim=1, c-contiguous</span></dt><dd><p>Array to be searched.  We assume <cite>a</cite> is in descending order.</p>\n</dd>\n<dt><strong>relative_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Applied threshold will be <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>i</strong><span class=\"classifier\">np.intp</span></dt><dd><p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code> then <cite>i</cite> will be the largest index\nsuch that <code class=\"docutils literal notranslate\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.  If all values in <cite>a</cite> are &gt;= T then\n<cite>i</cite> will be <cite>len(a)</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([ 10.,   9.,   8.,   7.,   6.,   5.,   4.,   3.,   2.,   1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"go\">6</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n<span class=\"go\">array([False, False, False, False, False, False,  True,  True,  True,  True], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">10</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sh-to-sf-matrix\">\n<h3>sh_to_sf_matrix<a class=\"headerlink\" href=\"#sh-to-sf-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.sh_to_sf_matrix\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">sh_to_sf_matrix</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">sh_order=4</em>, <em class=\"sig-param\">basis_type=None</em>, <em class=\"sig-param\">full_basis=False</em>, <em class=\"sig-param\">legacy=True</em>, <em class=\"sig-param\">return_inv=True</em>, <em class=\"sig-param\">smooth=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.sh_to_sf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Matrix that transforms Spherical harmonics (SH) to spherical\nfunction (SF).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The points on which to sample the spherical function.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients for a symmetric\nbasis and <code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> coefficients for a full\nSH basis.</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}, optional</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 [R0296267dba6e-2]_[R0296267dba6e-3]_ basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#r0296267dba6e-1\" id=\"id6\">[1]</a> basis,\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>If True, uses a SH basis containing even and odd order SH functions.\nElse, uses a SH basis consisting only of even order SH functions.</p>\n</dd>\n<dt><strong>legacy: bool, optional</strong></dt><dd><p>True to use a legacy basis definition for backward compatibility\nwith previous <code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> implementations.</p>\n</dd>\n<dt><strong>return_inv</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>If True then the inverse of the matrix is also returned.</p>\n</dd>\n<dt><strong>smooth</strong><span class=\"classifier\">float, optional</span></dt><dd><p>Lambda-regularization in the SH fit.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>B</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</dd>\n<dt><strong>invB</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Inverse of B.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r0296267dba6e-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id6\">1</a></span></dt>\n<dd><p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</dd>\n<dt class=\"label\" id=\"r0296267dba6e-2\"><span class=\"brackets\">2</span></dt>\n<dd><p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</dd>\n<dt class=\"label\" id=\"r0296267dba6e-3\"><span class=\"brackets\">3</span></dt>\n<dd><p>Tournier J-D, Smith R, Raffelt D, Tabbara R, Dhollander T,\nPietsch M, et al. MRtrix3: A fast, flexible and open software\nframework for medical image processing and visualisation.\nNeuroImage. 2019 Nov 15;202:116-137.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"warn\">\n<h3>warn<a class=\"headerlink\" href=\"#warn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.warn\">\n<code class=\"sig-prename descclassname\">dipy.direction.</code><code class=\"sig-name descname\">warn</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">/</em>, <em class=\"sig-param\">message</em>, <em class=\"sig-param\">category=None</em>, <em class=\"sig-param\">stacklevel=1</em>, <em class=\"sig-param\">source=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id10\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter\" title=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.bootstrap_direction_getter.</code><code class=\"sig-name descname\">BootDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data\" title=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_data</span></code></a></p></td>\n<td><p>Create a BootDirectionGetter using HARDI data and an ODF type model</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data\">\n<code class=\"sig-name descname\">from_data</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a BootDirectionGetter using HARDI data and an ODF type model</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>data</strong><span class=\"classifier\">ndarray, float, (\u2026, N)</span></dt><dd><p>Diffusion MRI data with N volumes.</p>\n</dd>\n<dt><strong>model</strong><span class=\"classifier\">dipy diffusion model</span></dt><dd><p>Must provide fit with odf method.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float (0, 90)</span></dt><dd><p>Maximum angle between tract segments. This angle can be more\ngenerous (larger) than values typically used with probabilistic\ndirection getters.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The sphere used to sample the diffusion ODF.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">even int</span></dt><dd><p>The order of the SH \u201cmodel\u201d used to estimate bootstrap residuals.</p>\n</dd>\n<dt><strong>max_attempts</strong><span class=\"classifier\">int</span></dt><dd><p>Max number of bootstrap samples used to find tracking direction\nbefore giving up.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Threshold for ODF functions.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Relative threshold for excluding ODF peaks.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Angular threshold for excluding ODF peaks.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bootpmfgen\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.bootstrap_direction_getter.BootPmfGen\" title=\"dipy.direction.bootstrap_direction_getter.BootPmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a><a class=\"headerlink\" href=\"#bootpmfgen\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootPmfGen\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.bootstrap_direction_getter.</code><code class=\"sig-name descname\">BootPmfGen</code><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootPmfGen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.pmf.PmfGen</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 66%\" />\n<col style=\"width: 34%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_pmf</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>get_pmf_no_boot</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootPmfGen.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootPmfGen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf_no_boot\">\n<code class=\"sig-name descname\">get_pmf_no_boot</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf_no_boot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"basedirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#basedirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">BaseDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.BaseDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"basepmfdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BasePmfDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#basepmfdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">BasePmfDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.direction_getter.DirectionGetter\" title=\"dipy.tracking.direction_getter.DirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.tracking.direction_getter.DirectionGetter</span></code></a></p>\n<p>A base class for dynamic direction getters</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></a></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction\">\n<code class=\"sig-name descname\">initial_direction</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns best directions at seed location to start tracking.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>point</strong><span class=\"classifier\">ndarray, shape (3,)</span></dt><dd><p>The point in an image at which to lookup tracking directions.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">ndarray, shape (N, 3)</span></dt><dd><p>Possible tracking directions from point. <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code> may be 0, all\ndirections should be unique.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id11\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">ClosestPeakDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter</span></code></a></p>\n<p>A direction getter that returns the closest odf peak to previous tracking\ndirection.</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pmfgendirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PmfGenDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#pmfgendirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">PmfGenDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter</span></code></a></p>\n<p>A base class for direction getter using a pmf</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></a></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></a></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf\">\n<code class=\"sig-name descname\">from_pmf</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructor for making a DirectionGetter from an array of Pmfs</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>pmf</strong><span class=\"classifier\">array, 4d</span></dt><dd><p>The pmf to be used for tracking at each voxel.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float, [0, 90]</span></dt><dd><p>The maximum allowed angle between incoming direction and new\ndirection.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The set of directions to be used for tracking.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float [0., 1.]</span></dt><dd><p>Used to remove direction from the probability mass function for\nselecting the tracking direction.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.direction.peaks.peak_directions</span></code></a></dt><dd></dd>\n</dl>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff\">\n<code class=\"sig-name descname\">from_shcoeff</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Probabilistic direction getter from a distribution of directions\non the sphere</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>shcoeff</strong><span class=\"classifier\">array</span></dt><dd><p>The distribution of tracking directions at each voxel represented\nas a function on the sphere using the real spherical harmonic\nbasis. For example the FOD of the Constrained Spherical\nDeconvolution model can be used this way. This distribution will\nbe discretized using <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code> and tracking directions will be\nchosen from the vertices of <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code> based on the distribution.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float, [0, 90]</span></dt><dd><p>The maximum allowed angle between incoming direction and new\ndirection.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The set of directions to be used for tracking.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float [0., 1.]</span></dt><dd><p>Used to remove direction from the probability mass function for\nselecting the tracking direction.</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">name of basis</span></dt><dd><p>The basis that <code class=\"docutils literal notranslate\"><span class=\"pre\">shcoeff</span></code> are associated with.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dipy.reconst.shm.real_sh_descoteaux</span></code> is used by default.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.direction.peaks.peak_directions</span></code></a></dt><dd></dd>\n</dl>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"order-from-ncoef\">\n<h3>order_from_ncoef<a class=\"headerlink\" href=\"#order-from-ncoef\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.order_from_ncoef\">\n<code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">order_from_ncoef</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">ncoef</em>, <em class=\"sig-param\">full_basis=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.order_from_ncoef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a number <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> of coefficients, calculate back the <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>ncoef: int</strong></dt><dd><p>number of coefficients</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>True when coefficients are for a full SH basis.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt>sh_order: int</dt><dd><p>maximum order of SH basis</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id12\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.peak_directions\">\n<code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">peak_directions</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">odf</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold=0.5</em>, <em class=\"sig-param\">min_separation_angle=25</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks.</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">1d ndarray</span></dt><dd><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Only peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N vertices for sphere, one for each peak</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak values</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak indices of the directions on the sphere</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id13\">\n<h3>warn<a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.closest_peak_direction_getter.warn\">\n<code class=\"sig-prename descclassname\">dipy.direction.closest_peak_direction_getter.</code><code class=\"sig-name descname\">warn</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">/</em>, <em class=\"sig-param\">message</em>, <em class=\"sig-param\">category=None</em>, <em class=\"sig-param\">stacklevel=1</em>, <em class=\"sig-param\">source=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.closest_peak_direction_getter.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id14\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.EuDXDirectionGetter\" title=\"dipy.direction.peaks.EuDXDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">EuDXDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.direction_getter.DirectionGetter\" title=\"dipy.tracking.direction_getter.DirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.tracking.direction_getter.DirectionGetter</span></code></a></p>\n<p>Deterministic Direction Getter based on peak directions.</p>\n<p>This class contains the cython portion of the code for PeaksAndMetrics and\nis not meant to be used on its own.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>ang_thr</strong></dt><dd></dd>\n<dt><strong>qa_thr</strong></dt><dd></dd>\n<dt><strong>total_weight</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.initial_direction\" title=\"dipy.direction.peaks.EuDXDirectionGetter.initial_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></a></p></td>\n<td><p>The best starting directions for fiber tracking from point</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter.ang_thr\">\n<code class=\"sig-name descname\">ang_thr</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.ang_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter.initial_direction\">\n<code class=\"sig-name descname\">initial_direction</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.initial_direction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The best starting directions for fiber tracking from point</p>\n<p>All the valid peaks in the voxel closest to point are returned as\ninitial directions.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter.qa_thr\">\n<code class=\"sig-name descname\">qa_thr</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.qa_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.direction.peaks.EuDXDirectionGetter.total_weight\">\n<code class=\"sig-name descname\">total_weight</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.EuDXDirectionGetter.total_weight\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id15\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.InTemporaryDirectory\" title=\"dipy.direction.peaks.InTemporaryDirectory\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a><a class=\"headerlink\" href=\"#id15\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.peaks.InTemporaryDirectory\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">InTemporaryDirectory</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">suffix=''</em>, <em class=\"sig-param\">prefix='tmp'</em>, <em class=\"sig-param\">dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.InTemporaryDirectory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">nibabel.tmpdirs.TemporaryDirectory</span></code></p>\n<p>Create, return, and change directory to a temporary directory</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_cwd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"n\">InTemporaryDirectory</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tmpdir</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wt&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;some text&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">my_cwd</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 52%\" />\n<col style=\"width: 48%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>cleanup</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.InTemporaryDirectory.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">suffix=''</em>, <em class=\"sig-param\">prefix='tmp'</em>, <em class=\"sig-param\">dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.InTemporaryDirectory.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id16\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"dipy.direction.peaks.PeaksAndMetrics\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a><a class=\"headerlink\" href=\"#id16\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.peaks.PeaksAndMetrics\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">PeaksAndMetrics</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.PeaksAndMetrics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.reconst/#dipy.reconst.eudx_direction_getter.EuDXDirectionGetter\" title=\"dipy.reconst.eudx_direction_getter.EuDXDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.reconst.eudx_direction_getter.EuDXDirectionGetter</span></code></a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>ang_thr</strong></dt><dd></dd>\n<dt><strong>qa_thr</strong></dt><dd></dd>\n<dt><strong>total_weight</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>The best starting directions for fiber tracking from point</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.PeaksAndMetrics.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.PeaksAndMetrics.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id17\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.Sphere\" title=\"dipy.direction.peaks.Sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a><a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.peaks.Sphere\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">Sphere</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">x=None</em>, <em class=\"sig-param\">y=None</em>, <em class=\"sig-param\">z=None</em>, <em class=\"sig-param\">theta=None</em>, <em class=\"sig-param\">phi=None</em>, <em class=\"sig-param\">xyz=None</em>, <em class=\"sig-param\">faces=None</em>, <em class=\"sig-param\">edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x, y, z</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>theta, phi</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt><strong>xyz</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>faces</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt><strong>edges</strong><span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Attributes</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>x</strong></dt><dd></dd>\n<dt><strong>y</strong></dt><dd></dd>\n<dt><strong>z</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.Sphere.find_closest\" title=\"dipy.direction.peaks.Sphere.find_closest\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">find_closest</span></code></a>(xyz)</p></td>\n<td><p>Find the index of the vertex in the Sphere closest to the input vector</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.direction.peaks.Sphere.subdivide\" title=\"dipy.direction.peaks.Sphere.subdivide\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">subdivide</span></code></a>([n])</p></td>\n<td><p>Subdivides each face of the sphere into four new faces.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 55%\" />\n<col style=\"width: 45%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>edges</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>faces</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><p><strong>vertices</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">x=None</em>, <em class=\"sig-param\">y=None</em>, <em class=\"sig-param\">z=None</em>, <em class=\"sig-param\">theta=None</em>, <em class=\"sig-param\">phi=None</em>, <em class=\"sig-param\">xyz=None</em>, <em class=\"sig-param\">faces=None</em>, <em class=\"sig-param\">edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.edges\">\n<code class=\"sig-name descname\">edges</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.faces\">\n<code class=\"sig-name descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.find_closest\">\n<code class=\"sig-name descname\">find_closest</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>xyz</strong><span class=\"classifier\">array-like, 3 elements</span></dt><dd><p>A unit vector</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>idx</strong><span class=\"classifier\">int</span></dt><dd><p>The index into the Sphere.vertices array that gives the closest\nvertex (in angle).</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.subdivide\">\n<code class=\"sig-name descname\">subdivide</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subdivides each face of the sphere into four new faces.</p>\n<p>New vertices are created at a, b, and c. Then each face [x, y, z] is\ndivided into faces [x, a, c], [y, a, b], [z, b, c], and [a, b, c].</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>      <span class=\"n\">y</span>\n      <span class=\"o\">/</span>\\\n     <span class=\"o\">/</span>  \\\n   <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"n\">b</span>\n   <span class=\"o\">/</span>\\    <span class=\"o\">/</span>\\\n  <span class=\"o\">/</span>  \\  <span class=\"o\">/</span>  \\\n <span class=\"o\">/</span><span class=\"n\">____</span>\\<span class=\"o\">/</span><span class=\"n\">____</span>\\\n<span class=\"n\">x</span>      <span class=\"n\">c</span>     <span class=\"n\">z</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>n</strong><span class=\"classifier\">int, optional</span></dt><dd><p>The number of subdivisions to preform.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>new_sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The subdivided sphere.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.vertices\">\n<code class=\"sig-name descname\">vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.x\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">x</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.x\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.y\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">y</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.Sphere.z\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">z</code><a class=\"headerlink\" href=\"#dipy.direction.peaks.Sphere.z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id18\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.peaks.repeat\" title=\"dipy.direction.peaks.repeat\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a><a class=\"headerlink\" href=\"#id18\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.peaks.repeat\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">repeat</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">object</em><span class=\"optional\">[</span>, <em class=\"sig-param\">times</em><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; create an iterator which returns the object<a class=\"headerlink\" href=\"#dipy.direction.peaks.repeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>for the specified number of times.  If not specified, returns the object\nendlessly.</p>\n<dl class=\"method\">\n<dt id=\"dipy.direction.peaks.repeat.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.repeat.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id19\">\n<h3>Pool<a class=\"headerlink\" href=\"#id19\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.Pool\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">Pool</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">processes=None</em>, <em class=\"sig-param\">initializer=None</em>, <em class=\"sig-param\">initargs=()</em>, <em class=\"sig-param\">maxtasksperchild=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.Pool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a process pool object</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id20\">\n<h3>deprecated_params<a class=\"headerlink\" href=\"#id20\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.deprecated_params\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">deprecated_params</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">old_name</em>, <em class=\"sig-param\">new_name=None</em>, <em class=\"sig-param\">since=''</em>, <em class=\"sig-param\">until=''</em>, <em class=\"sig-param\">version_comparator=&lt;function cmp_pkg_version&gt;</em>, <em class=\"sig-param\">arg_in_kwargs=False</em>, <em class=\"sig-param\">warn_class=&lt;class 'dipy.utils.deprecator.ArgsDeprecationWarning'&gt;</em>, <em class=\"sig-param\">error_class=&lt;class 'dipy.utils.deprecator.ExpiredDeprecationError'&gt;</em>, <em class=\"sig-param\">alternative=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.deprecated_params\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Deprecate a <em>renamed</em> or <em>removed</em> function argument.</p>\n<p>The decorator assumes that the argument with the <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> was removed\nfrom the function signature and the <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> replaced it at the\n<strong>same position</strong> in the signature.  If the <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> argument is\ngiven when calling the decorated function the decorator will catch it and\nissue a deprecation warning and pass it on as <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> argument.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>old_name</strong><span class=\"classifier\">str or list/tuple thereof</span></dt><dd><p>The old name of the argument.</p>\n</dd>\n<dt><strong>new_name</strong><span class=\"classifier\">str or list/tuple thereof or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, optional</span></dt><dd><p>The new name of the argument. Set this to <cite>None</cite> to remove the\nargument <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> instead of renaming it.</p>\n</dd>\n<dt><strong>since</strong><span class=\"classifier\">str or number or list/tuple thereof, optional</span></dt><dd><p>The release at which the old argument became deprecated.</p>\n</dd>\n<dt><strong>until</strong><span class=\"classifier\">str or number or list/tuple thereof, optional</span></dt><dd><p>Last released version at which this function will still raise a\ndeprecation warning.  Versions higher than this will raise an\nerror.</p>\n</dd>\n<dt><strong>version_comparator</strong><span class=\"classifier\">callable</span></dt><dd><p>Callable accepting string as argument, and return 1 if string\nrepresents a higher version than encoded in the <code class=\"docutils literal notranslate\"><span class=\"pre\">version_comparator</span></code>,\n0 if the version is equal, and -1 if the version is lower. For example,\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">version_comparator</span></code> may compare the input version string to the\ncurrent package version string.</p>\n</dd>\n<dt><strong>arg_in_kwargs</strong><span class=\"classifier\">bool or list/tuple thereof, optional</span></dt><dd><p>If the argument is not a named argument (for example it\nwas meant to be consumed by <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code>) set this to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.  Otherwise the decorator will throw an Exception\nif the <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> cannot be found in the signature of\nthe decorated function.\nDefault is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt><strong>warn_class</strong><span class=\"classifier\">warning, optional</span></dt><dd><p>Warning to be issued.</p>\n</dd>\n<dt><strong>error_class</strong><span class=\"classifier\">Exception, optional</span></dt><dd><p>Error to be issued</p>\n</dd>\n<dt><strong>alternative</strong><span class=\"classifier\">str, optional</span></dt><dd><p>An alternative function or class name that the user may use in\nplace of the deprecated object if <code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> is None. The deprecation\nwarning will tell the user about this alternative if provided.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt>TypeError</dt><dd><p>If the new argument name cannot be found in the function\nsignature and arg_in_kwargs was False or if it is used to\ndeprecate the name of the <code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code>-, <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code>-like arguments.\nAt runtime such an Error is raised if both the new_name\nand old_name were specified when calling the function and\n\u201crelax=False\u201d.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>This function is based on the Astropy (major modification).\n<a class=\"reference external\" href=\"https://github.com/astropy/astropy\">https://github.com/astropy/astropy</a>. See COPYING file distributed along with\nthe astropy package for the copyright and license terms.</p>\n<p class=\"rubric\">Examples</p>\n<p>The deprecation warnings are not shown in the following examples.\nTo deprecate a positional or keyword argument::\n&gt;&gt;&gt; from dipy.utils.deprecator import deprecated_params\n&gt;&gt;&gt; &#64;deprecated_params(\u2018sig\u2019, \u2018sigma\u2019, \u20180.3\u2019)\n\u2026 def test(sigma):\n\u2026     return sigma\n&gt;&gt;&gt; test(2)\n2\n&gt;&gt;&gt; test(sigma=2)\n2\n&gt;&gt;&gt; test(sig=2)  # doctest: +SKIP\n2</p>\n<p>It is also possible to replace multiple arguments. The <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">new_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">since</span></code> have to be <cite>tuple</cite> or <cite>list</cite> and contain the\nsame number of entries::\n&gt;&gt;&gt; &#64;deprecated_params([\u2018a\u2019, \u2018b\u2019], [\u2018alpha\u2019, \u2018beta\u2019],\n\u2026                    [\u20180.2\u2019, 0.4])\n\u2026 def test(alpha, beta):\n\u2026     return alpha, beta\n&gt;&gt;&gt; test(a=2, b=3)  # doctest: +SKIP\n(2, 3)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id21\">\n<h3>determine_num_processes<a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.determine_num_processes\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">determine_num_processes</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">num_processes</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.determine_num_processes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determine the effective number of processes for parallelization.</p>\n<ul class=\"simple\">\n<li><p>For <cite>num_processes = None`</cite> return the maximum number of cores retrieved</p></li>\n</ul>\n<p>by cpu_count().</p>\n<ul class=\"simple\">\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">0</span></code>, return this value.</p></li>\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">0</span></code>, return the maximal number of cores minus</p></li>\n</ul>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">|num_processes</span> <span class=\"pre\">+</span> <span class=\"pre\">1|</span></code>. In particular <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">=</span> <span class=\"pre\">-1</span></code> will use as\nmany cores as possible.</p>\n<ul class=\"simple\">\n<li><p>For <code class=\"docutils literal notranslate\"><span class=\"pre\">num_processes</span> <span class=\"pre\">=</span> <span class=\"pre\">0</span></code> a ValueError is raised.</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>num_processes</strong><span class=\"classifier\">int or None</span></dt><dd><p>Desired number of processes to be used.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id22\">\n<h3>gfa<a class=\"headerlink\" href=\"#id22\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.gfa\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">gfa</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">samples</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The general fractional anisotropy of a function evaluated\non the unit sphere</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>samples</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Values of data on the unit sphere.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>gfa</strong><span class=\"classifier\">ndarray</span></dt><dd><p>GFA evaluated in each entry of the array, along the last dimension.\nAn <cite>np.nan</cite> is returned for coordinates that contain all-zeros in\n<cite>samples</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>The GFA is defined as <a class=\"reference internal\" href=\"#rd66f29ec64ce-1\" id=\"id23\">[1]</a></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\\<span class=\"n\">sqrt</span><span class=\"p\">{</span>\\<span class=\"n\">frac</span><span class=\"p\">{</span><span class=\"n\">n</span> \\<span class=\"n\">sum_i</span><span class=\"p\">{(</span>\\<span class=\"n\">Psi_i</span> <span class=\"o\">-</span> <span class=\"o\">&lt;</span>\\<span class=\"n\">Psi</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">}}{(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> \\<span class=\"nb\">sum</span><span class=\"p\">{</span>\\<span class=\"n\">Psi_i</span> <span class=\"o\">^</span> <span class=\"mi\">2</span><span class=\"p\">}}}</span>\n</pre></div>\n</div>\n<p>Where <span class=\"math notranslate nohighlight\">\\(\\Psi\\)</span> is an orientation distribution function sampled discretely on\nthe unit sphere and angle brackets denote average over the samples on the\nsphere.</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"rd66f29ec64ce-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id23\">1</a></span></dt>\n<dd><p>Quality assessment of High Angular Resolution Diffusion Imaging\ndata using bootstrap on Q-ball reconstruction. J. Cohen Adad, M.\nDescoteaux, L.L. Wald. JMRI 33: 1194-1208.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id24\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#id24\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.local_maxima\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">array, 1d, dtype=double</span></dt><dd><p>The function evaluated on a set of discrete points.</p>\n</dd>\n<dt><strong>edges</strong><span class=\"classifier\">array (N, 2)</span></dt><dd><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>peak_values</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</dd>\n<dt><strong>peak_indices</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.core.sphere</span></code></a></dt><dd></dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>A point is a local maximum if it is &gt; at least one neighbor and &gt;= all\nneighbors. If no points meet the above criteria, 1 maximum is returned such\nthat <cite>odf[maximum] == max(odf)</cite>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id25\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.ndindex\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">ndindex</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>shape</strong><span class=\"classifier\">tuple of ints</span></dt><dd><p>The dimensions of the array.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id26\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.peak_directions\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">peak_directions</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">odf</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold=0.5</em>, <em class=\"sig-param\">min_separation_angle=25</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks.</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">1d ndarray</span></dt><dd><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Only peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N vertices for sphere, one for each peak</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak values</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak indices of the directions on the sphere</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id27\">\n<h3>peak_directions_nl<a class=\"headerlink\" href=\"#id27\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.peak_directions_nl\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">peak_directions_nl</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sphere_eval</em>, <em class=\"sig-param\">relative_peak_threshold=0.25</em>, <em class=\"sig-param\">min_separation_angle=25</em>, <em class=\"sig-param\">sphere=&lt;dipy.core.sphere.HemiSphere object&gt;</em>, <em class=\"sig-param\">xtol=1e-07</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peak_directions_nl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Non Linear Direction Finder.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sphere_eval</strong><span class=\"classifier\">callable</span></dt><dd><p>A function which can be evaluated on a sphere.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>A discrete Sphere. The points on the sphere will be used for initial\nestimate of maximums.</p>\n</dd>\n<dt><strong>xtol</strong><span class=\"classifier\">float</span></dt><dd><p>Relative tolerance for optimization.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">array (N, 3)</span></dt><dd><p>Points on the sphere corresponding to N local maxima on the sphere.</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">array (N,)</span></dt><dd><p>Value of sphere_eval at each point on directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id28\">\n<h3>peaks_from_model<a class=\"headerlink\" href=\"#id28\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.peaks_from_model\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">peaks_from_model</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">model</em>, <em class=\"sig-param\">data</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold</em>, <em class=\"sig-param\">min_separation_angle</em>, <em class=\"sig-param\">mask=None</em>, <em class=\"sig-param\">return_odf=False</em>, <em class=\"sig-param\">return_sh=True</em>, <em class=\"sig-param\">gfa_thr=0</em>, <em class=\"sig-param\">normalize_peaks=False</em>, <em class=\"sig-param\">sh_order=8</em>, <em class=\"sig-param\">sh_basis_type=None</em>, <em class=\"sig-param\">npeaks=5</em>, <em class=\"sig-param\">B=None</em>, <em class=\"sig-param\">invB=None</em>, <em class=\"sig-param\">parallel=False</em>, <em class=\"sig-param\">num_processes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.peaks_from_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the model to data and computes peaks and metrics</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>model</strong><span class=\"classifier\">a model instance</span></dt><dd><p><cite>model</cite> will be used to fit the data.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Only return peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90] The minimum distance between</span></dt><dd><p>directions. If two peaks are too close only the larger of the two is\nreturned.</p>\n</dd>\n<dt><strong>mask</strong><span class=\"classifier\">array, optional</span></dt><dd><p>If <cite>mask</cite> is provided, voxels that are False in <cite>mask</cite> are skipped and\nno peaks are returned.</p>\n</dd>\n<dt><strong>return_odf</strong><span class=\"classifier\">bool</span></dt><dd><p>If True, the odfs are returned.</p>\n</dd>\n<dt><strong>return_sh</strong><span class=\"classifier\">bool</span></dt><dd><p>If True, the odf as spherical harmonics coefficients is returned</p>\n</dd>\n<dt><strong>gfa_thr</strong><span class=\"classifier\">float</span></dt><dd><p>Voxels with gfa less than <cite>gfa_thr</cite> are skipped, no peaks are returned.</p>\n</dd>\n<dt><strong>normalize_peaks</strong><span class=\"classifier\">bool</span></dt><dd><p>If true, all peak values are calculated relative to <cite>max(odf)</cite>.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 8).</p>\n</dd>\n<dt><strong>sh_basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 <a class=\"reference internal\" href=\"#r5bfa62a45a36-2\" id=\"id29\">[2]</a> basis, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#r5bfa62a45a36-1\" id=\"id30\">[1]</a> basis\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>sh_smooth</strong><span class=\"classifier\">float, optional</span></dt><dd><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</dd>\n<dt><strong>npeaks</strong><span class=\"classifier\">int</span></dt><dd><p>Maximum number of peaks found (default 5 peaks).</p>\n</dd>\n<dt><strong>B</strong><span class=\"classifier\">ndarray, optional</span></dt><dd><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</dd>\n<dt><strong>invB</strong><span class=\"classifier\">ndarray, optional</span></dt><dd><p>Inverse of B.</p>\n</dd>\n<dt><strong>parallel: bool</strong></dt><dd><p>If True, use multiprocessing to compute peaks and metric\n(default False). Temporary files are saved in the default temporary\ndirectory of the system. It can be changed using <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">tempfile</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">tempfile.tempdir</span> <span class=\"pre\">=</span> <span class=\"pre\">'/path/to/tempdir'</span></code>.</p>\n</dd>\n<dt><strong>num_processes: int, optional</strong></dt><dd><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()). If &lt; 0 the maximal number of\ncores minus <a href=\"#id48\"><span class=\"problematic\" id=\"id49\">|num_processes + 1|</span></a> is used (enter -1 to use as many cores\nas possible). 0 raises an error.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>pam</strong><span class=\"classifier\">PeaksAndMetrics</span></dt><dd><p>An object with <code class=\"docutils literal notranslate\"><span class=\"pre\">gfa</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_directions</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">peak_values</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">peak_indices</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">odf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">shm_coeffs</span></code> as attributes</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"r5bfa62a45a36-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id30\">1</a></span></dt>\n<dd><p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</dd>\n<dt class=\"label\" id=\"r5bfa62a45a36-2\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id29\">2</a></span></dt>\n<dd><p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id33\">\n<h3>remove_similar_vertices<a class=\"headerlink\" href=\"#id33\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.remove_similar_vertices\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">remove_similar_vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.remove_similar_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p>\n<p>Returns vertices that are at least theta degrees from any other vertex.\nVertex v and -v are considered the same so if v and -v are both in\n<cite>vertices</cite> only one is kept. Also if v and w are both in vertices, w must\nbe separated by theta degrees from both v and -v to be unique.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>vertices</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N unit vectors.</p>\n</dd>\n<dt><strong>theta</strong><span class=\"classifier\">float</span></dt><dd><p>The minimum separation between vertices in degrees.</p>\n</dd>\n<dt><strong>return_mapping</strong><span class=\"classifier\">{False, True}, optional</span></dt><dd><p>If True, return <cite>mapping</cite> as well as <cite>vertices</cite> and maybe <cite>indices</cite>\n(see below).</p>\n</dd>\n<dt><strong>return_indices</strong><span class=\"classifier\">{False, True}, optional</span></dt><dd><p>If True, return <cite>indices</cite> as well as <cite>vertices</cite> and maybe <cite>mapping</cite>\n(see below).</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>unique_vertices</strong><span class=\"classifier\">(M, 3) ndarray</span></dt><dd><p>Vertices sufficiently separated from one another.</p>\n</dd>\n<dt><strong>mapping</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>For each element <code class=\"docutils literal notranslate\"><span class=\"pre\">vertices[i]</span></code> (<span class=\"math notranslate nohighlight\">\\(i \\in 0..N-1\\)</span>), the index <span class=\"math notranslate nohighlight\">\\(j\\)</span> to a\nvertex in <cite>unique_vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">vertices[i]</span></code>.  Only returned if <cite>return_mapping</cite> is True.</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p><cite>indices</cite> gives the reverse of <cite>mapping</cite>.  For each element\n<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_vertices[j]</span></code> (<span class=\"math notranslate nohighlight\">\\(j \\in 0..M-1\\)</span>), the index <span class=\"math notranslate nohighlight\">\\(i\\)</span> to a vertex in\n<cite>vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_vertices[j]</span></code>.  If there is more than one element of\n<cite>vertices</cite> that is less than theta degrees from <cite>unique_vertices[j]</cite>,\nreturn the first (lowest index) matching value.  Only return if\n<cite>return_indices</cite> is True.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id34\">\n<h3>reshape_peaks_for_visualization<a class=\"headerlink\" href=\"#id34\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.reshape_peaks_for_visualization\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">reshape_peaks_for_visualization</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">peaks</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.reshape_peaks_for_visualization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reshape peaks for visualization.</p>\n<p>Reshape and convert to float32 a set of peaks for visualisation with mrtrix\nor the fibernavigator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>peaks: nd array (\u2026, N, 3) or PeaksAndMetrics object</strong></dt><dd><p>The peaks to be reshaped and converted to float32.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>peaks</strong><span class=\"classifier\">nd array (\u2026, 3*N)</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id35\">\n<h3>search_descending<a class=\"headerlink\" href=\"#id35\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.search_descending\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">search_descending</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.search_descending\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></p>\n<p>Call <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>. Return value <cite>i</cite> will be the\nsmallest index in the descending array <cite>a</cite> such that <code class=\"docutils literal notranslate\"><span class=\"pre\">a[i]</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">T</span></code>.\nEquivalently, <cite>i</cite> will be the largest index such that <code class=\"docutils literal notranslate\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.\nIf all values in <cite>a</cite> are &gt;= T, return the length of array <cite>a</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>a</strong><span class=\"classifier\">ndarray, ndim=1, c-contiguous</span></dt><dd><p>Array to be searched.  We assume <cite>a</cite> is in descending order.</p>\n</dd>\n<dt><strong>relative_threshold</strong><span class=\"classifier\">float</span></dt><dd><p>Applied threshold will be <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>i</strong><span class=\"classifier\">np.intp</span></dt><dd><p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code> then <cite>i</cite> will be the largest index\nsuch that <code class=\"docutils literal notranslate\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.  If all values in <cite>a</cite> are &gt;= T then\n<cite>i</cite> will be <cite>len(a)</cite>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([ 10.,   9.,   8.,   7.,   6.,   5.,   4.,   3.,   2.,   1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"go\">6</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n<span class=\"go\">array([False, False, False, False, False, False,  True,  True,  True,  True], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">10</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id36\">\n<h3>sh_to_sf_matrix<a class=\"headerlink\" href=\"#id36\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.sh_to_sf_matrix\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">sh_to_sf_matrix</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">sh_order=4</em>, <em class=\"sig-param\">basis_type=None</em>, <em class=\"sig-param\">full_basis=False</em>, <em class=\"sig-param\">legacy=True</em>, <em class=\"sig-param\">return_inv=True</em>, <em class=\"sig-param\">smooth=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.sh_to_sf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Matrix that transforms Spherical harmonics (SH) to spherical\nfunction (SF).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The points on which to sample the spherical function.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients for a symmetric\nbasis and <code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> coefficients for a full\nSH basis.</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}, optional</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 [Rc855ec825848-2]_[Rc855ec825848-3]_ basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#rc855ec825848-1\" id=\"id37\">[1]</a> basis,\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>If True, uses a SH basis containing even and odd order SH functions.\nElse, uses a SH basis consisting only of even order SH functions.</p>\n</dd>\n<dt><strong>legacy: bool, optional</strong></dt><dd><p>True to use a legacy basis definition for backward compatibility\nwith previous <code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> implementations.</p>\n</dd>\n<dt><strong>return_inv</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>If True then the inverse of the matrix is also returned.</p>\n</dd>\n<dt><strong>smooth</strong><span class=\"classifier\">float, optional</span></dt><dd><p>Lambda-regularization in the SH fit.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>B</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</dd>\n<dt><strong>invB</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Inverse of B.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"rc855ec825848-1\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id37\">1</a></span></dt>\n<dd><p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</dd>\n<dt class=\"label\" id=\"rc855ec825848-2\"><span class=\"brackets\">2</span></dt>\n<dd><p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</dd>\n<dt class=\"label\" id=\"rc855ec825848-3\"><span class=\"brackets\">3</span></dt>\n<dd><p>Tournier J-D, Smith R, Raffelt D, Tabbara R, Dhollander T,\nPietsch M, et al. MRtrix3: A fast, flexible and open software\nframework for medical image processing and visualisation.\nNeuroImage. 2019 Nov 15;202:116-137.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id41\">\n<h3>warn<a class=\"headerlink\" href=\"#id41\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.peaks.warn\">\n<code class=\"sig-prename descclassname\">dipy.direction.peaks.</code><code class=\"sig-name descname\">warn</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">/</em>, <em class=\"sig-param\">message</em>, <em class=\"sig-param\">category=None</em>, <em class=\"sig-param\">stacklevel=1</em>, <em class=\"sig-param\">source=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.peaks.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id42\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.pmf.BootPmfGen\" title=\"dipy.direction.pmf.BootPmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a><a class=\"headerlink\" href=\"#id42\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.pmf.BootPmfGen\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.pmf.</code><code class=\"sig-name descname\">BootPmfGen</code><a class=\"headerlink\" href=\"#dipy.direction.pmf.BootPmfGen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.pmf.PmfGen</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 66%\" />\n<col style=\"width: 34%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_pmf</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>get_pmf_no_boot</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.BootPmfGen.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.BootPmfGen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.BootPmfGen.get_pmf_no_boot\">\n<code class=\"sig-name descname\">get_pmf_no_boot</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.BootPmfGen.get_pmf_no_boot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pmfgen\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PmfGen</span></code></a><a class=\"headerlink\" href=\"#pmfgen\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.pmf.PmfGen\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.pmf.</code><code class=\"sig-name descname\">PmfGen</code><a class=\"headerlink\" href=\"#dipy.direction.pmf.PmfGen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 52%\" />\n<col style=\"width: 48%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_pmf</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.PmfGen.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.PmfGen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.PmfGen.get_pmf\">\n<code class=\"sig-name descname\">get_pmf</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.PmfGen.get_pmf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shcoeffpmfgen\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.pmf.SHCoeffPmfGen\" title=\"dipy.direction.pmf.SHCoeffPmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SHCoeffPmfGen</span></code></a><a class=\"headerlink\" href=\"#shcoeffpmfgen\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.pmf.SHCoeffPmfGen\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.pmf.</code><code class=\"sig-name descname\">SHCoeffPmfGen</code><a class=\"headerlink\" href=\"#dipy.direction.pmf.SHCoeffPmfGen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.pmf.PmfGen</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 52%\" />\n<col style=\"width: 48%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_pmf</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.SHCoeffPmfGen.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.SHCoeffPmfGen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"simplepmfgen\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.pmf.SimplePmfGen\" title=\"dipy.direction.pmf.SimplePmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SimplePmfGen</span></code></a><a class=\"headerlink\" href=\"#simplepmfgen\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.pmf.SimplePmfGen\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.pmf.</code><code class=\"sig-name descname\">SimplePmfGen</code><a class=\"headerlink\" href=\"#dipy.direction.pmf.SimplePmfGen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.pmf.PmfGen\" title=\"dipy.direction.pmf.PmfGen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.pmf.PmfGen</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 52%\" />\n<col style=\"width: 48%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_pmf</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.pmf.SimplePmfGen.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.SimplePmfGen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cart2sphere\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#cart2sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.pmf.cart2sphere\">\n<code class=\"sig-prename descclassname\">dipy.direction.pmf.</code><code class=\"sig-name descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">x</em>, <em class=\"sig-param\">y</em>, <em class=\"sig-param\">z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.pmf.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math notranslate nohighlight\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math notranslate nohighlight\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x</strong><span class=\"classifier\">array_like</span></dt><dd><p>x coordinate in Cartesian space</p>\n</dd>\n<dt><strong>y</strong><span class=\"classifier\">array_like</span></dt><dd><p>y coordinate in Cartesian space</p>\n</dd>\n<dt><strong>z</strong><span class=\"classifier\">array_like</span></dt><dd><p>z coordinate</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>r</strong><span class=\"classifier\">array</span></dt><dd><p>radius</p>\n</dd>\n<dt><strong>theta</strong><span class=\"classifier\">array</span></dt><dd><p>inclination (polar) angle</p>\n</dd>\n<dt><strong>phi</strong><span class=\"classifier\">array</span></dt><dd><p>azimuth angle</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id43\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#id43\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.probabilistic_direction_getter.</code><code class=\"sig-name descname\">DeterministicMaximumDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter</span></code></a></p>\n<p>Return direction of a sphere with the highest probability mass\nfunction (pmf).</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id44\">\n<h3><a class=\"reference internal\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\" title=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#id44\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dipy.direction.probabilistic_direction_getter.</code><code class=\"sig-name descname\">ProbabilisticDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\" title=\"dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter</span></code></a></p>\n<p>Randomly samples direction of a sphere based on probability mass\nfunction (pmf).</p>\n<p>The main constructors for this class are current from_pmf and from_shcoeff.\nThe pmf gives the probability that each direction on the sphere should be\nchosen as the next direction. To get the true pmf from the \u201craw pmf\u201d\ndirections more than <code class=\"docutils literal notranslate\"><span class=\"pre\">max_angle</span></code> degrees from the incoming direction are\nset to 0 and the result is normalized.</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\" />\n<col style=\"width: 90%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_pmf</span></code></p></td>\n<td><p>Constructor for making a DirectionGetter from an array of Pmfs</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_shcoeff</span></code></p></td>\n<td><p>Probabilistic direction getter from a distribution of directions on the sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">initial_direction</span></code></p></td>\n<td><p>Returns best directions at seed location to start tracking.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<colgroup>\n<col style=\"width: 63%\" />\n<col style=\"width: 37%\" />\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>get_direction</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__\">\n<code class=\"sig-name descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Direction getter from a pmf generator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>pmf_gen</strong><span class=\"classifier\">PmfGen</span></dt><dd><p>Used to get probability mass function for selecting tracking\ndirections.</p>\n</dd>\n<dt><strong>max_angle</strong><span class=\"classifier\">float, [0, 90]</span></dt><dd><p>The maximum allowed angle between incoming direction and new\ndirection.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The set of directions to be used for tracking.</p>\n</dd>\n<dt><strong>pmf_threshold</strong><span class=\"classifier\">float [0., 1.]</span></dt><dd><p>Used to remove direction from the probability mass function for\nselecting the tracking direction.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>Used for extracting initial tracking directions. Passed to\npeak_directions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.direction.peaks.peak_directions\" title=\"dipy.direction.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dipy.direction.peaks.peak_directions</span></code></a></dt><dd></dd>\n</dl>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id45\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.peak_directions\">\n<code class=\"sig-prename descclassname\">dipy.direction.probabilistic_direction_getter.</code><code class=\"sig-name descname\">peak_directions</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">odf</em>, <em class=\"sig-param\">sphere</em>, <em class=\"sig-param\">relative_peak_threshold=0.5</em>, <em class=\"sig-param\">min_separation_angle=25</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks.</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>odf</strong><span class=\"classifier\">1d ndarray</span></dt><dd><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The Sphere providing discrete directions for evaluation.</p>\n</dd>\n<dt><strong>relative_peak_threshold</strong><span class=\"classifier\">float in [0., 1.]</span></dt><dd><p>Only peaks greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal notranslate\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</dd>\n<dt><strong>min_separation_angle</strong><span class=\"classifier\">float in [0, 90]</span></dt><dd><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>directions</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>N vertices for sphere, one for each peak</p>\n</dd>\n<dt><strong>values</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak values</p>\n</dd>\n<dt><strong>indices</strong><span class=\"classifier\">(N,) ndarray</span></dt><dd><p>peak indices of the directions on the sphere</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"random\">\n<h3>random<a class=\"headerlink\" href=\"#random\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.direction.probabilistic_direction_getter.random\">\n<code class=\"sig-prename descclassname\">dipy.direction.probabilistic_direction_getter.</code><code class=\"sig-name descname\">random</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> &#x2192; x in the interval [0, 1).<a class=\"headerlink\" href=\"#dipy.direction.probabilistic_direction_getter.random\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.io", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "N", "next"], ["reference/dipy.denoise", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "P", "previous"]], "sourcename": "reference/dipy.direction.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.bootstrap_direction_getter\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.bootstrap_direction_getter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.closest_peak_direction_getter\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.closest_peak_direction_getter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.peaks\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.peaks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.pmf\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.pmf</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.direction.probabilistic_direction_getter\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction.probabilistic_direction_getter</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#bootdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#closestpeakdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#deterministicmaximumdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#eudxdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#intemporarydirectory\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#peaksandmetrics\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#probabilisticdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#repeat\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#pool\">Pool</a></li>\n<li><a class=\"reference internal\" href=\"#deprecated-params\">deprecated_params</a></li>\n<li><a class=\"reference internal\" href=\"#determine-num-processes\">determine_num_processes</a></li>\n<li><a class=\"reference internal\" href=\"#gfa\">gfa</a></li>\n<li><a class=\"reference internal\" href=\"#local-maxima\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#ndindex\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#peak-directions\">peak_directions</a></li>\n<li><a class=\"reference internal\" href=\"#peak-directions-nl\">peak_directions_nl</a></li>\n<li><a class=\"reference internal\" href=\"#peaks-from-model\">peaks_from_model</a></li>\n<li><a class=\"reference internal\" href=\"#remove-similar-vertices\">remove_similar_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#reshape-peaks-for-visualization\">reshape_peaks_for_visualization</a></li>\n<li><a class=\"reference internal\" href=\"#search-descending\">search_descending</a></li>\n<li><a class=\"reference internal\" href=\"#sh-to-sf-matrix\">sh_to_sf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#warn\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#id10\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#bootpmfgen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#basedirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#basepmfdirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BasePmfDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id11\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClosestPeakDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#pmfgendirectiongetter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PmfGenDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#order-from-ncoef\">order_from_ncoef</a></li>\n<li><a class=\"reference internal\" href=\"#id12\">peak_directions</a></li>\n<li><a class=\"reference internal\" href=\"#id13\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#id14\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EuDXDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id15\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InTemporaryDirectory</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id16\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PeaksAndMetrics</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id17\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id18\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">repeat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id19\">Pool</a></li>\n<li><a class=\"reference internal\" href=\"#id20\">deprecated_params</a></li>\n<li><a class=\"reference internal\" href=\"#id21\">determine_num_processes</a></li>\n<li><a class=\"reference internal\" href=\"#id22\">gfa</a></li>\n<li><a class=\"reference internal\" href=\"#id24\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#id25\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#id26\">peak_directions</a></li>\n<li><a class=\"reference internal\" href=\"#id27\">peak_directions_nl</a></li>\n<li><a class=\"reference internal\" href=\"#id28\">peaks_from_model</a></li>\n<li><a class=\"reference internal\" href=\"#id33\">remove_similar_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#id34\">reshape_peaks_for_visualization</a></li>\n<li><a class=\"reference internal\" href=\"#id35\">search_descending</a></li>\n<li><a class=\"reference internal\" href=\"#id36\">sh_to_sf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id41\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#id42\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BootPmfGen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#pmfgen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PmfGen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#shcoeffpmfgen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SHCoeffPmfGen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#simplepmfgen\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SimplePmfGen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cart2sphere\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#id43\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeterministicMaximumDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id44\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ProbabilisticDirectionGetter</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id45\">peak_directions</a></li>\n<li><a class=\"reference internal\" href=\"#random\">random</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.direction", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}