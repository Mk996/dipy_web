{"docnames": ["api_changes", "cite", "data", "dataset_list", "dependencies", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/intro", "devel/make_release", "devel/python3", "developers", "documentation", "examples_built/affine_registration_3d", "examples_built/affine_registration_masks", "examples_built/afq_tract_profiles", "examples_built/brain_extraction_dwi", "examples_built/bundle_assignment_maps", "examples_built/bundle_extraction", "examples_built/bundle_group_registration", "examples_built/bundle_registration", "examples_built/bundle_shape_similarity", "examples_built/cluster_confidence", "examples_built/combined_workflow_creation", "examples_built/contextual_enhancement", "examples_built/denoise_gibbs", "examples_built/denoise_localpca", "examples_built/denoise_mppca", "examples_built/denoise_nlmeans", "examples_built/denoise_patch2self", "examples_built/fiber_to_bundle_coherence", "examples_built/gradients_spheres", "examples_built/kfold_xval", "examples_built/linear_fascicle_evaluation", "examples_built/motion_correction", "examples_built/path_length_map", "examples_built/quick_start", "examples_built/reconst_csa", "examples_built/reconst_csa_parallel", "examples_built/reconst_csd", "examples_built/reconst_csd_parallel", "examples_built/reconst_dki", "examples_built/reconst_dki_micro", "examples_built/reconst_dsi", "examples_built/reconst_dsi_metrics", "examples_built/reconst_dsid", "examples_built/reconst_dti", "examples_built/reconst_forecast", "examples_built/reconst_fwdti", "examples_built/reconst_gqi", "examples_built/reconst_ivim", "examples_built/reconst_mapmri", "examples_built/reconst_mcsd", "examples_built/reconst_msdki", "examples_built/reconst_qtdmri", "examples_built/reconst_qti", "examples_built/reconst_qtiplus", "examples_built/reconst_rumba", "examples_built/reconst_sfm", "examples_built/reconst_sh", "examples_built/reconst_shore", "examples_built/reconst_shore_metrics", "examples_built/register_binary_fuzzy", "examples_built/reslice_datasets", "examples_built/restore_dti", "examples_built/segment_clustering_features", "examples_built/segment_clustering_metrics", "examples_built/segment_extending_clustering_framework", "examples_built/segment_quickbundles", "examples_built/simulate_dki", "examples_built/simulate_multi_tensor", "examples_built/snr_in_cc", "examples_built/streamline_formats", "examples_built/streamline_length", "examples_built/streamline_registration", "examples_built/streamline_tools", "examples_built/surface_seed", "examples_built/syn_registration_2d", "examples_built/syn_registration_3d", "examples_built/tissue_classification", "examples_built/tracking_bootstrap_peaks", "examples_built/tracking_deterministic", "examples_built/tracking_introduction_eudx", "examples_built/tracking_pft", "examples_built/tracking_probabilistic", "examples_built/tracking_rumba", "examples_built/tracking_sfm", "examples_built/tracking_stopping_criterion", "examples_built/viz_advanced", "examples_built/viz_bundles", "examples_built/viz_roi_contour", "examples_built/viz_slice", "examples_built/workflow_creation", "examples_index", "faq", "gimbal_lock", "glossary", "index", "installation", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "introduction", "mission", "note_about_examples", "old_highlights", "old_news", "reconstruction_models_list", "reference/dipy", "reference/dipy.__config__", "reference/dipy.align", "reference/dipy.boots", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical"], "filenames": ["api_changes.rst", "cite.rst", "data.rst", "dataset_list.rst", "dependencies.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/intro.rst", "devel/make_release.rst", "devel/python3.rst", "developers.rst", "documentation.rst", "examples_built/affine_registration_3d.rst", "examples_built/affine_registration_masks.rst", "examples_built/afq_tract_profiles.rst", "examples_built/brain_extraction_dwi.rst", "examples_built/bundle_assignment_maps.rst", "examples_built/bundle_extraction.rst", "examples_built/bundle_group_registration.rst", "examples_built/bundle_registration.rst", "examples_built/bundle_shape_similarity.rst", "examples_built/cluster_confidence.rst", "examples_built/combined_workflow_creation.rst", "examples_built/contextual_enhancement.rst", "examples_built/denoise_gibbs.rst", "examples_built/denoise_localpca.rst", "examples_built/denoise_mppca.rst", "examples_built/denoise_nlmeans.rst", "examples_built/denoise_patch2self.rst", "examples_built/fiber_to_bundle_coherence.rst", "examples_built/gradients_spheres.rst", "examples_built/kfold_xval.rst", "examples_built/linear_fascicle_evaluation.rst", "examples_built/motion_correction.rst", "examples_built/path_length_map.rst", "examples_built/quick_start.rst", "examples_built/reconst_csa.rst", "examples_built/reconst_csa_parallel.rst", "examples_built/reconst_csd.rst", "examples_built/reconst_csd_parallel.rst", "examples_built/reconst_dki.rst", "examples_built/reconst_dki_micro.rst", "examples_built/reconst_dsi.rst", "examples_built/reconst_dsi_metrics.rst", "examples_built/reconst_dsid.rst", "examples_built/reconst_dti.rst", "examples_built/reconst_forecast.rst", "examples_built/reconst_fwdti.rst", "examples_built/reconst_gqi.rst", "examples_built/reconst_ivim.rst", "examples_built/reconst_mapmri.rst", "examples_built/reconst_mcsd.rst", "examples_built/reconst_msdki.rst", "examples_built/reconst_qtdmri.rst", "examples_built/reconst_qti.rst", "examples_built/reconst_qtiplus.rst", "examples_built/reconst_rumba.rst", "examples_built/reconst_sfm.rst", "examples_built/reconst_sh.rst", "examples_built/reconst_shore.rst", "examples_built/reconst_shore_metrics.rst", "examples_built/register_binary_fuzzy.rst", "examples_built/reslice_datasets.rst", "examples_built/restore_dti.rst", "examples_built/segment_clustering_features.rst", "examples_built/segment_clustering_metrics.rst", "examples_built/segment_extending_clustering_framework.rst", "examples_built/segment_quickbundles.rst", "examples_built/simulate_dki.rst", "examples_built/simulate_multi_tensor.rst", "examples_built/snr_in_cc.rst", "examples_built/streamline_formats.rst", "examples_built/streamline_length.rst", "examples_built/streamline_registration.rst", "examples_built/streamline_tools.rst", "examples_built/surface_seed.rst", "examples_built/syn_registration_2d.rst", "examples_built/syn_registration_3d.rst", "examples_built/tissue_classification.rst", "examples_built/tracking_bootstrap_peaks.rst", "examples_built/tracking_deterministic.rst", "examples_built/tracking_introduction_eudx.rst", "examples_built/tracking_pft.rst", "examples_built/tracking_probabilistic.rst", "examples_built/tracking_rumba.rst", "examples_built/tracking_sfm.rst", "examples_built/tracking_stopping_criterion.rst", "examples_built/viz_advanced.rst", "examples_built/viz_bundles.rst", "examples_built/viz_roi_contour.rst", "examples_built/viz_slice.rst", "examples_built/workflow_creation.rst", "examples_index.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "installation.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "introduction.rst", "mission.rst", "note_about_examples.rst", "old_highlights.rst", "old_news.rst", "reconstruction_models_list.rst", "reference/dipy.rst", "reference/dipy.__config__.rst", "reference/dipy.align.rst", "reference/dipy.boots.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst"], "titles": ["API changes", "Publications", "Data", "&lt;no title&gt;", "Dependencies", "DIPY Coding Style Guideline", "Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY development", "Introduction", "A guide to making a DIPY release", "Keeping code compatible with Pythons 2 and 3", "Developers", "Documentation", "Affine Registration in 3D", "Affine Registration with Masks", "Extracting AFQ tract profiles from segmented bundles", "Brain segmentation with median_otsu", "BUAN Bundle Assignment Maps Creation", "Automatic Fiber Bundle Extraction with RecoBundles", "Groupwise Bundle Registration", "Direct Bundle Registration", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Creating a new combined workflow", "Crossing-preserving contextual enhancement", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Fiber to bundle coherence measures", "Gradients and Spheres", "K-fold cross-validation for model comparison", "Linear fascicle evaluation (LiFE)", "Between-volumes Motion Correction on DWI datasets", "Calculate Path Length Map", "Getting started with DIPY", "Reconstruct with Constant Solid Angle (Q-Ball)", "Parallel reconstruction using Q-Ball", "Reconstruction with Constrained Spherical Deconvolution", "Parallel reconstruction using CSD", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Diffeomorphic Registration with binary and fuzzy images", "Reslice diffusion datasets", "Using the RESTORE algorithm for robust tensor fitting", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "DKI MultiTensor Simulation", "MultiTensor Simulation", "SNR estimation for Diffusion-Weighted Images", "Read/Write streamline files", "Streamline length and size reduction", "Applying image-based deformations to streamlines", "Connectivity Matrices, ROI Intersections and Density Maps", "Surface seeding for tractography", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Tissue Classification of a T1-weighted Structural Image", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new workflow.", "Examples", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python", "Installation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "What is DIPY?", "Mission statement", "A note about the examples", "Older Highlights", "Past Announcements", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__config__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates"], "terms": {"here": [0, 7, 8, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 37, 43, 45, 46, 48, 49, 52, 53, 54, 55, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 76, 78, 79, 81, 82, 83, 84, 88, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 114, 120, 125, 126, 131, 133, 135, 137, 139, 140, 141, 142, 143, 145, 188, 196, 197, 200, 201, 204], "we": [0, 4, 5, 8, 11, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204], "provid": [0, 5, 26, 27, 31, 33, 35, 40, 42, 46, 48, 49, 52, 54, 55, 60, 63, 64, 65, 66, 67, 68, 69, 73, 78, 79, 80, 81, 85, 87, 91, 94, 95, 98, 99, 101, 102, 103, 112, 113, 120, 122, 125, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 165, 166, 175, 178, 185, 186, 187, 189, 192, 196, 197, 204], "inform": [0, 2, 3, 5, 8, 13, 22, 26, 27, 28, 29, 39, 40, 42, 49, 50, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 85, 86, 87, 95, 96, 100, 107, 111, 112, 113, 114, 116, 119, 121, 122, 126, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 156, 166, 185, 189, 192, 197, 204], "about": [0, 2, 5, 8, 18, 22, 25, 26, 36, 40, 46, 48, 49, 51, 52, 53, 54, 55, 56, 59, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 80, 81, 82, 87, 97, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 166, 178, 182, 183, 187, 189, 191, 195], "function": [0, 5, 6, 20, 22, 26, 27, 31, 32, 33, 37, 38, 40, 41, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 88, 90, 95, 97, 98, 99, 101, 104, 106, 107, 111, 112, 120, 122, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 159, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 204], "class": [0, 5, 26, 36, 46, 59, 61, 65, 77, 80, 85, 90, 91, 92, 101, 105, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178, 185, 186, 187], "have": [0, 8, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 26, 28, 32, 33, 35, 36, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 56, 59, 62, 63, 64, 65, 66, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 165, 170, 172, 178, 182, 185, 187, 188, 189, 192, 193, 199, 200, 203], "been": [0, 5, 8, 17, 23, 28, 32, 33, 39, 40, 45, 46, 59, 63, 64, 81, 87, 92, 120, 131, 133, 134, 137, 139, 140, 142, 143, 145, 203], "remov": [0, 8, 23, 29, 35, 38, 39, 40, 43, 46, 50, 54, 55, 59, 66, 70, 81, 85, 87, 90, 91, 99, 106, 111, 117, 126, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 164, 172, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196], "renam": [0, 18, 112, 131, 135, 136, 139, 140, 142, 145, 179, 180, 185, 186, 187, 189, 191], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 97, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 153, 161, 163, 166, 169, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204], "deprec": [0, 5, 126, 131, 133, 135, 136, 137, 139, 140, 142, 143, 145, 178, 180, 182, 183, 184, 185, 189, 190, 191, 192, 194, 195, 196], "recommend": [0, 5, 31, 38, 47, 52, 56, 64, 67, 69, 70, 85, 101, 104, 107, 111, 116, 117, 119, 131, 133, 134, 139, 141, 143, 145, 149, 160, 161, 184, 197], "dure": [0, 7, 8, 27, 47, 61, 64, 69, 77, 110, 119, 120, 121, 129, 131, 133, 134, 135, 138, 139, 141, 142, 143, 145, 158, 159, 178, 183, 191], "differ": [0, 14, 23, 27, 28, 29, 31, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 52, 54, 56, 61, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 78, 81, 82, 85, 86, 87, 90, 92, 97, 99, 101, 104, 106, 107, 108, 111, 113, 117, 121, 122, 126, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 165, 166, 178, 182, 183, 186, 187, 189, 191, 192, 196, 197, 199, 200, 203, 204], "releas": [0, 20, 25, 110, 126, 127, 129, 131, 133, 135, 136, 137, 138, 139, 140, 143, 145, 146, 197], "circl": [0, 90, 131, 133, 140, 142, 143], "gener": [0, 1, 5, 8, 11, 14, 18, 21, 22, 23, 24, 27, 31, 35, 38, 40, 42, 43, 45, 46, 48, 52, 55, 56, 59, 60, 61, 64, 65, 67, 68, 70, 72, 75, 76, 83, 85, 95, 98, 99, 100, 103, 107, 110, 111, 112, 113, 117, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 159, 163, 165, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "furi": [0, 70, 87, 89, 95, 101, 107, 111, 126, 144, 145, 183, 189, 190, 191, 195], "minimum": [0, 31, 33, 43, 67, 80, 126, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 183, 187, 190], "version": [0, 2, 3, 4, 8, 22, 23, 37, 38, 39, 40, 41, 42, 43, 61, 62, 75, 82, 87, 88, 94, 107, 112, 122, 126, 127, 129, 131, 134, 136, 140, 142, 143, 145, 146, 197, 203], "i": [0, 1, 4, 5, 6, 7, 8, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204], "distutil": [0, 22, 191, 195], "ha": [0, 5, 8, 15, 17, 22, 23, 26, 28, 33, 37, 39, 40, 42, 45, 46, 47, 50, 52, 53, 54, 55, 56, 59, 62, 63, 64, 66, 68, 69, 70, 78, 80, 81, 84, 86, 87, 88, 91, 92, 94, 95, 97, 100, 104, 107, 108, 109, 111, 113, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 175, 178, 180, 183, 185, 187, 191, 199, 203, 204], "drop": [0, 139, 142, 179, 180, 184, 189, 195], "io": [0, 2, 3, 8, 23, 25, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 110, 126, 129, 131, 134, 138, 139, 140, 141, 142, 143, 144, 146, 178, 180, 182, 184, 185, 189, 190, 195, 196], "bvectxt": [0, 126, 146, 195, 196], "modul": [0, 4, 5, 20, 22, 26, 29, 30, 31, 34, 38, 39, 40, 42, 45, 46, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 88, 93, 101, 107, 111, 126, 129, 146, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 199, 201, 203], "denois": [0, 2, 3, 25, 36, 37, 38, 43, 54, 65, 66, 77, 111, 118, 126, 129, 134, 146, 153, 154, 155, 156, 164, 180, 187, 189, 192, 193, 195, 196], "The": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 124, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 160, 162, 165, 166, 167, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203], "default": [0, 8, 11, 18, 23, 26, 29, 31, 32, 36, 37, 41, 42, 43, 48, 49, 51, 57, 59, 63, 69, 70, 71, 75, 76, 77, 78, 79, 92, 95, 98, 99, 101, 104, 105, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 185, 186, 187, 189, 192, 193, 194, 195, 196, 203], "option": [0, 4, 8, 17, 18, 26, 33, 36, 38, 40, 42, 50, 51, 54, 63, 64, 65, 70, 95, 102, 105, 111, 112, 115, 116, 117, 119, 120, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195], "command": [0, 7, 8, 10, 15, 18, 22, 25, 36, 38, 43, 49, 104, 105, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 133, 134, 145, 159, 169, 180, 185, 186, 187, 189, 191, 195], "line": [0, 5, 7, 8, 10, 17, 18, 22, 23, 25, 30, 31, 33, 35, 36, 40, 43, 46, 47, 48, 66, 67, 69, 76, 84, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 109, 111, 113, 114, 118, 120, 122, 126, 131, 133, 139, 143, 144, 145, 159, 169, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 195, 204], "patch2self": [0, 106, 126, 146, 156, 193, 194, 195, 196], "ridg": [0, 42, 135, 139, 145, 156, 195], "ol": [0, 42, 135, 139, 145, 156, 160, 161, 195], "track": [0, 1, 5, 7, 17, 25, 28, 33, 35, 43, 46, 48, 59, 71, 78, 79, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 100, 101, 102, 103, 112, 118, 126, 129, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "pmf": [0, 93, 97, 98, 122, 145, 146, 180, 183, 195], "parent": [0, 133, 145, 146], "pmfgen": [0, 145, 146], "new": [0, 5, 6, 10, 12, 17, 18, 19, 21, 22, 24, 27, 33, 37, 42, 43, 44, 46, 47, 49, 52, 67, 70, 76, 80, 85, 104, 106, 110, 111, 126, 127, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 203], "mandatori": [0, 36, 105, 131, 145], "paramet": [0, 5, 22, 29, 31, 33, 36, 38, 39, 40, 42, 45, 49, 53, 54, 55, 57, 59, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 77, 82, 85, 90, 92, 94, 100, 105, 107, 116, 120, 121, 122, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 155, 156, 161, 162, 165, 179, 180, 181, 182, 183, 185, 187, 189, 190, 191, 192, 193, 195, 196, 199], "sphere": [0, 37, 43, 50, 51, 52, 53, 56, 58, 59, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 77, 83, 88, 93, 94, 96, 97, 98, 99, 100, 122, 129, 131, 138, 141, 143, 144, 145, 146, 178, 180, 183, 185, 187, 189, 190, 203, 204], "vertic": [0, 43, 44, 52, 56, 58, 66, 70, 71, 72, 83, 89, 99, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 183, 204], "correspond": [0, 1, 5, 28, 37, 38, 40, 42, 45, 49, 57, 63, 65, 66, 67, 68, 69, 70, 73, 74, 78, 82, 84, 85, 86, 90, 91, 102, 107, 111, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 164, 197], "spheric": [0, 5, 25, 37, 40, 43, 44, 45, 50, 51, 53, 55, 60, 65, 66, 69, 71, 94, 96, 97, 100, 118, 126, 127, 129, 133, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 158, 159, 178, 183, 185, 186, 187, 189, 191, 202], "distribut": [0, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 116, 120, 122, 125, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 153, 154, 156, 159, 175, 176, 187, 190, 201, 203], "valu": [0, 2, 3, 26, 28, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 82, 83, 84, 85, 88, 92, 94, 95, 97, 100, 101, 106, 107, 109, 110, 112, 113, 116, 117, 119, 120, 122, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 199, 200, 203], "get_pmf_valu": [0, 136, 146], "point": [0, 5, 8, 18, 19, 22, 33, 37, 38, 43, 44, 45, 46, 54, 62, 64, 65, 66, 67, 71, 72, 78, 79, 80, 81, 86, 95, 97, 98, 99, 107, 108, 109, 110, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 164, 171, 172, 175, 176, 178, 180, 183, 184, 185, 189, 190, 191, 192, 194, 195, 196, 201, 204], "xyz": [0, 44, 72, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 191], "which": [0, 5, 6, 7, 8, 22, 26, 27, 28, 29, 31, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 111, 112, 114, 116, 117, 120, 121, 122, 125, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 165, 182, 189, 192, 197, 200, 203], "return": [0, 18, 23, 27, 28, 29, 32, 36, 39, 40, 50, 51, 52, 54, 57, 59, 64, 65, 67, 70, 71, 74, 75, 78, 79, 80, 83, 86, 87, 88, 90, 91, 94, 96, 101, 120, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 179, 180, 183, 186, 188, 190, 195], "locat": [0, 5, 27, 28, 36, 59, 77, 90, 105, 113, 116, 120, 121, 131, 133, 134, 135, 136, 137, 139, 143, 145], "orient": [0, 26, 28, 33, 37, 43, 50, 51, 52, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 73, 78, 79, 84, 87, 88, 89, 94, 95, 97, 107, 112, 120, 122, 126, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 159, 182, 183, 189, 203], "segment": [0, 5, 25, 30, 31, 33, 34, 36, 37, 38, 40, 45, 50, 51, 53, 54, 55, 59, 61, 65, 66, 70, 78, 79, 80, 81, 84, 86, 87, 90, 91, 92, 95, 96, 99, 113, 118, 122, 126, 129, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 146, 165, 169, 175, 176, 180, 185, 186, 189, 191, 194, 195, 196], "from": [0, 2, 3, 5, 7, 9, 10, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 120, 122, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 156, 159, 160, 161, 165, 169, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204], "metric": [0, 1, 26, 27, 28, 32, 33, 34, 35, 38, 55, 59, 61, 66, 69, 70, 75, 78, 81, 87, 90, 91, 106, 120, 121, 122, 126, 129, 134, 136, 137, 138, 139, 142, 145, 146, 147, 148, 150, 160, 161, 162, 163, 172, 175, 176, 178, 180, 183, 184, 185, 186, 189, 192, 194, 195, 196], "import": [0, 2, 6, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 196, 199], "resamplefeatur": [0, 28, 78, 142, 146], "wa": [0, 8, 9, 22, 23, 24, 26, 33, 36, 38, 40, 41, 46, 48, 50, 54, 55, 60, 61, 63, 64, 65, 66, 69, 70, 71, 77, 82, 84, 85, 88, 108, 112, 120, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 185, 186, 187, 188, 189], "replac": [0, 7, 23, 47, 48, 76, 77, 85, 110, 116, 126, 131, 135, 136, 138, 139, 140, 143, 144, 145, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194], "featurespe": [0, 28, 78, 79, 80, 142, 146, 180], "name": [0, 2, 3, 5, 8, 11, 17, 18, 19, 21, 22, 26, 36, 49, 59, 65, 88, 92, 105, 108, 111, 113, 114, 115, 116, 120, 121, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 169, 171, 173, 174, 175, 176, 178, 180, 181, 183, 184, 187, 189, 190, 191, 192, 194, 199], "argument": [0, 32, 36, 46, 63, 70, 88, 105, 114, 115, 116, 117, 119, 120, 121, 122, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 177, 183, 185, 189, 191, 193, 194, 196], "number": [0, 1, 22, 26, 27, 29, 32, 33, 38, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 59, 61, 63, 65, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 85, 86, 88, 89, 92, 97, 109, 112, 117, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 157, 158, 159, 164, 165, 166, 169, 171, 172, 174, 175, 176, 178, 180, 183, 184, 187, 188, 189, 192, 194, 195, 196, 197, 201], "core": [0, 4, 7, 13, 24, 25, 29, 35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 77, 82, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 117, 126, 129, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 158, 159, 164, 171, 178, 180, 182, 185, 186, 187, 189, 190, 191, 194], "thread": [0, 131, 135, 139, 140, 142, 143, 145, 172, 178, 179, 183, 184, 194, 196], "standard": [0, 2, 3, 4, 5, 28, 31, 41, 43, 54, 55, 58, 61, 65, 66, 67, 72, 77, 84, 90, 104, 106, 111, 116, 126, 128, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 153, 154, 161, 178, 183, 187, 189, 194, 196, 197, 199, 204], "num_thread": [0, 131, 135, 140, 143, 145, 172, 193, 194], "openmp": [0, 126, 131, 135, 140, 143, 145, 172, 178, 180, 181], "parallel": [0, 52, 60, 64, 67, 70, 97, 99, 104, 106, 120, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 158, 159, 163, 172, 179, 180, 183, 187, 189, 192, 195, 196], "num_process": [0, 38, 51, 52, 53, 70, 97, 99, 117, 131, 135, 136, 139, 145, 158, 159, 164, 171], "us": [0, 1, 2, 3, 4, 6, 7, 8, 13, 15, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204], "multiprocess": [0, 25, 51, 53, 126, 136, 139, 145, 158, 159, 179, 180, 183, 187, 188, 194], "packag": [0, 5, 22, 64, 72, 77, 95, 123, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 178, 182, 184, 186, 187, 189, 192, 194, 199, 200], "logic": [0, 26, 139, 143, 178, 185], "when": [0, 1, 5, 6, 7, 8, 9, 18, 22, 23, 28, 32, 33, 36, 54, 56, 61, 64, 69, 70, 77, 78, 79, 80, 82, 85, 86, 87, 88, 95, 96, 100, 102, 105, 107, 108, 111, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 178, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 199, 203], "If": [0, 1, 2, 5, 8, 11, 17, 18, 21, 22, 23, 24, 26, 28, 31, 35, 42, 46, 48, 51, 52, 53, 56, 63, 65, 67, 69, 70, 71, 77, 78, 79, 85, 86, 87, 93, 95, 96, 101, 103, 104, 107, 111, 113, 114, 121, 122, 123, 125, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 154, 155, 156, 158, 159, 161, 164, 165, 169, 171, 172, 175, 176, 178, 198, 199, 200, 204], "none": [0, 26, 27, 33, 34, 39, 40, 42, 46, 50, 51, 52, 53, 56, 57, 58, 59, 62, 66, 70, 72, 73, 74, 77, 82, 83, 87, 91, 95, 99, 104, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 159, 170, 172, 186, 187, 193, 194], "omp_num_thread": [0, 131, 135, 140, 143, 145, 172], "environ": [0, 110, 111, 131, 134, 135, 139, 140, 143, 145, 172, 180], "variabl": [0, 27, 40, 46, 59, 63, 71, 87, 101, 106, 111, 126, 128, 131, 133, 134, 135, 139, 140, 143, 145, 172, 178, 180, 183, 186, 187, 188, 191, 193, 194], "set": [0, 2, 3, 5, 7, 8, 12, 16, 17, 18, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 48, 51, 53, 61, 63, 64, 65, 67, 69, 70, 71, 72, 75, 76, 78, 80, 81, 84, 86, 87, 88, 89, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 108, 111, 116, 117, 121, 122, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 153, 156, 163, 172, 178, 179, 180, 182, 183, 184, 187, 191, 192, 195, 196, 199, 200], "all": [0, 2, 5, 6, 7, 8, 18, 19, 22, 26, 27, 28, 31, 32, 33, 34, 36, 38, 40, 42, 43, 45, 46, 49, 52, 54, 55, 56, 59, 61, 63, 64, 65, 66, 67, 69, 70, 77, 78, 79, 82, 84, 85, 86, 87, 88, 93, 95, 97, 99, 100, 101, 104, 105, 106, 108, 113, 115, 117, 119, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 157, 170, 172, 180, 182, 185, 189, 190, 191, 194], "avail": [0, 2, 13, 26, 36, 49, 53, 54, 65, 66, 67, 80, 88, 92, 100, 101, 102, 105, 106, 107, 110, 112, 115, 116, 117, 120, 121, 122, 125, 126, 127, 131, 133, 134, 135, 139, 140, 143, 145, 148, 157, 172, 178, 180, 185, 187, 196, 199, 200, 203], "maximum": [0, 32, 62, 67, 70, 72, 80, 100, 106, 117, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 175, 176, 182, 183, 187, 195, 203], "num_cpu_cor": 0, "select": [0, 8, 31, 34, 37, 38, 40, 43, 45, 46, 54, 55, 63, 64, 65, 66, 67, 69, 71, 84, 90, 99, 122, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 148, 149, 175, 178, 197, 203], "an": [0, 5, 7, 8, 15, 18, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 156, 158, 159, 160, 161, 163, 164, 165, 171, 172, 178, 179, 182, 183, 185, 186, 187, 189, 190, 191, 192, 195, 196, 199, 200, 203], "error": [0, 22, 23, 45, 46, 51, 53, 57, 59, 74, 85, 111, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 148, 158, 159, 164, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196], "rais": [0, 23, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 159, 164, 171, 172, 178, 180, 181, 182, 183, 185, 187], "same": [0, 5, 8, 15, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 179, 180, 185, 189, 191, 192, 194, 196, 197, 198, 200], "directli": [0, 7, 8, 17, 33, 45, 65, 66, 95, 97, 107, 114, 121, 129, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 179, 181, 203], "directiongett": [0, 136, 139, 145, 146, 182, 195], "direct": [0, 2, 3, 5, 25, 28, 35, 37, 39, 40, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 82, 84, 88, 89, 90, 91, 95, 96, 98, 99, 100, 103, 106, 107, 116, 120, 122, 126, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 172, 175, 178, 179, 180, 181, 182, 185, 186, 187, 189, 191, 195, 199, 200, 203, 204], "closest_peak_direction_gett": [0, 146], "basedirectiongett": [0, 146], "basepmfdirectiongett": [0, 146], "reconst": [0, 25, 35, 37, 38, 40, 43, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 82, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 129, 136, 146, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 195], "eudxdirectiongett": [0, 137, 146], "eudx_direction_gett": [0, 146], "migrat": [0, 126, 195], "tavi": 0, "azur": [0, 126, 190, 191, 192, 193, 195], "depend": [0, 27, 42, 52, 54, 63, 65, 66, 78, 84, 88, 92, 95, 97, 107, 111, 112, 116, 117, 120, 122, 126, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 162, 180, 183, 185, 187, 189, 190, 193, 195], "ad": [0, 5, 6, 7, 8, 18, 37, 40, 51, 53, 54, 64, 65, 77, 100, 104, 108, 110, 111, 112, 113, 126, 131, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 160, 161, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196], "tqdm": [0, 126, 146, 192], "registr": [0, 1, 2, 3, 25, 28, 31, 34, 47, 87, 110, 111, 118, 119, 126, 129, 131, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 167, 170, 172, 178, 180, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197], "interp": [0, 131, 192], "method": [0, 1, 2, 3, 23, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 52, 54, 58, 59, 63, 64, 65, 66, 69, 70, 77, 78, 79, 80, 81, 86, 92, 95, 100, 101, 102, 104, 105, 106, 110, 111, 117, 118, 119, 120, 121, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 164, 169, 182, 183, 185, 186, 187, 190, 191, 193, 195, 196], "align": [0, 25, 26, 27, 31, 32, 33, 37, 43, 47, 54, 55, 66, 75, 76, 82, 84, 87, 90, 91, 101, 104, 107, 108, 120, 121, 129, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 148, 172, 178, 180, 181, 187, 191, 192, 193, 195], "imaffin": [0, 26, 27, 87, 91, 146, 180, 189, 195], "affinemap": [0, 26, 27, 91, 146, 178, 182, 190, 192], "transform": [0, 26, 27, 28, 29, 31, 32, 33, 37, 38, 46, 47, 52, 59, 63, 70, 75, 76, 85, 87, 88, 90, 91, 101, 102, 104, 107, 108, 109, 114, 118, 126, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 170, 172, 178, 183, 184, 186, 187, 188, 189, 191, 192, 196, 199], "interpol": [0, 33, 39, 40, 42, 55, 57, 60, 63, 67, 74, 76, 85, 88, 96, 100, 104, 109, 126, 131, 135, 139, 140, 142, 143, 145, 146, 171, 180, 185, 189, 193, 195], "transform_invers": [0, 90, 91, 131, 145, 146], "tissu": [0, 2, 3, 38, 54, 59, 61, 63, 64, 66, 67, 68, 69, 82, 87, 88, 95, 96, 117, 120, 122, 126, 134, 139, 141, 143, 145, 146, 161, 179, 180, 188, 189, 190, 191, 192], "tissueclassifierhmrf": [0, 65, 92, 146, 192], "now": [0, 7, 8, 10, 11, 17, 18, 19, 22, 23, 26, 27, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 48, 49, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 80, 84, 85, 87, 88, 90, 91, 92, 98, 99, 101, 104, 105, 108, 110, 111, 112, 126, 127, 133, 139, 141, 142, 143, 178, 179, 185, 186, 187, 203], "check": [0, 5, 8, 18, 22, 42, 49, 52, 59, 64, 70, 76, 79, 80, 90, 111, 112, 116, 117, 119, 120, 121, 122, 131, 133, 134, 135, 137, 139, 140, 142, 143, 145, 152, 153, 157, 161, 166, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 195, 197], "toler": [0, 32, 35, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 178, 180, 183, 195], "base": [0, 1, 2, 3, 8, 25, 27, 28, 31, 33, 35, 36, 38, 39, 40, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 63, 66, 72, 73, 74, 88, 105, 112, 116, 117, 118, 126, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 154, 156, 164, 167, 170, 172, 178, 179, 180, 182, 183, 186, 187, 189, 190, 191, 192, 195, 200, 202], "stop": [0, 8, 43, 88, 93, 94, 95, 97, 98, 106, 122, 131, 139, 140, 143, 145, 148, 175, 183, 187, 189, 191], "criterion": [0, 5, 43, 88, 93, 94, 97, 98, 106, 121, 122, 135, 139, 143, 145, 175], "everi": [0, 22, 33, 36, 44, 46, 64, 67, 71, 78, 79, 85, 86, 88, 97, 99, 101, 105, 107, 111, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 183, 185, 197], "iter": [0, 23, 26, 27, 32, 36, 44, 45, 52, 56, 70, 72, 75, 84, 87, 90, 91, 92, 105, 131, 133, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 169, 178, 182, 189, 194], "previous": [0, 26, 29, 36, 44, 57, 61, 65, 66, 67, 78, 79, 80, 92, 105, 121, 131, 133, 139, 140, 143, 144], "onli": [0, 5, 8, 9, 11, 17, 19, 22, 27, 28, 33, 36, 37, 38, 40, 42, 43, 45, 46, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 99, 100, 102, 105, 107, 112, 113, 116, 117, 120, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 160, 161, 164, 165, 171, 172, 178, 179, 180, 183, 185, 187, 189, 190, 192, 199, 200, 203], "10th": [0, 131, 145], "thi": [0, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204], "mai": [0, 5, 7, 8, 10, 14, 22, 23, 26, 27, 28, 36, 42, 52, 55, 59, 64, 65, 66, 75, 76, 87, 102, 105, 110, 111, 116, 117, 119, 122, 127, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 169, 171, 173, 175, 176, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196, 199, 200], "result": [0, 4, 5, 22, 23, 26, 27, 29, 35, 36, 37, 38, 39, 40, 42, 43, 46, 49, 52, 54, 59, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 80, 81, 87, 88, 90, 92, 93, 95, 98, 105, 108, 109, 110, 112, 116, 117, 118, 119, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 150, 151, 153, 154, 155, 156, 164, 165, 169, 173, 174, 183, 189, 194, 195], "earlier": [0, 114], "termin": [0, 28, 111, 112, 115, 131, 133, 135, 139], "than": [0, 5, 17, 18, 19, 22, 24, 26, 27, 31, 35, 40, 42, 43, 47, 48, 52, 54, 55, 59, 61, 63, 64, 66, 67, 69, 71, 78, 82, 86, 88, 100, 104, 108, 109, 110, 111, 120, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 165, 170, 172, 178, 179, 182, 185, 191, 195, 196], "previou": [0, 8, 26, 54, 55, 65, 111, 112, 113, 122, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 179, 203], "reconstruct": [0, 2, 3, 25, 38, 39, 43, 49, 58, 60, 61, 63, 64, 69, 73, 84, 94, 95, 96, 97, 98, 99, 100, 107, 110, 112, 116, 117, 118, 122, 126, 129, 133, 134, 135, 136, 138, 139, 141, 143, 145, 158, 160, 161, 162, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 196, 197, 203], "csdeconv": [0, 37, 43, 45, 52, 53, 70, 71, 93, 94, 95, 96, 97, 98, 99, 100, 145, 146, 179, 181, 186, 191], "auto_respons": [0, 146, 181], "auto_response_ssst": [0, 37, 43, 45, 52, 53, 70, 71, 93, 94, 95, 96, 97, 98, 99, 100, 146], "response_from_mask": [0, 65, 146], "response_from_mask_ssst": [0, 52, 145, 146], "sim": [0, 25, 37, 52, 58, 66, 70, 72, 82, 83, 129, 133, 134, 139, 146, 180, 183, 185, 189], "voxel": [0, 2, 3, 26, 29, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 99, 100, 101, 104, 107, 112, 116, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 159, 162, 169, 171, 175, 176, 178, 179, 180, 185, 187, 188, 189, 191, 192, 197], "multi_shell_fiber_respons": [0, 65, 146], "move": [0, 16, 20, 26, 27, 31, 32, 33, 37, 43, 44, 63, 72, 77, 85, 87, 88, 90, 91, 101, 104, 112, 114, 120, 121, 126, 131, 133, 135, 137, 139, 140, 143, 144, 145, 147, 148, 149, 172, 178, 180, 181, 183, 184, 187, 189, 191, 192, 194, 195], "mcsd": [0, 65, 146, 190, 195], "In": [0, 5, 12, 16, 21, 22, 23, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 96, 97, 99, 101, 102, 104, 105, 107, 108, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 163, 178, 192, 199, 200, 203], "prior": [0, 35, 39, 40, 116, 133, 140, 142, 145, 188], "user": [0, 8, 15, 18, 19, 22, 26, 31, 32, 100, 111, 112, 113, 116, 117, 121, 126, 131, 133, 135, 136, 137, 139, 140, 141, 143, 144, 145, 178, 182, 183, 189, 195, 201], "scipi": [0, 4, 5, 45, 54, 55, 63, 84, 88, 107, 111, 126, 131, 133, 134, 135, 139, 140, 142, 143, 145, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195], "memori": [0, 23, 46, 50, 56, 97, 99, 107, 126, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 169, 178, 179, 181, 183, 187, 189, 191, 193, 195, 197], "overlap": [0, 33, 67, 90, 91, 126, 131, 133, 135, 139, 142, 191], "bug": [0, 6, 7, 8, 18, 126, 131, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195], "occur": [0, 61, 69, 129, 131, 135, 138, 139, 142, 143], "multi_median": [0, 126, 146, 191], "caus": [0, 85, 108, 131, 133, 135, 139, 140, 142, 143, 145, 178, 186, 187], "overli": 0, "smooth": [0, 26, 37, 39, 43, 54, 55, 64, 65, 67, 70, 75, 92, 131, 133, 135, 136, 138, 139, 140, 143, 145, 147, 148, 171, 185], "output": [0, 5, 8, 9, 22, 29, 31, 34, 36, 39, 40, 41, 42, 43, 54, 72, 75, 80, 95, 100, 101, 105, 113, 114, 116, 117, 119, 120, 121, 122, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 177, 178, 179, 180, 183, 186, 187, 189, 191, 192, 193, 195], "fix": [0, 1, 6, 7, 8, 18, 22, 33, 43, 63, 96, 100, 105, 126, 131, 133, 138, 139, 140, 141, 143, 144, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "regardless": [0, 139, 140, 143, 145], "": [0, 1, 2, 3, 5, 7, 8, 14, 15, 17, 18, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 186, 188, 189, 192, 195, 197, 199, 200, 201, 203], "instal": [0, 5, 8, 10, 16, 20, 22, 25, 64, 105, 123, 129, 133, 134, 135, 138, 139, 143, 178, 180, 181, 183, 186, 187, 188, 189, 190, 191], "via": [0, 8, 22, 35, 36, 37, 43, 46, 71, 73, 105, 106, 111, 131, 133, 134, 135, 138, 139, 140, 143, 145, 148, 178, 182, 199, 200], "median_otsu": [0, 37, 38, 40, 50, 51, 53, 54, 55, 59, 61, 65, 66, 70, 84, 87, 90, 91, 106, 146, 169, 189, 191], "threshold": [0, 6, 28, 31, 34, 35, 42, 43, 52, 61, 63, 64, 65, 70, 78, 79, 80, 81, 84, 95, 96, 106, 113, 116, 120, 122, 131, 135, 136, 139, 142, 143, 144, 145, 146, 148, 152, 153, 156, 158, 159, 160, 161, 162, 163, 165, 166, 170, 172, 173, 175, 176, 180, 183, 186, 187, 188, 189, 191], "should": [0, 5, 6, 7, 8, 11, 14, 17, 22, 36, 40, 42, 45, 46, 47, 48, 50, 52, 54, 59, 63, 64, 65, 66, 67, 69, 70, 75, 78, 86, 88, 97, 100, 105, 106, 107, 110, 111, 112, 119, 128, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 159, 163, 165, 178, 180, 181, 183, 188, 189, 190, 192, 194, 195, 196], "imag": [0, 1, 2, 3, 5, 22, 26, 27, 28, 29, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 71, 73, 74, 76, 77, 82, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 112, 116, 117, 118, 119, 122, 124, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 158, 160, 161, 162, 165, 166, 168, 169, 175, 176, 179, 180, 183, 184, 187, 189, 191, 195, 197, 199, 203], "process": [0, 5, 26, 32, 34, 36, 37, 41, 42, 43, 46, 49, 51, 52, 53, 54, 55, 61, 63, 66, 67, 78, 80, 86, 87, 90, 101, 105, 110, 111, 113, 116, 117, 119, 120, 121, 122, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 169, 171, 173, 180, 189, 191, 195, 203], "pipelin": [0, 26, 27, 42, 99, 101, 104, 126, 131, 139, 145, 191, 192, 195], "after": [0, 8, 11, 30, 31, 32, 33, 37, 38, 41, 42, 43, 52, 63, 67, 81, 86, 90, 92, 101, 104, 105, 109, 111, 114, 116, 117, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 148, 156, 170, 176, 180, 185, 186, 187, 191, 194], "make": [0, 5, 6, 7, 12, 15, 16, 17, 19, 20, 23, 25, 27, 28, 29, 31, 33, 35, 36, 42, 48, 50, 51, 57, 59, 63, 64, 65, 67, 75, 78, 79, 80, 88, 90, 101, 102, 105, 107, 111, 113, 124, 131, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 192, 195, 196, 198, 200, 203], "sure": [0, 5, 7, 8, 22, 27, 28, 50, 59, 78, 79, 80, 90, 101, 111, 113, 114, 131, 134, 137, 140, 142, 144, 145], "still": [0, 8, 22, 42, 56, 59, 64, 67, 69, 75, 84, 88, 95, 98, 111, 120, 131, 133, 135, 136, 137, 139, 140, 142, 143, 145, 179, 180, 187, 192, 203], "oper": [0, 4, 5, 26, 37, 43, 51, 84, 85, 101, 105, 131, 133, 134, 137, 139, 140, 141, 142, 143, 144, 145, 178, 197], "expect": [0, 46, 54, 61, 77, 92, 100, 107, 117, 121, 131, 134, 135, 137, 138, 139, 140, 142, 143, 145, 148, 180, 199, 200], "try": [0, 5, 19, 22, 27, 35, 54, 59, 72, 80, 81, 90, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 126, 131, 134, 135, 139, 143, 145, 181, 185, 186, 187, 189, 199, 200], "readjust": 0, "median_radiu": [0, 29, 38, 40, 50, 51, 53, 54, 55, 59, 65, 66, 70, 87, 90, 91, 112, 140, 145, 169], "peak_direction_gett": [0, 189], "dipy_track_loc": [0, 189], "dipy_track": [0, 25, 112, 122, 177, 191], "other": [0, 5, 6, 12, 15, 17, 20, 21, 26, 27, 32, 33, 34, 35, 36, 40, 42, 43, 45, 46, 49, 51, 52, 54, 55, 59, 62, 63, 64, 65, 66, 67, 70, 71, 72, 76, 77, 78, 82, 84, 87, 88, 90, 92, 94, 95, 99, 101, 105, 107, 111, 113, 116, 117, 119, 120, 122, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 156, 161, 181, 185, 186, 189, 192, 194, 199, 200], "gradient": [0, 2, 3, 26, 35, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 82, 83, 84, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 103, 107, 110, 112, 116, 120, 126, 129, 134, 135, 139, 141, 145, 146, 148, 162, 163, 178, 179, 182, 183, 185, 187, 190, 191, 192, 196, 199, 200, 201], "unique_bv": [0, 146], "unique_bvals_magnitud": [0, 146], "visual": [0, 8, 25, 30, 31, 32, 34, 35, 37, 38, 40, 42, 43, 44, 46, 48, 49, 50, 52, 54, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 107, 109, 110, 111, 112, 113, 114, 125, 126, 129, 135, 136, 137, 139, 140, 143, 144, 145, 165, 180, 181, 182, 183, 185, 186, 189, 192, 194, 195, 197], "window": [0, 6, 13, 22, 30, 31, 33, 34, 35, 37, 40, 43, 44, 46, 48, 50, 51, 52, 53, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 112, 113, 126, 131, 133, 139, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197], "scene": [0, 30, 31, 33, 34, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 143, 144, 145, 165, 191], "instead": [0, 17, 18, 22, 23, 26, 31, 39, 42, 70, 98, 111, 113, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 179, 180, 181, 182, 184, 187, 188, 190, 191, 194, 195, 196], "render": [0, 5, 35, 48, 101, 106, 144, 178, 180, 181, 182, 183, 184, 187, 191, 194], "clear": [0, 5, 42, 44, 52, 59, 64, 71, 72, 77, 78, 79, 81, 102, 104, 131, 139, 140, 143, 145, 146, 187, 191], "rm_all": 0, "img": [0, 38, 49, 50, 56, 57, 60, 61, 62, 74, 75, 76, 131, 134, 137, 140, 145, 189], "get_data": [0, 183, 189, 190], "sinc": [0, 8, 18, 26, 28, 35, 38, 40, 41, 42, 43, 46, 54, 59, 63, 64, 69, 70, 75, 78, 79, 81, 82, 84, 87, 105, 117, 131, 133, 135, 136, 137, 139, 140, 141, 143, 145, 203], "nibabel": [0, 4, 5, 22, 29, 39, 40, 49, 50, 54, 56, 57, 59, 60, 61, 62, 68, 74, 76, 85, 87, 107, 111, 126, 129, 131, 134, 137, 139, 144, 145, 181, 183, 187, 190, 192, 196, 197], "np": [0, 5, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 100, 101, 102, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 178, 180, 185, 192, 194, 196], "asanyarrai": [0, 137], "dataobj": [0, 38, 60, 61, 87, 137], "tractogram": [0, 2, 3, 28, 31, 85, 98, 114, 122, 126, 131, 134, 140, 143, 144, 145, 146, 165, 170, 172, 175, 176, 189, 194, 195, 196], "streamlin": [0, 1, 2, 3, 25, 28, 30, 31, 32, 33, 34, 35, 43, 46, 48, 78, 79, 80, 81, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 113, 118, 122, 126, 129, 134, 139, 146, 165, 167, 170, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 195, 196, 197], "statefultractogram": [0, 31, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 126, 131, 134, 140, 143, 146, 191, 195], "can": [0, 2, 4, 5, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 156, 159, 160, 161, 165, 166, 170, 179, 183, 187, 189, 192, 195, 196, 197, 198, 199, 200, 203, 204], "creat": [0, 5, 7, 12, 26, 27, 28, 30, 32, 34, 37, 38, 43, 44, 46, 49, 52, 54, 55, 58, 59, 61, 63, 65, 69, 72, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 93, 95, 96, 99, 100, 101, 102, 103, 106, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 168, 178, 182, 183, 185, 186, 187, 188, 189, 191, 194], "anoth": [0, 7, 22, 43, 46, 63, 85, 105, 131, 133, 136, 137, 139, 140, 143, 144, 145, 186, 187, 190, 199], "one": [0, 5, 6, 8, 11, 18, 22, 26, 28, 33, 36, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 73, 74, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 91, 95, 103, 107, 108, 109, 111, 122, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 156, 160, 161, 165, 178, 180, 182, 184, 187, 189, 190, 192, 194, 199, 200, 203], "workflow": [0, 2, 12, 14, 16, 18, 25, 110, 113, 114, 116, 117, 119, 120, 121, 122, 126, 146, 150, 151, 153, 154, 155, 156, 160, 161, 162, 163, 164, 168, 169, 175, 176, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196], "dipy_nlmean": [0, 105], "dipy_denoise_nlmean": [0, 25, 116, 177], "get_fdata": [0, 47, 60, 61, 69, 190], "modif": [0, 78, 131, 133, 135, 136, 139, 140, 145, 180, 181], "appli": [0, 26, 31, 33, 37, 38, 39, 42, 43, 50, 52, 53, 54, 55, 56, 57, 62, 66, 70, 77, 81, 86, 88, 90, 91, 104, 106, 107, 110, 116, 117, 118, 119, 126, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 164, 165, 169, 171, 172, 175, 183, 184, 187, 190, 191, 195, 197, 200], "codebas": [0, 110, 126], "datatyp": [0, 137, 139, 187], "float64": [0, 37, 41, 131, 133, 139, 140, 142, 143, 178, 183, 189, 196], "some": [0, 4, 7, 11, 12, 15, 17, 18, 21, 22, 23, 27, 28, 31, 35, 36, 44, 45, 46, 47, 48, 49, 54, 61, 63, 64, 65, 66, 67, 69, 70, 72, 75, 77, 78, 79, 85, 86, 87, 88, 91, 95, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 121, 125, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 160, 161, 169, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 200], "introduc": [0, 5, 33, 38, 52, 54, 63, 65, 69, 70, 98, 120, 133, 135, 139, 145, 179, 187], "break": [0, 6, 33, 104, 133, 134, 135, 139, 178, 183, 185, 187, 189, 190, 195], "backward": [0, 6, 37, 131, 135, 136, 138, 139, 142, 145, 187, 195], "compat": [0, 6, 20, 25, 126, 135, 136, 137, 138, 139, 140, 142, 144, 145, 179, 183, 184, 185, 186, 187, 188, 189, 192, 195], "python": [0, 1, 4, 5, 20, 22, 25, 36, 49, 95, 105, 107, 123, 125, 126, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 159, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196], "harmon": [0, 8, 25, 50, 51, 60, 73, 94, 97, 120, 126, 129, 131, 134, 135, 136, 137, 138, 139, 144, 145, 158, 159, 178, 183, 185, 187, 202], "mrtrix": [0, 134, 136, 137, 139, 140, 145, 189, 191, 192, 203], "fibernav": 0, "tournier07": [0, 135, 136, 138, 139, 145, 203], "descoteaux07": [0, 72, 135, 136, 138, 139, 145, 203], "cycl": [0, 131, 133, 137, 139, 197], "start": [0, 8, 14, 22, 24, 25, 26, 28, 32, 33, 34, 44, 47, 51, 52, 53, 61, 63, 67, 68, 70, 76, 77, 80, 86, 88, 93, 97, 98, 99, 101, 104, 108, 111, 120, 122, 123, 129, 131, 133, 135, 136, 138, 139, 140, 142, 143, 145, 176, 187, 189, 197, 201], "data": [0, 1, 3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 194, 195, 196], "default_spher": [0, 35, 37, 43, 48, 50, 52, 53, 77, 88, 94, 95, 96, 97, 100, 103, 139, 141, 144], "symmetric724": [0, 65, 72, 134, 135, 138, 139, 145, 189], "repulsion724": [0, 51, 56, 58, 59, 60, 62, 64, 70, 73, 83, 134, 135, 138, 139, 145, 189], "more": [0, 4, 5, 6, 11, 18, 21, 23, 24, 26, 31, 33, 34, 35, 40, 41, 43, 45, 46, 48, 54, 55, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 77, 78, 79, 80, 82, 85, 86, 87, 88, 98, 99, 100, 101, 103, 104, 107, 109, 110, 111, 112, 113, 114, 119, 123, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 154, 179, 180, 181, 182, 185, 186, 187, 189, 190, 196, 197, 204], "evenli": [0, 44, 66, 72, 99, 131, 133, 139, 143], "mask": [0, 2, 3, 8, 29, 35, 37, 38, 40, 41, 43, 48, 50, 51, 52, 53, 54, 55, 59, 61, 62, 65, 66, 67, 68, 69, 70, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 112, 120, 122, 126, 131, 134, 135, 136, 138, 139, 143, 144, 146, 158, 159, 160, 161, 162, 168, 169, 173, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 189, 191, 193, 195], "follow": [0, 2, 5, 6, 7, 8, 16, 18, 19, 20, 21, 22, 23, 24, 26, 33, 38, 39, 40, 42, 44, 46, 47, 49, 54, 55, 56, 59, 63, 65, 66, 67, 68, 69, 71, 76, 77, 78, 83, 84, 85, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 124, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 156, 160, 161, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "wai": [0, 5, 7, 8, 14, 15, 17, 18, 21, 22, 23, 28, 36, 38, 44, 45, 47, 49, 52, 54, 55, 56, 59, 61, 64, 65, 66, 67, 70, 80, 83, 88, 89, 94, 95, 97, 101, 102, 104, 107, 111, 112, 119, 120, 122, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 163, 188, 200], "you": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 165, 167, 170, 171, 179, 183, 185, 196, 197, 198], "4d": [0, 39, 41, 42, 49, 52, 58, 59, 63, 70, 110, 116, 120, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 164, 169, 171, 174, 183, 189, 191], "volum": [0, 1, 2, 3, 25, 26, 27, 28, 29, 36, 39, 40, 42, 46, 48, 49, 52, 55, 56, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 85, 87, 90, 91, 92, 96, 98, 100, 106, 107, 112, 116, 117, 118, 120, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 173, 174, 175, 176, 178, 180, 182, 186, 189, 191, 192, 195, 201], "vol_idx": [0, 38, 40, 50, 51, 53, 54, 55, 59, 65, 66, 70, 84, 87, 112, 120, 140, 145, 169, 174, 189], "requir": [0, 4, 5, 27, 31, 37, 42, 43, 46, 54, 55, 60, 64, 66, 67, 68, 69, 70, 71, 76, 78, 80, 81, 82, 85, 99, 101, 104, 106, 111, 112, 113, 114, 116, 120, 121, 122, 128, 129, 131, 133, 135, 137, 138, 139, 140, 143, 144, 145, 169, 174, 180, 187, 189, 191, 192, 193], "order": [0, 5, 22, 23, 26, 27, 33, 37, 41, 42, 43, 46, 50, 51, 53, 54, 57, 59, 60, 63, 64, 67, 68, 69, 72, 73, 80, 85, 87, 88, 95, 104, 115, 116, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 159, 163, 171, 178, 181, 183, 185, 189, 191, 195, 196, 203, 204], "also": [0, 1, 5, 7, 8, 19, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 165, 169, 178, 197, 203, 204], "load": [0, 28, 31, 32, 39, 40, 42, 44, 47, 49, 50, 52, 54, 56, 57, 59, 60, 61, 62, 64, 66, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 85, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 104, 107, 129, 131, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 165, 178, 183, 185, 189, 196], "save": [0, 7, 8, 29, 31, 33, 34, 36, 39, 40, 42, 44, 47, 48, 49, 50, 52, 56, 57, 59, 60, 62, 65, 70, 71, 72, 74, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 95, 99, 101, 104, 105, 107, 110, 113, 114, 116, 117, 119, 120, 121, 122, 126, 129, 131, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 169, 171, 173, 175, 176, 180, 183, 184, 187, 189, 190, 191, 192, 194, 196], "load_tractogram": [0, 78, 79, 80, 81, 85, 87, 142, 146, 190], "save_tractogram": [0, 85, 87, 146], "trk": [0, 2, 3, 28, 31, 46, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 107, 112, 113, 114, 131, 134, 137, 140, 143, 144, 145, 165, 186, 189, 190, 192], "tck": [0, 2, 3, 85, 137, 140, 143, 144, 145, 165, 183, 189, 190, 191], "vtk": [0, 4, 85, 111, 126, 140, 143, 144, 145, 146, 178, 180, 181, 182, 183, 187, 188, 191, 195], "fib": [0, 2, 3, 85, 137, 140, 143, 144, 145], "dpy": [0, 2, 3, 85, 107, 129, 140, 143, 144, 145, 146, 165, 180, 197], "refer": [0, 1, 8, 14, 19, 22, 25, 33, 63, 67, 75, 85, 103, 106, 111, 118, 126, 128, 129, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 201, 202, 204], "nifti": [0, 36, 47, 48, 49, 59, 76, 85, 107, 110, 113, 120, 121, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 158, 159, 161, 163, 182, 184, 189, 197], "file": [0, 2, 3, 4, 5, 7, 8, 18, 22, 23, 25, 26, 27, 28, 31, 36, 42, 46, 47, 49, 59, 63, 74, 76, 87, 88, 95, 99, 105, 107, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197], "need": [0, 5, 7, 8, 10, 11, 17, 20, 23, 26, 27, 28, 29, 32, 35, 36, 40, 41, 42, 44, 45, 46, 48, 50, 51, 54, 56, 59, 63, 64, 65, 66, 67, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 97, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 165, 171, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 189, 190, 191, 196, 198, 200], "guarante": [0, 64, 78, 85, 133, 135, 139, 142, 143], "proper": [0, 70, 139, 145, 178], "spatial": [0, 37, 40, 46, 59, 61, 63, 70, 73, 78, 85, 87, 88, 98, 110, 120, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 185, 189, 196, 201], "handl": [0, 4, 8, 23, 38, 85, 110, 131, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 196], "were": [0, 28, 35, 39, 42, 46, 52, 61, 63, 66, 67, 68, 87, 88, 107, 131, 133, 134, 135, 136, 139, 140, 143, 145, 185, 186], "modifi": [0, 8, 26, 27, 32, 48, 81, 85, 88, 131, 133, 134, 137, 139, 140, 142, 143, 145, 186, 191, 192, 203], "enforc": [0, 7, 64, 69, 86, 131, 133, 134, 137, 139, 140, 143, 144, 145, 194], "affin": [0, 28, 29, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 70, 71, 73, 74, 76, 77, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 119, 121, 126, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 172, 178, 180, 182, 183, 184, 187, 188, 189, 191, 195], "uniform": [0, 131, 133, 139], "docstr": [0, 5, 36, 105, 138, 144, 145, 178, 179, 180, 181, 184, 185, 187, 188, 190, 192, 193, 195, 196, 204], "deform_streamlin": [0, 87, 146, 195, 196], "select_by_roi": [0, 146], "orient_by_roi": [0, 146, 180, 183], "_extract_v": 0, "values_from_volum": [0, 146, 180], "util": [0, 22, 23, 25, 31, 35, 43, 48, 59, 63, 77, 85, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 103, 112, 120, 126, 131, 133, 134, 135, 136, 138, 140, 142, 144, 145, 146, 179, 180, 181, 183, 185, 187, 189, 190, 191, 195], "density_map": [0, 85, 88, 146, 191], "connectivity_matrix": [0, 88, 146, 183, 187, 190], "seeds_from_mask": [0, 35, 43, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 146], "random_seeds_from_mask": [0, 146], "target": [0, 22, 31, 32, 33, 42, 87, 88, 100, 114, 131, 133, 139, 140, 142, 145, 146, 180, 183, 187], "target_line_bas": [0, 146, 191], "near_roi": [0, 43, 146, 195], "length": [0, 28, 33, 35, 63, 64, 78, 79, 80, 101, 102, 106, 107, 109, 133, 134, 136, 137, 139, 141, 142, 145, 146, 147, 148, 165, 170, 172, 178, 180, 183, 187, 195, 204], "path_length": [0, 48, 146], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 196], "delet": [0, 12, 22, 62, 111, 131, 133, 134, 137, 178, 182, 186, 187, 189], "life": [0, 106, 126, 133, 146, 179, 187, 188, 189, 190, 191, 192], "voxel2streamlin": [0, 146], "setup": [0, 22, 111, 131, 133, 134, 135, 137, 138, 139, 140, 142, 144, 145, 146, 179, 180, 187], "fit": [0, 26, 37, 38, 40, 43, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 84, 87, 93, 94, 95, 96, 97, 98, 99, 100, 106, 110, 120, 124, 126, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 146, 158, 159, 161, 162, 163, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 191, 195, 196], "fibermodel": [0, 46, 146], "afq_profil": [0, 28, 146, 194], "stat": [0, 7, 25, 28, 30, 45, 71, 113, 126, 131, 133, 139, 146, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "analysi": [0, 1, 5, 21, 25, 28, 30, 38, 40, 47, 48, 49, 54, 57, 60, 61, 64, 65, 66, 73, 74, 84, 95, 96, 99, 100, 110, 112, 113, 114, 116, 119, 120, 122, 125, 126, 133, 134, 135, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 189, 191, 196, 199], "similarli": [0, 63, 67, 69, 131, 134, 139, 145, 148], "simul": [0, 25, 44, 58, 64, 66, 72, 77, 86, 129, 133, 134, 135, 139, 141, 178, 185, 192], "singletensor": [0, 189], "single_tensor": [0, 82, 146, 180, 189], "multitensor": [0, 66, 72, 106, 141], "multi_tensor": [0, 58, 66, 83, 139, 146, 180], "sticksandbal": 0, "sticks_and_bal": [0, 139, 146], "voxel_s": [0, 56, 62, 76, 85, 96, 133, 137, 143, 144, 145, 146, 189], "stremline_map": 0, "_util": [0, 146], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 182, 189], "localtrack": [0, 35, 43, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 146, 180, 189, 195], "particlefilteringtrack": [0, 96, 146], "local": [0, 1, 2, 3, 8, 16, 19, 22, 26, 28, 31, 38, 40, 42, 43, 48, 52, 59, 66, 70, 90, 94, 95, 96, 106, 111, 114, 118, 120, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 153, 154, 155, 164, 167, 170, 172, 175, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 201], "local_track": [0, 35, 43, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 146], "thei": [0, 5, 8, 19, 22, 26, 32, 33, 35, 36, 39, 45, 54, 59, 67, 70, 73, 76, 78, 79, 80, 81, 84, 85, 88, 101, 105, 109, 112, 113, 116, 120, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 189, 199, 200], "tissue_classifi": 0, "stopping_criterion": [0, 35, 43, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 145, 146], "tissueclassifi": 0, "stoppingcriterion": [0, 145, 146], "binarytissueclassifi": [0, 183, 184], "binarystoppingcriterion": [0, 88, 100, 146], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 35, 43, 48, 93, 94, 95, 97, 98, 99, 100, 103, 146], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 145, 146], "acttissueclassifi": 0, "actstoppingcriterion": [0, 100, 146], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 96, 146], "tissueclass": 0, "streamlinestatu": [0, 146], "eudx": [0, 88, 94, 95, 112, 118, 145, 175, 186, 187, 189, 192], "tractographi": [0, 1, 2, 3, 28, 32, 33, 35, 43, 46, 48, 54, 56, 64, 66, 76, 80, 82, 85, 87, 93, 94, 95, 106, 107, 112, 114, 120, 122, 123, 126, 129, 131, 133, 137, 139, 140, 141, 142, 143, 144, 145, 176, 180, 182, 187, 188, 194, 196], "perform": [0, 5, 26, 31, 32, 37, 38, 40, 42, 43, 45, 47, 58, 63, 65, 69, 75, 78, 80, 81, 82, 84, 85, 87, 90, 91, 92, 95, 112, 116, 117, 119, 120, 121, 122, 126, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 148, 160, 161, 162, 191, 195, 199], "trackvi": [0, 85, 88, 95, 107, 131, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 182, 184, 189, 192, 197], "extern": [0, 52, 65, 105, 144, 145, 180, 189, 197], "quickbund": [0, 189], "peak": [0, 46, 50, 51, 52, 62, 65, 70, 71, 88, 94, 95, 97, 99, 106, 112, 118, 120, 126, 129, 139, 141, 142, 143, 144, 145, 146, 158, 159, 175, 176, 180, 181, 182, 185, 186, 189, 190, 199], "welcom": [0, 5, 21], "viz": [0, 25, 26, 27, 30, 31, 32, 33, 34, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 60, 64, 65, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 129, 143, 146, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 195], "integr": [0, 1, 5, 12, 55, 57, 59, 74, 84, 95, 122, 126, 133, 135, 139, 182, 183, 188, 199], "variou": [0, 46, 63, 96, 106, 133, 134, 139, 143, 180, 199, 200], "analys": [0, 38, 135], "adjust": [0, 39, 42, 66, 101, 104, 131, 133, 135, 139, 140, 145, 153, 180, 184, 187], "slr": [0, 31, 32, 33, 114, 121, 126, 131, 140, 145, 172, 179, 183, 184, 187, 190, 195], "recobundl": [0, 25, 106, 118, 126, 146, 181, 182, 183, 184, 190, 191, 192, 194], "algorithm": [0, 33, 38, 39, 42, 43, 46, 54, 58, 59, 60, 61, 63, 66, 70, 71, 76, 78, 80, 81, 86, 87, 90, 91, 92, 95, 106, 112, 116, 121, 126, 127, 129, 131, 133, 135, 139, 140, 142, 143, 144, 145, 148, 153, 155, 156, 189, 190, 196, 197], "exclud": [0, 17, 35, 55, 61, 77, 84, 88, 100, 131, 136, 139, 143, 144, 192], "insid": [0, 5, 49, 64, 80, 89, 131, 133, 135, 139, 140, 142, 143, 145, 175, 176, 185], "note": [0, 5, 7, 8, 17, 18, 19, 22, 25, 27, 36, 37, 42, 45, 46, 48, 52, 54, 55, 59, 64, 65, 66, 67, 69, 75, 78, 79, 87, 91, 105, 106, 113, 116, 117, 120, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 164, 197, 199, 200, 201], "nose": [0, 108, 126, 129, 133, 135, 138, 139, 143, 183, 195], "pytest": [0, 21, 22, 111, 126, 129, 133, 139, 140, 143, 183, 184, 192, 195], "load_tck": [0, 85, 146], "save_tck": [0, 146], "highli": [0, 47, 54, 66, 78, 84, 111, 116, 119, 139], "manag": [0, 86, 104, 111, 126, 129, 134, 139, 182, 187, 195], "tabl": [0, 2, 26, 37, 39, 43, 44, 46, 64, 65, 67, 68, 69, 77, 104, 111, 126, 129, 133, 134, 135, 137, 139, 141, 143, 145, 163, 181, 183, 185, 187, 191, 192, 196], "b0_thresold": 0, "50": [0, 32, 38, 42, 46, 48, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 75, 77, 82, 83, 86, 90, 103, 112, 126, 127, 131, 133, 134, 135, 139, 140, 141, 142, 143, 145, 185], "impact": [0, 54, 66, 78, 82, 93, 120, 135, 139, 140, 141, 142, 145, 155], "your": [0, 5, 6, 7, 12, 15, 16, 17, 18, 21, 22, 23, 24, 28, 36, 41, 44, 47, 49, 50, 51, 53, 57, 59, 74, 76, 77, 78, 79, 95, 105, 107, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 126, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 180, 197, 198], "want": [0, 2, 7, 10, 12, 18, 19, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 36, 44, 48, 56, 65, 76, 77, 78, 79, 80, 84, 86, 88, 90, 91, 101, 102, 104, 107, 108, 111, 113, 116, 117, 119, 123, 125, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 167, 170, 171, 178, 198, 200], "assur": [0, 34, 84, 95, 137, 145], "code": [0, 4, 7, 8, 18, 19, 20, 21, 22, 24, 25, 107, 110, 111, 123, 126, 129, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 195, 196, 197], "run": [0, 2, 6, 7, 22, 27, 28, 32, 33, 36, 38, 40, 42, 46, 51, 70, 71, 87, 90, 95, 102, 105, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 129, 131, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 176, 178, 179, 180, 183, 187, 189, 194, 196, 197, 199, 204], "exactli": [0, 5, 93, 95, 108, 131, 133, 134, 139, 140, 141, 142, 145, 187], "manner": [0, 52, 121, 134, 137, 139, 142, 143, 145], "befor": [0, 5, 8, 22, 26, 30, 31, 32, 33, 39, 41, 46, 47, 50, 54, 55, 66, 70, 75, 80, 84, 90, 92, 95, 109, 111, 114, 116, 117, 119, 129, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 176, 182, 184, 185, 186, 187, 189, 195, 196], "pleas": [0, 1, 5, 6, 11, 18, 21, 23, 24, 35, 38, 39, 41, 42, 48, 51, 53, 61, 68, 69, 101, 103, 111, 112, 113, 114, 129, 131, 133, 134, 135, 137, 139, 143, 145, 157, 184, 187], "initi": [0, 7, 10, 26, 27, 33, 37, 45, 46, 53, 55, 61, 63, 64, 67, 70, 71, 72, 77, 81, 86, 89, 95, 98, 99, 101, 103, 104, 111, 113, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 178, 185, 188, 191, 195], "keyword": [0, 5, 46, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146], "b0_threshold": [0, 42, 63, 120, 133, 134, 135, 139, 141, 145, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 183], "fvtk": [0, 126, 143, 178, 179, 180, 182, 183, 185, 186, 187], "impli": [0, 17, 34, 47, 119, 131, 133, 134, 139, 140, 141, 145, 147, 187, 204], "actor": [0, 30, 31, 33, 34, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 143, 144, 145, 178, 182, 183, 191], "ren": [0, 104, 143, 180, 183], "ui": [0, 101, 104, 180, 181, 182, 183], "element": [0, 33, 43, 45, 52, 54, 59, 63, 68, 69, 70, 79, 82, 104, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 161, 180, 183], "To": [0, 2, 7, 8, 23, 26, 28, 32, 33, 34, 38, 39, 40, 49, 54, 63, 65, 67, 69, 70, 71, 72, 77, 80, 81, 82, 85, 88, 90, 91, 95, 98, 99, 111, 114, 116, 117, 119, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 157], "learn": [0, 14, 15, 21, 42, 45, 49, 60, 63, 110, 115, 123, 126, 134, 135, 138, 139, 142, 144, 145, 146, 156, 184, 193], "go": [0, 7, 8, 11, 17, 18, 19, 21, 22, 26, 28, 36, 46, 49, 54, 59, 63, 66, 78, 87, 95, 100, 101, 104, 105, 107, 108, 111, 113, 131, 133, 140, 143, 180, 182, 189], "http": [0, 1, 2, 3, 8, 11, 22, 23, 38, 40, 54, 64, 66, 68, 69, 70, 80, 98, 101, 107, 108, 111, 113, 114, 117, 129, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 153, 164, 180, 192], "gl": 0, "furthermor": [0, 107, 133, 139], "load_trk": [0, 28, 30, 31, 46, 85, 146, 191], "save_trk": [0, 31, 88, 93, 94, 95, 96, 97, 98, 99, 100, 146], "object": [0, 5, 7, 8, 23, 26, 36, 39, 44, 46, 49, 50, 51, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 73, 74, 77, 78, 80, 81, 85, 88, 90, 91, 95, 99, 101, 102, 103, 104, 105, 107, 108, 109, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 165, 180, 181, 183, 190, 191, 192, 196], "much": [0, 5, 6, 8, 23, 26, 35, 45, 63, 69, 131, 139, 140, 143, 145, 179], "less": [0, 5, 47, 48, 56, 67, 70, 78, 86, 107, 109, 110, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 165, 170, 172, 179, 195, 196], "easier": [0, 6, 8, 58, 88, 112, 124, 145], "No": [0, 5, 74, 85, 106, 111, 128, 131, 133, 134, 135, 138, 139, 140, 141, 142, 145, 158, 159, 160, 162, 180, 181, 190], "major": [0, 23, 108, 131, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 185], "support": [0, 21, 23, 25, 35, 70, 76, 85, 107, 112, 126, 131, 133, 137, 139, 140, 142, 143, 144, 145, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 195], "It": [0, 7, 8, 14, 17, 18, 23, 29, 31, 33, 34, 36, 37, 39, 44, 50, 52, 54, 59, 62, 63, 64, 65, 66, 67, 71, 78, 79, 81, 84, 85, 88, 90, 94, 96, 102, 104, 105, 107, 108, 113, 121, 122, 126, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 155, 156], "year": [0, 22, 184, 187], "multipl": [0, 2, 3, 5, 36, 38, 45, 50, 52, 54, 57, 59, 61, 63, 67, 70, 74, 75, 84, 104, 105, 107, 110, 112, 116, 117, 119, 120, 121, 122, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 169, 171, 173, 175, 176, 179, 182, 187, 191, 192, 196, 199], "As": [0, 5, 23, 31, 33, 40, 45, 46, 54, 55, 61, 63, 64, 65, 66, 67, 68, 72, 76, 87, 91, 94, 110, 116, 117, 119, 120, 122, 131, 135, 139, 140, 142, 143, 145], "far": [0, 22, 26, 28, 64, 139, 143], "know": [0, 8, 21, 24, 26, 46, 84, 85, 109, 111, 123, 124, 131, 133, 139, 140, 144, 145, 192], "work": [0, 5, 8, 14, 15, 18, 20, 21, 22, 23, 25, 26, 27, 29, 31, 36, 42, 61, 63, 65, 70, 72, 84, 87, 88, 105, 108, 111, 116, 120, 126, 129, 131, 133, 134, 135, 138, 139, 142, 143, 145, 163, 178, 179, 180, 183, 185, 187, 189, 190, 191, 195, 196], "well": [0, 5, 7, 8, 14, 22, 28, 29, 32, 33, 46, 54, 55, 65, 66, 67, 70, 71, 72, 84, 87, 97, 107, 111, 116, 120, 122, 131, 133, 135, 136, 139, 141, 142, 145, 183, 203], "longer": [0, 17, 107, 131, 139, 142, 143, 188], "test": [0, 2, 3, 5, 6, 7, 8, 18, 21, 22, 23, 27, 45, 48, 59, 67, 77, 113, 131, 134, 136, 137, 140, 141, 142, 144, 145, 146, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197], "upgrad": [0, 183, 184, 190], "newer": [0, 111, 139, 180, 182, 183], "probabilistic_direction_gett": [0, 146], "probabilisticdirectiongett": [0, 43, 96, 97, 98, 143, 146], "input": [0, 26, 31, 32, 33, 36, 39, 40, 43, 48, 50, 51, 54, 65, 72, 75, 77, 79, 80, 85, 90, 92, 93, 95, 101, 102, 105, 112, 113, 114, 116, 117, 119, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 173, 174, 175, 176, 178, 179, 180, 183, 186, 187, 189, 192, 194, 195, 199, 200], "pmf_threshold": [0, 122, 136, 145, 175, 176], "probabl": [0, 18, 26, 37, 57, 64, 67, 74, 92, 94, 96, 97, 111, 120, 122, 131, 136, 139, 140, 141, 143, 145, 201], "lower": [0, 23, 27, 29, 38, 39, 40, 41, 42, 43, 49, 52, 54, 55, 57, 60, 61, 63, 66, 67, 70, 74, 91, 95, 98, 100, 107, 131, 133, 135, 136, 137, 139, 140, 143, 145, 163, 168], "mass": [0, 26, 27, 97, 121, 122, 131, 136, 140, 143, 145, 147], "dki": [0, 40, 54, 55, 66, 106, 118, 126, 128, 141, 145, 146, 160, 178, 179, 180, 182, 183, 189, 190, 191, 193, 194, 195, 196, 197], "model": [0, 1, 2, 3, 18, 28, 29, 30, 31, 35, 37, 38, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 65, 66, 67, 68, 69, 74, 77, 82, 84, 88, 92, 94, 95, 96, 97, 100, 110, 112, 113, 114, 120, 122, 126, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 156, 163, 167, 170, 172, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 195, 196], "wl": [0, 77, 106, 128, 139, 145, 160, 161], "max_kurtosi": [0, 139], "axial_kurtosi": [0, 146], "mean_kurtosi": [0, 146], "radial_kuroti": 0, "prefer": [0, 8, 23, 31, 33, 104, 107, 113, 133, 139, 141, 142, 143, 178, 184, 195], "rather": [0, 17, 19, 22, 27, 75, 77, 108, 111, 131, 133, 139, 140, 141, 142, 144, 178, 182], "widget": [0, 101, 180], "slicer": [0, 43, 46, 87, 88, 98, 99, 101, 104, 137, 144, 180, 181, 182, 183, 186, 191], "power": [0, 2, 3, 63, 65, 106, 117, 126, 128, 134, 139, 143, 178, 180], "rgb": [0, 59, 102, 112, 113, 137, 139, 140, 144, 145, 160, 161, 186], "too": [0, 78, 90, 111, 136, 139, 143, 145, 179, 189], "see": [0, 6, 8, 11, 13, 14, 18, 19, 21, 22, 23, 26, 33, 36, 38, 39, 40, 42, 43, 45, 46, 49, 51, 54, 55, 56, 59, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 78, 79, 80, 81, 84, 85, 86, 88, 90, 91, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 116, 117, 124, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 157, 164, 199, 204], "tutori": [0, 16, 26, 27, 29, 30, 31, 35, 48, 50, 54, 56, 57, 60, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 79, 80, 91, 93, 98, 101, 103, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 133, 143, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196], "viz_slic": 0, "py": [0, 5, 18, 22, 23, 36, 105, 111, 113, 125, 131, 133, 139, 140, 143, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "behavior": [0, 23, 104, 131, 133, 135, 139, 140, 142, 143, 145, 182, 183, 189], "interp_rbf": [0, 146, 180, 186], "addit": [0, 5, 32, 37, 40, 54, 61, 65, 69, 101, 107, 116, 120, 127, 131, 133, 134, 137, 139, 142, 143, 144, 145, 180, 185, 189, 197, 198], "norm": [0, 5, 37, 42, 52, 64, 65, 70, 80, 109, 131, 133, 141, 142, 143, 145, 146, 152, 153, 158, 161, 163, 166, 186], "angl": [0, 43, 51, 58, 64, 66, 72, 80, 82, 83, 94, 95, 108, 109, 112, 118, 122, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 158, 175, 176, 186, 195, 196, 204], "euclidean_norm": [0, 133], "discourag": [0, 180], "11": [0, 1, 22, 28, 30, 31, 46, 55, 65, 81, 88, 110, 111, 126, 127, 129, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 178, 180, 185, 188, 189, 190, 192, 193, 194, 196, 197], "utilti": 0, "vector_field": [0, 146, 180], "warp_2d_affin": 0, "transform_2d_affin": [0, 146], "warp_2d_affine_nn": 0, "transform_2d_affine_nn": [0, 146], "warp_3d_affin": 0, "transform_3d_affin": [0, 146], "warp_3d_affine_nn": 0, "transform_3d_affine_nn": [0, 146], "gqi": [0, 62, 106, 107, 128, 134, 138, 140, 141, 143, 146, 185, 197, 201], "calcul": [0, 28, 34, 38, 43, 45, 46, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 77, 86, 93, 95, 106, 110, 112, 113, 120, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 153, 159, 164, 171, 178, 183, 185, 186, 187, 191, 197, 199, 200], "gqi2": [0, 106, 128, 139, 188], "match": [0, 22, 31, 32, 41, 70, 87, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 170], "either": [0, 5, 17, 26, 28, 42, 46, 64, 65, 70, 78, 88, 95, 99, 100, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 153, 154, 163, 180], "doc": [0, 5, 6, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 125, 133, 137, 139, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "therein": 0, "access": [0, 11, 17, 18, 22, 49, 63, 65, 68, 85, 101, 104, 111, 133, 134, 135, 137, 138, 139, 142, 144, 145, 164, 181, 190], "complet": [0, 17, 22, 35, 48, 49, 64, 69, 81, 95, 98, 103, 111, 112, 113, 122, 131, 133, 139, 144, 180, 185, 186, 195], "resampl": [0, 26, 27, 33, 76, 79, 80, 81, 91, 104, 107, 120, 129, 139, 140, 142, 143, 145, 146, 171, 178, 180, 187, 197], "aniso2iso": [0, 107, 178, 180], "reslic": [0, 56, 62, 87, 146, 171, 178, 180, 187, 195, 197], "peaks_from_model": [0, 35, 43, 48, 50, 51, 52, 53, 62, 65, 70, 71, 88, 95, 97, 99, 103, 146, 180, 185, 186, 187, 189, 195], "like": [0, 2, 3, 6, 7, 8, 9, 17, 19, 22, 23, 26, 27, 31, 33, 36, 45, 49, 52, 63, 70, 71, 74, 81, 85, 91, 97, 101, 104, 105, 107, 108, 110, 111, 113, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 169, 178, 189, 194, 196], "odf": [0, 37, 43, 50, 51, 52, 53, 56, 58, 59, 60, 62, 64, 65, 67, 70, 71, 72, 73, 77, 83, 93, 95, 97, 98, 120, 126, 135, 136, 138, 141, 144, 145, 146, 158, 159, 175, 176, 179, 180, 185, 186, 187, 191, 193, 197, 203], "take": [0, 8, 18, 21, 26, 33, 37, 39, 42, 43, 52, 56, 61, 63, 65, 67, 69, 70, 71, 77, 78, 79, 80, 87, 88, 97, 98, 99, 107, 111, 113, 131, 133, 134, 135, 138, 139, 140, 142, 143, 145, 153, 154, 182, 185, 192, 193, 203], "size": [0, 1, 26, 30, 31, 33, 34, 35, 37, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 112, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 165, 169, 171, 175, 176, 182, 183, 187, 189, 191, 196], "arrai": [0, 5, 6, 7, 27, 30, 39, 41, 42, 44, 46, 49, 52, 54, 56, 58, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 100, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 164, 169, 171, 178, 179, 180, 181, 182, 183, 187, 189, 190, 191, 194, 195, 196, 199, 200], "updat": [0, 7, 12, 16, 22, 44, 70, 72, 101, 110, 126, 131, 133, 137, 139, 140, 143, 144, 145, 146, 148, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203], "similar": [0, 11, 22, 26, 27, 28, 31, 33, 35, 50, 51, 54, 56, 64, 66, 67, 69, 86, 90, 91, 92, 106, 118, 126, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 145, 147, 156, 170, 172, 187, 189, 203], "nib": [0, 5, 22, 39, 40, 60, 61, 68, 76, 85, 87, 131, 134, 137, 139, 145], "anat": 0, "voxel_dim": 0, "header": [0, 28, 49, 85, 87, 131, 134, 137, 140, 143, 144, 145, 165, 180, 189, 192, 194, 199, 200], "pixdim": 0, "someth": [0, 6, 7, 8, 18, 19, 22, 23, 45, 64, 67, 111, 112, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 165, 169], "1": [1, 2, 3, 5, 8, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 197, 199, 200, 201, 203], "garyfallidi": [1, 2, 3, 5, 21, 24, 28, 30, 31, 32, 33, 34, 37, 42, 43, 61, 62, 78, 79, 80, 81, 95, 101, 112, 113, 114, 121, 122, 131, 134, 135, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "e": [1, 2, 3, 5, 8, 9, 15, 22, 23, 24, 27, 28, 30, 31, 32, 34, 37, 38, 40, 42, 43, 46, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 89, 94, 95, 96, 98, 100, 101, 107, 108, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185, 187, 197, 198, 199, 200, 203], "brett": [1, 5, 7, 21, 22, 24, 112, 113, 114, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 185, 186, 187, 188], "m": [1, 2, 3, 5, 8, 18, 22, 28, 33, 38, 46, 47, 52, 54, 55, 57, 60, 61, 67, 68, 69, 70, 71, 74, 80, 84, 86, 87, 88, 89, 90, 91, 92, 96, 98, 100, 112, 113, 114, 119, 121, 122, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 203], "amirbekian": [1, 5, 21, 24, 35, 93, 112, 113, 114, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 185, 186, 187, 188], "b": [1, 2, 3, 5, 8, 9, 22, 26, 27, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 80, 82, 83, 84, 86, 87, 90, 91, 92, 103, 106, 107, 110, 112, 113, 114, 116, 117, 119, 120, 121, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 185, 187, 188, 189, 191, 195, 196], "rokem": [1, 2, 3, 5, 21, 24, 30, 31, 34, 45, 46, 61, 71, 99, 106, 112, 113, 114, 128, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "van": [1, 2, 3, 5, 21, 24, 54, 71, 99, 112, 113, 114, 139, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 186, 187, 188], "der": [1, 2, 3, 5, 21, 24, 54, 71, 99, 112, 113, 114, 139, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 186, 187, 188], "walt": [1, 2, 3, 5, 21, 24, 71, 99, 112, 113, 114, 139, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 186, 187, 188], "descoteaux": [1, 5, 24, 57, 74, 84, 89, 96, 100, 106, 112, 113, 114, 122, 128, 134, 135, 136, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 183, 185, 186, 187, 188, 203], "nimmo": [1, 5, 21, 24, 112, 113, 114, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185], "smith": [1, 5, 21, 24, 47, 92, 96, 100, 112, 113, 114, 119, 135, 136, 138, 139, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185, 203], "dipi": [1, 2, 3, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 197, 198, 201, 203], "contributor": [1, 5, 21, 22, 24, 101, 133, 140, 145, 178, 180], "2014": [1, 2, 3, 5, 33, 45, 46, 52, 54, 61, 65, 70, 96, 100, 106, 112, 113, 114, 122, 127, 128, 131, 139, 140, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 187, 190], "librari": [1, 4, 22, 49, 69, 77, 101, 107, 110, 111, 112, 113, 114, 126, 133, 139, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 182, 187, 196], "diffus": [1, 2, 3, 5, 21, 26, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 50, 52, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 74, 77, 82, 87, 88, 95, 96, 97, 98, 99, 100, 101, 107, 111, 112, 113, 114, 117, 118, 122, 123, 124, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185, 193, 195, 199, 200, 201, 203], "mri": [1, 2, 3, 5, 21, 27, 29, 35, 37, 38, 40, 42, 43, 45, 46, 48, 49, 52, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 77, 84, 95, 96, 98, 99, 100, 107, 112, 113, 114, 116, 117, 118, 122, 123, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 191, 193, 195, 203], "frontier": [1, 5, 28, 32, 78, 79, 80, 81, 112, 113, 114, 126, 127, 131, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "neuroinformat": [1, 5, 24, 92, 110, 112, 113, 114, 126, 127, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "vol": [1, 2, 3, 5, 28, 32, 41, 44, 52, 56, 57, 58, 62, 65, 74, 78, 79, 80, 81, 93, 112, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145], "8": [1, 5, 25, 26, 27, 31, 35, 37, 39, 40, 42, 43, 46, 48, 52, 53, 54, 55, 64, 65, 67, 70, 71, 72, 73, 81, 88, 95, 103, 104, 120, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 175, 176, 178, 182, 183, 185, 188, 189, 190, 191, 193, 197, 201], "2": [1, 2, 3, 4, 7, 8, 20, 22, 25, 26, 27, 28, 29, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 116, 119, 120, 121, 122, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 153, 154, 155, 160, 161, 162, 163, 164, 165, 175, 176, 178, 179, 180, 183, 184, 186, 187, 189, 190, 192, 195, 197, 199, 201, 203, 204], "2010": [1, 2, 3, 22, 33, 37, 43, 50, 51, 54, 58, 62, 106, 111, 112, 120, 128, 133, 134, 139, 141, 144, 190], "fast": [1, 2, 3, 17, 26, 37, 54, 55, 63, 65, 66, 67, 80, 88, 92, 95, 111, 112, 120, 126, 129, 131, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 165, 178, 180, 185, 203], "dimension": [1, 38, 39, 64, 67, 73, 80, 109, 116, 131, 133, 136, 139, 140, 141, 142, 143, 145, 161, 178, 180, 187], "reduct": [1, 32, 46, 106, 108, 139, 140, 145, 170], "brain": [1, 2, 3, 24, 30, 31, 34, 38, 40, 43, 45, 46, 47, 48, 52, 54, 55, 59, 60, 61, 66, 68, 69, 70, 71, 77, 84, 85, 87, 88, 90, 91, 92, 95, 100, 110, 112, 113, 119, 121, 122, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 151, 164, 165, 170, 173, 182, 187, 189, 193, 195], "cluster": [1, 2, 3, 5, 28, 31, 32, 33, 34, 112, 114, 126, 131, 133, 134, 139, 142, 143, 144, 145, 146, 165, 167, 170, 172, 178, 180, 191, 197], "16th": 1, "annual": [1, 2, 3, 55, 134, 139], "meet": [1, 2, 3, 52, 55, 65, 127, 134, 136, 139, 142, 143, 189, 190, 191, 192, 193, 195], "organ": [1, 2, 3, 8, 36, 110, 131, 134], "human": [1, 2, 3, 5, 24, 43, 54, 59, 68, 69, 110, 113, 114, 134, 139, 143, 144], "map": [1, 2, 3, 28, 37, 40, 42, 43, 46, 47, 49, 54, 55, 56, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 75, 76, 78, 79, 81, 84, 85, 87, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102, 110, 112, 118, 121, 122, 126, 128, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 163, 178, 180, 182, 183, 188, 191, 192, 194, 195, 196], "3": [1, 2, 3, 5, 7, 20, 25, 26, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 104, 107, 108, 109, 110, 111, 112, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 159, 160, 161, 165, 169, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203], "tsiara": 1, "v": [1, 2, 3, 5, 7, 19, 38, 54, 55, 66, 68, 106, 111, 113, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181, 189, 191, 199, 200], "vogiatzi": 1, "g": [1, 5, 8, 9, 15, 22, 23, 26, 27, 35, 37, 38, 43, 46, 48, 49, 50, 54, 56, 57, 59, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 77, 78, 80, 86, 87, 89, 90, 91, 94, 96, 100, 101, 103, 107, 108, 112, 114, 116, 117, 119, 120, 121, 122, 126, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 161, 175, 176, 197, 199, 200], "identif": [1, 135], "proc": [1, 73, 133, 139], "intl": [1, 73, 139], "soc": [1, 71, 73, 133, 139], "mag": [1, 73, 139], "reson": [1, 38, 40, 41, 42, 44, 50, 54, 55, 56, 57, 60, 61, 63, 65, 66, 70, 73, 74, 112, 116, 117, 120, 131, 135, 136, 138, 139, 140, 141, 144, 145, 153, 154, 160, 161, 164, 165, 203], "med": [1, 38, 47, 61, 73, 117, 119, 131, 133, 135, 136, 138, 139, 140, 145, 160, 164, 203], "18": [1, 30, 31, 43, 57, 67, 81, 101, 102, 112, 113, 114, 127, 131, 133, 135, 139, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 188, 190, 191], "4": [1, 2, 3, 4, 22, 25, 26, 27, 29, 33, 35, 37, 38, 40, 41, 42, 43, 46, 50, 51, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 74, 76, 78, 79, 81, 84, 85, 87, 88, 89, 90, 91, 92, 96, 99, 101, 104, 107, 109, 110, 111, 112, 116, 117, 120, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 159, 161, 169, 178, 179, 180, 183, 189, 192, 195, 197, 199, 203], "correia": [1, 54, 61, 66, 120, 134, 139, 143, 145], "william": [1, 139, 145], "yeh": [1, 2, 3, 30, 31, 34, 62, 106, 113, 114, 128, 139, 140, 142, 145, 151, 170, 201], "f": [1, 2, 3, 8, 9, 28, 30, 31, 33, 34, 38, 42, 45, 46, 52, 53, 55, 57, 61, 62, 63, 65, 66, 69, 70, 74, 84, 96, 100, 113, 114, 117, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 151, 170, 203], "c": [1, 2, 3, 7, 8, 9, 18, 22, 27, 38, 41, 42, 50, 52, 55, 61, 62, 67, 68, 69, 70, 77, 84, 87, 90, 91, 92, 107, 111, 112, 113, 114, 116, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 161, 181, 184, 186, 187, 188, 189], "2011": [1, 2, 3, 22, 26, 27, 33, 37, 41, 43, 54, 55, 57, 73, 74, 84, 87, 90, 91, 92, 106, 113, 116, 120, 121, 128, 131, 133, 135, 139, 140, 144, 145, 160, 185, 190], "robust": [1, 5, 32, 33, 40, 47, 52, 54, 64, 65, 66, 67, 82, 95, 114, 119, 120, 121, 122, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 159, 160, 161, 172, 189, 195, 203], "scalar": [1, 56, 60, 64, 80, 100, 102, 106, 120, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 178], "estim": [1, 38, 41, 42, 43, 45, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 73, 75, 77, 87, 88, 94, 95, 96, 97, 100, 107, 116, 117, 120, 122, 126, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 148, 153, 154, 155, 160, 161, 162, 163, 176, 178, 179, 180, 181, 187, 189, 191, 192, 193, 199, 200], "q": [1, 30, 31, 34, 42, 56, 57, 64, 65, 73, 74, 84, 93, 107, 112, 113, 116, 126, 128, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 151, 158, 165, 170, 189, 193, 195, 200, 203], "sampl": [1, 26, 27, 35, 37, 54, 64, 66, 69, 72, 75, 77, 82, 91, 97, 98, 105, 107, 113, 131, 133, 135, 136, 138, 139, 140, 142, 143, 145, 178, 180, 184, 195], "acquisit": [1, 5, 42, 44, 46, 47, 49, 58, 64, 66, 67, 68, 69, 77, 84, 116, 119, 126, 133, 134, 135, 138, 139, 140, 141, 143, 145, 199, 200], "scheme": [1, 5, 39, 44, 46, 58, 59, 67, 131, 133, 135, 138, 139, 142, 143, 145], "19": [1, 30, 31, 87, 112, 126, 135, 139, 142, 143, 178, 185, 187, 193], "5": [1, 2, 3, 22, 23, 25, 29, 32, 34, 35, 38, 40, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 119, 120, 122, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 161, 169, 171, 179, 180, 183, 185, 187, 189, 191, 196, 197], "chamberlain": 1, "sr": [1, 133], "hampshir": 1, "menzi": 1, "la": [1, 112, 145], "grant": [1, 134], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "k": [1, 2, 3, 5, 26, 27, 33, 35, 37, 38, 42, 43, 46, 48, 49, 50, 54, 66, 68, 69, 77, 78, 80, 84, 96, 100, 104, 106, 107, 112, 117, 120, 122, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 161, 165, 176, 199, 201, 203], "fineberg": 1, "n": [1, 2, 3, 5, 22, 23, 26, 27, 30, 33, 37, 38, 41, 42, 45, 46, 47, 50, 54, 61, 63, 66, 68, 69, 70, 71, 77, 80, 81, 86, 87, 90, 91, 92, 98, 99, 100, 112, 116, 119, 121, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 199, 200], "sahakian": 1, "bj": 1, "reduc": [1, 5, 8, 20, 31, 32, 37, 47, 64, 67, 85, 86, 88, 96, 100, 108, 111, 122, 126, 131, 133, 134, 135, 140, 142, 143, 145, 146, 169, 170, 176, 180, 186, 187, 191], "white": [1, 2, 3, 25, 27, 28, 31, 32, 33, 35, 38, 43, 45, 48, 54, 55, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 77, 78, 81, 84, 86, 88, 92, 95, 96, 97, 98, 99, 100, 102, 113, 118, 120, 121, 122, 131, 134, 138, 139, 140, 141, 142, 143, 145, 167, 170, 172, 176, 180, 181, 185], "matter": [1, 2, 3, 25, 28, 31, 32, 33, 35, 38, 43, 45, 48, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 77, 84, 85, 88, 92, 95, 96, 97, 98, 99, 100, 113, 118, 120, 121, 122, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 167, 170, 172, 176, 185, 199], "trichotillomania": 1, "tensor": [1, 45, 46, 49, 52, 55, 58, 60, 61, 64, 65, 66, 68, 69, 70, 71, 82, 83, 84, 107, 110, 112, 118, 126, 129, 133, 134, 139, 140, 141, 143, 145, 160, 161, 178, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 196, 199, 200], "studi": [1, 2, 3, 54, 55, 60, 64, 67, 77, 133, 134, 139, 145, 191], "arch": 1, "gen": 1, "psychiatri": 1, "67": [1, 40, 52, 65, 70, 133, 187], "9": [1, 25, 39, 40, 42, 43, 46, 52, 54, 55, 60, 61, 62, 66, 67, 68, 91, 92, 111, 126, 127, 131, 133, 134, 135, 136, 137, 139, 142, 143, 145, 153, 178, 179, 185, 194, 197], "965": [1, 141, 180], "71": [1, 185], "6": [1, 6, 22, 23, 25, 28, 30, 31, 32, 33, 35, 37, 38, 40, 42, 43, 45, 48, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 84, 88, 91, 93, 94, 95, 97, 101, 103, 110, 111, 120, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 161, 169, 173, 178, 180, 181, 183, 184, 186, 187, 195, 197, 199, 200], "nguyen": [1, 24], "olivetti": [1, 24, 185], "halchenko": [1, 9, 180, 185], "y": [1, 5, 37, 43, 46, 57, 58, 61, 63, 64, 69, 70, 71, 73, 74, 77, 84, 87, 92, 98, 101, 104, 107, 108, 109, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 161, 194, 199, 204], "novel": [1, 54, 55, 64, 66, 82, 120, 139, 141], "softwar": [1, 5, 85, 87, 90, 91, 95, 99, 101, 121, 124, 125, 133, 134, 135, 136, 138, 139, 140, 145, 161, 199, 200, 203], "mr": [1, 38, 39, 41, 44, 59, 63, 70, 73, 84, 92, 97, 107, 116, 117, 119, 120, 122, 124, 133, 134, 135, 139, 141, 145, 162, 185, 199], "17th": 1, "7": [1, 8, 22, 25, 28, 31, 37, 40, 43, 45, 52, 53, 54, 55, 57, 61, 65, 66, 67, 70, 71, 75, 81, 93, 94, 95, 96, 97, 98, 99, 100, 107, 111, 120, 126, 127, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 179, 183, 187, 188, 189, 191, 197], "wedeen": [1, 56, 106, 128, 139], "vj": 1, "tseng": 1, "wy": 1, "ieee": [1, 2, 3, 26, 27, 41, 42, 57, 62, 70, 74, 92, 116, 127, 131, 133, 135, 139, 140, 143, 145], "tran": [1, 131, 133, 135, 139, 140, 145, 147], "2012": [1, 28, 32, 33, 54, 55, 62, 78, 79, 80, 81, 95, 96, 100, 111, 112, 122, 131, 139, 140, 141, 142, 143, 144, 145, 175, 190], "quickbundl": [1, 28, 31, 32, 78, 79, 106, 126, 131, 143, 144, 145, 146, 178, 179, 181, 182, 185, 186, 197], "simplif": [1, 28, 32, 33, 78, 79, 80, 81, 131, 140, 142, 143, 144, 145], "neurosci": [1, 24, 28, 32, 78, 79, 80, 81, 87, 125, 131, 140, 142, 143, 144, 145], "175": [1, 28, 32, 78, 79, 80, 81, 131, 140, 142, 143, 144, 145], "cote": [1, 144, 145, 165, 187], "rheault": [1, 2, 3, 143, 183, 184, 189, 190, 191, 195, 196], "sidhu": 1, "j": [1, 2, 3, 5, 28, 30, 31, 33, 34, 37, 38, 40, 42, 43, 45, 46, 49, 52, 54, 55, 59, 60, 61, 63, 65, 68, 69, 70, 71, 73, 84, 87, 90, 91, 92, 93, 96, 98, 100, 104, 107, 113, 114, 117, 120, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 154, 156, 159, 160, 161, 162, 165, 170, 185, 196, 199, 201, 203], "hau": 1, "petit": 1, "l": [1, 2, 3, 30, 31, 34, 39, 40, 42, 45, 54, 55, 60, 61, 67, 68, 70, 77, 87, 90, 91, 98, 112, 113, 121, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 151, 153, 160, 161, 170, 187, 203], "fortin": 1, "d": [1, 2, 3, 5, 7, 8, 9, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 40, 42, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 80, 84, 86, 92, 96, 99, 100, 108, 113, 114, 116, 117, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 159, 161, 162, 165, 170, 186, 192, 199, 201, 203], "cunann": 1, "recognit": [1, 2, 3, 28, 31, 114, 131, 140, 145, 167, 170, 172, 182], "bundl": [1, 2, 3, 25, 35, 48, 67, 78, 79, 80, 81, 86, 87, 94, 97, 101, 110, 111, 118, 121, 126, 131, 134, 138, 139, 141, 142, 143, 144, 145, 146, 150, 151, 165, 167, 170, 180, 182, 183, 184, 187, 189, 191, 192, 194, 196], "global": [1, 2, 3, 7, 18, 27, 28, 31, 47, 64, 70, 98, 101, 114, 119, 131, 134, 138, 139, 140, 141, 144, 145, 167, 170, 172, 187], "10": [1, 2, 3, 25, 27, 30, 31, 34, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 81, 82, 84, 86, 87, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 111, 112, 113, 116, 117, 120, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 153, 154, 159, 162, 164, 170, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 196, 197], "ocegueda": [1, 24, 134, 178, 179, 180, 187, 188, 196], "o": [1, 13, 26, 27, 28, 38, 45, 46, 49, 60, 61, 63, 85, 87, 104, 111, 117, 120, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 162, 179, 187, 189, 197], "wassermann": [1, 2, 3, 24, 134, 183, 187], "effici": [1, 32, 33, 70, 98, 104, 111, 114, 121, 126, 131, 133, 134, 139, 140, 142, 143, 144, 145, 172, 192], "linear": [1, 8, 32, 33, 42, 54, 55, 63, 64, 68, 69, 73, 75, 90, 91, 106, 109, 110, 113, 118, 121, 126, 131, 133, 134, 135, 136, 140, 141, 143, 145, 146, 150, 156, 161, 170, 172, 180, 184, 185, 187, 192, 196], "fascicl": [1, 32, 33, 114, 121, 126, 131, 134, 139, 140, 143, 145, 172, 187], "space": [1, 2, 3, 5, 26, 28, 31, 32, 33, 37, 38, 42, 43, 46, 52, 54, 56, 57, 59, 64, 66, 73, 74, 85, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 113, 114, 116, 117, 120, 121, 126, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 167, 170, 172, 180, 181, 182, 193, 195, 197, 199, 200, 201], "yeatman": [1, 2, 3, 28, 45, 46, 71, 99, 139, 142, 143], "jd": 1, "pestilli": [1, 2, 3, 30, 31, 34, 45, 46, 71, 99, 113, 139, 140, 142, 143, 145, 151, 170], "kai": [1, 2, 3, 46, 71, 99, 139, 143], "kn": 1, "mezer": [1, 2, 3, 45, 71, 99, 139], "et": [1, 2, 3, 24, 28, 31, 32, 33, 39, 44, 48, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 87, 90, 91, 92, 93, 100, 106, 114, 120, 121, 126, 128, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 158, 159, 162, 167, 170, 172, 182, 203], "al": [1, 2, 3, 28, 31, 32, 33, 39, 44, 48, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 87, 90, 91, 92, 93, 100, 106, 114, 120, 121, 126, 128, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 158, 159, 162, 167, 170, 172, 182, 203], "2015": [1, 2, 3, 32, 33, 37, 38, 43, 54, 66, 70, 71, 82, 98, 99, 106, 110, 111, 114, 117, 120, 121, 126, 127, 128, 131, 133, 134, 135, 139, 140, 141, 143, 145, 172, 178, 179, 180, 188, 190], "evalu": [1, 2, 3, 37, 43, 45, 50, 51, 54, 55, 65, 66, 67, 71, 80, 87, 90, 91, 92, 99, 112, 121, 122, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 192], "accuraci": [1, 2, 3, 45, 52, 54, 64, 69, 71, 87, 99, 131, 133, 138, 139, 140, 142, 143, 145, 194], "12": [1, 25, 27, 31, 33, 38, 40, 42, 45, 54, 61, 67, 68, 70, 75, 78, 79, 81, 86, 87, 90, 91, 111, 121, 126, 127, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 179, 181, 183, 184, 185, 186, 187, 188, 191, 196, 197], "dalmau": 1, "rivera": 1, "On": [1, 8, 43, 54, 64, 78, 111, 131, 133, 139, 143, 183], "comput": [1, 4, 7, 19, 26, 27, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 66, 70, 73, 74, 78, 79, 80, 82, 84, 85, 87, 89, 95, 98, 103, 110, 111, 113, 117, 120, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 159, 160, 161, 162, 170, 173, 180, 183, 191, 203], "over": [1, 22, 27, 37, 39, 43, 46, 64, 67, 68, 69, 85, 91, 107, 108, 109, 116, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 180, 190, 194, 199], "rectangl": 1, "arbitrari": [1, 19, 131, 133, 137, 139, 141, 143, 187, 200], "dimens": [1, 26, 43, 46, 49, 59, 63, 70, 80, 85, 90, 104, 107, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 161, 175, 176, 182, 189], "13": [1, 25, 50, 59, 67, 69, 81, 126, 127, 133, 135, 139, 141, 142, 143, 144, 182, 185, 189, 191, 192, 193, 194, 197], "rafael": [1, 24, 126, 178, 180, 181, 183, 189, 190, 191, 192, 195], "neto": [1, 24, 38, 54, 66, 82, 120, 135, 139, 141, 145, 164, 178, 180, 181, 189, 190, 191, 192, 195], "henriqu": [1, 24, 38, 40, 54, 61, 66, 82, 106, 120, 126, 128, 135, 139, 141, 145, 164, 178, 180, 181, 189, 190, 191, 192, 195], "ariel": [1, 21, 24, 71, 99, 139, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "eleftherio": [1, 21, 22, 24, 101, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "samuel": [1, 24, 178, 179, 180, 185, 186, 187, 188], "st": [1, 7, 24, 61, 89, 139, 144, 145, 165, 178, 179, 180, 185, 186, 187, 188, 194], "jean": [1, 24, 61, 139, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191], "eric": [1, 2, 3, 24, 180, 190, 192, 195, 196], "thoma": [1, 139], "peterson": [1, 2, 3, 61, 139, 180], "marta": 1, "morgado": 1, "rescienc": [1, 61, 139], "issu": [1, 2, 3, 8, 22, 34, 47, 54, 61, 66, 101, 110, 119, 126, 131, 133, 135, 136, 139, 140, 143, 144, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "articl": [1, 2, 3, 55, 61, 68, 69, 113, 114, 133, 135, 139, 145], "2017": [1, 2, 3, 28, 31, 35, 60, 61, 87, 106, 111, 114, 127, 128, 131, 134, 139, 140, 143, 145, 167, 170, 172, 175, 180, 181, 182, 190], "re": [1, 8, 11, 17, 18, 19, 61, 84, 85, 88, 91, 101, 111, 131, 133, 137, 138, 139, 140, 143, 145, 182, 190, 200, 203], "optim": [1, 2, 3, 6, 26, 27, 33, 40, 41, 42, 44, 46, 54, 55, 61, 63, 64, 65, 66, 67, 71, 75, 87, 90, 91, 92, 112, 116, 121, 126, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 156, 178, 183, 187, 189, 190, 194, 195], "free": [1, 5, 26, 27, 45, 59, 67, 69, 82, 107, 117, 119, 120, 123, 126, 131, 133, 134, 139, 145, 180, 182, 189, 192, 196], "water": [1, 35, 54, 55, 66, 69, 82, 95, 107, 120, 126, 134, 139, 141, 145, 160, 180, 189, 192, 196], "elimin": [1, 106, 139, 180, 189, 192], "two": [1, 22, 26, 27, 33, 34, 38, 40, 43, 44, 45, 46, 49, 52, 55, 57, 59, 61, 63, 65, 66, 67, 69, 71, 73, 74, 78, 79, 80, 82, 84, 86, 87, 88, 90, 91, 92, 93, 104, 107, 108, 111, 113, 114, 120, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 162, 186, 199, 200, 203], "compart": [1, 46, 54, 55, 61, 63, 65, 66, 70, 82, 98, 120, 139, 141, 145], "14": [1, 8, 25, 43, 67, 69, 81, 111, 126, 127, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 181, 183, 184, 185, 192, 194, 197], "rn": [1, 66], "mm": [1, 2, 3, 31, 37, 43, 44, 47, 54, 61, 66, 67, 71, 73, 76, 86, 87, 107, 120, 131, 133, 134, 137, 139, 140, 141, 143, 144, 145, 163, 165, 169, 170, 175, 176, 199], "marral": 1, "diffusion": [1, 54, 66, 120, 139, 145, 160], "kurtosi": [1, 2, 3, 38, 40, 55, 65, 82, 112, 118, 126, 139, 141, 145, 160, 178, 179, 192], "project": [1, 2, 3, 8, 11, 14, 15, 22, 63, 67, 104, 106, 107, 110, 123, 126, 128, 131, 133, 135, 137, 138, 139, 141, 143, 145, 146, 178, 185, 187, 204], "front": [1, 5, 36, 105, 187, 189], "hum": 1, "2021": [1, 69, 101, 106, 110, 127, 128, 139, 190, 193, 194, 195], "15": [1, 25, 27, 31, 38, 43, 52, 54, 57, 65, 67, 69, 70, 74, 75, 81, 84, 96, 101, 104, 111, 112, 126, 127, 131, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 159, 165, 178, 184, 185, 196, 197, 203], "390": [1, 178], "www": [1, 64, 69, 107, 108, 131, 133, 137, 139, 143, 144], "frontiersin": 1, "org": [1, 2, 3, 22, 23, 38, 40, 54, 64, 66, 68, 69, 70, 80, 98, 101, 107, 108, 113, 114, 117, 123, 129, 131, 133, 134, 135, 137, 139, 140, 141, 143, 145, 153, 164, 186, 192], "3389": 1, "fnhum": 1, "675433": 1, "full": [1, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 121, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 203], "main": [1, 5, 17, 18, 19, 21, 22, 39, 40, 41, 51, 53, 62, 64, 66, 67, 131, 133, 136, 139, 143, 145, 195], "citat": [1, 2, 3, 178, 180, 181, 187, 192, 193, 195], "detail": [2, 11, 12, 15, 16, 26, 35, 38, 40, 41, 42, 43, 46, 54, 55, 61, 63, 65, 66, 68, 73, 85, 100, 107, 111, 112, 115, 131, 133, 134, 137, 139, 140, 142, 144, 145, 178, 187, 191], "describ": [2, 5, 14, 28, 45, 48, 54, 59, 63, 64, 67, 69, 71, 77, 93, 95, 99, 100, 120, 122, 131, 133, 134, 139, 141, 142, 143, 145], "below": [2, 35, 38, 39, 40, 42, 43, 48, 54, 55, 59, 61, 65, 80, 85, 86, 89, 100, 102, 104, 106, 108, 111, 113, 122, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 184, 203], "synthet": [2, 3, 125, 134, 139, 145], "phantom": [2, 3, 129, 134, 146], "anim": [2, 3, 139, 144, 145, 165], "featur": [2, 3, 5, 6, 7, 12, 17, 18, 27, 28, 79, 81, 82, 98, 106, 110, 126, 127, 133, 137, 139, 141, 142, 145, 146, 161, 178, 180, 193, 196], "structur": [2, 3, 27, 36, 37, 38, 40, 42, 46, 59, 67, 84, 87, 88, 95, 101, 105, 106, 110, 113, 114, 118, 120, 122, 133, 134, 135, 139, 140, 142, 143, 145, 195], "label": [2, 3, 5, 6, 7, 18, 22, 35, 43, 45, 46, 48, 63, 66, 67, 77, 81, 82, 83, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 121, 129, 131, 133, 134, 135, 138, 139, 140, 143, 144, 145, 167, 178, 181, 183, 189, 191], "scanner": [2, 3, 41, 46, 70, 98, 107, 133, 134, 135, 138, 139, 140, 141, 143, 145, 199, 200], "format": [2, 3, 4, 5, 7, 18, 22, 25, 49, 63, 65, 76, 82, 85, 88, 104, 107, 111, 113, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 161, 163, 178, 180, 181, 182, 184, 187, 189, 191, 196, 197], "exampl": [2, 3, 5, 7, 8, 17, 18, 21, 22, 25, 107, 110, 111, 112, 113, 114, 115, 120, 121, 123, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 153, 154, 159, 164, 165, 169, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197], "bundle_file_formats_exampl": [2, 3], "2019": [2, 3, 63, 66, 69, 106, 127, 128, 134, 135, 136, 138, 139, 144, 145, 165, 184, 189, 190, 191, 203], "0": [2, 3, 5, 8, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 113, 119, 120, 122, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 156, 158, 159, 164, 165, 171, 172, 173, 175, 176, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203], "zenodo": [2, 3, 134], "doi": [2, 3, 38, 39, 40, 42, 46, 50, 54, 55, 61, 63, 65, 66, 68, 69, 70, 71, 98, 99, 101, 112, 113, 117, 120, 131, 133, 134, 135, 139, 142, 143, 145, 153, 154, 162, 164, 184], "5281": [2, 3, 134], "3352379": [2, 3], "cenir": [2, 3, 38, 134, 178, 179, 182, 195], "hcp": [2, 3, 42, 64, 110, 134, 139, 178, 183, 187, 195, 196], "multi": [2, 3, 5, 26, 38, 39, 40, 42, 44, 54, 55, 58, 60, 63, 64, 66, 70, 74, 75, 90, 91, 106, 112, 116, 126, 128, 131, 134, 139, 141, 142, 143, 145, 148, 178, 179, 180, 183, 185, 186, 187, 188, 190, 191, 192, 194, 196], "shell": [2, 3, 38, 40, 42, 44, 50, 54, 55, 57, 60, 64, 66, 67, 70, 73, 74, 84, 106, 111, 112, 126, 128, 134, 139, 141, 145, 166, 189, 190, 191, 192, 194, 195, 196], "val": [2, 3, 27, 139, 144, 179, 196], "200": [2, 3, 38, 42, 52, 63, 67, 70, 81, 82, 90, 98, 101, 112, 133, 134, 139, 145, 180, 195], "400": [2, 3, 38, 63, 92, 112, 134, 139, 140, 145, 183], "1000": [2, 3, 26, 38, 40, 44, 49, 56, 60, 65, 66, 71, 85, 87, 96, 99, 106, 112, 128, 131, 133, 134, 138, 139, 140, 141, 143, 144, 145, 180, 199, 200], "2000": [2, 3, 37, 38, 40, 43, 49, 52, 60, 64, 65, 66, 70, 71, 112, 133, 134, 138, 139, 140, 141, 142, 143, 145, 163, 190], "3000": [2, 3, 112, 134], "20": [2, 3, 31, 33, 43, 52, 57, 59, 66, 67, 70, 71, 74, 75, 77, 82, 83, 92, 96, 102, 104, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178, 185], "202": [2, 3, 135, 136, 138, 139, 186, 203], "204": [2, 3, 186], "206": [2, 3, 52, 71, 186], "correct": [2, 3, 22, 25, 38, 39, 44, 58, 61, 69, 87, 88, 92, 107, 118, 126, 133, 134, 135, 137, 139, 144, 145, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 195], "eddi": [2, 3, 134, 182], "current": [2, 3, 7, 8, 17, 19, 22, 27, 37, 65, 67, 86, 90, 100, 101, 105, 111, 116, 117, 119, 120, 121, 127, 131, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 183, 184], "cenir_multib": [2, 3, 190], "cfin": [2, 3, 134, 182], "t1": [2, 3, 38, 43, 48, 65, 99, 101, 105, 106, 112, 116, 134, 135, 145, 178], "600": [2, 3, 30, 31, 50, 52, 59, 60, 64, 65, 70, 73, 77, 78, 79, 80, 81, 89, 102, 104, 112, 139, 140, 145, 178], "800": [2, 3, 35, 46, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 112, 140, 141], "1200": [2, 3, 65, 101, 103, 104, 112, 180], "1400": [2, 3, 112, 182], "1600": [2, 3, 111, 112, 183], "1800": [2, 3, 111, 112, 189], "2200": [2, 3, 112, 191], "2400": [2, 3, 112], "2600": [2, 3, 112, 196], "2800": [2, 3, 112], "496": [2, 3, 112, 187], "cfin_multib": [2, 3, 40, 54, 55, 64, 65, 66, 112, 116, 120], "hansen": [2, 3, 40, 54, 55, 65, 66, 112, 126, 138, 139], "jespersen": [2, 3, 40, 54, 55, 65, 66, 112, 139], "strategi": [2, 3, 22, 26, 27, 28, 36, 44, 52, 54, 55, 64, 65, 66, 70, 77, 84, 87, 105, 112, 131, 133, 139, 145, 175], "explor": [2, 3, 39, 54, 55, 65, 66, 82, 112, 116, 120, 139, 141, 142, 143], "contrast": [2, 3, 38, 54, 55, 57, 59, 63, 64, 65, 66, 86, 87, 112, 116, 134, 137, 139, 140, 143, 145], "sci": [2, 3, 30, 31, 34, 60, 113, 134, 140, 142, 145, 151, 170], "160072": [2, 3, 54, 55, 65, 66, 112], "2016": [2, 3, 37, 38, 40, 42, 43, 54, 55, 60, 63, 64, 65, 66, 68, 69, 93, 106, 110, 112, 127, 128, 131, 133, 134, 135, 139, 140, 143, 144, 145, 153, 154, 179, 180, 190], "1038": [2, 3, 46, 54, 55, 65, 66, 112, 134, 143, 180], "sdata": [2, 3, 54, 55, 65, 66, 112, 134], "72": [2, 3, 54, 55, 59, 65, 66, 112, 126, 131, 140, 142, 185, 195], "gold": [2, 3, 134], "gold_standard_io": [2, 3], "2651349": [2, 3], "hcp842": [2, 3, 134], "atla": [2, 3, 28, 30, 31, 32, 113, 114, 134, 140, 142, 145], "whole": [2, 3, 43, 48, 52, 67, 70, 131, 135, 139, 140, 142, 143, 145], "wise": [2, 3, 35, 70, 139, 141, 143, 145], "mni": [2, 3, 31, 87, 113, 114, 134, 178, 180], "80": [2, 3, 37, 48, 52, 57, 63, 66, 67, 70, 74, 86, 120, 134, 185, 188], "connectom": [2, 3, 46, 110, 113, 114, 134, 143], "bundle_atlas_hcp842": [2, 3], "neuroimag": [2, 3, 28, 31, 32, 33, 35, 37, 38, 40, 49, 52, 54, 55, 56, 57, 58, 61, 64, 65, 66, 68, 69, 70, 74, 77, 82, 84, 89, 93, 96, 100, 111, 113, 114, 117, 120, 121, 122, 123, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 153, 154, 159, 161, 167, 170, 172, 176, 178, 198, 203], "170": [2, 3, 63, 67, 186], "283": [2, 3, 189], "297": [2, 3, 81], "popul": [2, 3, 30, 31, 32, 34, 45, 52, 54, 59, 66, 70, 82, 114, 118, 120, 139, 140, 142, 145], "averag": [2, 3, 31, 33, 43, 52, 54, 63, 66, 68, 69, 70, 71, 96, 107, 113, 114, 116, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 165, 180, 201], "macroscal": [2, 3, 113, 114], "its": [2, 3, 4, 22, 26, 37, 40, 42, 57, 64, 65, 66, 67, 70, 71, 74, 77, 80, 82, 92, 98, 101, 102, 104, 108, 109, 113, 114, 115, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 166, 187, 191, 192, 194], "network": [2, 3, 8, 60, 63, 87, 110, 113, 114, 120, 126, 134, 138, 139], "topologi": [2, 3, 113, 114, 139, 142, 143], "178": [2, 3, 186], "2018": [2, 3, 38, 40, 48, 54, 66, 89, 106, 110, 113, 114, 127, 128, 134, 135, 139, 145, 164, 182, 183, 184, 190], "57": [2, 3, 32, 54, 84, 139, 145, 185], "68": [2, 3, 185], "figshar": [2, 3, 113, 114], "com": [2, 3, 7, 8, 10, 11, 17, 18, 19, 22, 23, 64, 69, 107, 111, 113, 114, 121, 129, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 180], "advanced_atlas_of_80_bundles_in_mni_spac": [2, 3], "7375883": [2, 3], "fa": [2, 3, 28, 40, 49, 50, 51, 52, 54, 59, 60, 61, 65, 67, 68, 69, 70, 77, 84, 87, 100, 101, 102, 110, 112, 113, 120, 133, 134, 137, 139, 140, 142, 143, 144, 145, 146, 158, 159, 160, 161, 175, 183, 185, 187, 188, 190], "fraction": [2, 3, 28, 43, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 77, 82, 83, 95, 98, 99, 100, 102, 126, 131, 136, 139, 140, 141, 142, 143, 145, 160, 161, 162, 189], "anisotropi": [2, 3, 28, 43, 56, 59, 60, 61, 64, 65, 66, 67, 68, 77, 95, 98, 99, 100, 102, 126, 133, 136, 139, 140, 142, 143, 145, 160, 161, 188, 189, 191], "bundle_fa_hcp": [2, 3], "target_tractogram_hcp": [2, 3], "isbi": [2, 3, 64, 73, 127, 134, 139, 145, 185], "2013": [2, 3, 22, 39, 40, 42, 54, 55, 64, 70, 73, 77, 84, 106, 111, 126, 127, 128, 134, 135, 139, 145, 153, 185, 186, 187, 190], "1500": [2, 3, 41, 73, 111, 133, 134, 139, 141, 145, 183], "2500": [2, 3, 44, 73, 139, 195], "64": [2, 3, 32, 38, 44, 50, 64, 72, 75, 78, 79, 81, 101, 111, 112, 134, 138, 139, 140, 141, 143, 179, 180, 187], "isbi2013_2shel": [2, 3, 39, 73], "daducci": [2, 3, 70, 89, 98, 139, 145], "A": [2, 3, 5, 8, 9, 15, 20, 23, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 52, 54, 55, 60, 61, 64, 65, 66, 69, 70, 71, 77, 80, 86, 89, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 119, 120, 122, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 188, 189, 199, 200, 203], "quantit": [2, 3, 43, 54, 60, 96, 100, 122, 139, 142, 143, 145, 161], "comparison": [2, 3, 33, 54, 55, 61, 66, 67, 69, 77, 82, 84, 106, 118, 131, 133, 135, 137, 138, 139, 140, 143, 145, 161, 172, 180, 191], "intra": [2, 3, 55, 66, 82, 139, 145, 162], "fiber": [2, 3, 25, 28, 33, 37, 45, 46, 54, 55, 56, 58, 59, 63, 65, 66, 71, 77, 82, 84, 88, 93, 94, 95, 97, 98, 118, 120, 126, 131, 135, 136, 138, 139, 140, 141, 142, 143, 145, 159, 175, 180, 183, 189, 192, 195, 196, 197], "recoveri": [2, 3, 8], "transact": [2, 3, 26, 27, 41, 42, 57, 62, 70, 74, 92, 116, 131, 133, 135, 139, 145], "medic": [2, 3, 24, 26, 27, 41, 42, 57, 62, 70, 73, 74, 84, 92, 110, 112, 116, 126, 131, 134, 135, 136, 138, 139, 140, 144, 145, 165, 166, 180, 181, 183, 203], "33": [2, 3, 37, 42, 53, 63, 67, 77, 81, 111, 131, 133, 135, 136, 139, 140, 142, 143, 145, 156, 161, 178, 185], "pp": [2, 3, 42, 52, 65, 133, 139, 141, 145], "384": [2, 3, 187], "399": [2, 3, 187], "feb": [2, 3, 144], "hardi": [2, 3, 26, 27, 37, 43, 65, 71, 73, 87, 91, 95, 99, 127, 134, 135, 136, 139, 143, 145, 203], "challeng": [2, 3, 28, 46, 67, 127], "ivim": [2, 3, 63, 118, 126, 128, 134, 145, 146, 162, 180, 183, 184, 189, 190, 191, 195, 196], "30": [2, 3, 30, 31, 37, 38, 43, 45, 54, 57, 58, 60, 61, 67, 74, 81, 86, 93, 94, 97, 98, 100, 102, 113, 114, 127, 131, 133, 134, 139, 140, 143, 145, 183, 185], "40": [2, 3, 30, 31, 35, 37, 38, 45, 46, 64, 65, 70, 73, 75, 76, 84, 86, 88, 90, 98, 99, 131, 133, 139, 140, 143, 145, 160, 185], "60": [2, 3, 34, 42, 48, 49, 56, 58, 60, 62, 66, 70, 72, 83, 86, 107, 134, 139, 185], "100": [2, 3, 26, 27, 28, 30, 35, 37, 38, 43, 44, 46, 58, 63, 66, 67, 72, 75, 81, 83, 85, 86, 87, 90, 92, 131, 134, 135, 139, 140, 141, 142, 143, 145, 147, 185], "120": [2, 3, 26, 27, 38, 54, 101, 117, 131, 133, 139, 185], "140": [2, 3, 32, 33, 67, 101, 114, 121, 131, 134, 140, 145, 172, 185], "160": [2, 3, 50, 59, 67, 134, 186], "180": [2, 3, 81, 186], "300": [2, 3, 42, 44, 58, 60, 72, 83, 101, 134, 138, 139, 140, 141, 143, 144, 187], "500": [2, 3, 38, 89, 143, 145, 187], "700": [2, 3, 73, 139, 178], "900": [2, 3, 33, 34, 37, 43, 86, 87, 95, 99, 101, 103, 104, 133, 179], "21": [2, 3, 63, 68, 69, 127, 133, 139, 179, 180, 185], "fetch_ivim": [2, 3, 146], "ivim_dataset": [2, 3], "3395704": [2, 3], "templat": [2, 3, 26, 75, 87, 131, 134, 139, 178, 180, 191], "2009a": [2, 3, 134], "t2": [2, 3, 87, 134, 135, 143, 178], "2009c": [2, 3, 134, 180], "mni_templ": [2, 3], "fonov": [2, 3, 134], "evan": [2, 3, 134], "botteron": [2, 3, 134], "almli": [2, 3, 134], "r": [2, 3, 5, 8, 24, 26, 27, 33, 35, 37, 38, 40, 42, 43, 45, 54, 55, 61, 66, 67, 70, 71, 75, 77, 82, 84, 86, 96, 98, 100, 103, 108, 109, 120, 122, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 161, 164, 165, 176, 179, 180, 187, 199, 201, 203, 204], "mckinstri": [2, 3, 134], "collin": [2, 3, 39, 40, 41, 42, 116, 134, 135, 145, 153], "bdcg": [2, 3, 134], "unbias": [2, 3, 32, 110, 126, 131, 134, 139, 145, 196], "ag": [2, 3, 38, 40, 54, 61, 66, 134, 135, 139, 145, 164], "appropri": [2, 3, 5, 87, 90, 101, 104, 117, 131, 133, 134, 137, 139, 144, 145, 195], "atlas": [2, 3, 32, 131, 134], "pediatr": [2, 3, 60, 134], "54": [2, 3, 63, 67, 70, 88, 134, 139, 145, 186], "januari": [2, 3, 63, 110, 120, 127, 145, 162], "issn": [2, 3, 133], "1053": [2, 3, 134, 181], "8119": [2, 3, 134], "1016": [2, 3, 38, 40, 54, 61, 68, 69, 70, 117, 131, 133, 134, 135, 139, 145, 153, 154, 180], "07": [2, 3, 70, 133, 134, 135, 136, 139, 144], "033": [2, 3, 134], "nonlinear": [2, 3, 70, 131, 133, 134, 139, 145, 194], "birth": [2, 3, 134], "adulthood": [2, 3, 134], "47": [2, 3, 78, 81, 126, 131, 134, 140, 142, 185, 193], "supplement": [2, 3, 133], "juli": [2, 3, 134], "2009": [2, 3, 61, 73, 87, 90, 91, 106, 121, 128, 131, 133, 134, 135, 139, 140, 145, 158, 190], "page": [2, 3, 5, 8, 11, 13, 14, 16, 17, 22, 63, 78, 79, 113, 133, 139, 141, 178, 180, 183, 187, 189, 196], "s102": [2, 3, 134], "s1053": [2, 3, 134], "09": [2, 3, 61, 134, 139, 191, 192], "70884": [2, 3, 134], "icbm": [2, 3], "152": [2, 3], "qt": [2, 3, 134, 139], "dmri": [2, 3, 21, 47, 49, 55, 59, 76, 77, 107, 119, 126, 127, 134, 135, 139, 145, 183], "c57bl6": [2, 3, 134], "mice": [2, 3, 67, 134], "retest": [2, 3, 67, 134], "corpu": [2, 3, 35, 45, 46, 48, 50, 52, 59, 64, 67, 70, 71, 77, 84, 87, 88, 93, 94, 95, 96, 97, 100, 103, 134, 139, 140, 143, 145, 173], "callosum": [2, 3, 35, 45, 46, 48, 50, 52, 59, 64, 67, 70, 71, 77, 84, 87, 88, 93, 94, 95, 96, 97, 100, 103, 134, 139, 140, 143, 145, 173], "cc": [2, 3, 45, 50, 59, 75, 84, 85, 91, 111, 121, 131, 145, 148, 173, 186], "qtdmri_test_retest_2subject": [2, 3], "santin": [2, 3], "philipp": [2, 3, 191, 192, 193], "fick": [2, 3, 24, 37, 43, 64, 106, 128, 134, 135, 139, 143, 180, 181, 183], "derich": [2, 3, 84, 96, 100, 122, 135, 136, 138, 139, 140, 141, 143, 145, 155, 176, 203], "leherici": [2, 3], "petiet": [2, 3], "non": [2, 3, 7, 26, 27, 37, 39, 40, 42, 43, 46, 49, 52, 54, 55, 61, 63, 64, 65, 66, 70, 82, 87, 98, 102, 104, 106, 107, 116, 120, 126, 131, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 155, 156, 159, 160, 161, 163, 180, 182, 184, 185, 186, 187, 188, 191, 195, 196, 199, 200, 203], "parametr": [2, 3, 54, 107, 131, 134, 139, 140, 143, 145, 185], "graphnet": [2, 3, 67, 134, 139], "regular": [2, 3, 5, 64, 67, 70, 71, 73, 90, 98, 120, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 156, 163, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203], "represent": [2, 3, 8, 17, 33, 35, 64, 67, 69, 77, 81, 88, 94, 95, 97, 109, 122, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 183, 203], "time": [2, 3, 5, 8, 10, 22, 26, 27, 31, 32, 33, 34, 37, 39, 40, 41, 44, 49, 51, 52, 53, 61, 63, 69, 70, 71, 79, 80, 86, 87, 92, 95, 101, 107, 111, 113, 120, 129, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 148, 156, 162, 181, 183, 185, 186, 187, 191, 199, 201], "996889": [2, 3, 134], "scil": [2, 3, 134, 183], "b0": [2, 3, 26, 27, 29, 38, 40, 42, 44, 52, 57, 66, 70, 84, 87, 90, 91, 112, 120, 126, 131, 133, 134, 135, 138, 139, 141, 145, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 178, 179, 183, 187], "ge": [2, 3, 41, 70, 134, 135, 139, 140, 145], "t": [2, 3, 5, 8, 10, 11, 18, 19, 22, 23, 24, 26, 27, 28, 29, 33, 37, 38, 39, 40, 41, 42, 43, 45, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 74, 79, 80, 84, 86, 87, 88, 95, 98, 100, 101, 104, 107, 109, 111, 113, 114, 120, 123, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 170, 171, 178, 179, 180, 182, 183, 185, 187, 188, 189, 191, 192, 195, 196, 199, 200, 203], "philip": [2, 3, 38, 54, 70, 117, 134, 135, 139, 140, 145], "siemen": [2, 3, 29, 70, 107, 134, 135, 138, 139, 140, 141, 143, 145], "scil_b0": [2, 3, 29], "sherbrook": [2, 3, 24, 134], "connect": [2, 3, 19, 25, 33, 35, 46, 48, 71, 85, 87, 95, 96, 97, 100, 101, 122, 134, 139, 140, 143, 145, 176, 180, 195, 204], "lab": [2, 3, 144, 189, 190, 191, 192], "3500": [2, 3, 49], "193": [2, 3, 47, 49], "sherbrooke_3shel": [2, 3, 47, 49, 115, 116, 119], "snail": [2, 3, 134], "subject": [2, 3, 28, 31, 33, 47, 59, 61, 67, 69, 77, 99, 101, 107, 111, 113, 114, 116, 119, 123, 133, 134, 139, 140, 142, 145, 150, 151, 198], "27": [2, 3, 22, 41, 42, 57, 60, 74, 116, 131, 134, 135, 139, 145, 181, 185, 191], "bundles_2_subject": [2, 3, 104, 134], "stanford": [2, 3, 24, 26, 27, 37, 41, 43, 71, 84, 87, 91, 95, 99, 134, 139, 178, 188, 192], "discoveri": [2, 3], "mr750": [2, 3], "stanford_hardi": [2, 3, 35, 37, 42, 43, 45, 46, 48, 50, 51, 52, 53, 59, 70, 71, 77, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 116, 120, 122], "weight": [2, 3, 28, 33, 35, 38, 39, 40, 42, 45, 46, 49, 54, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 77, 99, 106, 107, 116, 117, 120, 133, 134, 135, 138, 139, 141, 142, 143, 145, 153, 160, 161, 163, 199, 200], "collect": [2, 3, 8, 43, 70, 131, 134, 137, 139, 142, 143, 144, 145, 183, 195, 203], "high": [2, 3, 38, 42, 52, 54, 60, 61, 63, 64, 65, 72, 77, 78, 83, 84, 99, 107, 131, 135, 136, 139, 140, 141, 142, 143, 182], "angular": [2, 3, 37, 58, 60, 73, 82, 133, 135, 136, 139, 141, 142, 143, 145], "resolut": [2, 3, 21, 26, 58, 60, 72, 76, 83, 87, 90, 91, 107, 131, 135, 136, 137, 139, 140, 141, 145, 148, 169, 171, 183, 191, 195], "repeat": [2, 3, 11, 26, 52, 69, 70, 93, 95, 97, 135, 137, 139, 140, 145, 146, 195], "measur": [2, 3, 31, 38, 40, 44, 45, 52, 54, 55, 57, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 74, 77, 106, 107, 113, 117, 120, 126, 131, 133, 134, 135, 138, 141, 142, 145, 146, 160, 162, 180, 192, 194, 199, 201], "strength": [2, 3, 59, 67, 107, 120, 133, 134, 139, 141], "wandel": [2, 3, 28, 45, 46, 71, 99, 139, 142, 143], "plo": [2, 3, 28, 37, 39, 40, 42, 43, 70, 71, 98, 99, 134, 135, 139, 142, 143, 145, 153], "ONE": [2, 3, 39, 40, 42, 70, 71, 98, 99, 135, 139, 145, 153], "e0123272": [2, 3, 71, 99, 139], "1371": [2, 3, 39, 40, 42, 70, 71, 98, 99, 135, 139, 145, 153, 182], "journal": [2, 3, 35, 37, 39, 40, 42, 43, 63, 70, 71, 98, 99, 101, 120, 127, 133, 135, 139, 141, 142, 143, 145, 153, 161, 162], "pone": [2, 3, 39, 40, 42, 70, 71, 98, 99, 135, 139, 145, 153], "0123272": [2, 3, 71, 99, 139], "grai": [2, 3, 27, 29, 38, 39, 40, 41, 42, 49, 54, 55, 60, 61, 63, 65, 66, 68, 88, 92, 95, 96, 98, 100, 122, 131, 139, 140, 142, 143, 144], "region": [2, 3, 27, 31, 37, 43, 45, 46, 48, 52, 54, 55, 61, 63, 66, 70, 77, 84, 86, 88, 95, 96, 100, 133, 134, 135, 138, 139, 140, 141, 143, 145], "stanford_label": [2, 3, 35, 43, 46, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103], "pve": [2, 3, 65, 92, 96, 100, 122, 140, 143, 145, 188], "partial": [2, 3, 22, 37, 61, 70, 96, 100, 122, 137, 139, 143, 144, 145, 146, 176], "effect": [2, 3, 9, 37, 38, 39, 54, 61, 66, 67, 70, 77, 87, 90, 96, 98, 100, 108, 116, 117, 122, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 161, 165, 199, 200, 203], "gm": [2, 3, 38, 65, 70, 92, 131, 133, 139, 145], "wm": [2, 3, 38, 52, 54, 65, 92, 122, 139, 145, 179, 196], "cerebrospin": [2, 3, 65, 70, 122, 145, 176], "fluid": [2, 3, 61, 63, 65, 70, 92, 96, 100, 122, 131, 133, 139, 143, 145, 176], "csf": [2, 3, 61, 63, 64, 65, 70, 92, 139, 145, 182], "fetch_stanford_pve_map": [2, 3, 146], "stanford_t1": [2, 3, 41, 43, 46, 48, 88, 98, 99], "syn": [2, 3, 87, 90, 91, 92, 121, 131, 145, 178, 180, 195], "syn_data": [2, 3, 90, 91], "taiwan": [2, 3, 134], "ntu": [2, 3, 134], "dsi": [2, 3, 56, 62, 74, 107, 126, 128, 134, 146, 178, 180, 185, 186, 187, 197], "308": [2, 3, 133, 187], "615": [2, 3, 178], "923": [2, 3, 183], "1231": [2, 3, 180], "1538": [2, 3, 183], "1846": [2, 3, 189], "2462": [2, 3], "2769": [2, 3], "3077": [2, 3], "3385": [2, 3, 113], "3692": [2, 3], "4000": [2, 3], "203": [2, 3, 56, 62, 134, 186], "trio": [2, 3, 134, 138, 139, 140, 141, 143, 199, 200], "taiwan_ntu_dsi": [2, 3, 56, 57, 62, 74], "nation": [2, 3, 24, 110], "univers": [2, 3, 24, 66, 95, 110, 112, 122, 133, 134, 139, 141, 142, 143, 145, 175], "hospit": [2, 3, 24], "advanc": [2, 3, 16, 26, 27, 36, 38, 40, 42, 54, 66, 87, 90, 91, 105, 106, 112, 121, 131, 133, 135, 137, 139, 140, 145, 156, 164, 181], "biomed": [2, 3, 54, 110, 139, 145], "tissue_data": [2, 3, 38, 92, 117], "list": [2, 8, 18, 21, 22, 23, 26, 32, 35, 36, 46, 67, 78, 79, 80, 86, 87, 98, 99, 102, 103, 105, 111, 115, 120, 123, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "retriev": [2, 38, 86, 131, 135, 136, 139, 140, 143], "fetchflow": [2, 126, 146, 189, 190], "available_data": [2, 145], "get_fetcher_datanam": [2, 145, 146], "kei": [2, 5, 11, 31, 101, 131, 133, 134, 137, 139, 142, 143, 144, 145, 146, 175, 176, 183, 184, 185, 187, 195], "fetch_flow": 2, "temporarydirectori": [2, 196], "out_dir": [2, 36, 105, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 134, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "download": [2, 13, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 112, 113, 114, 118, 126, 127, 133, 134, 144, 145, 157, 180, 182, 183, 186, 187, 188, 195, 196], "particular": [2, 8, 42, 45, 59, 67, 71, 85, 125, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145], "do": [2, 5, 6, 7, 10, 11, 12, 15, 17, 18, 20, 21, 26, 32, 35, 39, 42, 46, 47, 48, 50, 52, 56, 64, 65, 66, 67, 72, 77, 78, 79, 80, 84, 85, 88, 90, 91, 95, 97, 106, 107, 108, 109, 111, 112, 113, 116, 121, 124, 127, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 165, 180, 182, 183, 187, 189, 200], "fetch_bundle_fa_hcp": [2, 28, 146], "folder": [2, 5, 22, 26, 27, 28, 49, 112, 113, 114, 115, 125, 134, 144, 145, 149, 151, 157, 179, 184, 189], "dataset": [3, 4, 25, 26, 27, 29, 35, 37, 38, 39, 40, 41, 42, 43, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 77, 81, 82, 85, 86, 87, 91, 92, 95, 101, 102, 103, 104, 106, 107, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 126, 129, 131, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 157, 171, 182, 183, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197], "few": [4, 8, 51, 77, 97, 101, 111, 112, 133, 135, 139, 142, 143, 179, 180, 184, 185, 186, 187, 188, 197], "languag": [4, 5, 107, 182, 187, 190], "numpi": [4, 5, 21, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 102, 107, 111, 126, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196], "numer": [4, 59, 64, 107, 126, 131, 133, 139, 140, 141, 143, 145, 192, 194, 199], "specif": [4, 5, 11, 32, 36, 44, 49, 56, 60, 62, 64, 65, 66, 67, 70, 78, 82, 83, 86, 101, 105, 107, 111, 112, 115, 116, 118, 131, 133, 134, 137, 139, 140, 141, 142, 143, 144, 145, 181, 183, 184, 185, 195, 197], "mathemat": [4, 33, 59, 69, 131, 133, 139, 140, 145, 183, 202, 203], "cython": [4, 20, 107, 111, 126, 131, 133, 136, 139, 140, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196], "extra": [4, 27, 36, 55, 61, 66, 82, 105, 108, 129, 131, 133, 135, 137, 138, 139, 140, 143, 144, 145], "speed": [4, 67, 69, 78, 99, 107, 111, 126, 131, 139, 140, 142, 143, 144, 145, 169, 187, 188, 190], "higher": [4, 34, 42, 52, 54, 58, 61, 64, 71, 104, 107, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 169], "h5py": [4, 5, 107, 111, 126, 137, 181, 183], "larg": [4, 6, 26, 46, 54, 88, 107, 110, 111, 113, 126, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 170, 182, 186, 197], "visualis": [4, 85, 89, 135, 136, 137, 138, 139, 183, 203], "matplotlib": [4, 27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 48, 49, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 67, 68, 70, 74, 75, 77, 82, 83, 84, 86, 88, 92, 95, 98, 100, 107, 111, 131, 139, 140, 142, 143, 144, 180, 183, 185, 187], "scientif": [4, 5, 54, 55, 60, 63, 65, 66, 101, 111, 112, 133, 134, 139], "plot": [4, 28, 38, 39, 40, 41, 45, 54, 55, 61, 63, 64, 66, 67, 69, 71, 82, 83, 86, 90, 91, 92, 113, 131, 139, 142, 143, 145, 146, 180, 182, 185, 187, 189], "ipython": [4, 8, 46, 107, 111, 180, 189, 197], "interact": [4, 8, 30, 31, 32, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 113, 126, 139, 140, 143, 144, 145, 165, 183, 197], "cvxpy": [4, 64, 69, 126, 133, 139, 181, 182, 183, 184, 191, 192], "principl": [5, 76, 139, 141, 143], "behind": [5, 15, 40, 111, 116, 204], "develop": [5, 10, 15, 16, 17, 21, 22, 25, 39, 43, 54, 66, 82, 111, 112, 120, 125, 126, 127, 129, 133, 135, 137, 138, 139, 141, 143, 178, 180, 181, 182, 183, 187], "piec": [5, 131, 137], "must": [5, 26, 52, 57, 64, 65, 74, 78, 79, 85, 87, 95, 97, 98, 113, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 163], "verifi": [5, 42, 49, 52, 85, 90, 91, 133, 137, 139, 140, 143, 144, 145, 178, 187], "systemat": [5, 133], "henc": [5, 63, 84, 111, 121, 131, 133, 139, 140, 143, 145, 200], "stabil": [5, 139, 145], "ensur": [5, 8, 37, 43, 64, 88, 131, 133, 134, 137, 139, 140, 142, 143, 144, 145, 191], "redund": [5, 23, 39, 40, 46, 116], "readabl": [5, 8], "written": [5, 8, 69, 71, 85, 124, 131, 133, 137, 139, 140, 141, 144, 145, 189], "read": [5, 8, 15, 17, 18, 19, 28, 29, 30, 31, 37, 43, 46, 49, 50, 51, 53, 56, 57, 59, 60, 62, 64, 67, 68, 69, 73, 74, 78, 83, 87, 99, 104, 106, 107, 110, 111, 112, 123, 126, 131, 133, 134, 137, 139, 141, 144, 145, 146, 178, 182, 187, 188, 191, 192, 195, 197], "frequent": [5, 25, 85, 123], "consist": [5, 24, 67, 70, 85, 126, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 180, 183, 185, 189, 195], "eas": [5, 67], "prone": [5, 77, 131], "essenti": [5, 27, 47, 64, 200], "adopt": [5, 84], "toolkit": 5, "choic": [5, 7, 26, 27, 43, 64, 70, 90, 93, 116, 135, 137, 139, 140, 143, 145, 178, 200, 203], "commun": [5, 15, 67, 126, 131, 139, 188, 194, 198], "help": [5, 6, 8, 11, 13, 15, 21, 24, 27, 31, 36, 67, 105, 119, 123, 131, 133, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 183, 187, 197, 198, 201], "clarifi": [5, 67, 126, 186, 187, 189, 192, 195], "certain": [5, 42, 77, 84, 135, 139, 143], "avoid": [5, 8, 26, 37, 38, 42, 54, 59, 61, 66, 79, 97, 131, 133, 138, 139, 143, 144, 145, 180, 182, 184, 185, 187, 189, 190, 195, 196], "obscur": 5, "place": [5, 22, 27, 46, 77, 114, 127, 131, 133, 135, 136, 137, 139, 140, 142, 143, 145, 153, 154, 178, 189, 191], "allow": [5, 11, 22, 36, 37, 51, 53, 64, 65, 67, 86, 88, 100, 101, 104, 107, 117, 120, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 170, 179, 180, 183, 185, 187, 190, 192, 193, 194, 195, 196], "member": [5, 139, 145, 196], "decod": 5, "effort": 5, "english": [5, 139], "spell": [5, 191], "abid": 5, "pep8": [5, 6, 21, 178, 179, 180, 181, 188, 192], "across": [5, 22, 30, 31, 34, 40, 42, 59, 63, 66, 70, 108, 118, 120, 133, 139, 140, 142, 145, 183, 198, 199, 200], "conform": [5, 6, 133, 135, 137, 138, 139, 192], "syntax": [5, 23, 139, 143, 184, 192], "automat": [5, 17, 29, 40, 53, 71, 77, 81, 106, 111, 116, 126, 131, 135, 139, 140, 142, 143, 145, 153, 159, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196], "request": [5, 7, 8, 17, 26, 110, 126, 131, 134, 135, 139, 142, 143, 144, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200], "push": [5, 8, 15, 18, 19, 22, 131], "There": [5, 8, 13, 14, 15, 22, 23, 31, 52, 65, 70, 80, 107, 113, 122, 131, 133, 134, 139, 140, 143, 145, 199, 204], "system": [5, 35, 42, 44, 48, 51, 53, 70, 86, 88, 101, 110, 112, 126, 131, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 156, 186, 191, 204], "complianc": 5, "most": [5, 8, 13, 26, 27, 29, 33, 43, 46, 50, 51, 67, 70, 76, 84, 90, 91, 92, 94, 111, 122, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 197], "text": [5, 7, 8, 17, 22, 33, 36, 46, 49, 63, 67, 68, 69, 101, 104, 105, 107, 110, 121, 125, 131, 144, 145, 148, 149, 178, 183], "editor": [5, 8, 107], "configur": [5, 8, 12, 16, 26, 75, 90, 111, 126, 129, 133, 135, 138, 139, 143, 145, 190, 194], "beyond": [5, 64, 67, 131, 135, 137, 139, 140, 142], "aspect": [5, 139], "includ": [5, 8, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 121, 126, 127, 131, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 147, 178, 180, 187, 191, 203], "comment": [5, 105, 138, 144, 178, 182, 185, 189, 191], "abov": [5, 7, 8, 17, 22, 23, 27, 38, 40, 42, 44, 51, 52, 53, 54, 59, 61, 62, 63, 65, 66, 69, 82, 86, 88, 92, 95, 100, 104, 108, 111, 113, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 199, 203], "shorthand": [5, 184], "increas": [5, 31, 59, 63, 64, 67, 126, 131, 133, 139, 143, 145, 183, 187, 189, 192], "npt": [5, 192], "sp": [5, 133, 139, 143, 191], "alia": [5, 7, 8, 131, 134, 135, 137, 140, 142, 143, 144, 145, 195], "write": [5, 7, 8, 11, 17, 18, 19, 49, 50, 56, 57, 62, 64, 73, 74, 101, 105, 106, 111, 116, 117, 119, 131, 133, 137, 139, 144, 145, 146, 187, 191], "rule": [5, 15, 31, 126, 139, 142, 143, 178], "cimport": 5, "add": [5, 7, 8, 15, 17, 18, 19, 22, 28, 30, 31, 33, 34, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 133, 137, 139, 140, 141, 143, 144, 145, 146, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196], "prefix": [5, 6, 135, 139, 145], "usual": [5, 8, 27, 36, 44, 49, 76, 104, 105, 111, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145], "cnp": [5, 133, 143, 194], "symbol": [5, 134, 139], "being": [5, 67, 70, 84, 107, 111, 113, 122, 129, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 180, 181, 184, 189, 194, 197, 203], "compar": [5, 17, 34, 35, 40, 45, 46, 53, 54, 57, 63, 64, 69, 70, 77, 82, 107, 113, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 179, 195], "separ": [5, 8, 42, 52, 63, 65, 67, 92, 98, 105, 111, 120, 131, 133, 134, 136, 139, 141, 144, 145, 162, 173, 185, 195], "cdef": [5, 143, 145], "cpdef": 5, "ctypedef": 5, "statement": [5, 23, 25, 180, 187, 190, 191, 195], "type": [5, 8, 18, 38, 42, 49, 56, 65, 66, 80, 88, 92, 93, 108, 111, 112, 117, 121, 122, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 149, 157, 163, 165, 166, 170, 178, 179, 182, 184, 185, 187, 195, 196], "turn": [5, 8, 57, 98, 107, 108, 116, 131, 133, 134, 137, 139, 143, 145], "per": [5, 31, 32, 33, 60, 65, 72, 88, 95, 99, 102, 113, 114, 122, 131, 134, 135, 137, 139, 140, 142, 143, 145, 148, 156, 161, 175, 176, 183, 186, 187, 199, 201], "long": [5, 62, 85, 112, 131, 133, 137, 139, 140, 141, 142, 143, 145, 180, 190], "simpl": [5, 18, 21, 32, 33, 52, 55, 56, 59, 61, 63, 70, 73, 78, 79, 80, 86, 95, 103, 111, 122, 126, 131, 133, 137, 139, 140, 141, 143, 144, 145, 187, 192, 197], "assign": [5, 46, 106, 131, 133, 134, 139, 140, 141, 142, 143, 145, 146, 178, 187], "group": [5, 22, 32, 33, 46, 61, 77, 88, 118, 126, 131, 140, 142, 143, 145, 172, 191, 193, 195], "For": [5, 7, 8, 14, 17, 22, 23, 26, 27, 28, 29, 33, 35, 38, 40, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 95, 98, 99, 103, 105, 107, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 153, 154, 165, 169, 172, 175, 176, 197, 199, 200, 203, 204], "good": [5, 7, 8, 13, 15, 17, 22, 23, 26, 43, 45, 52, 64, 65, 71, 77, 84, 86, 90, 92, 95, 116, 124, 133, 139, 140, 143, 145, 180, 187, 190, 194, 204], "int": [5, 72, 101, 112, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 169, 170, 171, 172, 174, 175, 176, 180, 194, 196, 199, 201], "char": [5, 143, 145], "doubl": [5, 52, 107, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 178, 184, 192], "xf": 5, "clustermapcentroid": [5, 142, 146], "p": [5, 8, 17, 37, 39, 40, 41, 42, 43, 57, 58, 70, 74, 92, 98, 107, 110, 113, 116, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 153, 161, 201, 203, 204], "pyarray_data": [5, 194], "seed": [5, 35, 37, 43, 45, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 112, 122, 126, 131, 133, 136, 139, 143, 145, 175, 176, 178, 179, 180, 183, 186, 187, 189, 190, 191, 194], "npy_intp": [5, 133, 143, 180, 194], "pstr": 5, "qa": [5, 139, 142, 143, 145], "stride": [5, 133, 139, 143], "cnt": [5, 104], "tmp": [5, 8, 22, 134, 144, 145, 186, 187], "ftmp": [5, 187], "get_direction_c": 5, "self": [5, 36, 80, 85, 105, 106, 126, 131, 133, 135, 137, 139, 140, 142, 143, 145, 156, 161, 183, 189, 193], "bad": [5, 107, 180, 182, 183, 186, 190], "u": [5, 8, 15, 17, 18, 21, 24, 34, 37, 41, 46, 49, 50, 60, 63, 87, 95, 107, 109, 124, 125, 127, 131, 133, 135, 139, 141, 142, 143, 145, 183, 198, 204], "x": [5, 13, 22, 33, 37, 43, 46, 63, 68, 69, 71, 73, 80, 82, 84, 87, 88, 98, 101, 104, 107, 108, 109, 111, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 155, 178, 181, 185, 189, 191, 194, 197, 199, 204], "42": [5, 8, 37, 38, 43, 44, 63, 84, 102, 120, 131, 139, 141, 143, 145, 162, 187], "z": [5, 37, 43, 46, 50, 63, 68, 69, 73, 82, 84, 87, 88, 98, 101, 104, 107, 108, 109, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 199, 204], "top": [5, 8, 17, 23, 26, 37, 46, 48, 55, 90, 91, 103, 108, 111, 133, 134, 135, 137, 138, 139, 142, 144, 145, 179, 185, 189], "bodi": [5, 42, 121, 125, 142, 143, 145, 147], "void": [5, 139], "estimate_kernel_s": 5, "verbos": [5, 31, 32, 70, 129, 131, 133, 135, 137, 138, 139, 140, 143, 144, 145, 156, 179, 187], "true": [5, 7, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 56, 59, 62, 63, 64, 67, 70, 72, 76, 80, 81, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 107, 121, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 154, 155, 158, 159, 163, 165, 169, 175, 176, 182, 191], "kernelmax": 5, "k2": 5, "defin": [5, 27, 32, 33, 35, 38, 40, 43, 54, 55, 59, 61, 63, 66, 67, 68, 69, 73, 75, 77, 78, 79, 80, 82, 84, 90, 91, 92, 94, 96, 99, 100, 109, 131, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 165, 169, 171, 180, 182, 188, 191, 195, 203], "both": [5, 23, 27, 28, 29, 32, 33, 38, 39, 40, 44, 52, 54, 61, 63, 64, 65, 66, 67, 69, 70, 71, 78, 86, 87, 96, 101, 103, 127, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 163, 165, 187, 189, 203], "come": [5, 8, 15, 18, 22, 29, 70, 127, 137, 139, 145, 185], "libc": 5, "stdlib": 5, "calloc": 5, "realloc": 5, "except": [5, 7, 20, 27, 113, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 182, 186, 188], "side": [5, 131, 133, 135, 139, 140, 145, 178], "definit": [5, 27, 59, 69, 71, 109, 120, 126, 131, 133, 135, 136, 138, 139, 145, 180, 183, 185, 187, 192, 195, 203], "between": [5, 23, 25, 27, 28, 32, 33, 34, 37, 38, 39, 40, 41, 46, 52, 54, 55, 57, 59, 61, 63, 64, 65, 67, 69, 70, 71, 79, 80, 85, 87, 88, 90, 91, 92, 103, 106, 107, 111, 113, 118, 121, 125, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 165, 175, 176, 183, 187, 192, 196, 197, 199, 200, 203, 204], "colon": [5, 8], "unless": [5, 78, 84, 131, 133, 139, 140, 142, 143, 145, 196], "bar": [5, 102, 126, 139, 143, 144, 180, 183, 192, 195], "c_extract": [5, 140], "data2d": 5, "datum": [5, 80, 140], "out": [5, 18, 22, 28, 31, 42, 45, 46, 53, 63, 72, 84, 87, 88, 104, 111, 116, 120, 125, 131, 133, 135, 139, 140, 141, 143, 145, 153, 180, 183, 185, 186, 187, 189, 191, 197, 199, 200], "nogil": [5, 131, 139], "hat": [5, 71, 109, 131, 146], "zero": [5, 27, 37, 40, 43, 46, 48, 54, 55, 61, 65, 66, 67, 68, 70, 75, 82, 85, 86, 103, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181, 182, 183, 189, 195, 199, 200], "awai": [5, 23, 108, 143, 182], "put": [5, 23, 36, 71, 105, 131, 139, 142, 143, 144, 145, 187], "ani": [5, 7, 8, 10, 17, 18, 22, 23, 27, 32, 33, 36, 37, 42, 47, 59, 63, 67, 70, 72, 74, 76, 80, 84, 85, 88, 97, 104, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 165, 166, 171, 174, 180, 182, 187, 196, 197, 203], "whitespac": [5, 6, 183], "open": [5, 8, 22, 23, 43, 48, 60, 67, 84, 88, 92, 101, 105, 111, 123, 133, 134, 135, 136, 137, 138, 139, 142, 143, 190, 191, 193, 194, 195, 203], "close": [5, 6, 8, 17, 22, 26, 34, 43, 56, 63, 65, 77, 84, 88, 102, 110, 116, 122, 126, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "float": [5, 29, 57, 75, 100, 107, 112, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 155, 156, 158, 159, 160, 161, 163, 165, 166, 168, 170, 171, 173, 175, 176, 181, 187, 191, 194, 196], "rang": [5, 20, 30, 31, 38, 43, 50, 51, 53, 54, 55, 59, 63, 64, 66, 68, 69, 87, 113, 126, 129, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 175, 176, 183, 191, 199], "nrow": [5, 66, 67, 131, 139, 144], "construct": [5, 26, 70, 99, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 189], "sphinx": [5, 111, 183, 184, 191, 192], "contribut": [5, 21, 24, 27, 28, 43, 46, 55, 61, 63, 66, 67, 82, 83, 139, 141, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201], "suggest": [5, 11, 54, 64, 69, 111, 131, 135, 185, 187, 198], "chang": [5, 6, 7, 10, 12, 18, 19, 25, 31, 32, 34, 37, 42, 52, 57, 61, 64, 65, 72, 77, 86, 101, 104, 107, 111, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 160, 161, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 196, 203], "properli": [5, 36, 57, 64, 72, 85, 101, 105, 131, 134, 137, 139, 140, 142, 143, 145, 182, 185, 187, 191, 196], "html": [5, 22, 23, 69, 107, 111, 131, 133, 137, 139, 141, 180, 182, 192], "websit": [5, 22, 114, 134, 178, 179, 182, 183, 184, 185, 187, 188, 190, 193, 198], "extens": [5, 37, 67, 93, 94, 96, 97, 98, 100, 109, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 166, 180, 182, 186, 187, 190], "These": [5, 10, 14, 22, 26, 28, 35, 38, 39, 43, 45, 54, 55, 59, 61, 63, 64, 67, 70, 82, 84, 85, 88, 92, 98, 100, 120, 131, 133, 134, 135, 139, 143, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 203, 204], "store": [5, 22, 32, 46, 56, 66, 67, 71, 102, 103, 107, 109, 131, 133, 134, 137, 139, 142, 143, 144, 145, 182, 185], "contain": [5, 7, 23, 26, 29, 33, 36, 37, 40, 42, 43, 45, 46, 50, 52, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 81, 85, 101, 104, 105, 110, 111, 112, 117, 119, 120, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 169, 171, 173, 175, 176, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196, 204], "execut": [5, 36, 47, 48, 51, 53, 90, 91, 93, 99, 105, 107, 111, 116, 117, 119, 120, 129, 131, 133, 135, 138, 139, 140, 143, 144, 145, 187], "interleav": 5, "explan": [5, 8, 9, 84, 131, 139, 145, 183], "block": [5, 22, 125, 126, 134, 135, 139, 143, 145, 153, 154, 155, 181, 184], "demonstr": [5, 27, 29, 35, 42, 45, 46, 48, 59, 66, 72, 75, 77, 87, 88, 93, 98, 99, 120, 122], "how": [5, 15, 17, 18, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 100, 101, 102, 108, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 131, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 183, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199], "etc": [5, 6, 42, 77, 101, 107, 116, 129, 131, 133, 135, 139, 143, 145, 171, 185, 188], "intermix": 5, "former": [5, 111], "rational": 5, "aim": [5, 37, 121, 124, 139], "extend": [5, 15, 36, 65, 96, 101, 105, 112, 122, 131, 133, 135, 137, 139, 140, 142, 144, 145, 146, 181, 187, 189, 195], "relev": [5, 22, 43, 54, 55, 61, 63, 66, 69, 82, 111, 112, 113, 114, 125, 126, 133, 139, 142, 143, 145], "paper": [5, 40, 54, 55, 65, 66, 67, 77, 84, 112, 113, 114, 126, 127, 135, 139, 145, 182, 187, 189, 191], "exist": [5, 21, 22, 28, 46, 64, 78, 79, 80, 82, 87, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 167, 178, 179, 182, 183, 187, 188, 192], "edit": [5, 7, 12, 15, 18, 22, 111, 125, 133, 139], "otherwis": [5, 46, 65, 78, 87, 104, 111, 112, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 172, 180], "directori": [5, 7, 8, 10, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 113, 115, 116, 117, 119, 120, 121, 122, 129, 134, 135, 136, 138, 139, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 185, 186, 193], "valid_exampl": 5, "txt": [5, 88, 105, 121, 134, 137, 145, 147, 149, 179, 187, 191], "control": [5, 8, 60, 71, 107, 113, 122, 131, 133, 134, 135, 139, 140, 142, 143, 145, 189], "addition": [5, 40, 59, 100, 110, 139], "reli": [5, 32, 42, 96, 122, 133, 139, 143, 180, 187], "restructuredtext": [5, 182, 192], "rst": [5, 180, 181, 182, 183, 186, 187, 191], "theoret": [5, 25, 33, 54, 69, 73, 131, 133, 139], "background": [5, 29, 38, 48, 50, 54, 55, 59, 61, 66, 67, 68, 84, 88, 100, 104, 131, 135, 139, 143, 144, 145, 165], "instruct": [5, 8, 10, 11, 13, 17, 19, 22, 23, 69, 90, 91, 111, 178, 181, 183, 184, 187, 189, 192], "descript": [5, 8, 22, 35, 48, 78, 79, 103, 133, 134, 137, 139, 143, 145, 189], "again": [5, 7, 8, 22, 26, 67, 70, 95, 108, 131, 133, 134, 135, 139, 140, 144, 180, 182, 185, 187, 204], "markup": [5, 138, 144, 182], "pars": [5, 133, 135, 137, 138, 139, 145, 194], "produc": [5, 26, 46, 50, 54, 61, 64, 65, 66, 67, 69, 82, 107, 131, 133, 134, 135, 136, 139, 140, 142, 143], "content": [5, 7, 12, 16, 20, 22, 25, 133, 137, 139, 180, 181, 185, 190, 202], "later": [5, 28, 43, 54, 55, 63, 67, 70, 87, 133, 139, 145, 186], "compil": [5, 22, 111, 139, 140, 143, 145, 178, 179, 182, 187, 188, 196], "so": [5, 6, 8, 17, 18, 19, 22, 23, 26, 28, 31, 33, 35, 42, 44, 45, 54, 56, 59, 63, 64, 65, 67, 70, 72, 77, 78, 79, 80, 81, 85, 86, 87, 88, 90, 91, 95, 97, 98, 99, 101, 102, 104, 108, 111, 112, 117, 120, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 179, 185, 186, 187, 199, 204], "displai": [5, 37, 43, 46, 50, 58, 60, 64, 66, 73, 87, 88, 95, 98, 99, 101, 102, 103, 104, 134, 139, 144, 145, 146, 165, 180, 184, 190], "web": [5, 22, 134, 185, 187, 191], "enrich": 5, "particularli": [5, 40, 61, 66, 77, 99, 139], "mind": [5, 56, 81, 86, 139], "encourag": [5, 24, 116], "observ": [5, 37, 38, 58, 61, 66, 69, 70, 92, 97, 108, 122, 133, 139, 140, 143], "acronym": 5, "referenc": [5, 131, 134, 139, 140, 145, 187], "invert": [5, 46, 84, 90, 91, 131, 133, 139, 144, 145, 165, 185], "comma": [5, 145, 173, 195], "call": [5, 7, 8, 22, 23, 26, 28, 33, 36, 40, 41, 44, 49, 52, 53, 54, 55, 56, 58, 59, 63, 65, 66, 67, 69, 72, 76, 77, 85, 88, 90, 92, 95, 102, 105, 109, 111, 112, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 183, 184, 185, 195, 204], "gradientt": [5, 44, 49, 50, 54, 56, 57, 59, 62, 63, 64, 66, 73, 74, 82, 83, 131, 138, 143, 145, 146, 179, 180, 185, 187, 191, 194], "hold": [5, 33, 42, 46, 49, 97, 101, 104, 131, 133, 137, 139, 143, 145], "vector": [5, 33, 37, 44, 47, 49, 54, 59, 63, 68, 69, 79, 80, 82, 83, 102, 107, 109, 110, 112, 116, 119, 120, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 152, 153, 159, 161, 166, 178, 180, 183, 187, 199, 200, 203], "cite": [5, 25, 38, 61, 112, 113, 114, 134, 135, 145], "nameyear": 5, "convent": [5, 66, 85, 108, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 202], "cross": [5, 43, 46, 54, 56, 59, 63, 64, 66, 67, 70, 77, 82, 87, 90, 91, 106, 120, 121, 126, 131, 133, 135, 139, 143, 145, 148, 178, 180, 183, 187, 189, 190, 195], "them": [5, 8, 18, 22, 26, 30, 31, 32, 35, 42, 44, 46, 48, 49, 56, 57, 60, 63, 69, 74, 77, 80, 85, 86, 87, 88, 90, 91, 101, 103, 107, 117, 129, 131, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 186], "garyfallidis2014": 5, "under": [5, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 129, 131, 133, 134, 135, 138, 139, 143, 144, 145, 148, 189, 190, 194, 197], "section": [5, 7, 8, 17, 22, 36, 63, 80, 113, 126, 133, 134, 135, 139, 140, 142, 143, 184, 186, 188, 191, 192], "relat": [5, 6, 8, 17, 54, 64, 67, 85, 107, 131, 134, 136, 137, 139, 140, 143, 144, 145, 178, 180, 183, 184, 185, 195, 203, 204], "_specific_filenam": 5, "thu": [5, 22, 43, 54, 55, 61, 63, 65, 79, 84, 87, 116, 133, 139, 140, 141, 145], "abl": [5, 7, 17, 36, 61, 64, 101, 104, 105, 111, 120, 133, 139, 145, 180, 185], "ref": [5, 8, 131, 143, 182], "specific_filenam": 5, "cap": 5, "capit": 5, "first": [5, 8, 17, 19, 22, 23, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 181, 198], "letter": [5, 90, 143], "constrain": [5, 37, 43, 45, 53, 60, 61, 64, 65, 69, 70, 71, 94, 96, 97, 100, 118, 126, 133, 134, 135, 136, 138, 139, 143, 145, 159, 163, 186, 187, 188, 191, 203], "deconvolut": [5, 37, 40, 43, 45, 53, 60, 65, 71, 94, 96, 97, 100, 118, 126, 127, 135, 136, 138, 139, 143, 145, 159, 185, 186, 189, 191, 203], "csd": [5, 37, 43, 45, 52, 60, 70, 94, 96, 97, 100, 106, 113, 118, 126, 128, 138, 139, 145, 178, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 196, 197], "those": [5, 8, 15, 17, 43, 49, 50, 59, 65, 67, 79, 84, 88, 94, 95, 100, 104, 111, 122, 131, 133, 135, 137, 139, 140, 142, 143, 145], "case": [5, 8, 17, 22, 26, 27, 31, 36, 37, 42, 46, 48, 60, 64, 65, 77, 78, 84, 97, 99, 102, 105, 107, 108, 111, 114, 116, 117, 119, 120, 121, 122, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 178, 183, 186, 199, 200, 203], "where": [5, 8, 15, 18, 22, 23, 27, 28, 33, 34, 35, 36, 37, 39, 43, 46, 49, 50, 51, 52, 53, 54, 59, 61, 63, 65, 66, 68, 69, 70, 71, 73, 77, 80, 86, 87, 88, 90, 95, 96, 100, 102, 105, 107, 108, 109, 111, 113, 116, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 160, 161, 167, 170, 173, 175, 176, 190, 199, 200, 203], "common": [5, 7, 15, 31, 32, 36, 47, 50, 64, 66, 70, 76, 77, 85, 87, 98, 105, 113, 119, 131, 133, 134, 137, 139, 142, 143, 145, 185], "lowercas": [5, 190, 191], "superior": [5, 46, 84, 87, 88, 133, 137, 139], "longitudin": [5, 84, 139], "fasciculu": [5, 31, 84, 101, 113, 114, 134], "slf": [5, 84], "customari": 5, "word": [5, 7, 8, 52, 67, 78, 94, 122, 131, 139, 142, 144, 145, 178, 184], "underscor": 5, "filenam": [5, 49, 56, 57, 62, 63, 64, 74, 85, 112, 131, 134, 137, 138, 139, 140, 141, 143, 144, 145, 165, 172, 183], "figur": [5, 27, 29, 38, 40, 42, 43, 46, 48, 49, 53, 54, 55, 57, 60, 61, 63, 65, 66, 67, 68, 74, 82, 84, 86, 88, 92, 95, 98, 100, 126, 131, 133, 140, 142, 143, 144, 145, 165, 178, 180, 181, 182, 189], "font": [5, 192], "caption": 5, "bold": [5, 7, 101, 144], "face": [5, 133, 134, 135, 136, 137, 138, 139, 141, 145, 146, 185, 187], "part": [5, 26, 36, 37, 42, 43, 45, 49, 52, 59, 60, 64, 66, 69, 70, 71, 80, 95, 107, 109, 111, 113, 125, 127, 131, 133, 134, 135, 137, 139, 140, 142, 143, 145, 160, 161, 180, 187, 198, 203], "rel": [5, 7, 8, 28, 35, 43, 45, 46, 59, 77, 99, 133, 135, 136, 139, 140, 142, 143, 145, 178, 180, 183, 184, 185], "path": [5, 26, 27, 28, 36, 46, 47, 49, 54, 60, 61, 76, 85, 87, 97, 104, 105, 106, 111, 116, 117, 119, 120, 121, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 175, 176, 178, 179, 180, 183, 187, 190, 191], "backquot": 5, "inlin": [5, 178, 182], "devel": [5, 111, 190], "greater": [5, 31, 42, 63, 107, 120, 131, 133, 136, 137, 139, 140, 142, 143, 144, 145, 165, 170, 172], "sign": [5, 54, 87, 131, 133, 139, 143, 187, 191, 200, 203], "enclos": 5, "summari": [6, 7, 12, 16, 21, 22, 102, 126, 135, 137, 138, 145, 146, 189], "easili": [6, 36, 49, 54, 59, 80, 84, 85, 105, 133, 139, 140], "classifi": [6, 40, 65, 92, 96, 100, 126, 140, 146, 179, 180, 188, 189, 192], "meaning": [6, 55, 64, 139], "categori": [6, 131, 133, 135, 139, 140, 143, 144, 145], "bf": [6, 18, 37, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194], "rf": [6, 107, 139, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201], "refactor": [6, 8, 126, 178, 179, 182, 183, 185, 186, 187, 188, 189, 191, 192], "nf": [6, 7, 8, 110, 139, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "bw": [6, 180], "address": [6, 7, 181, 184], "opt": [6, 46, 133, 145, 183, 186, 187, 190, 195], "bk": 6, "fail": [6, 22, 27, 72, 124, 131, 137, 139, 140, 143, 178, 179, 180, 182, 183, 187, 188, 189, 191, 192, 195, 196], "pl": [6, 24], "pylint": 6, "happier": 6, "kind": [6, 42, 45, 67, 77, 88, 131, 139, 141, 143, 145, 187], "document": [6, 20, 21, 22, 36, 105, 110, 123, 125, 126, 131, 133, 134, 135, 137, 138, 140, 143, 145, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "style": [6, 20, 21, 25, 144, 145, 179, 180, 181, 182, 183, 184, 185, 189, 190, 192, 193, 195, 196], "affect": [6, 8, 38, 40, 67, 117], "might": [6, 7, 12, 22, 23, 54, 64, 65, 77, 88, 111, 113, 131, 133, 135, 137, 139, 145, 153, 154, 183, 191], "look": [6, 8, 9, 13, 17, 21, 22, 26, 31, 44, 45, 49, 52, 69, 70, 71, 75, 77, 85, 86, 92, 107, 108, 110, 111, 112, 113, 123, 135, 139, 142, 143, 145, 179, 180, 182, 185, 187, 197], "relax": [6, 131, 135, 136, 139, 140, 145, 179, 187], "slightli": [6, 27, 67, 131, 134, 139, 142, 143, 203], "attempt": [6, 27, 134, 137, 139, 140, 141, 143, 190], "failur": [6, 97, 139, 140, 143, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 195], "fact": [6, 42, 109, 120], "veri": [6, 7, 11, 23, 26, 29, 33, 36, 42, 49, 54, 59, 63, 64, 71, 76, 77, 83, 84, 102, 105, 107, 120, 133, 135, 137, 139, 142, 143, 144, 145, 203], "within": [6, 28, 35, 42, 50, 52, 59, 65, 80, 94, 97, 112, 120, 122, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145], "dp": [6, 65, 143, 195], "keep": [6, 8, 18, 20, 25, 62, 65, 70, 81, 85, 88, 93, 95, 100, 131, 139, 140, 143, 145, 170, 172, 178, 183, 195], "up": [6, 7, 12, 15, 16, 18, 22, 31, 32, 35, 48, 67, 69, 70, 72, 86, 87, 93, 97, 99, 102, 103, 104, 107, 108, 111, 124, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 169, 178, 179, 180, 183, 185, 187, 188, 189, 190, 191, 195, 199, 200], "habit": [6, 21], "becaus": [6, 8, 17, 22, 23, 27, 34, 39, 46, 48, 54, 58, 66, 79, 83, 88, 95, 97, 100, 101, 104, 107, 116, 120, 122, 131, 133, 135, 139, 140, 141, 143, 144, 145, 182, 199], "glanc": 6, "sourc": [6, 20, 21, 22, 25, 107, 125, 131, 133, 135, 139, 140, 143, 144, 145, 185], "person": 7, "gitconfig": 7, "home": [7, 11, 49, 111, 124, 134, 139, 144], "yourdomain": [7, 18], "ci": [7, 22, 126, 179, 180, 183, 189, 190, 191, 192], "commit": [7, 9, 15, 18, 20, 21, 22, 25, 129, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "co": [7, 22, 27, 86, 108, 131, 133, 139, 140, 141, 142, 143, 145, 203, 204], "checkout": [7, 8, 15, 17, 18, 22], "statu": [7, 8, 15, 18, 90, 131, 134, 139, 143, 178, 190, 195], "br": 7, "branch": [7, 9, 12, 15, 17, 18, 19, 22, 131, 139, 140, 142, 143, 144, 179, 180, 190], "wdiff": 7, "diff": [7, 8, 9, 15, 17, 84, 131, 145], "color": [7, 30, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 54, 59, 63, 67, 75, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 101, 103, 104, 110, 113, 114, 126, 137, 139, 140, 143, 144, 145, 160, 161, 165, 178, 180, 182, 183, 187, 195], "vim": [7, 22, 107], "config": [7, 15, 18, 145, 178, 183, 187, 188], "copi": [7, 8, 12, 16, 18, 19, 27, 46, 55, 77, 87, 88, 98, 99, 100, 101, 104, 105, 125, 131, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 182, 187, 190], "practic": [7, 25, 37, 38, 48, 52, 61, 64, 71, 84, 117, 133, 139, 182, 192, 203], "tell": [7, 18, 19, 49, 78, 80, 131, 135, 136, 139, 140, 142, 145], "who": [7, 17, 18, 21, 22, 44, 49, 133, 139], "simplest": [7, 18, 135], "Of": [7, 131, 133, 134, 135, 137, 138, 139, 142, 144, 145], "cours": [7, 15, 21, 62, 67, 127, 131, 133, 134, 135, 137, 138, 139, 142, 144, 145, 199], "ll": [7, 8, 17, 19, 21, 22, 28, 46, 70, 71, 87, 88, 95, 97, 101, 104, 111, 139], "actual": [7, 8, 77, 86, 105, 125, 131, 133, 138, 139, 140, 142, 143, 145, 179, 180, 199, 200], "benefit": [7, 23, 38, 70, 139], "shorten": [7, 52, 70], "Or": [7, 8, 23, 49, 52, 76, 95, 107, 131, 133, 134, 135, 137, 138, 139, 142, 144, 145], "give": [7, 8, 11, 15, 19, 21, 22, 34, 42, 50, 52, 63, 69, 80, 84, 85, 95, 107, 116, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 179, 180, 181, 189, 195], "nice": [7, 15, 18, 44, 72, 139, 141, 145], "get": [7, 8, 13, 14, 15, 16, 18, 19, 21, 22, 23, 26, 27, 28, 31, 32, 35, 36, 40, 42, 43, 44, 48, 51, 53, 56, 57, 62, 63, 64, 65, 70, 74, 78, 79, 87, 88, 89, 90, 91, 93, 95, 100, 101, 104, 105, 106, 113, 114, 116, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 179, 182, 183, 185, 189, 191, 194, 195, 199, 200], "lg": [7, 8], "graph": [7, 8, 9, 17, 139, 143, 146, 189], "pretti": [7, 45], "cred": 7, "h": [7, 26, 27, 36, 54, 55, 66, 70, 71, 105, 112, 119, 120, 131, 133, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 187], "creset": 7, "yellow": [7, 88, 92, 113], "cgreen": 7, "cr": [7, 134, 139], "blue": [7, 44, 45, 48, 55, 84, 89, 92, 102, 103, 139, 140, 145], "abbrev": 7, "date": [7, 137, 145, 179, 180], "6d8e1e": 7, "head": [7, 8, 17, 41, 46, 77, 187], "origin": [7, 8, 18, 19, 26, 27, 29, 31, 37, 38, 39, 40, 41, 42, 43, 49, 54, 55, 57, 60, 61, 63, 64, 66, 67, 69, 70, 72, 74, 77, 78, 85, 87, 95, 98, 100, 101, 114, 116, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 170, 178, 187, 189, 190, 191, 203, 204], "my": [7, 8, 17, 107, 179, 180, 185, 191, 195], "45": [7, 35, 38, 43, 48, 75, 88, 92, 95, 103, 104, 111, 131, 134, 139, 140, 185, 188], "minut": [7, 61, 69, 70, 98, 111], "ago": 7, "matthew": [7, 21, 22, 24, 178, 179, 180, 182, 183, 185, 186, 187, 188], "d304a73": 7, "placehold": [7, 131], "pull": [7, 8, 10, 15, 17, 18, 28, 110, 126, 129, 131, 142, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "48": [7, 131, 134, 180, 185], "hhuuggoo": 7, "master": [7, 9, 12, 17, 18, 19, 22, 54, 113, 178, 180, 183, 185, 187, 190], "week": 7, "jonathan": 7, "terhorst": 7, "4aff2a8": 7, "35": [7, 22, 26, 27, 32, 37, 43, 46, 48, 52, 55, 57, 65, 67, 81, 87, 88, 90, 91, 98, 99, 101, 121, 131, 134, 135, 136, 138, 139, 141, 143, 145, 185, 188, 203], "test_bugfix": 7, "hugo": 7, "a7ff2e5": 7, "discuss": [7, 44, 87, 133, 139, 141, 142, 143, 204], "propos": [7, 39, 46, 58, 59, 61, 63, 67, 69, 77, 87, 90, 91, 92, 100, 112, 120, 121, 131, 135, 138, 139, 143, 145, 203], "made": [7, 8, 17, 18, 21, 36, 52, 64, 78, 79, 85, 105, 131, 139, 143, 188, 199, 200, 204], "summit": 7, "corran": 7, "webster": 7, "68f6752": 7, "impliment": 7, "axisindex": 7, "index_bi": 7, "ax": [7, 27, 35, 38, 39, 40, 41, 42, 45, 46, 48, 54, 55, 56, 61, 63, 66, 67, 68, 69, 70, 77, 83, 84, 86, 108, 131, 133, 139, 140, 141, 143, 144], "sketchi": 7, "right": [7, 8, 17, 22, 26, 28, 33, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 55, 58, 63, 64, 66, 68, 69, 77, 84, 87, 88, 100, 101, 102, 104, 107, 108, 113, 131, 133, 134, 135, 137, 139, 140, 141, 143, 144, 145], "corr": 7, "376adbd": 7, "46": [7, 30, 31, 131, 139, 185], "b605216": 7, "joshu": 7, "api": [7, 25, 28, 85, 111, 126, 131, 137, 139, 142, 178, 181, 182, 183, 185, 187, 192], "2e991e8": 7, "outer": [7, 68, 69, 131, 135, 139], "ufunc": [7, 139, 143, 178, 195], "7beda5a": 7, "prevent": [7, 85, 131, 139, 140, 143, 145, 149], "axi": [7, 27, 38, 40, 42, 44, 56, 57, 61, 62, 64, 67, 73, 74, 75, 82, 83, 84, 87, 92, 108, 109, 120, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 164, 169, 183, 185, 189, 192, 199, 204], "throw": [7, 131, 135, 136, 139, 140, 145, 182, 189], "equal": [7, 33, 37, 43, 46, 52, 57, 59, 64, 67, 74, 75, 86, 97, 120, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 176, 182, 185, 187, 191, 199, 200], "65af65": 7, "convert": [7, 22, 37, 54, 66, 72, 82, 131, 133, 134, 135, 136, 137, 139, 140, 143, 145, 159, 179, 183, 189, 191], "unit": [7, 24, 59, 63, 67, 86, 109, 120, 129, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 152, 153, 159, 161, 166, 199, 200, 201, 203], "assert": [7, 88, 140, 143, 182, 187, 192], "956fbab": 7, "remot": [7, 8, 15, 17, 18, 19, 134], "upstream": [7, 8, 15, 17, 18, 22], "thank": [7, 9, 18, 22, 125, 139, 144], "yuri": 7, "zaytsev": 7, "post": [7, 15, 131, 133, 135, 137, 138, 139, 145, 146, 198], "alreadi": [8, 17, 18, 22, 30, 31, 46, 63, 64, 75, 76, 79, 91, 95, 98, 111, 113, 131, 133, 134, 137, 139, 140, 142, 143, 145], "own": [8, 12, 14, 15, 16, 17, 18, 19, 44, 49, 78, 85, 107, 114, 116, 117, 119, 120, 121, 122, 126, 136, 139, 142, 145, 187, 192, 194, 195], "fork": [8, 12, 16, 18, 185], "git": [8, 9, 10, 14, 16, 17, 18, 19, 20, 22, 111, 182], "readi": [8, 15, 22, 36, 52, 53, 54, 60, 80, 90, 105, 111, 134, 137, 139, 179], "real": [8, 28, 36, 66, 86, 105, 107, 109, 126, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 203], "what": [8, 19, 22, 25, 26, 31, 49, 64, 67, 70, 75, 77, 78, 79, 84, 86, 90, 95, 101, 104, 107, 110, 112, 113, 124, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145], "don": [8, 10, 11, 18, 24, 26, 28, 51, 65, 67, 80, 84, 88, 101, 104, 111, 113, 131, 133, 139, 140, 143, 145, 170, 171, 180, 182, 185, 187, 188, 189, 196], "anyth": [8, 18, 105, 131, 133, 139, 140, 143, 187, 194], "fetch": [8, 17, 19, 26, 27, 30, 31, 34, 38, 40, 45, 51, 53, 54, 59, 64, 65, 66, 77, 85, 89, 91, 92, 101, 115, 116, 117, 119, 120, 121, 122, 134, 178, 180, 185, 188, 189, 190, 192], "each": [8, 21, 22, 26, 28, 32, 33, 35, 36, 37, 39, 42, 43, 45, 46, 47, 48, 49, 56, 59, 63, 64, 65, 66, 67, 70, 71, 72, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 105, 107, 112, 113, 114, 116, 117, 119, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 153, 154, 155, 156, 165, 169, 172, 180, 186, 189, 195, 203], "task": [8, 92, 139, 143], "purpos": [8, 27, 28, 33, 38, 44, 47, 49, 52, 54, 61, 64, 65, 71, 77, 80, 81, 82, 99, 116, 120, 122, 124, 125, 131, 133, 134, 139, 140, 141, 143, 144, 145, 180, 200], "bugfix": [8, 178], "databas": 8, "possibli": [8, 59, 133, 139, 142, 143, 178], "while": [8, 9, 23, 37, 38, 40, 45, 59, 61, 63, 66, 69, 70, 72, 82, 85, 120, 131, 133, 135, 139, 140, 142, 143, 144, 145, 179, 180, 182, 194, 203], "find": [8, 11, 14, 18, 22, 28, 31, 33, 43, 46, 51, 52, 59, 62, 64, 71, 86, 87, 88, 90, 91, 92, 96, 101, 107, 111, 115, 120, 122, 123, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 152, 153, 158, 159, 160, 161, 163, 166, 180, 185, 187], "yourself": [8, 11, 19], "mail": [8, 18, 22, 24, 111, 123, 133, 178, 198], "stuck": [8, 26], "maintain": [8, 12, 16, 23, 37, 52, 85, 112], "ve": [8, 17, 18, 19, 23, 28, 88, 95, 111, 133, 143, 200], "done": [8, 14, 18, 22, 27, 28, 33, 38, 42, 43, 45, 46, 55, 59, 64, 65, 66, 67, 70, 76, 78, 80, 88, 91, 95, 111, 131, 133, 135, 139, 140, 142, 143, 145, 153], "why": [8, 18, 22, 26, 59, 69, 85, 107, 120, 195], "did": [8, 59, 77, 91, 121, 126, 133, 139, 141, 143, 194], "linux": [8, 15, 22, 112, 183, 188, 192, 193, 197], "sound": [8, 33, 69], "strang": [8, 183, 192], "confus": [8, 139, 145, 187, 195], "link": [8, 15, 17, 22, 113, 131, 133, 134, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196], "repo": [8, 17, 18, 22, 187, 191, 194], "down": [8, 10, 66, 78, 86, 104, 108, 131, 133, 139, 143, 146, 187, 193, 199, 200], "branchnam": 8, "last": [8, 22, 36, 49, 59, 63, 67, 77, 78, 81, 88, 104, 107, 111, 113, 120, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 161, 181, 184, 196], "often": [8, 22, 23, 48, 59, 70, 76, 77, 86, 88, 109, 131, 133, 134, 135, 139, 141, 145], "someon": [8, 17, 83, 133, 134, 135, 137, 138, 139, 142, 144, 145], "choos": [8, 29, 47, 59, 64, 89, 102, 116, 121, 127, 139, 142, 143, 144, 195], "remind": [8, 17, 108, 183], "rest": [8, 17, 24, 42, 64, 65, 135, 139, 143], "abil": [8, 70, 104, 110, 117, 144, 190], "fly": [8, 78, 79, 108], "public": [8, 21, 22, 25, 92, 108, 126, 133, 134, 135, 137, 138, 139, 146, 180], "correctli": [8, 22, 96, 133, 139, 178, 182, 183, 187, 194], "hack": [8, 18], "my_new_fil": 8, "am": [8, 18, 22, 55], "messag": [8, 18, 20, 21, 25, 101, 104, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 181, 183, 189, 190, 192, 195, 196], "ny": [8, 24, 26, 133], "discard": [8, 22, 43, 88, 133, 134, 135, 138, 139, 145, 179, 195], "readm": [8, 22, 178, 179, 180, 181, 182, 183, 187, 189, 190, 191, 195], "untrack": 8, "new_file_nam": 8, "flag": [8, 18, 31, 63, 88, 112, 126, 131, 133, 139, 143, 145, 149, 181, 182, 187, 195], "just": [8, 9, 10, 11, 14, 17, 18, 19, 21, 22, 26, 36, 49, 56, 57, 59, 62, 63, 64, 71, 74, 75, 84, 87, 102, 105, 107, 111, 119, 131, 133, 134, 137, 138, 139, 140, 143, 144, 145, 165, 178, 188, 189, 197], "signal": [8, 18, 38, 39, 42, 45, 46, 49, 52, 53, 57, 58, 61, 63, 65, 67, 68, 69, 70, 71, 74, 77, 82, 83, 84, 99, 107, 110, 116, 120, 126, 128, 129, 135, 138, 139, 140, 141, 142, 143, 144, 145, 160, 161, 162, 163, 173, 183, 185, 189, 191, 192, 194, 199, 201, 203], "faith": [8, 18], "tangl": 8, "problem": [8, 22, 26, 33, 63, 64, 65, 69, 76, 77, 86, 90, 107, 121, 126, 131, 133, 135, 139, 142, 143, 145, 179, 180, 182, 183, 187, 192, 195, 196], "manual": [8, 16, 17, 22, 53, 79, 81, 84, 85, 131, 134, 135, 137, 139, 145, 191], "url": [8, 19, 134, 180, 187, 191], "sai": [8, 17, 22, 33, 44, 67, 84, 111, 114, 129, 131, 133, 135, 138, 139, 140, 143, 144, 145, 186, 199, 200], "dropdown": 8, "menu": [8, 183], "left": [8, 26, 27, 28, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 55, 58, 64, 66, 67, 68, 69, 71, 84, 87, 88, 100, 101, 102, 104, 107, 108, 113, 114, 131, 133, 134, 135, 137, 139, 140, 143, 144, 145], "click": [8, 11, 104, 116, 117, 182], "button": [8, 11, 101, 104, 180, 189], "enter": [8, 22, 43, 46, 131, 135, 136, 139, 140, 143, 145, 158, 159, 164, 171, 172, 182], "titl": [8, 57, 60, 67, 74, 84, 139, 144, 145, 178, 191], "attent": 8, "complic": [8, 137, 140, 143], "happi": [8, 21, 24, 84, 178, 187, 198], "think": [8, 18, 35, 62, 107, 139, 141, 199], "preliminari": [8, 139], "unwant": 8, "stuff": [8, 14, 17, 20, 185, 187, 189, 194], "even": [8, 18, 26, 56, 66, 69, 75, 78, 80, 111, 116, 131, 133, 135, 136, 138, 139, 140, 143, 145, 163, 203], "account": [8, 12, 22, 37, 39, 61, 69, 70, 77, 82, 87, 131, 133, 134, 135, 138, 139, 145, 179, 192, 193, 203], "Then": [8, 9, 18, 19, 22, 32, 37, 39, 43, 63, 65, 76, 84, 92, 101, 111, 120, 121, 122, 123, 131, 133, 134, 135, 136, 137, 139, 141, 143, 145, 199, 200], "collabor": [8, 24, 43, 123, 124, 198], "anyon": [8, 88], "els": [8, 18, 46, 84, 87, 101, 107, 131, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145], "clone": [8, 10, 15, 18, 22, 111], "githhub": 8, "rememb": [8, 17, 22, 23, 139, 143], "ssh": [8, 11, 22], "protocol": [8, 64], "enh": [8, 178, 180, 181, 182, 183, 185, 187, 189, 190, 191, 192, 194, 195, 196], "better": [8, 14, 18, 26, 38, 45, 54, 55, 61, 67, 124, 126, 133, 139, 142, 145, 180, 182, 188, 190, 191, 192, 195], "graphic": [8, 139, 143], "gitk": 8, "log": [8, 11, 15, 17, 22, 32, 36, 45, 54, 55, 70, 88, 105, 131, 134, 137, 138, 139, 140, 144, 145, 180, 190, 199, 200], "final": [8, 18, 22, 26, 27, 32, 39, 49, 52, 58, 59, 63, 64, 66, 67, 68, 70, 71, 81, 82, 86, 87, 88, 90, 95, 99, 101, 110, 111, 131, 133, 135, 137, 139, 140, 142, 143, 145], "fanci": 8, "reason": [8, 26, 56, 61, 64, 75, 77, 79, 85, 88, 90, 111, 131, 133, 134, 139, 140, 142, 143, 145, 163, 185, 203], "let": [8, 17, 21, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 72, 74, 75, 77, 80, 81, 85, 86, 88, 90, 91, 93, 95, 101, 102, 104, 105, 108, 111, 112, 113, 114, 115, 124, 131, 133, 139, 143, 181], "thought": [8, 86, 109], "cool": [8, 17, 48], "At": [8, 22, 45, 65, 87, 131, 133, 135, 136, 139, 140, 145], "stage": [8, 26, 63, 90, 120, 133, 139, 145, 162], "mayb": [8, 22, 131, 133, 135, 136, 137, 139, 140, 143, 144, 145, 190], "back": [8, 18, 22, 46, 48, 90, 91, 101, 108, 131, 137, 139, 143, 145, 176, 178, 185, 187, 191, 194], "meantim": 8, "progress": [8, 18, 31, 55, 67, 70, 113, 121, 126, 131, 133, 135, 138, 139, 145, 147, 156, 172, 180, 192, 195], "sternli": 8, "advis": [8, 133, 139, 140, 143, 145], "messi": 8, "worri": [8, 97, 113], "got": [8, 17, 42], "littl": [8, 15, 42, 192], "ahead": [8, 26, 101, 181], "But": [8, 21, 42, 44, 46, 77, 87, 108, 133, 137, 139, 140, 143], "sometim": [8, 42, 51, 86, 88, 97, 107, 111, 131, 135, 139, 140, 142, 189], "situat": [8, 108, 133], "replai": [8, 144, 145], "had": [8, 49, 142, 143], "state": [8, 22, 64, 66, 69, 77, 78, 85, 100, 126, 131, 133, 134, 137, 139, 140, 143, 144, 145, 187, 189, 190, 192, 195, 197], "repres": [8, 35, 37, 38, 43, 50, 51, 59, 61, 66, 67, 68, 69, 71, 72, 78, 80, 81, 82, 86, 88, 97, 107, 109, 113, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 169, 183, 203, 204], "without": [8, 22, 27, 38, 39, 42, 46, 49, 53, 57, 61, 67, 68, 69, 70, 77, 86, 97, 111, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 183, 185, 189, 190, 197], "tear": 8, "backup": 8, "onto": [8, 37, 108, 133, 139, 141, 144, 204], "succinctli": 8, "doesn": [8, 22, 70, 123, 133, 134, 135, 137, 138, 139, 142, 144, 145, 178, 179, 180, 182, 187, 196], "conflict": [8, 22, 111, 140, 143, 145, 182], "resolv": [8, 52, 54, 58, 65, 120, 135, 136, 138, 139, 145, 159, 183, 184, 203], "man": 8, "end": [8, 17, 22, 28, 32, 33, 36, 37, 44, 45, 54, 59, 68, 69, 78, 80, 86, 88, 90, 100, 105, 108, 111, 113, 120, 131, 133, 134, 135, 137, 139, 140, 143, 145, 191, 199, 200, 203], "luckili": 8, "straightforward": 8, "mistak": [8, 107, 137, 189, 191], "abort": [8, 183], "notic": [8, 33, 67, 88, 108, 116, 131, 133, 134, 139, 140, 142, 143, 145], "reset": [8, 133, 139, 145, 146], "hard": [8, 38, 54, 139, 192], "forgot": 8, "reflog": 8, "show": [8, 17, 19, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 108, 110, 112, 131, 135, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 183, 185, 189, 190, 195, 199], "8630830": 8, "immedi": [8, 108, 111, 139], "278dd2a": 8, "finish": [8, 18, 33, 90, 111, 139, 187], "11ee694744f2552d": 8, "26aa21a": 8, "lib": [8, 38, 43, 129, 133, 134, 135, 138, 139, 143], "seek_gzip_factori": 8, "leak": [8, 178, 187], "gzip": 8, "obj": [8, 23, 101, 104, 131, 134, 137, 140, 144, 145, 191], "botch": 8, "embarass": 8, "typo": [8, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196], "perhap": [8, 135, 192], "fals": [8, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 121, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 161, 178, 195], "would": [8, 9, 22, 27, 28, 33, 46, 52, 64, 71, 77, 91, 101, 104, 107, 115, 121, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 164, 165], "poster": 8, "suppos": [8, 91, 187], "onelin": [8, 17], "eadc391": 8, "remain": [8, 88, 131, 133, 134, 135, 138, 139, 143, 145, 199], "a815645": 8, "2dec1ac": 8, "disabl": [8, 37, 43, 44, 46, 50, 52, 58, 59, 64, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 104, 133, 135, 139, 140, 143, 145, 147, 185], "13d7934": 8, "implement": [8, 26, 27, 36, 37, 38, 43, 44, 45, 46, 60, 61, 64, 65, 70, 72, 77, 80, 87, 90, 91, 100, 109, 121, 126, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 183, 184, 185, 188, 189, 190, 195, 197, 203], "6ad92e5": 8, "instanc": [8, 42, 46, 54, 55, 59, 66, 68, 77, 78, 79, 90, 91, 92, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145], "maskedconst": 8, "29001ed": 8, "pre": [8, 22, 33, 34, 42, 54, 55, 61, 66, 91, 131, 133, 135, 137, 138, 139, 140, 145, 146, 148, 180, 182, 183, 184, 191, 192], "nep": [8, 192], "copul": 8, "structured_array_extens": 8, "sensibl": [8, 17], "combin": [8, 37, 43, 64, 65, 67, 68, 70, 71, 73, 75, 88, 95, 99, 106, 133, 135, 137, 139, 145, 146, 180], "pick": [8, 22, 42, 104, 111, 181], "reword": [8, 186], "amend": 8, "squash": [8, 139, 185], "meld": 8, "fixup": [8, 185], "THAT": 8, "WILL": 8, "BE": [8, 24, 133, 140, 145], "lost": [8, 23, 85], "howev": [8, 40, 47, 51, 54, 57, 61, 64, 65, 66, 67, 69, 70, 78, 85, 86, 88, 97, 98, 101, 104, 107, 111, 122, 133, 134, 135, 139, 140, 141, 145, 153, 154, 203], "everyth": [8, 21, 22, 36, 85, 101, 105, 137, 143, 185], "achiev": [8, 27, 33, 37, 65, 68, 78, 92, 121, 139, 143], "mean": [8, 19, 26, 28, 31, 32, 33, 34, 37, 38, 40, 42, 45, 46, 55, 57, 59, 60, 61, 64, 67, 70, 74, 78, 80, 84, 87, 104, 108, 109, 116, 118, 126, 128, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 155, 160, 161, 163, 164, 165, 175, 176, 187, 188, 189, 192, 204], "ii": [8, 133, 142, 143], "collaps": [8, 108], "three": [8, 26, 27, 49, 59, 63, 64, 65, 66, 67, 70, 73, 75, 80, 88, 90, 92, 95, 107, 108, 109, 120, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145], "quit": [8, 64, 86, 139], "bring": [8, 87, 91, 95, 101, 121, 131, 137, 145, 192], "revis": [8, 22], "detach": 8, "721fc64": 8, "foo": 8, "199": [8, 135, 186], "insert": [8, 44, 102, 134, 137, 139, 140, 143, 145, 146], "66": [8, 50, 64, 81, 112, 139, 185], "0f22701": 8, "79": [8, 135, 185], "61": [8, 68, 126, 133, 139, 140, 142, 185, 194], "successfulli": [8, 133, 139, 203], "sophist": 8, "went": 8, "wrong": [8, 77, 131, 133, 135, 139, 145, 179, 180, 181, 183, 185, 187, 188, 195], "possibl": [8, 15, 22, 26, 29, 44, 50, 52, 56, 57, 62, 64, 65, 73, 74, 81, 85, 97, 104, 107, 108, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 158, 159, 160, 161, 162, 163, 164, 171, 172, 178, 182, 189, 192, 194, 195, 200], "explain": [8, 15, 18, 26, 27, 30, 31, 32, 33, 34, 46, 63, 64, 78, 79, 81, 90, 91, 92, 114, 124, 133, 135, 137, 139, 143, 188, 199, 200], "yarik": 9, "imagin": [9, 108, 112, 133, 139, 141, 143], "seri": [9, 15, 22, 27, 36, 72, 105, 131, 139, 140, 141, 142, 143, 183, 187, 190, 191, 203], "topic": [9, 67], "off": [9, 17, 40, 61, 67, 75, 84, 87, 92, 98, 143, 180], "step": [10, 22, 28, 31, 33, 35, 37, 38, 39, 42, 46, 47, 48, 49, 53, 55, 61, 63, 65, 71, 75, 77, 86, 95, 97, 99, 103, 112, 113, 116, 117, 119, 120, 121, 122, 131, 133, 135, 136, 139, 143, 145, 148, 175, 176, 179, 180, 189, 195], "github": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 46, 69, 111, 113, 126, 129, 131, 135, 136, 139, 140, 142, 143, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "repositori": [10, 17, 18, 21, 22, 111], "tree": [10, 111, 142, 143, 145, 146], "cd": [10, 18, 19, 22, 111, 112], "onc": [11, 22, 36, 40, 54, 59, 62, 64, 65, 66, 67, 70, 77, 85, 88, 102, 105, 107, 117, 119, 129, 131, 133, 135, 138, 139, 140, 143, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 169, 171, 173, 175, 176, 189, 199, 200, 203], "short": [11, 27, 35, 66, 85, 131, 139, 141, 143, 145, 187, 199, 200], "paus": 11, "hardcor": 11, "action": [11, 85, 126, 145, 195, 196], "overview": [12, 16, 106, 118, 192], "consid": [12, 17, 18, 42, 46, 52, 60, 63, 71, 85, 88, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 156, 204], "mirror": [12, 87, 109, 131, 133, 134, 135, 138, 139, 140, 142, 146], "trunk": [12, 19, 22], "ask": [12, 22, 25, 85, 123, 133, 134, 135, 137, 138, 139, 142, 144, 145], "review": [12, 22, 195], "merg": [12, 15, 17, 19, 22, 42, 110, 126, 131, 140, 143, 144, 145, 180, 182, 183, 186, 187, 189], "thing": [12, 15, 18, 22, 23, 26, 27, 36, 67, 77, 88, 95, 105, 111, 122, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 178, 187, 188], "debian": [13, 187], "ubuntu": [13, 180, 183, 191, 195], "sudo": [13, 22, 111], "apt": [13, 111], "fedora": 13, "yum": [13, 111], "msysgit": 13, "osx": [13, 22, 126, 178, 180, 183, 190, 192], "recent": [13, 22, 67, 84, 111, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 180, 186, 196, 197], "sever": [14, 18, 22, 61, 64, 68, 69, 84, 88, 122, 129, 131, 133, 134, 135, 138, 139, 140, 143, 144, 145, 203], "comprehens": 14, "our": [14, 17, 19, 21, 22, 25, 26, 32, 33, 35, 36, 40, 47, 48, 50, 51, 52, 55, 59, 60, 63, 65, 67, 70, 72, 77, 78, 79, 80, 84, 88, 90, 93, 101, 105, 107, 110, 111, 114, 123, 126, 131, 133, 134, 139, 142, 143, 145, 181, 183, 192, 194], "tailor": [14, 101], "host": 14, "servic": [14, 22, 133, 140, 145], "quicker": 14, "resourc": [14, 16, 20, 22, 51, 60, 131, 134, 139, 145, 182], "excel": [15, 18, 131, 133, 139, 141], "guid": [15, 20, 25, 71, 80, 133, 182, 189, 192], "pro": [15, 179], "book": [15, 140, 182], "depth": [15, 131, 144, 145, 165], "cheat": 15, "sheet": 15, "cast": [15, 131, 134, 137, 139, 140, 145, 178, 180], "video": [15, 21, 81, 126], "snippet": [15, 110, 184], "tos": 15, "magic": 15, "introduct": [15, 16, 20, 25, 85, 88, 93, 96, 98, 100, 106, 111, 118, 191, 199], "intermedi": [15, 59, 131, 139, 143], "parabl": 15, "easi": [15, 29, 59, 88, 101, 102, 104, 107, 108, 111, 195, 204], "concept": [15, 25, 33, 34, 200], "foundat": [15, 110, 139], "expand": [15, 61, 70, 131, 133, 140, 145, 180, 194], "fernando": 15, "perez": 15, "mani": [15, 26, 33, 35, 44, 45, 46, 52, 64, 69, 85, 94, 99, 101, 102, 107, 111, 126, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 158, 159, 164, 171, 172, 189, 195, 197], "tip": [15, 108, 192], "technic": [15, 85, 133], "svn": 15, "crash": [15, 133, 135, 139, 180, 182, 183, 189], "subvers": 15, "thumb": [15, 31, 143], "linu": 15, "torvald": 15, "tool": [15, 20, 26, 27, 48, 49, 52, 85, 87, 88, 90, 91, 111, 112, 121, 126, 131, 139, 140, 143, 144, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "histori": [15, 131, 133, 138, 139, 187], "clean": [15, 22, 43, 110, 111, 126, 140, 143, 180, 182, 183, 184, 185, 186, 188, 189, 195], "activ": [15, 29, 111, 138, 139, 144, 145, 165], "machin": [15, 22, 63, 110, 131, 135, 139, 143, 178], "conveni": [15, 27, 36, 105, 131, 143, 145], "latest": [16, 20, 69, 111, 126, 139, 179, 195, 203], "patch": [16, 17, 20, 39, 42, 116, 135, 145, 153, 154, 155, 182, 189, 191, 194, 196], "onlin": [16, 144, 179, 186, 197], "peopl": [17, 139, 200], "Being": 17, "basic": [17, 40, 52, 61, 76, 80, 93, 97, 112, 116, 120, 133, 137, 139, 140, 141, 142, 143, 145, 183, 189, 191], "scari": 17, "rw": [17, 22], "incorpor": [17, 131, 145], "assum": [17, 33, 42, 44, 46, 54, 59, 63, 65, 70, 75, 77, 78, 79, 80, 82, 87, 98, 120, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 153, 154, 155, 159, 179, 180], "rebas": [17, 22, 180, 181, 182, 183, 184, 186], "detect": [17, 70, 77, 111, 131, 133, 134, 139, 143], "ff": 17, "forc": [17, 22, 36, 105, 112, 114, 133, 135, 139, 142, 143, 145, 195], "forward": [17, 37, 46, 54, 59, 63, 66, 87, 131, 139, 145, 186], "rejoin": 17, "appear": [17, 22, 64, 101, 125, 134, 137, 140, 143, 144], "compact": [17, 109, 142, 143], "second": [17, 22, 26, 33, 42, 44, 46, 51, 52, 53, 54, 63, 64, 66, 67, 68, 69, 70, 71, 82, 87, 91, 105, 111, 120, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 185, 190, 199], "reach": [17, 32, 52, 70, 88, 92, 96, 100, 108, 122, 135, 139, 143, 145], "uniqu": [17, 65, 68, 69, 97, 129, 131, 133, 135, 136, 138, 139, 143, 192, 195], "form": [17, 22, 23, 26, 27, 37, 59, 60, 111, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 199, 200], "discov": 18, "best": [18, 52, 64, 84, 107, 121, 133, 136, 139, 143, 145, 192], "easiest": [18, 22, 111], "quickest": 18, "quick": [18, 25, 29, 59, 63, 110, 139, 142, 143], "email": [18, 178], "im": [18, 46, 48, 63, 75, 203], "somewher": 18, "test_my_bug": 18, "funni": 18, "send": [18, 21, 24, 111, 123], "warmli": 18, "safe": [18, 85, 126, 131, 133, 137, 139, 144, 145, 191], "leav": [18, 22, 57, 131, 133, 135, 139, 141, 142, 143, 145], "unmodifi": 18, "0001": [18, 139], "0002": [18, 70, 139, 145], "switch": [18, 42, 90, 131, 139, 142, 143, 145, 180, 183, 184, 187, 196], "mode": [18, 27, 92, 111, 112, 120, 131, 135, 137, 140, 142, 143, 144, 145, 146, 160, 161, 165, 171, 178, 181, 186, 187], "refresh": [18, 139, 146], "pointer": [18, 133, 139], "investig": [19, 30, 31, 34, 113, 131, 139, 140, 142, 145], "accident": [19, 133, 139, 179], "deliber": [19, 133, 139, 141], "satisfact": 19, "checklist": 20, "upload": [20, 180, 182], "binari": [20, 29, 67, 88, 90, 106, 111, 122, 131, 133, 137, 138, 139, 140, 142, 143, 144, 145, 165, 168, 169, 175, 176, 180, 183, 189, 195], "build": [20, 26, 36, 42, 65, 90, 91, 95, 97, 105, 112, 122, 124, 131, 139, 142, 143, 144, 145, 147, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193], "guidelin": [20, 21, 25, 123, 126, 181, 182, 184, 195], "futur": [20, 22, 131, 133, 135, 137, 144, 145, 189, 191], "print": [20, 34, 39, 40, 41, 42, 44, 45, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 92, 101, 102, 111, 129, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 181, 182, 183, 190, 194, 196], "divis": [20, 139, 180, 183, 187], "xrang": 20, "string": [20, 26, 36, 105, 112, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 183, 184, 191, 192], "next": [20, 21, 22, 26, 28, 36, 44, 45, 46, 49, 59, 63, 65, 67, 69, 72, 77, 84, 86, 88, 93, 95, 99, 103, 111, 131, 133, 134, 136, 139, 140, 141, 143, 144, 145, 183], "dictionari": [20, 26, 101, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 175, 176, 183], "alwai": [21, 23, 52, 59, 64, 66, 67, 71, 84, 85, 94, 107, 122, 131, 133, 134, 135, 139, 141, 142, 143, 145, 185, 191, 199], "seek": 21, "courag": 21, "scientist": [21, 44, 127], "level": [21, 26, 32, 40, 63, 67, 68, 69, 75, 90, 91, 107, 113, 120, 131, 133, 137, 138, 139, 140, 143, 144, 145, 148, 179, 185, 189, 190], "share": [21, 24, 85, 123, 131, 144, 145, 187, 198], "vision": [21, 37, 43, 131, 135, 139, 145], "willing": 21, "lead": [21, 59, 77, 87, 108, 133, 137, 139, 145, 199], "ian": [21, 24, 143, 185], "bago": [21, 24, 178, 179, 180, 182, 185, 186, 187, 188], "stefan": [21, 24, 71, 99, 139, 145, 178, 185, 186, 187, 188, 189], "primari": [21, 139], "idea": [21, 27, 40, 42, 52, 63, 90, 95, 107, 116, 120, 122, 124, 131, 139, 142, 143, 187, 194, 198], "nipi": [21, 22, 111, 124, 129, 133, 137, 180, 185, 186, 191, 194, 198], "pitch": [21, 108, 133], "feedback": 21, "And": [21, 24, 26, 27, 28, 77, 85, 87, 90, 91, 92, 111, 113, 133, 139, 143, 145, 175, 176], "hope": [21, 111, 124], "enjoi": 21, "apologi": 21, "low": [21, 35, 43, 54, 63, 64, 65, 66, 71, 77, 78, 100, 106, 107, 116, 120, 128, 131, 135, 139, 140, 143, 144], "nisext": 22, "understand": [22, 131, 135, 139, 201], "tester": 22, "makefil": [22, 178], "info": [22, 32, 49, 112, 133, 134, 137, 138, 139, 141, 143, 145, 146, 178, 183, 184, 187, 192, 194], "sdist": [22, 196], "archiv": [22, 134, 186], "get_info": [22, 146, 178, 179], "confirm": [22, 32, 66, 68], "temporari": [22, 111, 131, 136, 137, 139, 142, 143, 145, 196], "past": [22, 110, 131, 135, 139, 140, 142], "februari": [22, 127], "11th": 22, "bdist": 22, "egg": 22, "zip": [22, 67, 78, 79, 80, 81, 144], "hatch": 22, "unzip": 22, "whether": [22, 23, 59, 80, 111, 120, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 158, 159, 161], "outstand": 22, "delai": [22, 131, 134, 137, 139, 145], "travi": [22, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192], "inde": 22, "doe": [22, 42, 46, 48, 63, 64, 66, 67, 78, 79, 86, 87, 94, 107, 122, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 178, 179, 180, 182, 183, 186, 187, 189, 192, 194, 195, 196], "pr": [22, 139, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "changelog": [22, 178, 187, 188, 191], "shortlog": 22, "tag": [22, 139, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "recogn": [22, 31, 140, 145, 146, 167, 170], "opportun": [22, 107], "mailmap": 22, "duplic": [22, 133, 134, 135, 138, 139, 143, 178, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196], "author": [22, 131, 134, 140, 145, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "entri": [22, 71, 131, 133, 135, 136, 137, 139, 140, 143, 144, 145, 178, 199], "copyright": [22, 131, 133, 134, 135, 136, 139, 140, 145, 179, 180, 183, 187], "conf": [22, 133, 180], "licens": [22, 131, 134, 135, 136, 139, 140, 145, 187], "realli": [22, 56, 193], "autom": [22, 28, 71, 87, 90, 91, 121, 131, 142, 180], "pyx": [22, 133, 180, 181, 186, 187, 194], "doctest": [22, 129, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 179, 181, 185, 186], "doctest_extmod": 22, "buildbot": [22, 178, 180, 186, 187, 188, 192, 197], "haven": [22, 49, 86, 111], "yet": [22, 28, 49, 71, 106, 133], "long_descript": 22, "root": [22, 46, 67, 111, 137, 139, 140, 142, 200], "diffthi": 22, "valid": [22, 34, 46, 52, 64, 67, 71, 85, 96, 100, 106, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178, 179, 187, 190, 191, 195], "green": [22, 38, 44, 63, 67, 84, 87, 89, 90, 91, 103, 114, 139, 140, 144, 145, 189], "builder": 22, "bic": 22, "berkelei": [22, 24, 127, 139], "edu": [22, 38, 131, 133, 134, 139, 143], "stdio": 22, "interfac": [22, 25, 26, 101, 105, 120, 122, 126, 131, 133, 135, 137, 138, 139, 145, 156, 180, 186, 190, 194, 195], "distclean": 22, "compileal": 22, "script": [22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 125, 145, 159, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204], "march": [22, 110, 127], "31": [22, 43, 64, 102, 112, 131, 133, 139, 187], "could": [22, 48, 52, 54, 66, 67, 69, 75, 78, 80, 84, 86, 92, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 164, 169, 179, 189, 191], "bdist_egg_test": 22, "slow": [22, 39, 63, 78, 107, 120, 129, 131, 133, 135, 138, 139, 143, 183], "script_test": 22, "eventu": [22, 87, 139], "hash": [22, 134, 179, 183], "sys_vers": 22, "r266": 22, "84374": 22, "aug": [22, 50, 112], "00": [22, 91, 102, 133, 135], "51": [22, 32, 60, 61, 64, 131, 133, 185], "gcc": [22, 111], "appl": [22, 111, 133, 140], "inc": 22, "5493": 22, "commit_sourc": 22, "substitut": [22, 131, 133, 139, 140, 145], "np_version": 22, "commit_hash": 22, "25b4125": 22, "pkg_path": 22, "var": [22, 139, 140, 143, 187, 191, 196], "jg": 22, "jgfz12zxhwgsfkd85xlplk": 22, "ti": [22, 131], "tmpgpid3": 22, "pylib": 22, "sys_execut": 22, "framework": [22, 25, 30, 31, 32, 34, 37, 42, 60, 63, 64, 67, 68, 69, 73, 78, 79, 92, 118, 126, 135, 136, 138, 139, 140, 141, 142, 144, 145, 151, 165, 170, 181, 182, 183, 184, 187, 189, 191, 203], "app": [22, 146], "maco": [22, 191], "sys_platform": 22, "darwin": 22, "__init__": [22, 80, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 180], "pyc": [22, 186], "mb312": 22, "dev_tre": 22, "miss": [22, 135, 142, 143, 178, 180, 181, 182, 183, 185, 187, 189, 190, 192, 194, 196], "bin": [22, 26, 35, 36, 46, 105, 111, 131, 133, 139, 140, 142, 143, 145, 147], "dicomf": 22, "nifti1_diagnos": 22, "carri": [22, 37, 139], "fxd": [22, 111], "build_ext": [22, 111], "inplac": [22, 38, 111, 135, 137, 140, 143, 145, 192], "pass": [22, 26, 36, 63, 88, 129, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 155, 169, 184], "sv": [22, 133, 134, 139, 141], "moment": [22, 131, 139], "lot": [22, 64, 88, 97, 107, 111, 139], "autodoc": 22, "trigger": [22, 133, 139, 185], "permiss": [22, 133, 134, 140, 145], "contact": 22, "bdist32": 22, "bdist64": 22, "mpkg": [22, 186], "wheel": [22, 104, 182, 183, 192, 194, 195, 196], "yml": [22, 180], "appveyor": [22, 126, 183, 190, 191], "present": [22, 37, 43, 52, 54, 59, 66, 85, 104, 111, 125, 131, 139, 140, 143, 145, 190, 195], "macpython": 22, "privileg": 22, "trick": [22, 139, 145], "pypi": 22, "until": [22, 52, 70, 96, 122, 131, 133, 135, 136, 137, 139, 140, 143, 145], "_version_extra": 22, "built": [22, 26, 42, 70, 131, 137, 139, 140, 142, 143], "setuptool": [22, 111], "intro": [22, 137, 183], "regist": [22, 26, 27, 31, 32, 33, 63, 87, 90, 91, 101, 114, 121, 131, 137, 139, 140, 145, 146, 183, 184, 191], "gztar": 22, "pypirc": 22, "index": [22, 56, 64, 67, 77, 106, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 185, 186, 189, 195, 196], "server": [22, 134], "usernam": [22, 49], "password": 22, "login": 22, "necessari": [22, 29, 30, 31, 32, 34, 39, 40, 42, 50, 56, 57, 59, 60, 62, 64, 67, 69, 73, 74, 78, 79, 80, 81, 85, 86, 92, 93, 98, 99, 111, 131, 133, 134, 139, 142, 143, 145, 192], "annot": [22, 38, 54, 145], "mainten": [22, 179, 192], "further": [22, 31, 63, 64, 77, 84, 95, 98, 99, 131, 139, 142, 143, 145], "substanti": [22, 40, 45, 46, 77, 142, 143], "maint": [22, 178, 180, 186, 187, 189, 190, 191, 193, 195, 196], "dev": [22, 111, 131, 133, 135, 137, 138, 139, 145, 146, 148, 179, 180, 181, 183, 187, 188], "bump": [22, 87, 195], "_version_micro": 22, "restor": [22, 70, 106, 116, 126, 139, 145, 160, 161, 178, 180, 186, 187, 195], "_version_minor": 22, "seen": [22, 37, 64, 67, 75, 133, 135, 139, 203], "spuriou": [22, 33, 43, 64, 77, 139, 143], "By": [22, 32, 37, 42, 43, 49, 57, 59, 65, 70, 77, 78, 79, 85, 92, 97, 104, 105, 108, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 199, 203], "field": [22, 37, 63, 65, 77, 85, 87, 92, 95, 107, 120, 121, 122, 131, 133, 134, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 162, 179, 180, 185, 199, 200], "exact": [22, 37, 39, 71, 87, 111, 131, 133, 134, 135, 139, 141, 143, 145, 194], "26": [22, 32, 43, 81, 87, 90, 91, 121, 127, 131, 133, 139, 140, 180, 185, 187], "ex": [22, 139, 143, 145, 173], "dist": [22, 80, 133, 143, 146], "win32": [22, 187], "obvious": [22, 59], "admin": 22, "hand": [22, 45, 54, 127, 131], "python26": 22, "bdist_egg": 22, "bdist_wininst": 22, "dmg": [22, 186], "disk": [22, 44, 49, 101, 107, 133, 134, 137, 142, 144, 145, 150, 151, 195], "build_dmg": 22, "box": [22, 133, 137, 139, 140, 142, 143, 144, 145, 169, 173, 182], "bdist_mpkg": 22, "reown_mpkg": 22, "announc": [22, 183], "With": [22, 32, 49, 62, 64, 70, 101, 131, 133, 135, 139, 140, 143, 145, 183, 197], "fear": 22, "trembl": 22, "16": [23, 25, 67, 70, 73, 110, 126, 127, 131, 133, 135, 137, 139, 140, 142, 143, 145, 178, 179, 180, 186, 187, 189, 197], "advic": [23, 133, 183], "howto": 23, "pyport": 23, "python3port": 23, "ptgmedia": 23, "pearsoncmg": 23, "imprint_download": 23, "informit": 23, "promot": [23, 70, 133, 139, 140, 145, 182, 187], "python2python3": 23, "pdf": [23, 26, 54, 56, 57, 108, 131, 139, 141, 145, 146, 147, 187, 196], "__future__": [23, 191], "print_funct": 23, "absolute_import": 23, "whenev": [23, 96, 100, 139], "integ": [23, 26, 88, 107, 129, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 178, 180, 187, 191, 194], "everywher": [23, 64, 126, 139], "routin": [23, 69, 133, 137, 139, 140, 143, 144, 196], "six": [23, 59, 73, 120, 131, 139, 140, 145, 186, 189], "configpars": 23, "python3": [23, 133, 180, 181, 190], "therefor": [23, 32, 33, 38, 42, 54, 56, 57, 59, 61, 62, 64, 94, 101, 102, 104, 107, 109, 122, 131, 133, 135, 137, 139, 140, 141, 143, 145, 203], "stick": [23, 66, 83, 106, 128, 139, 141], "especi": [23, 76, 139, 143], "small": [23, 27, 33, 37, 43, 46, 50, 52, 59, 60, 63, 67, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 88, 94, 97, 120, 129, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 163, 165, 170, 172, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196], "wrap": [23, 36, 59, 105, 131, 133, 135, 139, 140, 142, 145, 146, 153, 154, 155, 169, 171, 178, 188], "builtin": [23, 139, 140, 143], "namespac": [23, 129, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 191], "functool": 23, "str": [23, 51, 53, 92, 104, 112, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "unicod": [23, 139], "my_str": 23, "explicit": [23, 42, 131, 139, 185], "byte": [23, 134, 139, 145, 146, 185, 189], "fname": [23, 29, 33, 34, 78, 79, 80, 81, 87, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rb": [23, 31, 140, 145, 193], "rt": [23, 139, 145, 161], "stringio": [23, 139], "bytesio": 23, "basestr": 23, "string_typ": 23, "isinst": 23, "a_vari": 23, "meanwhil": [23, 121], "gone": 23, "__next__": [23, 140], "valueerror": [23, 131, 133, 135, 136, 139, 141, 142, 143, 178, 187, 189], "err": [23, 139], "has_kei": 23, "hello": 23, "item": [23, 129, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 195], "iteritem": 23, "team": [24, 127, 140, 144, 145], "individu": [24, 28, 32, 33, 34, 66, 129, 133, 135, 138, 139, 141, 142, 143, 196], "indiana": [24, 110], "IN": [24, 133, 139, 140, 145], "usa": 24, "washington": [24, 38, 110, 134], "birmingham": 24, "uk": [24, 133], "databrick": 24, "san": [24, 133, 145, 175], "francisco": [24, 145, 175], "ca": [24, 127, 134, 139], "omar": [24, 178, 179, 180, 187, 188, 196], "googl": [24, 107, 110, 111, 126, 190], "marc": [24, 101, 178, 179, 180, 181, 182, 183, 187, 188, 189], "alexandr": [24, 101, 178, 179, 180, 181, 182, 183, 187, 188, 189], "c\u00f4t\u00e9": [24, 101, 139, 145, 178, 179, 180, 181, 182, 183, 188, 189], "microsoft": 24, "research": [24, 60, 107, 124, 134, 191], "montreal": [24, 63, 127, 134, 139, 144, 145, 165], "qc": 24, "serg": [24, 101, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196], "koudoro": [24, 30, 31, 34, 101, 113, 140, 142, 144, 145, 151, 165, 170, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196], "gabriel": [24, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 191, 194, 195], "girard": [24, 37, 43, 89, 96, 100, 122, 135, 143, 145, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 191, 194, 195], "swiss": 24, "feder": 24, "institut": [24, 41, 110, 116, 133, 134, 135, 139, 183], "technologi": [24, 41, 116, 135, 139, 145, 197], "epfl": 24, "lausann": 24, "ch": 24, "cambridg": [24, 66, 95, 112, 122, 133, 139, 145, 175], "matthieu": [24, 179, 180, 181, 186, 187], "dumont": [24, 179, 180, 181, 186, 187], "imeka": 24, "ranveer": [24, 180, 181], "aggarw": [24, 144, 145, 165, 180, 181], "hyderabad": 24, "telangana": 24, "india": 24, "wonder": [24, 102], "retir": [24, 178, 183], "formerli": 24, "mrc": 24, "cognit": 24, "scienc": [24, 54, 110, 133, 142, 143], "maxim": [24, 26, 27, 33, 75, 87, 92, 121, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 148, 155, 158, 159, 164, 171, 172, 178, 185, 186, 187, 188], "california": [24, 145, 175], "christoph": [24, 131, 133, 139, 178, 179, 180, 182, 183, 184, 186, 187, 189, 191], "houd": [24, 143, 178, 179, 180, 182, 183, 184, 186, 187, 189, 191], "francoi": [24, 183, 184, 189, 190, 191, 195, 196], "rh\u00e9ault": 24, "center": [24, 26, 42, 43, 46, 48, 52, 63, 66, 70, 75, 88, 101, 103, 107, 116, 121, 122, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 159, 175, 176, 178, 190], "umc": [24, 43], "utrecht": 24, "nl": [24, 139], "michael": [24, 178, 185, 187], "paquett": [24, 178, 185, 187], "max": [24, 27, 35, 49, 50, 59, 67, 84, 94, 102, 104, 112, 122, 131, 133, 135, 136, 138, 139, 140, 142, 143, 145, 146, 185, 187, 199], "planck": 24, "leipzig": 24, "de": [24, 139, 143], "massachusett": 24, "ma": [24, 48, 54], "emanuel": [24, 185], "laboratori": 24, "nilab": 24, "trento": 24, "IT": 24, "yaroslav": [24, 180, 185], "halchenco": 24, "pb": 24, "depart": [24, 110], "dartmouth": 24, "nh": 24, "emmanuel": [24, 186, 196], "caruy": [24, 70, 98, 139, 145, 186], "recherch": 24, "en": [24, 80, 108, 131, 133, 139, 140, 141, 145, 183], "informatiqu": 24, "syst\u00e8m": 24, "al\u00e9atoir": 24, "irisa": 24, "renn": 24, "fr": [24, 139], "sylvain": [24, 135, 145, 155, 186], "merlet": [24, 73, 106, 128, 139, 186], "inria": [24, 139], "sophia": [24, 139, 141], "antipoli": [24, 139, 141], "erick": 24, "ziegler": [24, 186], "universit\u00e9": 24, "li\u00e8g": 24, "kimberli": [24, 139, 186], "chan": [24, 45, 139, 186], "chantal": [24, 188], "tax": [24, 52, 54, 70, 139, 188], "cardiff": 24, "demian": [24, 134, 183, 187], "mauro": [24, 178, 182, 186, 187], "zucchelli": [24, 60, 139, 178, 182, 186, 187], "franc": 24, "rutger": [24, 64, 134, 139, 180, 181, 183], "gregori": [24, 179, 180, 187, 191, 192], "lee": [24, 139, 143, 145, 179, 180, 187, 191, 192], "cincinnati": 24, "children": [24, 77, 131, 133, 135, 139, 143, 145, 146, 164, 171], "oh": 24, "endolith": [24, 185], "york": [24, 131, 133, 139], "matthia": [24, 186, 187], "ekman": [24, 186, 187], "donder": 24, "behaviour": [24, 54, 78, 131, 139, 140, 143, 185], "nijmegen": 24, "andrew": [24, 113, 187], "lawrenc": [24, 187, 190], "kesshi": [24, 180, 182, 183, 184, 187], "jordan": [24, 35, 48, 143, 180, 182, 183, 184, 187], "maria": [24, 185], "luisa": [24, 185], "mandelli": [24, 185], "adam": [24, 138, 189], "rybinski": 24, "jagiellonian": 24, "krakow": 24, "qiyuan": [24, 188], "tian": [24, 188], "jon": [24, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 195, 196], "haitz": [24, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 195, 196], "legarreta": [24, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 195, 196], "gorro\u00f1o": [24, 181, 182, 183, 184, 189, 190, 191, 192, 193, 195, 196], "champalimaud": 24, "programm": 24, "centr": [24, 27, 107, 133, 134], "unknown": [24, 37, 137, 139], "lisbon": 24, "pt": [24, 54, 86, 137, 139, 140, 143, 189], "stephan": [24, 179, 180], "meester": [24, 37, 43, 135, 143, 179, 180], "eindhoven": 24, "himanshu": [24, 179], "mishra": [24, 179], "indian": 24, "karaghpur": 24, "alexand": [24, 60, 61, 66, 134, 139], "gauvin": [24, 178, 180], "oscar": [24, 178], "esteban": [24, 178], "bishakh": [24, 179, 180], "ghosh": [24, 179, 180], "durgapur": 24, "dimitri": [24, 178], "rozaki": [24, 178], "tomotech": 24, "athen": 24, "gr": [24, 54], "rohan": [24, 178], "prinja": [24, 178], "bombai": 24, "sagun": [24, 179], "pai": [24, 179], "vatsala": [24, 179], "swaroop": [24, 179], "mombai": 24, "shahnawaz": [24, 180], "ahm": [24, 180], "birla": 24, "pilani": 24, "goa": 24, "nil": [24, 180, 182], "goyett": [24, 180, 182], "scott": [24, 189], "trinkl": [24, 189], "chicago": 24, "il": 24, "kevin": [24, 189], "sitek": [24, 189], "mit": 24, "mcgovern": 24, "derek": [24, 190, 191, 195], "pisner": [24, 190, 191, 195], "texa": 24, "austin": 24, "ross": [24, 190], "john": [24, 139, 194], "hopkin": 24, "larson": [24, 190, 192, 195, 196], "jakob": [24, 183], "wasserth": [24, 183], "german": [24, 133], "cancer": 24, "bramsh": [24, 183, 184, 191, 192, 193, 194], "qamar": [24, 183, 184, 191, 192, 193, 194], "chandio": [24, 30, 31, 34, 113, 140, 142, 144, 145, 151, 165, 170, 194], "javier": [24, 101, 183, 195], "guaj": [24, 101, 144, 145, 165, 183, 195], "shreya": [24, 63, 139, 182, 183, 184, 189, 190, 193, 194, 195, 196], "fadnavi": [24, 42, 63, 106, 128, 135, 139, 144, 145, 156, 165, 182, 183, 184, 189, 190, 193, 194, 195, 196], "matt": [24, 26, 27, 131, 181, 183, 189], "cieslak": [24, 60, 87, 134, 183, 189], "pennsylvania": 24, "sven": [24, 180], "dorkenwald": [24, 180], "princeton": 24, "boundless": 24, "heart": [24, 27], "everyon": 24, "anywher": [24, 105, 139], "world": [24, 29, 46, 47, 59, 76, 86, 101, 102, 107, 131, 137, 140, 143, 144, 145], "join": [24, 26, 27, 28, 49, 60, 61, 104, 134, 145, 186], "area": [24, 31, 43, 50, 59, 63, 95, 99, 100, 101, 104, 113, 133, 139, 143, 145, 165], "focu": [24, 46, 63, 77], "mission": 25, "preprocess": [25, 47, 60, 80, 119, 134], "contextu": [25, 43, 126, 135, 143, 145, 179, 180], "enhanc": [25, 43, 89, 116, 126, 135, 139, 143, 179, 180, 187, 190], "motion": [25, 37, 77, 118, 126, 131, 133, 134, 139, 145, 162, 195], "gibb": [25, 54, 106, 118, 126, 140, 145, 146, 164, 189, 190, 191, 192, 194], "unring": [25, 54, 118, 126], "analyt": [25, 30, 31, 34, 37, 39, 62, 74, 106, 118, 120, 131, 135, 136, 138, 139, 140, 142, 145, 151, 170, 191, 203], "buan": [25, 106, 118, 126, 144, 145, 165, 191, 192, 193], "question": [25, 28, 84, 85, 88, 123, 139, 143, 182, 191, 198], "theori": [25, 40, 42, 57, 74, 133, 135, 139, 140, 143, 145, 153, 154, 196], "coordin": [25, 28, 29, 43, 44, 46, 47, 49, 59, 63, 66, 70, 72, 76, 78, 82, 83, 86, 88, 89, 101, 102, 107, 109, 110, 112, 120, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 165, 178, 179, 189, 196, 202, 203], "__config__": [25, 146], "boot": [25, 129, 146, 180], "nn": [25, 126, 131, 139, 146, 195], "dipy_align_affin": [25, 121, 177], "dipy_align_syn": [25, 121, 177, 192], "dipy_apply_transform": [25, 121, 177], "dipy_buan_lmm": [25, 113, 177], "dipy_buan_profil": [25, 113, 177], "dipy_correct_mot": [25, 119, 177], "dipy_denoise_lpca": [25, 116, 177], "dipy_denoise_mppca": [25, 116, 177], "dipy_denoise_patch2self": [25, 177], "dipy_fetch": [25, 112, 115, 177, 190], "dipy_fit_csa": [25, 112, 120, 177, 189], "dipy_fit_csd": [25, 120, 177, 189], "dipy_fit_dki": [25, 120, 177], "dipy_fit_dti": [25, 112, 120, 177, 189, 196], "dipy_fit_ivim": [25, 120, 177], "dipy_fit_mapmri": [25, 120, 177], "dipy_gibbs_ring": [25, 117, 177], "dipy_horizon": [25, 112, 113, 114, 177, 189, 192, 195], "dipy_info": [25, 112, 177], "dipy_labelsbundl": [25, 114, 177], "dipy_mask": [25, 112, 122, 177], "dipy_median_otsu": [25, 112, 120, 177], "dipy_recobundl": [25, 114, 177], "dipy_reslic": [25, 177], "dipy_slr": [25, 114, 121, 126, 177], "dipy_snr_in_cc": [25, 177], "dipy_split": [25, 177], "dipy_track_pft": [25, 122, 177], "mutual": [26, 27, 121, 131, 145, 147], "mattes03": [26, 27, 131], "ant": [26, 27, 87, 90, 91, 92, 121, 131], "avants11": [26, 27, 87, 90, 91, 121, 131], "twice": [26, 108, 131, 133, 139, 140, 143, 180, 183], "walk": [26, 37, 113, 116, 117, 119, 120, 121, 122], "through": [26, 35, 36, 43, 46, 56, 63, 64, 65, 70, 71, 80, 87, 88, 92, 96, 99, 100, 105, 107, 110, 113, 116, 117, 119, 120, 121, 122, 131, 134, 137, 139, 140, 143, 180, 185, 187, 192, 204], "simplifi": [26, 81, 108, 126, 131, 137, 139, 143, 144, 145, 182, 186, 192, 197], "pjoin": [26, 27, 146], "regtool": [26, 27, 75, 87, 90, 91, 146, 187, 188, 191], "fetch_stanford_hardi": [26, 27, 77, 146], "fetcher": [26, 27, 28, 55, 63, 67, 85, 87, 101, 110, 146, 179, 180, 183, 186, 187, 189, 191, 192, 194, 196], "fetch_syn_data": [26, 27, 146], "load_nifti": [26, 27, 28, 29, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 70, 71, 73, 74, 76, 77, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 110, 138, 139, 140, 141, 143, 146], "transform_centers_of_mass": [26, 146], "mutualinformationmetr": [26, 27, 87, 145, 146], "affineregistr": [26, 27, 87, 145, 146, 179, 195], "translationtransform3d": [26, 27, 87, 146], "rigidtransform3d": [26, 27, 87, 146], "affinetransform3d": [26, 87, 146], "static": [26, 27, 33, 87, 90, 91, 95, 114, 121, 131, 133, 137, 139, 140, 144, 145, 147, 148, 149, 172], "static_data": [26, 27], "static_affin": [26, 27, 87, 91, 131, 145], "static_img": [26, 27], "hardi150": [26, 27, 116, 120], "nii": [26, 27, 28, 29, 36, 39, 40, 41, 42, 47, 48, 49, 59, 60, 61, 76, 84, 85, 88, 104, 105, 107, 110, 112, 113, 116, 117, 119, 120, 121, 122, 137, 145, 156, 165, 173, 178, 182, 191, 196], "gz": [26, 27, 28, 29, 36, 39, 40, 41, 42, 47, 48, 49, 59, 60, 61, 76, 84, 85, 88, 104, 105, 110, 112, 113, 116, 117, 119, 120, 121, 122, 145, 156, 165, 173, 191, 196], "return_img": [26, 27, 46, 48, 49, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 131, 134, 137, 145], "squeez": [26, 27, 29, 91, 139, 142, 143, 188], "static_grid2world": [26, 27, 131, 145], "folder2": 26, "moving_data": 26, "moving_affin": [26, 27, 87, 91, 131, 145], "moving_img": 26, "moving_grid2world": [26, 27, 131, 145], "draw": [26, 75, 90, 94, 122, 142, 143, 144], "grid": [26, 50, 51, 52, 64, 85, 87, 91, 95, 102, 104, 131, 135, 139, 140, 141, 142, 143, 144, 145, 180, 187, 195], "ident": [26, 33, 52, 59, 62, 67, 108, 109, 131, 133, 135, 137, 139, 142, 143, 144, 145, 146, 178, 191, 195], "ey": [26, 27, 46, 85, 87, 88, 101, 131, 139, 143, 145, 188], "affine_map": [26, 27, 87, 91, 131], "shape": [26, 27, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 78, 80, 84, 86, 87, 88, 91, 92, 95, 96, 98, 100, 101, 102, 104, 106, 109, 118, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 159, 161, 170, 178, 179, 180, 185, 187, 189, 191, 192, 195, 196], "overlay_slic": [26, 27, 87, 91, 146], "resampled_0": 26, "png": [26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 144, 145, 184, 191], "resampled_1": 26, "resampled_2": 26, "obtain": [26, 32, 37, 40, 42, 43, 50, 52, 54, 57, 60, 61, 62, 63, 65, 66, 69, 80, 82, 87, 100, 107, 119, 120, 131, 134, 138, 139, 140, 142, 143, 144, 145, 199], "rough": [26, 33], "c_of_mass": 26, "least": [26, 42, 63, 65, 66, 69, 70, 77, 90, 111, 131, 133, 136, 138, 139, 140, 143, 145, 160, 161, 191, 199, 200], "occupi": 26, "roughli": [26, 28, 87, 91, 131, 140, 145], "transformed_com_0": 26, "transformed_com_1": 26, "transformed_com_2": 26, "translat": [26, 27, 87, 88, 109, 121, 131, 133, 139, 140, 143, 145, 147, 170, 189], "toward": [26, 64, 91, 95, 96, 100, 108, 112, 122, 131, 133, 139, 141, 143, 144, 145, 204], "refin": [26, 31, 63, 131, 139, 140, 145, 146, 170], "specifi": [26, 27, 36, 38, 63, 65, 69, 70, 85, 87, 88, 95, 107, 111, 113, 115, 116, 117, 119, 120, 121, 122, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 155, 156, 160, 161, 162, 163, 169, 180, 189, 199, 204], "discret": [26, 37, 43, 50, 51, 64, 97, 98, 121, 122, 131, 133, 134, 136, 139, 140, 143, 144, 145, 147, 172, 185], "joint": [26, 131, 145, 147, 201], "margin": [26, 131, 139, 142, 143, 145, 147], "typic": [26, 54, 69, 71, 88, 116, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 199, 200], "32": [26, 27, 41, 87, 131, 133, 139, 141, 145, 178, 182, 185, 187, 188], "percentag": [26, 46, 82, 83, 133, 139, 140, 141], "accur": [26, 54, 59, 70, 95, 98, 112, 120, 122, 131, 133, 135, 138, 139, 143, 145, 153, 154, 196], "consum": [26, 131, 135, 136, 139, 140, 145], "nbin": [26, 27, 87, 131, 140, 145, 147], "sampling_prop": [26, 27, 87, 145, 147], "optima": 26, "acceler": [26, 37, 43, 70, 117, 131, 139, 145], "converg": [26, 52, 63, 64, 70, 92, 131, 133, 135, 139, 140, 145], "gaussian": [26, 39, 41, 45, 46, 54, 64, 66, 70, 75, 82, 84, 90, 91, 92, 98, 120, 131, 133, 135, 139, 140, 141, 145, 148, 155, 160, 163, 178, 182, 187], "pyramid": [26, 90, 91, 131, 145, 148], "flexibl": [26, 80, 135, 136, 138, 139, 140, 141, 180, 203], "indirectli": 26, "10000": [26, 38, 63, 131, 139, 144, 145, 184, 189], "coarsest": [26, 131, 145, 147], "medium": [26, 82, 133, 145, 170], "finest": [26, 90, 91, 131, 145, 147], "level_it": [26, 27, 75, 87, 90, 91, 131, 145, 147, 148], "kernel": [26, 37, 43, 54, 70, 71, 90, 131, 135, 139, 143, 145, 148, 195], "sigma": [26, 27, 39, 40, 41, 54, 55, 75, 77, 84, 87, 116, 131, 135, 136, 139, 140, 141, 145, 147, 153, 154, 155, 160, 161, 180, 195], "sub": [26, 36, 38, 45, 60, 61, 99, 129, 131, 133, 135, 138, 139, 143, 145, 183], "factor": [26, 27, 51, 53, 65, 70, 73, 87, 88, 92, 131, 133, 135, 139, 143, 145, 147, 148, 153, 163, 192, 199, 203], "nx": [26, 133], "nz": [26, 133], "middl": [26, 29, 38, 39, 40, 42, 49, 58, 67, 78, 86, 91, 104, 134, 140, 143, 144], "scale": [26, 37, 50, 52, 58, 59, 60, 64, 65, 66, 70, 71, 73, 75, 77, 87, 88, 90, 109, 121, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 163, 170, 184, 192, 195, 199, 201], "instanti": [26, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 73, 74, 90, 137, 140, 145], "prepar": [26, 59, 63, 95, 131, 133, 134, 139, 141, 145], "affreg": [26, 27], "convex": [26, 63, 64, 139], "solut": [26, 56, 64, 92, 101, 112, 126, 131, 133, 139, 143], "regtransform": 26, "params0": [26, 87, 131], "starting_affin": [26, 27, 87, 131, 145, 195], "simpli": [26, 42, 59, 65, 67, 78, 85, 125, 131, 133, 139, 143], "transformed_trans_0": 26, "transformed_trans_1": 26, "transformed_trans_2": 26, "rigid": [26, 27, 33, 87, 121, 131, 140, 145, 147, 170, 172, 183, 189, 192, 195], "found": [26, 35, 36, 38, 43, 48, 64, 67, 69, 96, 105, 122, 126, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 155, 156, 169, 178, 180, 198, 199, 200], "slight": [26, 108], "rotat": [26, 37, 43, 54, 67, 88, 108, 109, 120, 121, 131, 133, 134, 137, 139, 140, 141, 143, 145, 147, 182, 188, 189], "transformed_rigid_0": 26, "transformed_rigid_1": 26, "transformed_rigid_2": 26, "shear": [26, 68, 88, 109, 121, 131, 133, 139, 140, 143, 145, 147, 180], "safer": [26, 85], "degre": [26, 54, 58, 59, 66, 108, 120, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 145, 203], "freedom": [26, 85, 108, 131, 145], "transformed_affine_0": 26, "transformed_affine_1": 26, "transformed_affine_2": 26, "affine_registr": [26, 27, 146], "register_dwi_to_templ": [26, 146], "given": [26, 33, 34, 37, 43, 48, 64, 65, 67, 68, 69, 70, 77, 80, 104, 109, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 165, 171, 178, 183, 184, 199, 203], "center_of_mass": [26, 131, 145, 146], "rigid_isosc": [26, 131, 145, 147], "rigid_sc": [26, 131, 145, 147], "xformed_img": [26, 27], "reg_affin": [26, 27], "mi": [26, 27, 85, 131, 137, 145, 195], "xformed_affine_0": 26, "xformed_affine_1": 26, "xformed_affine_2": 26, "altern": [26, 46, 52, 53, 54, 58, 69, 75, 78, 86, 94, 96, 98, 121, 122, 131, 133, 135, 136, 137, 139, 140, 143, 145, 161, 186, 203], "dwi": [26, 42, 60, 61, 64, 66, 67, 84, 106, 107, 110, 112, 116, 120, 131, 134, 135, 137, 138, 139, 140, 143, 145, 173, 191, 192], "tupl": [26, 30, 52, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 183, 186, 204], "bvals_fil": [26, 145, 163, 173], "bvecs_fil": [26, 145, 163, 173], "opposit": [26, 28, 131, 134, 135, 139, 140, 142, 145, 182], "revers": [26, 80, 133, 136, 139, 204], "xformed_dwi": 26, "gtab": [26, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 82, 83, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 131, 133, 134, 135, 138, 139, 141, 143, 145, 183, 192, 194], "bval": [26, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 77, 82, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 112, 116, 119, 120, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 146, 156, 157, 162, 163, 166, 173, 178, 185, 192, 199], "bvec": [26, 35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 77, 82, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 112, 116, 119, 120, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 146, 152, 153, 157, 158, 159, 161, 163, 166, 173, 182, 187, 189, 191, 199], "reg_method": [26, 131], "aff": [26, 32, 131, 137, 140, 143], "xformed_dwi_0": 26, "xformed_dwi_1": 26, "xformed_dwi_2": 26, "dwi_to_templ": 26, "haynor": [26, 27, 131], "vessel": [26, 27, 131], "lewellen": [26, 27, 131], "eubank": [26, 27, 131], "w": [26, 27, 37, 38, 52, 54, 60, 70, 71, 109, 117, 131, 133, 135, 136, 137, 139, 141, 142, 143, 145, 148, 182, 187], "2003": [26, 27, 131, 142, 190], "pet": [26, 27, 131], "ct": [26, 27, 131, 195], "chest": [26, 27, 131], "deform": [26, 27, 75, 90, 106, 131, 143, 144, 145, 148, 182, 190, 191], "22": [26, 27, 67, 73, 127, 131, 135, 139, 141, 145, 185, 188, 190, 195], "avant": [26, 27, 87, 90, 91, 92, 121, 131, 145], "tustison": [26, 27, 87, 90, 91, 92, 121, 131], "song": [26, 27, 87, 90, 91, 121, 131], "normal": [26, 27, 36, 37, 57, 59, 61, 66, 70, 80, 87, 89, 90, 91, 109, 110, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 187, 188, 191, 203], "3d": [27, 33, 37, 39, 40, 41, 42, 45, 46, 54, 65, 66, 77, 82, 86, 89, 95, 101, 103, 104, 106, 107, 110, 116, 120, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 153, 154, 164, 174, 178, 179, 183, 191, 195, 196], "pixel": [27, 75, 116, 131, 135, 139, 140, 142, 143, 144, 145], "2d": [27, 37, 43, 77, 91, 106, 107, 116, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181, 185, 196], "varieti": [27, 64, 80, 85, 120], "circumst": 27, "cardiac": 27, "interest": [27, 43, 44, 48, 54, 55, 77, 83, 84, 87, 88, 95, 116, 120, 131, 134, 135, 138, 139, 140, 141, 143, 192], "ventricl": [27, 38, 61], "slice": [27, 29, 35, 38, 40, 41, 42, 43, 49, 50, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 74, 77, 84, 88, 90, 91, 92, 95, 98, 101, 106, 110, 112, 126, 131, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 164, 180, 182, 183, 189, 191, 195], "priorit": 27, "respect": [27, 33, 61, 64, 70, 73, 84, 88, 92, 100, 107, 111, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 165, 191, 192], "pyplot": [27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 48, 49, 54, 55, 56, 57, 60, 61, 63, 65, 66, 67, 68, 70, 74, 75, 77, 82, 83, 84, 86, 88, 92, 95, 98, 100, 131, 134, 139, 140, 142, 143], "plt": [27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 49, 54, 55, 56, 57, 60, 61, 63, 65, 66, 67, 68, 70, 74, 75, 77, 82, 83, 84, 86, 88, 92, 95, 98, 100, 131, 139, 140, 142, 143], "register_seri": [27, 146], "singl": [27, 28, 33, 38, 48, 50, 52, 56, 59, 60, 66, 69, 70, 71, 75, 77, 82, 83, 106, 107, 109, 112, 114, 120, 126, 128, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 149, 158, 159, 178, 183, 189, 192, 196, 197], "pad": [27, 37, 43, 131, 135, 139, 143], "pad_bi": 27, "constant": [27, 43, 51, 63, 73, 94, 95, 107, 112, 118, 131, 135, 139, 140, 141, 142, 145, 158, 171, 186, 199], "constant_valu": 27, "affmat": 27, "theta": [27, 44, 66, 72, 82, 83, 109, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 185, 203, 204], "sin": [27, 108, 131, 133, 139, 140, 141, 142, 143, 204], "deregist": 27, "misalign": [27, 47, 119], "togeth": [27, 33, 36, 39, 58, 64, 65, 67, 88, 95, 101, 108, 131, 133, 137, 139, 140, 143, 145, 189, 192], "fine": [27, 29, 75], "spars": [27, 46, 64, 69, 126, 131, 133, 134, 139, 142, 143, 145, 187], "transl": 27, "static_mask": [27, 131, 145], "moving_mask": [27, 131, 145], "def": [27, 33, 34, 36, 63, 67, 75, 78, 79, 80, 86, 87, 90, 101, 104, 105, 131, 133, 135, 136, 137, 139, 140, 141, 145, 187], "reg_func": 27, "fignam": 27, "scope": [27, 138, 144], "hopefulli": 27, "transformed_pipelin": 27, "squar": [27, 42, 45, 46, 57, 63, 64, 67, 69, 70, 71, 74, 77, 87, 90, 109, 121, 131, 133, 134, 139, 140, 141, 143, 144, 145, 148, 160, 161, 191, 199, 200], "corner": [27, 85, 131, 133, 134, 135, 137, 140, 143, 144, 145, 183, 190], "cover": [27, 70, 88, 131, 137, 139, 140, 145, 180], "border": [27, 104, 131, 135, 140, 145, 187], "troublesom": 27, "sz": 27, "pd": [27, 139], "squares_st": 27, "zeros_lik": [27, 84, 143], "astyp": [27, 29, 41, 48, 57, 59, 75, 84, 88, 139, 140, 143, 145], "int32": [27, 131, 143], "squares_mv": 27, "deregistered_squar": 27, "ab": [27, 38, 41, 61, 133, 137, 139, 140, 143, 145, 185], "fig": [27, 28, 35, 38, 39, 41, 45, 46, 48, 57, 60, 63, 67, 68, 70, 74, 75, 84, 86, 92, 100, 131, 139, 140, 143], "subplot": [27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 49, 54, 55, 56, 61, 63, 66, 67, 68, 70, 75, 77, 84, 86, 95, 98, 100, 139, 143], "imshow": [27, 29, 38, 39, 40, 41, 42, 49, 54, 55, 56, 57, 59, 60, 61, 63, 66, 67, 68, 70, 74, 75, 84, 88, 92, 95, 98, 100, 131, 140], "cmap": [27, 29, 38, 39, 40, 41, 42, 46, 48, 49, 54, 55, 60, 61, 63, 64, 65, 66, 67, 68, 80, 88, 92, 95, 98, 100, 103, 144, 145], "set_titl": [27, 38, 39, 40, 41, 42, 54, 61, 63, 66, 67, 68, 70, 75, 92, 139], "savefig": [27, 28, 29, 35, 38, 39, 40, 41, 42, 45, 46, 48, 49, 54, 55, 56, 57, 60, 61, 63, 65, 66, 67, 70, 74, 75, 77, 82, 83, 84, 86, 88, 92, 95, 98, 100], "masked_stat": 27, "bbox_inch": [27, 39, 41, 49, 56, 60, 84, 92], "tight": [27, 39, 41, 49, 56, 60, 84, 92, 139], "transformed_squar": 27, "pin": [27, 189, 196], "transformed_squares_mask": 27, "transformed_squares_mask_2": 27, "transformed_squares_mask_3": 27, "stack": [27, 44, 191], "xform": [27, 131], "_": [27, 33, 34, 40, 58, 66, 68, 69, 70, 87, 92, 96, 100, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 199, 200], "series_affin": [27, 131], "series_mask_1": 27, "series_mask_2": 27, "statist": [28, 45, 46, 54, 59, 61, 77, 87, 110, 126, 131, 133, 139, 142, 143, 145, 151, 178, 186, 194], "along": [28, 36, 37, 43, 48, 54, 59, 64, 88, 89, 95, 97, 105, 107, 110, 114, 120, 122, 131, 133, 135, 136, 137, 139, 140, 142, 143, 144, 145, 192], "One": [28, 37, 38, 42, 43, 45, 46, 52, 54, 59, 65, 70, 77, 84, 97, 98, 102, 111, 112, 131, 133, 134, 135, 139, 140, 142, 143, 179, 181, 183, 196, 200], "diverg": [28, 143], "significantli": [28, 29, 139, 142, 143], "overcom": [28, 54, 66, 139], "yeatman2012": [28, 142], "trajectori": [28, 94, 96, 97, 122, 126, 134, 139, 143, 195], "dsa": 28, "dt": [28, 54, 55, 82, 120, 137, 139, 141, 142, 145, 199], "metricspe": [28, 142, 146], "averagepointwiseeuclideanmetr": [28, 78, 79, 146], "get_two_hcp842_bundl": [28, 30, 31, 146], "dpd": [28, 45, 71, 77, 139], "op": [28, 46, 60, 61, 87, 187, 204], "grab": [28, 134], "cst_l_org_1": [28, 31], "af_l_org_1": [28, 31], "slr_transform": [28, 31, 145, 170], "npy": [28, 31, 107, 113, 114, 134, 137, 145, 178], "bundle_extract": [28, 183, 190], "cst_l": [28, 113, 194], "bbox_valid_check": [28, 30, 31, 78, 79, 80, 81, 85, 87, 131, 134, 137, 140, 142, 143, 144, 145], "af_l": [28, 30, 113, 114, 134, 140, 145], "cst": [28, 30, 48, 84, 101, 102, 134, 183, 194], "cortic": [28, 89], "won": [28, 79, 140, 143, 183, 189, 191], "centroid": [28, 31, 32, 34, 78, 80, 81, 131, 140, 142, 144, 145, 146, 172], "af": [28, 30, 101, 133, 134], "advantag": [28, 33, 42, 45, 62, 66, 71, 98, 111, 131, 139, 145], "model_af_l_fil": [28, 30, 31], "model_cst_l_fil": [28, 30, 31], "model_af_l": [28, 30, 31], "model_cst_l": [28, 31], "nb_point": [28, 78, 79, 131, 140, 142, 143, 180], "inf": [28, 63, 84, 131, 135, 139, 140, 142, 143, 145], "qb": [28, 78, 79, 80, 81, 140, 142, 145, 182], "cluster_cst_l": 28, "standard_cst_l": 28, "cluster_af_l": 28, "standard_af_l": 28, "oriented_cst_l": 28, "orient_by_streamlin": [28, 146], "oriented_af_l": 28, "volumetr": 28, "fa_affin": 28, "hcp_bundle_fa": 28, "w_cst_l": 28, "gaussian_weight": [28, 146], "w_af_l": 28, "profile_cst_l": 28, "profile_af_l": 28, "ax1": [28, 57, 60, 70, 74, 131, 140], "ax2": [28, 57, 60, 74, 131, 140], "set_ylabel": [28, 35, 45, 46, 63, 66, 67, 77, 86], "set_xlabel": [28, 35, 45, 46, 63, 66, 67, 77, 86], "node": [28, 46, 133, 138, 140, 142, 143, 145, 146, 196], "tract_profil": 28, "jason": [28, 71, 99, 139, 142], "robert": [28, 139, 142, 196], "dougherti": [28, 142], "nathaniel": [28, 142], "myall": [28, 142], "brian": [28, 71, 99, 139, 142], "heidi": [28, 142], "feldman": [28, 142], "properti": [28, 33, 42, 46, 50, 51, 59, 62, 64, 66, 67, 77, 80, 82, 108, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 178, 203], "quantif": [28, 54, 66, 120, 139, 142, 145, 160], "e49790": [28, 142], "garyfallidis17": [28, 31, 114, 131, 140, 145, 167, 170, 172], "garyfallidis12": [28, 32, 78, 79, 80, 81, 95, 112, 122, 131, 140, 142, 143, 144, 145], "extract": [29, 34, 39, 42, 54, 55, 61, 66, 70, 71, 78, 80, 89, 99, 113, 114, 131, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 167, 174, 179, 180, 183, 185, 186, 187, 189, 192], "get_fnam": [29, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 131, 142, 145, 146, 190], "save_nifti": [29, 41, 42, 47, 48, 49, 59, 76, 84, 87, 88, 110, 146], "compani": 29, "tesla": [29, 134], "data_fnam": 29, "tune": 29, "num_pass": 29, "yield": [29, 131, 144], "incorrect": [29, 180, 193], "b0_mask": [29, 37, 65, 70, 84, 90], "numpass": [29, 38, 40, 50, 51, 53, 54, 55, 59, 65, 66, 70, 87, 90, 91, 112, 140, 145, 169], "matrix": [29, 33, 38, 40, 42, 46, 47, 54, 59, 66, 70, 71, 76, 85, 88, 91, 102, 104, 108, 109, 112, 116, 120, 121, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 178, 179, 180, 183, 184, 187, 189, 190, 191, 192, 193, 195], "float32": [29, 48, 59, 81, 131, 136, 137, 139, 140, 143, 194], "se_1": 29, "5t": [29, 134, 140, 145], "_binary_mask": 29, "_mask": 29, "view": [29, 48, 102, 103, 133, 139, 141, 142, 143, 144, 178, 179, 189], "histeq": [29, 146], "sli": [29, 39, 40, 42, 95, 98], "set_axis_off": [29, 39, 49, 56, 57, 60, 74, 95, 98], "applic": [29, 37, 38, 40, 43, 51, 54, 59, 64, 66, 70, 86, 111, 131, 133, 135, 137, 139, 140, 143, 145, 164], "crop": [29, 59, 137, 145, 146, 169], "largest": [29, 131, 133, 135, 136, 139, 145], "smaller": [29, 30, 31, 52, 63, 64, 67, 69, 82, 107, 131, 133, 135, 139, 140, 143, 144, 145, 153, 165], "auto": [29, 31, 65, 133, 145, 169, 180, 187, 189, 191], "autocrop": [29, 38, 40, 50, 51, 53, 54, 55, 59, 66, 140, 145, 169], "b0_mask_crop": 29, "mask_crop": 29, "_binary_mask_crop": 29, "_mask_crop": 29, "chandio2020": [30, 31, 34, 140, 142, 145, 151, 170], "divid": [30, 33, 45, 57, 67, 80, 84, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 150, 151, 181, 182, 189], "fetch_bundle_atlas_hcp842": [30, 31, 146], "assignment_map": [30, 146], "atlas_fil": [30, 31], "atlas_fold": [30, 31], "sft_af_l": [30, 31], "arcuat": [30, 31, 32, 101, 113, 114, 134], "fasiculu": 30, "setbackground": [30, 31, 33, 34, 44, 72, 78, 79, 80, 81, 86], "fake_tub": 30, "linewidth": [30, 33, 34, 35, 43, 66, 81, 86, 87, 98, 99, 102, 139, 144], "set_camera": [30, 31, 37, 43, 86, 88, 89, 102], "focal_point": [30, 31, 37, 43, 86, 88, 102], "17281532": [30, 31], "55606842": [30, 31], "92485857": [30, 31], "posit": [30, 31, 37, 43, 46, 50, 59, 64, 66, 67, 73, 78, 86, 88, 96, 97, 100, 101, 102, 104, 107, 110, 114, 120, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 177, 182, 183, 187, 195, 196], "360": [30, 31, 187], "44": [30, 31, 37, 50, 59, 78, 79, 131, 134, 135, 137, 139, 140, 143], "view_up": [30, 31, 37, 43, 88, 89, 102], "03": [30, 31, 40, 91, 133, 134, 139, 178, 179, 184, 185, 186, 188, 189, 193, 194, 195, 196], "028": [30, 31], "89": [30, 31, 81, 92, 112, 139, 143, 179, 185, 194], "record": [30, 31, 33, 34, 35, 37, 43, 44, 45, 46, 48, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 131, 138, 140, 142, 143, 144, 145, 182, 183, 184, 187, 189, 191], "out_path": [30, 31, 33, 34, 35, 37, 43, 44, 46, 48, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "af_l_before_assignment_map": 30, "indx": 30, "random": [30, 31, 34, 37, 40, 42, 43, 44, 45, 65, 66, 72, 81, 86, 92, 97, 99, 102, 122, 126, 131, 133, 135, 139, 140, 142, 144, 145, 146, 153, 154, 165, 178, 179, 180, 183, 184, 189, 190, 195], "rand": [30, 44, 66, 72, 102, 133, 143, 144, 145], "si": [30, 139, 143], "disks_color": 30, "len": [30, 43, 78, 79, 80, 81, 85, 86, 88, 89, 131, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 178, 192], "append": [30, 35, 36, 43, 67, 72, 86, 105, 137, 139, 140, 143, 145], "af_l_after_assignment_map": 30, "risach": [30, 31, 34, 113, 140, 142, 145, 151, 170], "bullock": [30, 31, 34, 113, 140, 142, 145, 151, 170, 195], "fc": [30, 31, 34, 113, 140, 142, 145, 151, 170], "harezlak": [30, 31, 34, 113, 140, 142, 145, 151, 170], "profil": [30, 31, 34, 38, 46, 106, 118, 126, 131, 134, 135, 139, 140, 142, 145, 146, 148, 151, 170, 178, 181, 200], "pathwai": [30, 31, 34, 35, 94, 95, 97, 113, 122, 140, 142, 143, 145, 151, 170], "rep": [30, 31, 34, 113, 133, 140, 142, 143, 145, 151, 170], "17149": [30, 31, 34, 113, 140, 142, 145, 151, 170], "2020": [30, 31, 34, 42, 64, 113, 127, 133, 134, 135, 139, 140, 142, 145, 151, 156, 170, 190, 191, 192, 193], "streamlinear": [31, 32, 33, 146, 183, 187], "whole_brain_slr": [31, 146], "fetch_target_tractogram_hcp": [31, 146], "get_bundle_atlas_hcp842": [31, 146], "get_target_tractogram_hcp": [31, 146], "stateful_tractogram": [31, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 131, 134, 140, 143, 144, 145, 146], "create_tractogram_head": [31, 85, 146], "target_fil": 31, "target_fold": 31, "all_bundles_fil": 31, "sft_atla": 31, "atlas_head": 31, "space_attribut": [31, 85, 137, 144, 145, 146], "sft_target": 31, "target_head": 31, "tractograms_initi": 31, "register": 31, "garyfallidis15": [31, 32, 33, 114, 121, 131, 140, 145, 172], "qb_centroids1": 31, "qb_centroids2": 31, "x0": [31, 131, 133, 139, 140, 145, 172, 189], "rng": [31, 34, 131, 139, 140, 142, 143, 144, 145, 146, 191], "randomst": [31, 34, 131, 139, 140, 143, 144, 145], "1984": [31, 106, 128, 133, 190], "tractograms_after_registr": 31, "tri": [31, 131, 133, 134, 135, 137, 138, 139, 142, 144, 145], "millimet": [31, 86, 107, 131, 139], "model_clust_thr": [31, 140, 145, 170], "faster": [31, 64, 78, 111, 126, 131, 135, 139, 140, 142, 143, 145, 153, 154, 179, 180, 185, 187, 198], "larger": [31, 33, 37, 40, 52, 55, 70, 75, 81, 82, 97, 111, 118, 131, 133, 136, 138, 139, 140, 141, 143, 145, 148, 178, 182], "fewer": [31, 133, 143], "01": [31, 43, 52, 63, 70, 91, 112, 133, 134, 135, 139, 141, 143, 145, 182, 183, 188, 190, 191, 196], "reduction_thr": [31, 140, 145, 170], "search": [31, 84, 111, 133, 135, 136, 137, 139, 140, 142, 143, 145, 170, 195, 196], "entir": [31, 39, 40, 42, 63, 64, 67, 94, 99, 102, 111, 122, 131, 137, 139, 140, 143, 144, 145, 190], "neighbor": [31, 37, 43, 70, 131, 133, 136, 139, 140, 142, 143, 145], "pruning_thr": [31, 140, 145, 170], "filter": [31, 39, 41, 42, 46, 66, 70, 75, 87, 88, 106, 116, 118, 126, 131, 133, 135, 136, 139, 140, 142, 143, 145, 155, 169, 176, 180, 182, 195], "distanc": [31, 32, 33, 48, 79, 80, 81, 86, 107, 131, 133, 135, 136, 137, 139, 140, 142, 144, 145, 146, 165, 170, 176, 190, 194, 197, 204], "serv": [31, 34, 36, 93, 139], "neighborhood": [31, 100, 131, 140, 145, 148], "reduction_dist": [31, 140, 145, 170], "pruning_dist": [31, 140, 145, 170], "intern": [31, 37, 40, 43, 55, 63, 65, 79, 81, 85, 97, 110, 131, 133, 135, 139, 140, 143, 144, 145, 165, 185], "diferect": 31, "flip": [31, 33, 87, 131, 140, 142, 143, 181, 191, 203], "mdf": [31, 33, 78, 81, 131, 142, 143, 145, 146, 170, 191], "mam": [31, 140, 145, 170, 190], "neighbour": [31, 135, 142, 143, 145, 164], "corticospin": [31, 65, 84, 92, 96, 100, 113, 122, 139, 143], "tract": [31, 55, 59, 84, 95, 113, 122, 136, 139, 140, 142, 144, 145, 165, 189, 191], "af_l_model_bundl": 31, "2001": [31, 47, 92, 119, 140, 191], "recognized_af_l": 31, "af_l_label": 31, "model_bundl": [31, 140, 142, 145], "af_l_recognized_bundl": 31, "reco_af_l": 31, "rasmm": [31, 87, 93, 94, 95, 96, 97, 98, 99, 100, 131, 134, 137, 140, 143, 144, 145, 146], "af_l_rec_1": 31, "anatomi": [31, 35, 48, 85, 99, 110, 126, 145, 165], "af_l_recognized_bundle2": 31, "af_l_rec_2": 31, "af_l_org_2": 31, "25": [31, 35, 37, 43, 48, 50, 51, 52, 53, 54, 55, 62, 65, 67, 68, 70, 71, 75, 86, 90, 93, 94, 95, 97, 98, 99, 103, 104, 121, 122, 131, 134, 136, 138, 139, 140, 141, 143, 145, 185], "af_l_recognized_bundle3": 31, "af_l_rec_3": 31, "af_l_org_3": 31, "calibr": [31, 52, 70, 120, 126, 139, 145, 158, 159, 188], "outlier": [31, 54, 77, 106, 139, 145, 160, 161, 183], "r_recognized_af_l": 31, "r_af_l_label": 31, "pruned_streamlin": [31, 140, 145], "af_l_refine_recognized_bundl": 31, "af_l_rec_refin": 31, "af_l_org_refin": 31, "sft_cst_l": 31, "cst_l_model_bundl": 31, "recognized_cst_l": 31, "cst_l_label": 31, "cst_l_recognized_bundl": 31, "reco_cst_l": 31, "cst_l_rec_1": 31, "cst_l_recognized_bundle2": 31, "cst_l_rec_2": 31, "cst_l_org_2": 31, "cst_l_recognized_bundle3": 31, "cst_l_rec_3": 31, "cst_l_org_3": 31, "r_recognized_cst_l": 31, "r_cst_l_label": 31, "cst_l_refine_recognized_bundl": 31, "cst_l_rec_refin": 31, "cst_l_org_refin": 31, "decid": [31, 41, 47, 64, 101, 140], "desir": [31, 48, 64, 80, 131, 133, 135, 136, 139, 140, 141, 143, 144, 145], "accordingli": [31, 42, 112, 131, 140, 143], "coregist": 32, "bias": [32, 54, 96, 100, 122, 133, 143, 145, 176], "shuffl": 32, "pair": [32, 88, 131, 133, 136, 137, 139, 142, 143, 145], "simultan": [32, 46, 63, 70, 87, 126, 139, 145], "pairwis": [32, 33, 35, 131, 140], "closer": [32, 37, 91, 121, 131, 133, 192], "decreas": [32, 59, 64, 67, 75, 139, 142, 143, 180, 183], "groupwise_slr": [32, 146], "read_five_af_bundl": [32, 146], "show_bundl": [32, 146], "basicconfig": 32, "fasciculi": 32, "91": [32, 66, 67, 134, 185], "99": [32, 54, 66, 82, 120, 133, 139, 141, 185], "38": [32, 45, 52, 59, 70, 71, 77, 90, 101, 131, 139, 185], "88": [32, 38, 81, 88, 133, 139, 185], "69": [32, 54, 67, 185], "85": [32, 52, 54, 59, 66, 70, 71, 77, 81, 82, 120, 133, 139, 141, 143, 185, 192], "63": [32, 38, 39, 96, 100, 143, 185], "save_a": [32, 144], "before_group_registr": 32, "nativ": [32, 33, 86, 101, 102, 112, 113, 114, 131, 134, 137, 139, 140, 143, 144, 145, 165, 172], "bundles_reg": 32, "after_group_registr": 32, "matric": [32, 46, 87, 106, 109, 131, 133, 134, 135, 139, 143, 180, 183], "117": [32, 33, 81, 114, 121, 131, 134, 139, 140, 141, 145, 172, 185], "124": [32, 33, 81, 114, 121, 131, 134, 140, 145, 172, 185], "romerobascones22": 32, "romero": [32, 194, 195, 196], "bascon": [32, 194, 195, 196], "bundleatlas": 32, "ismrm": [32, 33, 37, 45, 63, 127, 131, 135, 139, 140, 143, 144, 145, 165, 172, 187, 191], "2022": [32, 60, 110, 134, 190, 195, 196], "garyfallidis14": [33, 112, 113, 114, 131, 140, 145, 172], "cingulum": [33, 34, 102, 134, 138, 139, 140, 141, 143], "sleep": 33, "two_cingulum_bundl": [33, 34, 146], "cb_subj1": [33, 34], "cb_subj2": 33, "streamlinelinearregistr": [33, 146], "set_number_of_point": [33, 78, 79, 86, 146, 178, 180, 181, 183, 187], "srr": 33, "srm": 33, "cb_subj2_align": 33, "show_both_bundl": [33, 34], "enumer": [33, 34, 35, 67, 68, 86, 143], "lines_actor": [33, 87], "streamtub": [33, 34, 46, 78, 79, 80, 81, 86, 87, 98, 99, 101, 102, 178, 182, 183, 186], "rotatex": [33, 34, 58, 64, 72, 73, 83], "90": [33, 34, 58, 63, 64, 66, 70, 72, 73, 82, 83, 136, 139, 141, 145, 175, 176, 185], "rotatez": [33, 34], "n_frame": [33, 34, 35, 43, 46, 48, 50, 59, 78, 87, 88, 178], "orang": [33, 87, 102], "red": [33, 38, 44, 45, 54, 55, 84, 86, 89, 90, 91, 92, 102, 113, 139, 140, 143, 144, 145, 165], "before_registr": 33, "after_registr": 33, "although": [33, 38, 54, 64, 66, 67, 98, 117, 139, 143], "cost": [33, 69, 71, 131, 139, 140, 144], "minim": [33, 44, 64, 72, 75, 131, 139, 140, 145, 146, 183, 195], "condit": [33, 37, 69, 92, 100, 133, 139, 140, 141, 142, 143, 145, 181, 183, 187], "stai": [33, 80, 139, 199, 200], "denot": [33, 37, 46, 63, 68, 69, 107, 131, 133, 136, 139, 145, 203], "sequenc": [33, 63, 79, 80, 107, 108, 109, 120, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 191, 199, 200, 201], "mathbf": [33, 54, 59, 61, 63, 68, 69, 107, 109, 120, 139, 143, 145, 199, 200, 201], "mathbb": [33, 37, 42, 68, 69, 133, 139], "total": [33, 40, 41, 42, 51, 54, 64, 65, 66, 70, 82, 92, 112, 133, 135, 139, 140, 141, 142, 143, 145, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "s_": [33, 54, 63, 139, 141], "ldot": [33, 69], "bmd": [33, 131, 140], "operatornam": [33, 108, 201, 204], "frac": [33, 37, 45, 54, 59, 68, 69, 107, 109, 120, 131, 133, 136, 139, 140, 141, 142, 143, 145, 203, 204], "sum_": [33, 54, 69, 71, 133, 139, 145, 203], "min": [33, 35, 49, 67, 70, 84, 93, 97, 102, 104, 112, 131, 133, 136, 139, 140, 142, 143, 145, 146, 195], "rectangular": [33, 50, 59, 139, 199, 200], "d_": [33, 54, 59, 61, 120, 139, 199, 200], "eq": [33, 131, 133, 139, 181], "row": [33, 80, 86, 88, 104, 109, 131, 133, 134, 137, 139, 141, 143, 145, 189], "column": [33, 46, 68, 69, 71, 88, 104, 109, 131, 133, 134, 135, 139, 141, 142, 143, 145], "fan": [33, 59], "endpoint": [33, 80, 88, 100, 139, 145, 146], "symmetr": [33, 60, 71, 72, 80, 87, 99, 110, 118, 126, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 170, 183, 184, 187, 191, 199, 200, 203], "primarili": [33, 139, 145], "visser": 33, "intact": [33, 131, 143], "becom": [33, 44, 67, 86, 104, 108, 133, 139, 142, 143], "assumpt": [33, 42, 63, 64, 67, 139, 192], "x_": [33, 131], "th": [33, 45, 46, 90, 91, 131, 135, 139, 140, 142, 143, 144, 203], "consider": [33, 69, 86, 139, 145, 158], "prove": 33, "nonneg": [33, 139, 142, 143], "satisfi": [33, 133, 135, 139, 143, 145], "triangl": [33, 83, 89, 133, 135, 143, 180], "inequ": [33, 131, 133, 139], "formul": [33, 92, 133, 139, 199, 201], "underset": 33, "argmin": [33, 69, 84, 143], "compos": [33, 131, 133, 139, 142, 143, 145], "extrem": [34, 54, 78, 80, 131, 133, 139, 140, 145], "whatsoev": 34, "qualiti": [34, 38, 60, 78, 84, 95, 121, 131, 134, 136, 137, 139, 140, 144, 145, 147, 183, 184, 189], "dissimilar": [34, 131], "bundle_shape_similar": [34, 146, 192], "select_random_set_of_streamlin": [34, 85, 99, 146], "randomli": [34, 37, 63, 120, 131, 136, 139, 140, 143, 144, 145], "bundle1": [34, 102, 140, 143, 145], "bundle2": [34, 102, 140, 143, 145], "streamtube_actor": 34, "two_bundl": 34, "cluster_thr": [34, 112, 144, 145, 165], "clust_thr": [34, 140, 145, 170], "indic": [34, 40, 43, 48, 50, 51, 54, 55, 59, 60, 64, 77, 78, 79, 80, 81, 84, 89, 90, 106, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 167, 169, 170, 186, 192, 194, 195], "strictli": [34, 97, 98, 139, 140, 143, 145], "ba_scor": 34, "lenient": 34, "score": [35, 45, 106, 113, 140, 143, 145, 183], "jordan_2018_plm": [35, 48], "gradient_t": [35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 77, 82, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 146, 182], "load_nifti_data": [35, 37, 38, 43, 46, 48, 63, 68, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 131, 146, 190], "read_bvals_bvec": [35, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 77, 82, 84, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 110, 141, 146, 178, 182, 186, 192], "shm": [35, 37, 43, 48, 50, 51, 65, 72, 88, 93, 94, 95, 97, 103, 136, 138, 145, 146, 178, 183, 185, 186, 187, 191, 203], "csaodfmodel": [35, 43, 48, 50, 51, 88, 93, 94, 95, 97, 103, 146], "cluster_confid": [35, 146], "csa": [35, 43, 46, 50, 51, 93, 94, 97, 103, 106, 112, 113, 118, 122, 128, 139, 142, 145, 158, 159, 180, 199, 200], "probabilist": [35, 43, 46, 93, 94, 96, 98, 103, 106, 118, 126, 135, 136, 139, 141, 145, 175, 184, 186, 189, 197], "roi": [35, 43, 46, 48, 52, 60, 65, 70, 73, 77, 84, 85, 87, 106, 126, 134, 138, 139, 140, 141, 143, 144, 145, 159, 165, 178, 183, 195], "surfac": [35, 48, 71, 99, 106, 126, 133, 134, 139, 143, 180, 182, 194, 203], "hardi_fnam": [35, 37, 42, 43, 45, 46, 48, 50, 51, 52, 53, 59, 70, 71, 77, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103], "hardi_bval_fnam": [35, 37, 42, 43, 45, 46, 48, 50, 51, 52, 53, 59, 70, 71, 77, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103], "hardi_bvec_fnam": [35, 37, 42, 43, 45, 46, 48, 50, 51, 52, 53, 59, 70, 71, 77, 84, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103], "label_fnam": [35, 43, 46, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103], "white_matt": [35, 48, 88, 93, 94, 95, 97, 98, 99, 100, 103], "csa_model": [35, 43, 48, 93, 94, 95, 97, 103], "sh_order": [35, 37, 43, 48, 52, 60, 65, 70, 72, 93, 94, 95, 97, 103, 120, 135, 136, 138, 139, 145, 158, 159], "csa_peak": [35, 43, 48, 95, 103, 113], "relative_peak_threshold": [35, 43, 48, 50, 51, 52, 53, 62, 65, 70, 71, 88, 95, 99, 103, 136, 139, 145, 186], "min_separation_angl": [35, 43, 48, 50, 51, 52, 53, 62, 65, 70, 71, 88, 95, 99, 103, 136, 139, 145], "gfa": [35, 43, 48, 50, 51, 56, 62, 93, 94, 95, 97, 98, 99, 103, 122, 142, 143, 145, 146, 185, 186, 187, 191], "anatom": [35, 40, 42, 46, 48, 88, 96, 100, 113, 122, 126, 143, 145, 188, 197], "seed_mask": [35, 48, 93, 94, 95, 96, 97, 98, 100, 103, 112], "densiti": [35, 43, 46, 48, 54, 59, 70, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 120, 131, 139, 141, 142, 143, 145, 175, 176, 187, 201], "step_siz": [35, 43, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 133, 143, 145, 175, 176], "inflat": [35, 61], "shorter": [35, 69, 134, 143, 145], "40mm": 35, "cci": [35, 143], "long_streamlin": 35, "sl": [35, 106, 128, 179], "hue": [35, 102], "satur": [35, 102], "lut_cmap": [35, 102], "colormap_lookup_t": [35, 102, 104], "scale_rang": [35, 102, 104], "hue_rang": [35, 102, 104], "saturation_rang": [35, 102, 104], "bar3": [35, 102], "scalar_bar": [35, 102], "stream_actor": [35, 101, 102], "lookup_colormap": [35, 102, 104], "pop": [35, 48, 103, 139, 143, 146], "cci_streamlin": 35, "potenti": [35, 44, 66, 70, 72, 133, 135, 139, 181, 183], "complex": [35, 85, 109, 126, 131, 133, 135, 139, 141, 142, 145, 195, 201, 203], "landscap": 35, "probe": 35, "intuit": [35, 67, 109, 145], "reflect": [35, 70, 88, 98, 109, 131, 135, 139, 140, 142, 145, 171], "stabl": [35, 139, 187, 195], "underli": [35, 42, 52, 67, 84, 88, 120, 124, 135, 139, 145, 156, 187], "phenomenon": 35, "lone": 35, "vote": 35, "lend": 35, "hist": [35, 46, 77, 86, 131, 138, 140], "histtyp": [35, 46, 77, 86], "cci_histogram": 35, "histogram": [35, 86, 131, 133, 140, 145], "keep_streamlin": 35, "kept": [35, 52, 96, 122, 131, 133, 136, 137, 139, 143], "keep_streamlines_actor": 35, "filtered_cci_streamlin": 35, "keshavan": 35, "henri": [35, 77, 139, 145, 161], "reproduc": [35, 61, 67, 68, 118, 133, 134, 140, 143, 145, 183, 187, 191], "combinedworkflow": [36, 146], "combined_workflow": [36, 146], "nlmeansflow": [36, 146], "medianotsuflow": [36, 146], "denoiseandseg": 36, "_get_sub_flow": 36, "commandlin": [36, 113, 145], "input_fil": [36, 105, 112, 145, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 174], "out_fil": [36, 105, 145, 149, 173], "wildcard": [36, 105, 117, 119, 145, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 169, 171, 173, 175, 176], "out_": [36, 105], "lastli": [36, 42, 105], "param": [36, 63, 105, 131, 139, 143, 145, 178, 183, 187], "inspect": [36, 42, 90, 105, 145, 182], "parser": [36, 105, 145], "io_it": [36, 105], "get_io_iter": [36, 105, 145, 146, 183], "in_fil": [36, 105], "nl_flow": 36, "run_sub_flow": [36, 145, 146], "last_generated_output": 36, "out_denois": [36, 145, 153, 154, 155, 156], "me_flow": 36, "ioiter": [36, 105, 146], "globbin": 36, "loop": [36, 66, 70, 92, 104, 105, 107, 131, 133, 137, 139, 140, 143, 145, 183, 189, 195], "nlmean": [36, 66, 106, 118, 146, 155, 178, 179, 180, 187, 194], "retreiv": 36, "ones": [36, 44, 46, 55, 66, 78, 79, 80, 81, 100, 105, 133, 134, 137, 139, 140, 141, 143, 144, 145], "retriv": 36, "bit": [36, 105, 111, 133, 134, 139, 141, 145, 179, 180, 182, 183, 187, 188, 199], "flow_runn": [36, 105, 146], "run_flow": [36, 105, 146], "__name__": [36, 51, 53, 105, 143, 145], "__main__": [36, 51, 53, 105], "argpars": [36, 105, 145], "combined_workflow_cr": 36, "overwrit": [36, 105, 135, 192], "wrote": [36, 105], "experi": [36, 67, 90, 113, 125, 134], "demo": [37, 43, 47], "fod": [37, 43, 94, 97, 136, 139, 145, 179, 181, 189], "meesters2016": [37, 43], "pde": [37, 43, 135, 143], "portegies2015a": 37, "elong": 37, "junction": 37, "nois": [37, 41, 42, 54, 66, 69, 70, 77, 82, 83, 84, 97, 98, 116, 126, 134, 135, 139, 140, 141, 143, 145, 153, 154, 155, 160, 161, 173, 178, 181, 185, 187, 189, 194], "incoher": [37, 118, 139, 145, 162], "hypo": 37, "ellipt": [37, 139], "2nd": [37, 112, 139], "domain": [37, 43, 46, 80, 90, 91, 131, 145, 190], "coupl": [37, 45, 90, 145, 187, 191], "rtime": 37, "flat": [37, 38, 40, 42, 43, 54, 55, 61, 66, 139], "geometr": [37, 108, 131, 139, 183], "differenti": [37, 63, 131, 133, 139, 143], "notion": [37, 140], "evolut": [37, 63, 90, 131, 133, 139, 140, 146, 187], "geq": 37, "begin": [37, 44, 54, 59, 68, 69, 70, 78, 80, 88, 94, 95, 96, 97, 99, 100, 108, 120, 122, 131, 137, 139, 143, 145, 191, 198, 199, 200, 203], "cdot": [37, 46, 109, 139, 140, 143, 201], "nabla": 37, "delta_": [37, 67], "coeffici": [37, 38, 41, 55, 60, 63, 65, 67, 72, 74, 117, 120, 126, 131, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 158, 159, 186, 203], "goe": [37, 65, 67, 144, 145], "laplac": [37, 139], "beltrami": [37, 139], "noisi": [37, 39, 64, 77, 84, 116, 120, 135, 139, 140, 141, 145], "equat": [37, 39, 46, 54, 68, 107, 131, 133, 135, 139, 140, 141, 143, 145, 156, 180, 199, 200], "solv": [37, 47, 61, 64, 68, 69, 70, 111, 119, 126, 131, 133, 135, 139, 143, 145, 146, 156, 180, 188], "shift": [37, 38, 131, 133, 135, 137, 139, 140, 144, 145, 156, 164, 194], "twist": [37, 135], "convolut": [37, 70, 131, 135, 139], "ast_": 37, "p_t": [37, 43], "int_": [37, 139, 203], "t_": [37, 139], "prime": [37, 63, 143], "r_": [37, 67, 139], "euclidean": [37, 109, 131, 133, 139, 140, 142, 143, 144, 145, 204], "stochast": [37, 42, 139], "interpret": [37, 55, 59, 66, 67, 77, 88, 131, 133, 139, 143, 145, 180, 184], "duitsandfranken2011": [37, 43], "limit": [37, 52, 54, 63, 66, 97, 120, 131, 133, 139, 140, 142, 145, 182, 183, 195], "accumul": [37, 139, 143], "particl": [37, 63, 67, 106, 118, 120, 126, 143, 145, 176, 182], "contour": [37, 48, 75, 144, 145, 165, 180, 182, 183], "shown": [37, 38, 40, 43, 52, 61, 64, 66, 69, 77, 82, 112, 113, 129, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 165], "adapt": [37, 38, 41, 43, 61, 63, 70, 87, 98, 112, 116, 120, 135, 139, 142, 143, 144, 145, 155, 165, 180, 182, 191], "formula": [37, 107, 131, 133, 139, 140, 141, 145, 199, 200, 204], "approxim": [37, 45, 63, 64, 68, 69, 84, 116, 131, 133, 135, 139, 141, 142, 143, 145, 200], "portegies2015b": [37, 135, 143], "150": [37, 42, 43, 52, 70, 71, 141], "rician": [37, 39, 41, 70, 82, 83, 98, 134, 135, 139, 140, 141, 145, 155], "add_nois": [37, 146], "b0_slice": 37, "data_noisi": 37, "noise_typ": [37, 140, 141], "boundari": [37, 100, 131, 135, 139, 140, 142, 143, 144, 145, 171], "data_smal": [37, 43, 47, 50, 52, 60, 61, 64, 70, 71, 73], "65": [37, 42, 43, 54, 63, 64, 81, 139, 141, 145, 160, 185], "data_noisy_smal": 37, "enabl": [37, 43, 44, 46, 49, 50, 52, 58, 59, 64, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 111, 125, 135, 139, 143, 144, 145, 147, 165, 170, 181, 190], "constrainedsphericaldeconvmodel": [37, 43, 45, 52, 53, 93, 94, 96, 97, 100, 146], "respons": [37, 43, 45, 53, 65, 71, 82, 93, 94, 95, 96, 97, 98, 99, 100, 106, 120, 126, 134, 139, 140, 143, 145, 159, 178, 186, 187, 188, 189, 191, 192, 196], "ratio": [37, 43, 45, 52, 53, 64, 70, 71, 84, 93, 94, 95, 96, 97, 98, 99, 100, 107, 129, 131, 135, 138, 139, 140, 141, 142, 143, 145, 173], "roi_radii": [37, 43, 45, 52, 53, 65, 70, 71, 93, 94, 95, 96, 97, 98, 99, 100, 139, 145, 159], "fa_thr": [37, 43, 45, 52, 53, 70, 71, 93, 94, 95, 96, 97, 98, 99, 100, 120, 139, 145, 159], "csd_model_orig": 37, "csd_fit_orig": 37, "csd_shm_orig": 37, "shm_coeff": [37, 43, 65, 94, 96, 97, 100, 136, 137, 139, 145, 146, 191], "csd_model_noisi": 37, "csd_fit_noisi": 37, "csd_shm_noisi": 37, "inspir": [37, 43, 65, 140, 145], "rodrigues2010": [37, 43], "lookup": [37, 43, 104, 135, 136, 142, 143], "rotation": [37, 43, 64, 67, 133], "invari": [37, 43, 54, 64, 67, 80, 106, 120, 133, 135, 139, 140, 142, 143, 145, 180], "enhancement_kernel": [37, 43, 146], "enhancementkernel": [37, 43, 143, 146], "shift_twist_convolut": [37, 146], "convolv": [37, 146], "d33": [37, 43, 135], "d44": [37, 43, 135], "02": [37, 43, 67, 68, 69, 91, 139, 179, 180, 185, 192], "sf_to_sh": [37, 72, 146], "sh_to_sf": [37, 72, 146], "delta": [37, 107, 120, 133, 134, 141, 144, 145, 146, 163, 187, 196, 199, 201], "spike": 37, "get_orient": [37, 135, 146], "dtype": [37, 55, 81, 87, 131, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 178, 185, 186, 189, 191, 196], "spike_shm_conv": 37, "get_spher": [37, 51, 56, 58, 59, 60, 62, 64, 65, 70, 71, 72, 73, 83, 99, 143, 146], "test_mod": [37, 135], "spike_sf_conv": 37, "model_kernel": 37, "odf_slic": [37, 50, 52, 58, 59, 60, 64, 65, 70, 71, 72, 73, 83, 183], "csd_shm_enh": 37, "sharpen": [37, 64, 139, 186], "odf_sh_to_sharp": [37, 146], "csd_shm_enh_sharp": 37, "lambda_": [37, 139, 145], "raw": [37, 50, 56, 57, 59, 62, 74, 77, 107, 134, 136, 138, 145, 187], "csd_sf_orig": 37, "csd_sf_noisi": 37, "csd_sf_enh": 37, "csd_sf_enh_sharp": 37, "amax": 37, "noiseless": [37, 77, 82, 83], "fodf_spheres_org": 37, "setposit": [37, 86, 104], "fodf_spher": [37, 52, 65, 70, 71], "fodf_spheres_enh": 37, "fodf_spheres_enh_sharp": 37, "bottom": [37, 43, 108, 131], "snr": [37, 40, 41, 58, 66, 82, 83, 116, 134, 139, 140, 141, 180, 187, 191], "sanguinetti": [37, 43, 135, 143, 178], "portegi": [37, 43, 135, 143], "duit": [37, 43, 135, 143], "confer": [37, 43, 131, 133, 135, 139, 143, 145], "improv": [37, 40, 41, 43, 46, 65, 69, 70, 87, 96, 100, 121, 126, 131, 133, 135, 139, 143, 145, 178, 180, 181, 182, 185, 187, 189, 190, 191, 192, 193, 195, 196], "flow": [37, 43, 105, 131, 135, 139, 143, 145, 182, 183, 190, 196], "se": [37, 60, 61, 135], "fifth": [37, 135], "variat": [37, 42, 46, 70, 131, 135, 139, 140, 145], "franken": [37, 43, 135], "92": [37, 43, 70, 135, 139, 141, 187], "231": [37, 43, 133, 135], "264": [37, 43, 135, 186], "rodrigu": [37, 43, 133], "romeni": [37, 43], "vilanova": [37, 43], "dw": [37, 43, 48, 82, 84, 139], "eurograph": [37, 43], "workshop": [37, 43, 60, 73, 127, 139, 184], "biologi": [37, 43, 88], "medicin": [37, 40, 42, 43, 44, 50, 54, 55, 60, 63, 65, 66, 70, 112, 120, 131, 135, 139, 140, 141, 144, 145, 154, 165], "associ": [37, 42, 43, 55, 61, 104, 131, 134, 136, 137, 139, 140, 143, 144, 145, 156, 175, 176, 185, 203], "magnet": [38, 40, 41, 42, 44, 50, 54, 55, 56, 57, 60, 63, 65, 66, 70, 74, 107, 112, 116, 117, 120, 131, 134, 135, 138, 139, 140, 141, 144, 145, 153, 154, 160, 161, 165, 201], "fourier": [38, 64, 117, 139, 199], "acquir": [38, 39, 41, 42, 47, 49, 52, 54, 55, 60, 61, 63, 66, 68, 69, 73, 82, 107, 117, 119, 120, 133, 134, 135, 139, 143, 145, 164], "finit": [38, 67, 117, 131, 133, 135, 139, 142, 143], "corrupt": [38, 54, 61, 64, 66, 77, 117, 133, 135, 139, 142, 143], "artefact": [38, 42, 54, 61, 66, 117, 119, 135, 139, 145, 190], "manifest": [38, 117, 187], "intens": [38, 82, 117, 131, 135, 139, 140, 143, 145, 156, 180], "adjac": [38, 70, 80, 117, 139, 140, 145], "edg": [38, 54, 111, 117, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 185, 187], "context": [38, 48, 80, 92, 117, 134, 139], "magnifi": [38, 117], "deriv": [38, 54, 55, 60, 61, 69, 77, 95, 96, 107, 113, 117, 120, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 160, 204], "procedur": [38, 43, 46, 54, 61, 66, 67, 82, 117, 119, 120, 131, 133, 139, 141, 145, 158, 159, 180, 182], "chapter": [38, 139], "gibbs_remov": [38, 146, 192], "t1_fname": [38, 41, 43, 46, 48, 54, 55, 64, 65, 66, 88, 91, 92, 98, 99], "t1_denoised_fnam": 38, "ap_fnam": 38, "axial_slic": [38, 54, 55, 66], "t1_slice": 38, "figsiz": [38, 40, 42, 54, 55, 57, 60, 61, 66, 67, 68, 70, 74, 75, 142, 143], "subplots_adjust": [38, 40, 42, 46, 48, 54, 61, 66], "wspace": [38, 40, 42, 54, 61, 66], "rot90": [38, 46, 48, 65, 68, 84, 92], "vmin": [38, 40, 48, 54, 55, 61, 64, 66, 68, 74, 144], "vmax": [38, 40, 48, 54, 55, 61, 64, 66, 68, 144], "colorbar": [38, 46, 48, 55, 57, 60, 63, 66, 67, 70, 74, 75, 183], "due": [38, 39, 54, 61, 63, 66, 70, 77, 111, 135, 139, 145, 186, 191, 192, 203], "evid": [38, 189], "artifici": [38, 77, 82, 139], "frequenc": [38, 54, 139], "fft": [38, 139, 192], "fft2": 38, "fftshift": [38, 146], "c_crop": 38, "192": [38, 40, 54, 65, 66, 134, 189], "t1_gibb": 38, "ifft2": 38, "t1_unr": 38, "fig1": [38, 40, 42, 54, 55, 61, 66], "subplot_kw": [38, 40, 42, 54, 55, 61, 66], "xtick": [38, 40, 42, 54, 55, 61, 66, 100], "ytick": [38, 40, 42, 54, 55, 61, 66, 100], "ring": [38, 54, 117, 126, 135, 145, 164, 190, 194], "fontsiz": [38, 54, 67], "xy": [38, 54, 59, 120, 133, 139, 141, 189, 199, 200], "81": [38, 50, 59, 81, 97, 131, 134, 139, 185, 190], "70": [38, 45, 57, 69, 74, 81, 82, 120, 134, 182, 185], "xycoord": [38, 54], "xytext": [38, 54], "textcoord": [38, 54], "offset": [38, 54, 87, 131, 134, 139, 143], "arrowprop": [38, 54], "dict": [38, 54, 85, 131, 133, 134, 137, 139, 140, 142, 143, 144, 145], "arrowstyl": [38, 54], "75": [38, 81, 101, 104, 110, 131, 133, 143, 185, 196], "gibbs_suppression_structur": 38, "uncorrect": 38, "panel": [38, 39, 40, 54, 55, 61, 66, 101, 104, 146], "characterist": [38, 84, 133, 139, 143], "appreci": [38, 40], "arrow": [38, 54], "artefactu": [38, 54], "compromis": [38, 40], "grei": [38, 65, 67, 70, 88, 122, 139, 145, 176], "highlight": [38, 113, 145, 165, 183, 187, 192], "kindli": [38, 40, 54, 55, 65, 66, 112, 204], "suppli": [38, 131, 133, 134, 139, 140, 142, 143], "romain": 38, "valabr\u00e8gu": 38, "icm": [38, 92, 140], "pari": 38, "read_cenir_multib": [38, 146], "asarrai": [38, 60, 61, 78, 87, 142, 143], "illustr": [38, 43, 44, 50, 52, 54, 59, 61, 64, 65, 66, 67, 70, 71, 72, 77, 83, 116, 131, 196, 204], "data_slic": [38, 63], "data_correct": [38, 47], "slice_axi": [38, 135, 145, 164], "fig2": [38, 40, 54, 66], "residu": [38, 39, 40, 42, 93, 126, 131, 136, 139, 143, 145, 195], "gibbs_suppression_b0": 38, "techniqu": [38, 40, 43, 55, 65, 66, 70, 98, 100, 121, 139, 140, 143, 145, 187], "msdki": [38, 54, 106, 146], "unnecessari": [38, 54, 61, 66, 133, 138, 139, 180, 183, 195, 196], "maskdata": [38, 40, 50, 51, 53, 54, 55, 59, 66], "dilat": [38, 40, 50, 51, 53, 54, 55, 59, 66, 88, 140, 145, 169], "dki_model": [38, 66], "meandiffusionkurtosismodel": [38, 66, 146], "dki_fit": [38, 66], "mskini": 38, "msk": [38, 66, 139, 146], "mskgib": 38, "fig3": [38, 40, 54, 66], "59": [38, 59, 70, 185], "gibbs_suppression_msdki": 38, "neg": [38, 42, 48, 50, 52, 54, 64, 65, 66, 85, 97, 98, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 156, 159, 178, 180, 186, 191, 193, 203], "black": [38, 68, 102, 144, 145, 187, 191], "seem": [38, 66, 139, 181, 182, 185, 187], "veraart": [38, 40, 42, 54, 117, 135, 139, 145, 153, 154], "fiereman": [38, 40, 42, 54, 55, 106, 117, 120, 128, 135, 139, 145, 153, 154], "jelescu": [38, 117], "knoll": [38, 42, 117], "novikov": [38, 40, 42, 55, 117, 135, 145, 153, 154], "magn": [38, 61, 117, 135, 136, 138, 139, 145, 146, 160, 161, 164, 203], "76": [38, 45, 50, 59, 97, 102, 117, 181, 185], "301": [38, 71, 117, 139, 187], "314": [38, 117, 187], "1002": [38, 40, 42, 50, 54, 61, 66, 112, 117, 135, 139, 143, 145, 153, 154, 164, 180], "mrm": [38, 40, 42, 50, 51, 54, 56, 61, 66, 77, 112, 117, 133, 135, 139, 140, 141, 145, 153, 154, 160, 161, 164], "25866": [38, 117], "perron": [38, 54, 117, 139], "aelterman": [38, 54, 117], "piz": [38, 54, 117], "urica": [38, 54, 117], "jeurissen": [38, 52, 54, 65, 70, 106, 117, 128, 139], "leeman": [38, 52, 54, 70, 117, 133, 139], "artifact": [38, 54, 117, 131, 134, 135, 145], "441": [38, 41, 42, 54, 116, 117, 135, 139], "455": [38, 54, 117, 187], "06": [38, 54, 63, 117, 133, 139, 180, 181, 188, 190, 195], "068": [38, 54, 117], "kellner": [38, 135, 145, 164], "dhital": [38, 135, 145, 164], "kiselev": [38, 135, 145, 164], "reisert": [38, 135, 145, 164, 192], "subvoxel": [38, 135, 145, 164], "1574": [38, 183], "1581": [38, 183], "26054": [38, 135, 145, 164], "healthi": [38, 40, 54, 60, 66, 69, 92, 110, 113, 134, 135, 139, 145, 164], "doctor": [38, 40, 54, 66, 135, 139, 145, 164], "thesi": [38, 40, 54, 62, 66, 93, 95, 112, 122, 135, 139, 141, 145, 164, 175], "17863": [38, 40, 54, 66, 135, 139, 145, 164], "cam": [38, 40, 54, 66, 135, 139, 145, 164], "29356": [38, 40, 54, 66, 135, 139, 145, 164], "digit": [38, 134, 143], "researchwork": [38, 134], "1773": [38, 134], "33311": [38, 134], "manjon": [39, 40, 41, 42, 116, 135, 145, 153], "manjon2013": [39, 40, 42, 145, 153], "involv": [39, 52, 54, 65, 116, 120, 121, 131, 145, 199], "varianc": [39, 40, 59, 64, 67, 116, 120, 131, 139, 140, 142, 143, 145, 160, 161, 187, 189, 194], "around": [39, 52, 63, 84, 108, 116, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 153, 154, 178, 187, 203], "eigenvalu": [39, 52, 59, 70, 71, 82, 83, 116, 135, 139, 140, 141, 143, 145, 153, 154, 160, 161, 183, 199], "denoise_mppca": 39, "pca_noise_estim": [39, 146], "dwi_fnam": [39, 40, 47], "dwi_bval_fnam": [39, 40, 47], "dwi_bvec_fnam": [39, 40, 47], "radiu": [39, 90, 116, 131, 133, 135, 139, 140, 141, 142, 143, 145, 148, 153, 154, 169, 194, 195, 199, 204], "bia": [39, 64, 92, 98, 133, 135, 139, 142, 143, 145, 178, 184, 189], "koai": [39, 61, 135, 139, 145], "basser": [39, 59, 106, 120, 128, 135, 139, 145, 161, 199], "koay2006": 39, "correct_bia": [39, 135, 145], "compon": [39, 40, 54, 61, 63, 64, 70, 82, 99, 108, 116, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 153, 154, 180, 182, 183, 189], "lowest": [39, 84, 113, 133, 136, 139, 143], "relationship": [39, 67, 88, 135, 137, 139, 143, 145, 153, 199, 200], "tau_factor": [39, 135, 145, 153, 192], "accord": [39, 55, 63, 66, 78, 79, 80, 82, 120, 126, 131, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 171, 178, 179, 191], "denoised_arr": [39, 40, 42, 65, 135, 145], "patch_radiu": [39, 40, 41, 65, 116, 135, 145, 153, 154, 155, 191], "taken": [39, 40, 82, 131, 133, 134, 135, 139, 140, 143, 145, 153, 154, 156, 203], "gra": [39, 40, 42], "orig": [39, 40, 42], "den": [39, 40, 41, 42], "rms_diff": [39, 40, 42], "sqrt": [39, 40, 42, 46, 54, 55, 56, 57, 59, 62, 67, 74, 80, 109, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 203, 204], "denoised_localpca": 39, "nifti1imag": [39, 40, 50, 54, 56, 57, 62, 74, 85, 87, 131, 134, 140, 143, 144, 145, 146], "jv": [39, 40, 42, 135, 145, 153], "coup": [39, 40, 41, 42, 116, 135, 145, 153], "concha": [39, 40, 42, 135, 145, 153], "buad": [39, 40, 42, 135, 145, 153], "dl": [39, 40, 42, 134, 135, 145, 153], "overcomplet": [39, 40, 42, 118, 135, 145, 153], "e73021": [39, 40, 42, 135, 145, 153], "0073021": [39, 40, 42, 135, 145, 153], "cg": [39, 102, 131, 133, 135, 139], "pj": [39, 59, 120, 135], "2006": [39, 70, 77, 133, 135, 139, 145, 161, 190], "magnitud": [39, 70, 133, 134, 135, 138, 139, 141, 143, 145], "jmr": 39, "179": [39, 135, 145, 186], "317": [39, 135, 145, 187], "322": [39, 181], "exploit": [40, 117, 131], "veraart2016a": 40, "suppress": [40, 54, 61, 64, 106, 116, 118, 135, 139, 143, 145, 180, 181, 182, 183], "loss": [40, 42, 55, 71, 78, 133, 134, 138, 139, 140, 145], "dti": [40, 45, 52, 54, 59, 64, 65, 67, 68, 69, 77, 82, 84, 100, 106, 107, 110, 112, 113, 118, 126, 128, 133, 134, 138, 140, 141, 142, 143, 145, 146, 161, 178, 179, 180, 181, 185, 186, 187, 189, 191, 192, 195, 196, 197], "henri2018": 40, "princip": [40, 59, 67, 82, 83, 116, 133, 135, 139, 141, 143, 145, 153, 154], "classif": [40, 65, 116, 126, 134, 140, 180, 191], "denoise_localpca": 40, "veraa2016a": [40, 42], "veraa2016b": 40, "localpca": [40, 65, 66, 146, 153, 181, 189, 192], "mppca": [40, 54, 65, 110, 116, 126, 146, 190], "auxiliar": 40, "hansen2016": [40, 54, 55, 65, 66, 112], "mbyte": [40, 54, 56, 59, 64, 65, 66, 77], "sake": [40, 65, 99], "simplic": [40, 65, 80], "sel_b": [40, 65], "logical_or": [40, 52, 65], "mp": [40, 54, 65, 108, 126, 143, 194], "slide": [40, 131, 133, 139, 142, 143], "compris": [40, 69, 142, 143], "5x5x5": [40, 43, 135, 145, 153, 154], "125": [40, 43, 81, 104, 185], "assess": [40, 54, 136, 139, 144, 145, 147, 189], "axial": [40, 41, 43, 49, 50, 52, 54, 59, 60, 65, 66, 70, 71, 88, 92, 104, 126, 139, 143, 144, 145, 160, 161], "hspace": [40, 42, 54, 61, 66], "05": [40, 42, 44, 46, 48, 54, 61, 64, 66, 78, 81, 113, 131, 133, 134, 135, 138, 139, 140, 143, 145, 182, 183, 189, 193, 194, 195], "denoised_mppca": 40, "preserv": [40, 42, 43, 106, 109, 133, 135, 139, 142, 143], "dkimodel": [40, 54, 55], "diffusionkurtosismodel": [40, 54, 55, 66, 146], "dki_orig": 40, "dki_den": 40, "md": [40, 52, 54, 59, 60, 61, 65, 66, 68, 112, 113, 120, 133, 139, 141, 142, 143, 145, 146, 160, 161, 179, 180, 182, 190, 191], "mk": [40, 54, 55, 66, 68, 139, 145, 146], "fa_orig": 40, "fa_den": 40, "md_orig": 40, "md_den": 40, "mk_orig": 40, "mk_den": 40, "0e": [40, 54, 70, 139, 145], "denoised_dki": 40, "upper": [40, 45, 52, 54, 61, 63, 66, 75, 133, 135, 139, 140, 145, 168, 180], "mention": [40, 54, 63, 65, 85, 113, 140, 143, 180], "std": [40, 54, 67, 84, 104, 131, 139, 145, 148, 160, 161, 178, 187], "return_sigma": [40, 135, 145, 154], "pca_sigma": 40, "vari": [40, 63, 67, 133, 135, 139, 145], "mean_sigma": 40, "nomin": [40, 133], "mean_sign": [40, 46, 84], "26059": [40, 42, 135, 145, 153, 154], "christiaen": [40, 135, 145, 153, 154], "aron": [40, 135, 145, 153, 154], "sijber": [40, 54, 135, 139, 145, 153, 154], "142": [40, 81, 112, 135, 140, 142, 145, 153, 154, 185], "394": [40, 135, 145, 153, 154, 180], "406": [40, 135, 145, 153, 154, 187], "08": [40, 52, 70, 135, 139, 145, 153, 154, 189, 190, 191], "016": [40, 135, 145, 153, 154], "coupe08": [41, 42, 116, 135], "coupe11": [41, 116, 135], "boost": [41, 198], "noise_estim": [41, 77, 146], "estimate_sigma": [41, 77, 146, 178, 187], "non_local_mean": [41, 146, 189], "deviat": [41, 43, 67, 77, 82, 84, 90, 116, 131, 135, 139, 140, 141, 143, 145, 148, 153, 154, 187, 195], "3t": [41, 134, 138, 139, 140, 141, 143, 145], "coil": [41, 70, 135, 139, 145], "block_radiu": [41, 135, 145, 155], "axial_middl": [41, 49], "soft": [41, 135, 139], "example_denoise_ascm": 41, "yger": [41, 42, 116, 135, 145], "prima": [41, 42, 116, 135, 145], "hellier": [41, 42, 116, 135, 145], "kervrann": [41, 42, 116, 135, 145], "barillot": [41, 42, 116, 135, 145, 155], "blockwis": [41, 42, 116, 135, 145], "425": [41, 42, 116, 135, 145, 187], "2008": [41, 42, 45, 56, 57, 73, 74, 93, 106, 111, 116, 128, 131, 133, 135, 139, 140, 141, 143, 145, 155, 180, 183, 190], "pierrick": [41, 116, 135], "jose": [41, 116, 133, 135], "montserrat": [41, 116, 135], "robl": [41, 116, 135], "loui": [41, 116, 134, 135], "multiresolut": [41, 116, 135], "iet": [41, 116, 135], "engin": [41, 54, 70, 110, 116, 135, 139, 145], "fadnavis20": [42, 135, 145, 156], "rank": [42, 68, 116, 133, 139, 140, 143, 189, 199, 200], "oversampl": [42, 116], "classic": [42, 84, 90, 107, 135, 199, 200, 201], "pca": [42, 54, 65, 66, 106, 110, 118, 126, 135, 143, 145, 153, 154, 180, 181, 183, 189, 192, 196], "knoll11": 42, "fluctuat": 42, "design": [42, 44, 46, 67, 71, 101, 107, 125, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 184, 190], "regressor": [42, 133, 139], "phase": [42, 70, 131, 135, 139, 140, 144], "train": [42, 138], "predict": [42, 45, 46, 63, 65, 71, 122, 133, 138, 139, 143, 145, 146, 178, 179, 180, 186, 187, 188, 191], "mathcal": [42, 131, 139, 140, 142], "phi_": [42, 139], "y_": [42, 203], "fed": [42, 145], "phi": [42, 44, 66, 72, 82, 83, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146, 185, 203, 204], "held": [42, 45], "mere": [42, 112], "nor": [42, 131, 133, 139, 140, 145], "loadtxt": [42, 58, 134, 138, 139, 140, 141, 143, 182], "shift_intens": [42, 135, 145, 156], "clip_negative_v": [42, 135, 145, 156], "ordinari": [42, 139, 145, 160, 161], "regress": [42, 135, 139, 145, 156, 179], "tend": [42, 64, 97], "slower": [42, 69, 121, 133, 143, 145], "hamper": 42, "exhibit": [42, 54, 84, 139], "attenu": [42, 82, 84, 139, 141, 183], "ideal": [42, 97, 106, 128, 139, 145, 203], "skip": [42, 111, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 156, 180, 185, 187, 189, 196], "b0_denois": [42, 135, 145, 156], "7t": 42, "denoised_patch2self": 42, "rid": 42, "batch": 42, "split": [42, 120, 131, 135, 137, 138, 139, 142, 143, 145, 146, 162, 164, 171, 174, 180, 189], "denoised_batch1": 42, "denoised_batch2": 42, "denoised_p2": 42, "concaten": [42, 58, 82, 141, 145], "approach": [42, 55, 63, 64, 67, 70, 75, 77, 87, 90, 91, 95, 97, 122, 131, 135, 139, 140, 142, 145, 161], "batson": [42, 135, 145, 156], "neural": [42, 126, 135, 139, 145, 156], "bredi": 42, "pock": 42, "stollberg": 42, "tgv": 42, "480": [42, 187], "491": [42, 67, 134, 187, 191], "fbc": [43, 126, 143, 180, 192], "surround": [43, 67, 77, 131], "isol": [43, 64, 70, 84, 131], "poorli": [43, 139], "sum": [43, 46, 52, 56, 57, 62, 64, 65, 66, 68, 70, 71, 74, 75, 78, 80, 84, 90, 108, 121, 131, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 148], "badli": [43, 84], "identifi": [43, 77, 84, 88, 95, 96, 98, 101, 122, 129, 131, 133, 134, 135, 138, 139, 140, 143, 145, 166, 175, 199], "lfbc": [43, 143], "portegies2015": [43, 135], "5d": [43, 135, 137, 145], "induc": [43, 54, 139], "lift": 43, "rfbc": [43, 143], "t1_data": [43, 46, 48, 88, 98, 99], "hemispher": [43, 44, 66, 72, 97, 136, 139, 146, 185], "bound": [43, 63, 131, 133, 137, 139, 140, 141, 142, 143, 144, 145, 168, 169, 173, 180, 183, 191], "dshape": 43, "xa": [43, 143], "xb": [43, 143], "ya": 43, "yb": 43, "za": [43, 145], "zb": 43, "selectionmask": 43, "bool": [43, 55, 81, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 194, 195], "solid": [43, 51, 94, 95, 112, 118, 133, 139, 141, 145, 158], "cda": 43, "restrict": [43, 48, 55, 64, 67, 69, 85, 95, 97, 122, 137, 139, 141, 143, 197], "signific": [43, 64, 95, 113, 139, 143], "known": [43, 45, 52, 61, 66, 71, 78, 80, 81, 95, 110, 122, 133, 134, 139, 145, 160, 161], "csd_model": [43, 45, 52, 53, 93, 94, 96, 97, 100], "csd_fit": [43, 52, 93, 94, 96, 97, 100], "csd_fit_shm": 43, "prob_dg": [43, 97, 98], "from_shcoeff": [43, 94, 96, 97, 100, 136, 145, 146], "max_angl": [43, 93, 94, 96, 97, 98, 100, 136, 143, 145, 175, 176], "optic": [43, 131, 134, 139], "radiat": [43, 48, 134], "calcarin": 43, "sulcu": 43, "cortex": [43, 46, 87], "v1": [43, 80, 133, 135, 137, 138, 139, 142, 144], "genicul": 43, "nucleu": 43, "lgn": [43, 134], "cube": [43, 67, 131, 135, 139, 143], "3x3x3": [43, 135, 145], "rad": [43, 133], "29": [43, 50, 59, 62, 131, 135, 137, 139, 140, 143, 145, 185, 186, 196], "getter": [43, 96, 98, 100, 106, 122, 136, 137, 139, 144, 145, 175, 181, 182, 187, 189, 191], "streamlines_gener": [43, 95], "travers": [43, 46, 139, 142, 143], "mask_lgn": 43, "28": [43, 50, 59, 68, 126, 131, 133, 137, 138, 139, 140, 141, 142, 143, 182, 185, 193, 194], "filtered_fibers2": 43, "tol": [43, 131, 133, 134, 135, 138, 139, 143], "sfil": 43, "propag": [43, 57, 58, 64, 74, 84, 118, 122, 126, 139, 141, 143, 145, 163, 187, 199, 201], "regard": [43, 66, 73, 131, 145, 180], "electrostat": [43, 44, 72, 133, 135, 196], "repuls": [43, 44, 133, 135, 180, 196], "fbcmeasur": [43, 146], "chosen": [43, 67, 72, 95, 97, 122, 131, 133, 136, 139, 142, 143, 144, 145, 200], "recal": [43, 108, 139], "percent": [43, 140], "fbc_sl_orig": 43, "clrs_orig": 43, "rfbc_orig": 43, "get_points_rfbc_threshold": [43, 143, 146], "emphasi": [43, 143], "fbc_sl_thre": 43, "clrs_thre": 43, "rfbc_thre": 43, "tau": [43, 67, 131, 133, 134, 135, 139, 141, 143, 145, 146, 153, 192, 199], "lineactor": 43, "vstack": [43, 44, 58, 66, 72, 86, 131, 140, 142, 143, 144], "horizont": [43, 144, 204], "vol_actor1": 43, "sagitt": [43, 84, 88, 95, 104, 144], "vol_actor2": [43, 46, 88, 98, 99], "285": [43, 186], "155": [43, 63, 133, 187], "or_befor": 43, "rm": [43, 46, 52, 54, 70], "or_aft": 43, "pauli": [43, 145], "ossenblok": [43, 143], "academ": [43, 69, 133], "epileptologi": 43, "kempenhaegh": 43, "maastricht": 43, "saw": 44, "physicist": [44, 139], "disperse_charg": [44, 66, 72, 146, 180, 186, 190], "jones1999": 44, "polar": [44, 72, 82, 83, 139, 141, 143, 146, 204], "n_pt": [44, 66, 72, 86], "pi": [44, 66, 67, 72, 80, 86, 107, 108, 131, 133, 139, 140, 141, 142, 143, 199, 201, 203], "hsph_initi": [44, 66, 72], "energi": [44, 63, 72, 120, 131, 139, 140, 145, 148], "hsph_updat": [44, 66, 72], "5000": [44, 66, 72, 133, 139], "point_radiu": [44, 78], "initial_vs_upd": 44, "sph": [44, 186, 191], "full_spher": 44, "fill": [44, 131, 133, 135, 139, 140, 142, 143, 145, 171, 178, 199, 200], "hstack": [44, 66], "80451777": 44, "16877559": 44, "56944355": 44, "32822557": 44, "94355999": 44, "04430036": 44, "23584135": 44, "96241331": 44, "13468285": 44, "39207424": 44, "73505312": 44, "55314981": 44, "32539386": 44, "16751384": 44, "93062235": 44, "82043195": 44, "39411534": 44, "41420347": 44, "65741493": 44, "74947875": 44, "07802061": 44, "88853765": 44, "45303621": 44, "07251925": 44, "39638642": 44, "15185138": 44, "90543855": 44, "10175269": 44, "08197111": 44, "99142681": 44, "50577702": 44, "37862345": 44, "77513476": 44, "42845026": 44, "40155296": 44, "80943535": 44, "26939707": 44, "81103868": 44, "51927014": 44, "48938584": 44, "43780086": 44, "75420946": 44, "cyan": 44, "colors_b1000": 44, "colors_b2500": 44, "ascontiguousarrai": [44, 86], "jone": [44, 77, 84, 133, 139, 145, 160, 161], "dk": [44, 77, 139, 145, 160, 161], "anisotrop": [44, 48, 52, 56, 59, 62, 64, 65, 107, 126, 131, 134, 138, 139, 140, 141, 143, 145, 191, 197], "515": [44, 67, 134, 187], "525": [44, 133, 187], "1999": [44, 59, 131, 133, 139, 142, 143, 183, 190], "pattern": [45, 92, 133, 139, 140, 145], "aar": 45, "nest": [45, 104, 107, 137, 139, 143], "cannot": [45, 61, 66, 70, 97, 111, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 178, 184, 187, 189, 195, 196], "likelihood": [45, 70, 92, 139, 140, 145], "hastie2008": 45, "rokem2014": [45, 71, 139], "imprevi": 45, "conduct": [45, 59, 120, 139, 184, 194], "cross_valid": [45, 146, 187], "xval": [45, 187], "li": [45, 84, 120, 131, 139, 140, 145], "centrum": [45, 71], "semioval": [45, 71], "cso": 45, "cc_vox": 45, "cso_vox": 45, "dti_model": 45, "tensormodel": [45, 52, 54, 59, 61, 67, 77, 84, 100, 110, 146, 180, 185, 196], "half": [45, 68, 131, 133, 135, 139, 140, 142, 143], "dti_cc": 45, "kfold_xval": [45, 46, 146], "csd_cc": 45, "dti_cso": 45, "csd_cso": 45, "scatter": [45, 63, 139], "focus": [45, 127], "set_size_inch": 45, "b0s_mask": [45, 46, 49, 87, 133, 134, 139, 141, 146], "legend": [45, 63, 66, 67, 77, 82, 83, 86, 139], "loc": [45, 63, 66, 139], "this_ax": 45, "s0": [45, 46, 49, 52, 58, 63, 66, 70, 71, 82, 83, 139, 140, 141, 143, 145, 162, 180, 186], "model_predict": [45, 46], "quantifi": [45, 46, 54, 64, 120, 139, 142, 143], "cc_dti_r2": 45, "pearsonr": 45, "cc_csd_r2": 45, "cso_dti_r2": 45, "cso_csd_r2": 45, "r2": [45, 139, 186], "782881752597": 45, "805764364116": 45, "431921832012": 45, "604806420501": 45, "hasti": [45, 71, 139], "tibshirani": 45, "friedman": 45, "mine": [45, 142, 143], "infer": [45, 46, 59, 80, 120, 140, 143, 145, 195], "springer": [45, 131, 133, 139, 140], "verlag": [45, 139, 140], "berlin": 45, "biggest": 46, "pestilli2014": 46, "breviti": [46, 63, 87, 99], "frontal": [46, 87, 88], "fulli": [46, 54, 87, 125, 139], "intersect": [46, 63, 66, 87, 106, 139, 143], "mpl_toolkit": [46, 48], "axes_grid1": [46, 48], "axesgrid": [46, 48], "colormap": [46, 48, 50, 52, 58, 59, 60, 63, 64, 65, 70, 71, 73, 78, 79, 80, 81, 83, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 139, 140, 144, 145, 165, 180, 182, 183, 187, 189], "lr": [46, 87, 88, 139], "superiorfront": [46, 87, 88], "streamline_tool": [46, 87, 180, 182, 187, 189], "hardi_img": [46, 48, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103], "cc_slice": [46, 88], "candid": [46, 139, 140, 143, 145], "candidate_sl_sft": 46, "to_vox": [46, 85, 137, 144, 145, 146], "candidate_sl": 46, "term": [46, 54, 63, 64, 69, 70, 78, 92, 107, 120, 131, 135, 136, 138, 139, 140, 145, 186, 202], "candidate_streamlines_actor": 46, "line_color": [46, 48, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 146], "cc_roi_actor": [46, 88], "contour_from_roi": [46, 48, 88, 103], "opac": [46, 67, 78, 81, 88, 101, 103, 104, 178, 182, 183], "vol_actor": [46, 88, 98, 99], "canva": [46, 88], "life_candid": 46, "fiber_model": [46, 143], "iso": [46, 61, 68, 139, 146], "mid": [46, 84, 131, 143, 145], "ac": [46, 134], "pc": 46, "inv_affin": 46, "linalg": [46, 68, 98, 99, 101, 102, 131, 133, 135, 139, 141, 192, 196], "inv": [46, 98, 99, 101, 102, 131, 135, 139, 143, 145, 146], "invers": [46, 64, 67, 90, 91, 101, 109, 131, 133, 136, 139, 142, 143, 144, 145, 146, 148, 181, 189], "fiberfit": [46, 146], "beta": [46, 65, 68, 71, 92, 108, 131, 135, 136, 139, 140, 143, 145], "n_": [46, 54, 139], "arbitrarili": [46, 131], "cylindr": [46, 141], "fiber_fit": 46, "beta_i": 46, "beta_histogram": 46, "optimized_sl": 46, "life_optim": 46, "presum": 46, "unseen": 46, "baselin": [46, 77], "model_error": 46, "model_rms": 46, "against": [46, 58, 70, 131, 133, 134, 139, 140, 142, 143, 145], "naiv": [46, 75, 139, 142, 143], "beta_baselin": 46, "pred_weight": 46, "reshap": [46, 131, 133, 136, 137, 139, 140, 141, 142, 143], "spdot": [46, 146], "life_matrix": [46, 143], "vox_coord": [46, 143], "mean_pr": 46, "empti": [46, 66, 113, 134, 137, 139, 143, 145, 189, 191, 195], "b0_signal": [46, 143], "demean": 46, "multipli": [46, 65, 72, 82, 86, 131, 139, 140, 141, 145, 159], "mean_error": 46, "mean_rms": 46, "overal": [46, 64, 86, 139], "median": [46, 65, 120, 133, 139, 140, 142, 143, 145, 169, 180, 186, 194], "rmse": 46, "2f": [46, 66], "horizontalalign": [46, 63], "verticalalign": [46, 63], "transax": [46, 63], "error_histogram": 46, "vol_model": 46, "nan": [46, 55, 59, 133, 135, 136, 139, 140, 143, 178, 179, 183, 184, 187, 191, 192], "vol_mean": 46, "vol_improv": 46, "sl_idx": 46, "49": [46, 82, 126, 139, 185, 192], "95": [46, 48, 77, 133, 139, 145, 160, 161, 185], "111": [46, 48, 54, 66, 82, 120, 139, 141, 145, 161, 185], "nrows_ncol": [46, 48], "label_mod": 46, "share_al": 46, "cbar_loc": [46, 48], "cbar_mod": [46, 48], "cbar_siz": [46, 48], "cbar_pad": [46, 48], "matshow": [46, 48, 65], "cm": [46, 48, 55, 60, 65], "bone": [46, 48, 65], "hot": [46, 67], "cbar_ax": [46, 48], "rdbu": 46, "lax": [46, 48], "set_xtick": [46, 48, 68], "set_ytick": [46, 48, 68], "spatial_error": 46, "amount": [46, 59, 64, 77, 86, 131, 133, 135, 137, 140, 142, 143, 144, 145, 165], "example_probabilistic_fiber_track": [46, 48], "notebook": [46, 180, 182, 189, 191], "matlab": [46, 107, 133, 135, 139, 141, 144, 188, 192, 202], "franco": [46, 71, 99, 139], "webpag": 46, "live": [46, 111, 143, 190], "natur": [46, 122, 124, 139, 143, 199, 200], "1058": [46, 143, 180], "1063": [46, 63, 120, 143, 145, 162, 180], "nmeth": [46, 143], "3098": [46, 143], "inevit": [47, 119], "jenkinsonsmith01": [47, 119], "motion_correct": 47, "bvals_smal": 47, "bvecs_smal": 47, "reg_afin": 47, "jenkinson": [47, 119], "optimis": [47, 119, 187], "anal": [47, 119, 131], "143": [47, 81, 119, 139, 185], "56": [47, 92, 102, 119, 139, 141, 145, 185], "therapi": 48, "shortest": [48, 133, 143], "treatment": [48, 108], "gross": 48, "tumor": [48, 195], "gtv": 48, "mpl": [48, 144, 180, 187], "lesion": 48, "electrod": 48, "streamlines_actor": [48, 95, 98, 99, 103], "surface_opac": [48, 103], "surface_color": [48, 103], "seedroi_actor": [48, 103], "plm_roi_sl": 48, "transpar": [48, 103, 144, 145, 165], "sens": [48, 51, 64, 67, 70, 73, 75, 135, 139, 142, 143, 145, 198, 200], "hypothesi": 48, "motor": 48, "cortico": 48, "spinal": [48, 61, 63, 135], "path_length_map_base_roi": 48, "wmpl": 48, "example_cc_path_length_map": 48, "ignor": [48, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 183, 187, 191], "wmpl_show": 48, "masked_wher": 48, "slx": 48, "sly": 48, "slz": 48, "path_length_map": 48, "plan": [48, 109, 183, 189, 199, 200], "neuro": 48, "oncologi": 48, "preprint": [48, 138], "biorxiv": 48, "publicli": [49, 134, 185], "fetch_sherbrooke_3shel": [49, 146], "expandus": [49, 104], "dname": 49, "fdwi": [49, 110], "hardi193": [49, 116, 119], "fbval": [49, 54, 55, 56, 57, 62, 63, 64, 65, 66, 68, 73, 74, 82, 110, 131, 134, 137, 138, 139, 140, 141, 143, 145], "fbvec": [49, 54, 55, 56, 57, 62, 63, 64, 65, 66, 68, 73, 74, 82, 110, 131, 134, 137, 138, 139, 140, 141, 143, 145], "128": [49, 81, 92, 102, 138, 185, 195], "get_zoom": [49, 87], "quickli": [49, 131, 139, 145, 184], "000000": [49, 57, 74, 133], "964050": 49, "999992": 49, "999979": 49, "00504001": 49, "00402795": 49, "00398794": 49, "0257055": 49, "653861": 49, "756178": 49, "589518": 49, "769236": 49, "246462": 49, "235785": 49, "529095": 49, "815147": 49, "893578": 49, "263559": 49, "363394": 49, "79784": 49, "133726": 49, "587851": 49, "232937": 49, "931884": 49, "278087": 49, "93672": 49, "144139": 49, "31903": 49, "fun": [49, 131, 133, 139], "hardi193_s0": 49, "aganj": [50, 51, 106, 112, 128, 139, 141, 145, 158], "aganj2010": [50, 112], "106": [50, 59, 97, 185], "csamodel": [50, 51, 88], "mainli": [50, 51, 52, 79, 84, 120, 133, 139], "csapeak": [50, 51, 88], "return_odf": [50, 51, 53, 62, 136, 139, 145], "normalize_peak": [50, 51, 53, 62, 70, 136, 139, 145], "apart": [50, 133, 134, 135, 138, 139, 199], "attribut": [50, 52, 54, 59, 63, 68, 81, 85, 97, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 182, 183, 190, 191, 193], "peak_valu": [50, 52, 62, 70, 71, 95, 136, 139, 146, 187], "peak_indic": [50, 62, 136, 139, 145], "maxima": [50, 52, 136, 139, 185], "enough": [50, 111, 133, 139, 143], "splenium": [50, 59], "43": [50, 59, 139, 187], "74": [50, 59, 81, 185], "csaodf": 50, "clip": [50, 59, 70, 93, 97, 135, 136, 139, 140, 145, 156, 183, 184, 191], "csa_odfs_actor": 50, "plasma": [50, 52, 58, 60, 64, 65, 70, 71, 73, 83], "csa_odf": 50, "lenglet": [50, 112, 139], "sapiro": [50, 112, 139], "yacoub": [50, 112, 139], "ugurbil": [50, 112, 139], "harel": [50, 112, 139], "554": [50, 112, 139, 141, 188], "22365": [50, 112, 139], "start_tim": [51, 53], "processor": [51, 139, 142, 143], "suffici": [51, 70, 99, 133, 136, 139, 145, 187], "csapeaks_parallel": 51, "npeak": [51, 53, 70, 136, 139, 145, 189], "time_parallel": [51, 53], "ran": [51, 53, 129, 133, 135, 138, 139, 143], "114": [51, 53, 185], "333221912": 51, "time_singl": [51, 53], "196": [51, 186], "872478008": 51, "speedup": [51, 53, 80, 126, 140], "72191839533": 51, "runtim": [51, 53, 64, 131, 135, 136, 139, 140, 145, 178, 180, 187], "frozen": [51, 53, 187], "freeze_support": [51, 53], "tournier": [52, 65, 96, 100, 106, 128, 135, 136, 138, 139, 143, 145, 159, 183, 203], "tournier2007": [52, 65], "deconvolv": [52, 58, 99, 120, 139], "proce": [52, 71, 139, 145], "coher": [52, 67, 70, 98, 106, 126, 134, 137, 139, 143, 180], "cuboid": [52, 65, 139, 145, 159], "radii": [52, 133, 139, 141, 142, 143, 145, 159, 183, 191], "mask_for_response_ssst": [52, 145, 146], "constraint": [52, 64, 65, 71, 94, 98, 110, 122, 131, 133, 134, 139, 187, 196], "nvoxel": 52, "0014": [52, 71], "00029": [52, 71], "416": [52, 70, 71, 187], "prolat": [52, 71, 139, 141, 185], "radial": [52, 54, 64, 66, 71, 73, 126, 133, 139, 143, 145, 160, 161, 185, 204], "21197": 52, "single_tensor_odf": [52, 70, 146], "eval": [52, 58, 59, 70, 77, 82, 100, 112, 139, 140, 141, 143, 145, 146, 160, 161], "evec": [52, 59, 70, 77, 82, 112, 139, 140, 141, 145, 146, 160, 161], "response_odf": [52, 70], "1d": [52, 70, 79, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 169], "response_actor": [52, 70], "csd_respons": 52, "driven": [52, 70, 131, 139, 145], "eigenvector": [52, 64, 82, 135, 139, 141, 143, 145, 160, 161, 178, 183, 199], "tax2014": [52, 70], "fat": [52, 70, 139], "determin": [52, 63, 64, 65, 84, 88, 92, 96, 100, 109, 131, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 156, 159, 203], "recursive_respons": [52, 70, 146], "tenmodel": [52, 54, 59, 84, 110, 187], "tenfit": [52, 54, 59, 67, 100, 110, 187], "fractional_anisotropi": [52, 59, 60, 100, 146], "mean_diffus": [52, 59, 60, 146, 180], "wm_mask": [52, 69], "logical_and": 52, "0011": 52, "peak_thr": [52, 70, 139], "init_fa": [52, 70, 139], "init_trac": [52, 70, 139], "0021": [52, 70, 139], "001": [52, 63, 65, 70, 71, 99, 131, 133, 137, 139, 143, 144, 145], "pancak": [52, 70], "response_sign": 52, "on_spher": [52, 70, 139, 146], "csd_recursive_respons": 52, "recurs": [52, 70, 126, 131, 133, 139, 145], "portion": [52, 63, 70, 133, 135, 136, 137, 138, 139], "55": [52, 59, 67, 70, 71, 77, 101, 104, 139, 145, 179, 185], "39": [52, 59, 70, 71, 77, 93, 131, 133, 139, 181, 185], "csd_odf": 52, "30x30": 52, "csd_peak": [52, 53], "fodf_peak": [52, 70, 71], "peak_slic": [52, 70, 71, 95, 183], "peak_dir": [52, 70, 71, 95, 137, 145], "getproperti": [52, 71], "setopac": [52, 71], "csd_both": 52, "calamant": [52, 65, 96, 100, 135, 136, 138, 139, 143, 145, 203], "connelli": [52, 65, 96, 100, 135, 136, 138, 139, 143, 145, 203], "fibr": [52, 65, 134, 135, 136, 138, 139, 145, 159, 203], "super": [52, 65, 80, 126, 135, 136, 138, 139, 140, 145, 159, 203], "1459": [52, 65, 135, 136, 138, 139, 145, 182, 203], "1472": [52, 65, 135, 136, 138, 139, 145, 182, 203], "2007": [52, 57, 65, 70, 74, 106, 128, 131, 133, 135, 136, 138, 139, 140, 141, 145, 159, 191, 203], "vo": [52, 70], "viergev": [52, 54, 70], "86": [52, 70, 81, 143, 185], "37": [53, 131, 185], "cpu": [53, 117, 139, 142, 143, 186], "durat": [53, 59, 67, 107, 120, 133, 134, 139, 141, 145], "csd_peaks_parallel": 53, "return_sh": [53, 71, 97, 136, 139, 145], "425682068": 53, "242": [53, 186, 196], "772505999": 53, "expans": [54, 64, 68, 69, 120, 131, 133, 139, 141], "biolog": [54, 63, 67, 120, 139], "kt": [54, 55, 82, 120, 139, 141, 145, 146], "jensen2005": [54, 66, 120], "character": [54, 55, 59, 61, 66, 120, 139, 141], "microstructur": [54, 55, 60, 61, 63, 64, 66, 68, 69, 120, 126, 139, 145, 161, 180], "heterogen": [54, 82, 120, 133], "jensen2010": [54, 120], "moreov": [54, 61, 66, 80, 120, 137, 144, 203], "concret": [54, 55, 120, 140, 145], "biophys": [54, 55, 59, 66, 67, 120, 139, 143], "axon": [54, 55, 59, 60, 64, 66, 67, 82, 120, 139, 189], "tortuos": [54, 55, 120, 146, 180], "fierem2011": [54, 55, 120], "wmti": [54, 106, 128, 189], "netohe2015": [54, 66, 120], "express": [54, 61, 63, 71, 72, 108, 109, 131, 133, 134, 138, 139, 140, 143, 144, 145, 183, 203], "bd": [54, 63, 139, 141], "s_0": [54, 59, 61, 63, 68, 69, 120, 139, 141], "absenc": [54, 63], "sensit": [54, 55, 63, 64, 66, 77, 87, 107, 139, 187], "ij": [54, 139, 143, 199, 200], "w_": [54, 139], "ijkl": [54, 139], "fourth": [54, 63, 68, 69, 133, 139, 141], "antipod": [54, 59, 120, 133, 134, 135, 138, 139, 185], "symmetri": [54, 59, 120, 133, 134, 135, 138, 139, 203], "wijkl": [54, 141], "xxxx": [54, 139], "yyyi": [54, 139], "zzzz": [54, 139], "xxxy": [54, 139], "xxxz": [54, 139], "xyyi": [54, 139], "yyyz": [54, 139], "xzzz": [54, 139], "yzzz": [54, 139], "xxyi": [54, 139], "xxzz": [54, 139], "yyzz": [54, 139], "xxyz": [54, 139], "xyyz": [54, 139], "xyzz": [54, 139], "ndimag": [54, 55, 84, 88, 131, 133, 135, 139, 140, 142, 143, 145, 195], "gaussian_filt": [54, 55, 146], "fraw": [54, 55, 56, 57, 62, 63, 64, 65, 66, 73, 74], "preform": [54, 66, 133, 134, 135, 136, 137, 139, 141], "taxcmw2015": 54, "netohe2012": 54, "favor": 54, "fwhm": [54, 55], "pioneer": 54, "marcenko": [54, 106, 118, 135, 145, 153, 154], "pastur": [54, 106, 118, 135, 145, 153, 154], "gauss_std": [54, 55], "data_smooth": [54, 55], "dkifit": [54, 55], "diffusionkurtosisfit": [54, 146], "rd": [54, 112, 113, 139, 145, 146, 160, 161], "diffusionkurtosisifit": 54, "four": [54, 66, 67, 73, 82, 122, 133, 134, 135, 136, 137, 139, 141, 143, 145], "analog": [54, 55, 131, 145], "decoupl": [54, 66], "veraar2011": 54, "dti_fa": [54, 61], "dti_md": [54, 61], "dti_ad": 54, "dti_rd": 54, "underestim": [54, 61], "diffusion_tensor_measures_from_dti_and_dki": 54, "ak": [54, 133, 139, 145, 146], "rk": [54, 139, 145, 146], "suscept": 54, "amplitud": [54, 61, 107, 139, 145, 199], "kurtosis_tensor_standard_measur": 54, "confin": [54, 133, 139], "compartment": [54, 61, 66, 82, 139], "myelin": [54, 55, 59], "sheath": 54, "pronounc": 54, "perpendicularli": 54, "deep": [54, 126, 137, 138, 143, 191, 195], "captur": [54, 66, 82, 87, 107, 138], "decai": [54, 63, 139, 199], "consequ": [54, 63, 77, 82, 120], "tendenc": [54, 142], "oscil": [54, 64, 73, 118, 131, 139], "inadequ": 54, "perron2015": 54, "netohe2018": [54, 66], "powder": [54, 66], "hansen2013": 54, "glennr2015": 54, "bellow": [54, 66, 143, 145], "mkt": [54, 139, 146], "kfa": [54, 139, 146, 191, 195], "measures_from_kurtosis_tensor_onli": 54, "report": [54, 63, 84, 129, 133, 135, 138, 139, 143, 180, 187, 194], "jensen": [54, 55, 66, 106, 120, 128, 139, 143, 145, 160], "jh": [54, 55, 66, 120, 139], "helpern": [54, 55, 66, 120, 139, 145, 160], "ja": [54, 55, 66, 120, 139], "ramani": [54, 66, 120, 139, 145, 160], "lu": [54, 66, 77, 120, 131, 133, 139, 145, 160, 161], "kaczynski": [54, 66, 120, 145, 160], "2005": [54, 60, 66, 71, 77, 106, 120, 128, 131, 139, 142, 143, 145, 160, 161, 190], "non_gaussian": [54, 66, 120], "53": [54, 66, 77, 120, 139, 145, 160, 161, 187], "1432": [54, 66, 120, 145, 160, 189], "1440": [54, 66, 120, 182], "nmr": [54, 70, 120, 133, 139, 145, 161], "biomedicin": [54, 120, 139], "23": [54, 67, 84, 120, 127, 133, 137, 139, 140, 143, 185, 186], "698": [54, 120, 139, 178], "710": [54, 120, 139, 178], "58": [54, 55, 76, 84, 112, 120, 131, 135, 136, 138, 139, 140, 141, 142, 145, 185, 203], "177": [54, 55, 120, 139, 187], "188": [54, 55, 120, 139], "poot": 54, "dh": 54, "heck": 54, "blockx": 54, "linden": 54, "verhoy": 54, "138": [54, 112, 178, 185], "145": [54, 182, 185], "ferreira": [54, 66, 120, 139], "dissert": 54, "bachelor": 54, "programin": 54, "faculti": 54, "repositorio": 54, "ul": 54, "bitstream": 54, "10451": 54, "8511": 54, "ulfc104137_tm_rafael_henriqu": 54, "lund": [54, 139], "te": [54, 143], "sangil": [54, 139], "sn": [54, 55, 65, 66, 112, 133, 139], "experiment": [54, 126, 139, 141], "computationally393fast": 54, "1754": [54, 139, 184], "1760": [54, 139, 189], "394doi": 54, "24743": [54, 139], "glenn": [54, 126, 139], "tabesh": [54, 55, 139, 145, 160], "diffusional387kurtosi": 54, "biomedicine28": 54, "448": [54, 139, 187], "459": [54, 139, 178], "nbm": [54, 139], "3271": [54, 139], "nune": [54, 66, 120, 139], "rg": [54, 66, 120, 139], "geometri": [54, 66, 82, 120, 129, 131, 139, 141, 143, 146, 182, 187], "biomark": [54, 66, 82, 120, 139, 141], "cmw": 54, "ott": 54, "dijkhuizen": 54, "rekindl": 54, "73": [54, 84, 143, 185], "794": [54, 179], "808": [54, 179], "hinder": [55, 64, 139, 141], "fierem2013": 55, "influenc": [55, 61, 134, 139], "cellular": [55, 66, 82, 139], "fierem2012": 55, "latter": [55, 97, 120, 139], "distinguish": [55, 133, 139, 141, 143, 144, 145, 165, 166], "degener": [55, 131, 133, 142, 143], "dki_micro": [55, 146], "kurtosismicrostructuremodel": [55, 146], "dki_micro_model": 55, "fieremans2011": 55, "planar": [55, 68, 69, 133, 134, 141, 143, 145, 146], "criteria": [55, 136, 139, 143], "publish": [55, 61, 69, 139, 189], "nevertheless": 55, "predefin": [55, 135, 140, 142], "well_aligned_mask": 55, "cl": 55, "cp": [55, 122, 145, 175], "isnan": [55, 59, 185], "dki_micro_fit": 55, "kurtosismicrostructurefit": 55, "awf": [55, 139, 146], "tort": [55, 133, 140, 145], "nearest": [55, 57, 60, 63, 67, 74, 88, 100, 131, 133, 135, 139, 140, 142, 143, 145, 171], "im0": [55, 66], "alpha": [55, 67, 71, 99, 108, 131, 133, 134, 135, 136, 139, 140, 143, 145, 156], "im1": [55, 66], "kurtosis_microstructural_measur": 55, "overlaid": [55, 144], "kim": 55, "grossman": [55, 87, 90, 91, 121, 131], "ri": 55, "ingles": 55, "demyelin": 55, "proceed": [55, 63, 65, 131, 133, 139, 140, 144, 145, 165], "20th": 55, "societi": [55, 63, 65, 70, 131, 133, 139, 140, 142, 143, 144, 145, 165], "melbourn": 55, "australia": 55, "benitez": 55, "falangola": 55, "deardorff": 55, "spampinato": 55, "babb": 55, "ferri": 55, "alzheim": 55, "diseas": [55, 113], "ajnr": 55, "neuroradiol": 55, "34": [55, 131, 135, 139, 140, 141, 185, 192], "2105": [55, 191], "2112": [55, 191], "3174": 55, "a3553": 55, "wedeen08": 56, "cartesian": [56, 66, 70, 83, 89, 106, 120, 128, 133, 137, 139, 140, 141, 143, 204], "keyhol": [56, 139], "diffusionspectrummodel": [56, 57, 58, 146, 179], "return_voxs": [56, 62, 76, 96, 131, 134, 137, 145], "96": [56, 62, 112, 185], "dsmodel": [56, 57], "dataslic": [56, 57, 62, 74], "dsfit": [56, 139], "724": [56, 62, 143, 178, 183], "fashion": [56, 63, 120, 131, 143, 145], "17": [56, 63, 67, 73, 131, 133, 137, 139, 140, 143, 185, 189], "345": [56, 68, 69, 139, 187], "care": [56, 66, 70, 78, 84, 85, 126, 131, 133, 137, 139, 143, 144, 145], "usag": [56, 98, 112, 126, 135, 138, 139, 140, 142, 143, 145, 177, 187], "analyz": [56, 68, 76, 123, 133, 139, 142, 143, 145, 190], "ndindex": [56, 70, 146, 185, 187], "disc": [56, 133], "memmap": 56, "gbyte": 56, "tuch04": 56, "fig_hist": [56, 77, 86], "dsi_gfa": 56, "41": [56, 81, 87, 90, 91, 110, 121, 126, 131, 135, 145, 184, 185, 196], "1267": [56, 180], "1277": [56, 181], "tuch": [56, 106, 128, 139], "ball": [56, 65, 93, 112, 128, 135, 136, 138, 139, 140, 141, 145, 158, 203], "52": [56, 102, 141, 185, 190], "1358": [56, 182], "1372": 56, "2004": [56, 100, 106, 128, 134, 139, 141, 143, 195], "rtop": [57, 64, 67, 74, 139, 141, 145, 146, 163, 178], "descoteaux2011": [57, 74, 84], "displac": [57, 63, 64, 67, 74, 107, 120, 121, 131, 139, 141, 143, 144, 145, 148, 149, 199], "msd": [57, 64, 66, 67, 74, 139, 141, 145, 146, 163], "wu2007": [57, 74], "wu2008": [57, 74], "qgrid_siz": [57, 139], "filter_width": [57, 139], "rtop_sign": [57, 74, 139, 146], "central": [57, 74, 131, 133, 140, 142, 143], "rtop_pdf": [57, 74, 139, 146], "mse": [57, 74], "rtop_pdf_norm": 57, "msd_norm": 57, "msd_discret": [57, 139, 146], "add_subplot": [57, 60, 74, 92, 131, 140], "ind": [57, 60, 74, 139, 142, 143, 145], "ax3": [57, 60, 74], "603": [57, 74, 84, 139, 188], "621": [57, 74, 139, 178], "wu": [57, 74, 92, 139], "hybrid": [57, 64, 74, 139], "36": [57, 68, 74, 131, 133, 137, 139, 140, 143, 185], "617": [57, 74, 139, 178], "629": [57, 74, 139, 178], "858": [57, 74, 139, 179], "865": [57, 74, 139, 180], "canales10": 58, "luci": [58, 70, 98, 139, 145], "richardson": [58, 70, 98, 139, 145], "goal": [58, 112, 121], "sharper": [58, 139, 145], "ground": [58, 66, 69], "truth": [58, 66, 69], "multi_tensor_odf": [58, 72, 83, 146], "diffusionspectrumdeconvmodel": [58, 146], "514": [58, 187], "btabl": 58, "dsi515btabl": 58, "0015": [58, 72, 83, 139, 141], "0003": [58, 72, 83, 139, 141], "subdivid": [58, 72, 83, 133, 134, 135, 136, 137, 138, 139, 145, 146, 185], "odf_gt": 58, "dsi_model": 58, "dsi_odf": 58, "dsid_model": 58, "dsid_odf": 58, "odf_actor": [58, 59, 60, 72, 83], "dsid": [58, 106, 128], "canal": [58, 70, 98, 106, 128, 139, 145, 185], "rodriguez": [58, 70, 106, 128, 139, 185], "spectrum": [58, 129, 139], "136": [58, 133, 139, 145, 185], "149": [58, 143], "colleagu": [59, 120], "basser1994": [59, 120], "influenti": [59, 120], "micro": [59, 106, 120, 128, 133, 135, 137, 138, 139, 146, 180], "commonli": [59, 120], "quadrat": [59, 120, 133, 139, 143, 145], "pmatrix": [59, 68, 69, 120, 139, 199, 200], "xx": [59, 120, 139, 199, 200], "xz": [59, 120, 199, 200], "yx": [59, 120, 199, 200], "yy": [59, 120, 199, 200], "yz": [59, 120, 199, 200], "zx": [59, 120], "zy": [59, 120], "zz": [59, 120, 199, 200], "covari": [59, 68, 69, 120, 139, 142, 143], "diagon": [59, 113, 120, 131, 135, 139, 140, 145, 170], "87": [59, 77, 143, 185], "tensorfit": [59, 84, 140, 145, 146, 185], "recov": [59, 67, 77, 139, 200, 203], "triangular": [59, 133, 134, 135, 136, 137, 138, 139, 145], "dxx": [59, 120, 139, 145, 161], "dxy": [59, 120, 139, 145, 161], "dyi": [59, 120, 139, 145, 161], "dxz": [59, 120, 139, 145, 161], "dyz": [59, 120, 139, 145, 161], "dzz": [59, 120, 139, 145, 161], "tensor_v": 59, "lower_triangular": [59, 146], "quadratic_form": [59, 139, 146], "eigen": [59, 139, 140, 141, 145], "That": [59, 63, 108, 109, 131, 137, 139, 140, 143], "unrestrict": 59, "lambda_1": [59, 139, 140, 145, 199, 200], "lambda_2": [59, 139, 140, 145, 199, 200], "lambda_3": [59, 139, 140, 145, 199, 200], "carefulli": [59, 116], "pack": 59, "color_fa": [59, 77, 110, 146], "tensor_fa": 59, "viewer": [59, 104, 108, 204], "tensor_evec": 59, "complimentari": 59, "equival": [59, 94, 108, 111, 122, 131, 133, 135, 136, 137, 139, 140, 141, 143, 145], "md1": 59, "tensors_md": 59, "md2": 59, "quantiti": [59, 64, 67, 139], "pajevic1999": 59, "tensor_rgb": 59, "255": [59, 84, 88, 104, 137, 145, 186], "uint8": [59, 84, 88, 137, 139, 140], "ellipsoid": [59, 77, 133, 139, 182], "cfa": [59, 84, 140, 145], "tensor_slic": [59, 77], "scalar_color": [59, 77], "tensor_ellipsoid": 59, "tensor_odf": 59, "reliabl": 59, "drawback": [59, 139], "mislead": [59, 180, 191], "fortun": [59, 72], "mattielo": [59, 120], "lebihan": [59, 106, 120, 128, 139, 145, 161, 199], "1994": [59, 106, 120, 128, 133, 139, 145, 161, 190, 199], "spectroscopi": [59, 120, 199], "pajev": 59, "pierpaoli": [59, 77, 135, 139, 145, 160, 161], "fodf": [60, 65, 71, 98, 120, 138, 139, 145, 178], "anderson2005": 60, "kaden2016": 60, "zucchelli2017": 60, "forecastmodel": [60, 146], "fetch_hbn": [60, 61, 146], "alexander2017": 60, "hbn": [60, 110], "pod2": [60, 134], "richiehalford2022": 60, "data_path": [60, 61], "ndaraa948vfh": [60, 61, 134], "dwi_path": [60, 61], "qsiprep": [60, 61], "hbnsiteru": [60, 61], "ndaraa948vfh_s": [60, 61], "hbnsiteru_acq": [60, 61], "64dir_spac": [60, 61], "t1w_desc": [60, 61], "preproc_dwi": [60, 61], "mask_img": [60, 61, 69, 134], "brain_mask": [60, 61, 112, 120, 145], "mask_smal": [60, 61], "dec_alg": [60, 139], "basi": [60, 64, 67, 72, 73, 95, 97, 120, 122, 126, 133, 134, 135, 136, 137, 138, 139, 145, 146, 163, 183, 185, 186, 189, 191, 192, 194, 203], "fm": [60, 139], "f_fit": [60, 139], "perpendicular": [60, 64, 67, 70, 84, 120, 133, 139, 141, 143, 145, 163, 178], "d_par": [60, 139], "dpar": [60, 139, 146], "d_perp": [60, 139], "dperp": [60, 139, 146], "forecast_indic": 60, "shrink": [60, 142, 143], "ax4": 60, "dpi": [60, 144], "magnif": 60, "anderson": [60, 106, 128, 139], "kaden": [60, 66, 139], "smt": [60, 66, 106, 128, 139], "miccai": [60, 73, 135, 139, 145, 155], "cdmri": [60, 139], "lm": [60, 134, 139], "escalera": [60, 134], "ai": [60, 133, 134], "transdiagnost": [60, 134], "mental": [60, 134], "health": [60, 134], "disord": [60, 134], "170181": [60, 134], "richi": [60, 134, 189], "halford": [60, 134, 189], "parenchyma": 61, "cerebr": [61, 63], "morphologi": [61, 134, 140, 145], "enlarg": 61, "atrophi": 61, "pathologi": 61, "pasternak2009": 61, "s_0fe": 61, "isotrop": [61, 64, 65, 70, 76, 86, 87, 98, 107, 131, 133, 136, 140, 141, 143, 145, 146, 147, 148, 191, 197], "hoy2014": 61, "henriques2017": 61, "fwdti": [61, 106, 128, 146, 180, 181, 189], "freewatertensormodel": [61, 146], "fwdtimodel": 61, "fwdtifit": 61, "freewatertensorfit": [61, 146], "dtimodel": 61, "dtifit": [61, 199, 200], "fadiff": 61, "5e": [61, 68, 139], "mddiff": 61, "in_vivo_free_water_dti_and_standard_dti_measur": 61, "vivo": [61, 66], "unexpect": [61, 182], "periventricular": 61, "problemat": 61, "in_vivo_free_water_dti_and_standard_dti_correct": 61, "dismiss": 61, "pasternak": [61, 106, 128], "sochen": 61, "gur": 61, "intrat": 61, "assaf": [61, 141], "62": [61, 70, 112, 138, 139, 143, 184, 185], "717": [61, 195], "22055": 61, "hoi": 61, "kecskemeti": 61, "103": [61, 65, 126, 135, 139, 145, 161, 184, 185], "323": [61, 187], "333": [61, 143, 187], "053": 61, "yeh2010": 62, "phd": [62, 93, 95, 112, 122, 139, 141, 145, 175], "generalizedqsamplingmodel": [62, 146], "gqmodel": 62, "sampling_length": [62, 139], "gqfit": 62, "gqpeak": 62, "gqpeak_valu": 62, "gqpeak_indic": 62, "perfus": [63, 110, 120, 126, 139, 145, 162], "understood": [63, 120, 143], "stejskal": [63, 107, 120, 139, 141, 145, 162, 199, 200, 201], "tanner": [63, 107, 113, 120, 139, 141, 145, 162, 199, 200, 201], "stejskal65": [63, 120, 145, 162], "le": [63, 84, 120, 133, 139, 143, 145, 162], "bihan": [63, 84, 120, 139, 145, 162], "lebihan84": [63, 120, 145, 162], "brownian": [63, 120], "thermal": [63, 77, 120], "vascular": [63, 120], "blood": [63, 120], "pressur": [63, 120], "pseudo": [63, 65, 120, 133, 139, 144, 145, 162], "laid": [63, 120, 139], "macroscop": [63, 120, 139], "fe": 63, "weigh": 63, "ivimmodel": [63, 146], "read_ivim": [63, 146], "bvalu": [63, 65, 66, 82, 133, 137, 138, 139, 145, 152, 153, 158, 159, 160, 161, 162], "256": [63, 81, 112, 126, 131, 133, 140, 145, 148, 187, 191], "midwai": 63, "axhlin": 63, "axvlin": 63, "ivim_data_slic": 63, "heat": 63, "hair": 63, "medial": 63, "mixtur": 63, "x1": [63, 139, 142, 143], "x2": [63, 139, 142, 143], "y1": [63, 133], "y2": [63, 133], "csf_slice": 63, "exponenti": [63, 139, 187], "fit_method": [63, 69, 77, 139, 145, 160, 161, 195], "trr": [63, 139, 145], "guess": [63, 131, 133, 137, 139, 145], "split_b_d": [63, 120, 139, 145, 162], "mono": [63, 131, 139, 145], "logarithm": [63, 69, 139, 143], "split_b_s0": [63, 139, 145, 162], "s0_": 63, "d_star": [63, 139, 145, 146, 162], "two_stag": [63, 139], "ivimfit": [63, 146], "model_param": [63, 139, 180], "arrang": [63, 134, 139, 141, 143], "ivimparam": 63, "20x20": 63, "height": [63, 139, 182], "estimated_param": 63, "heatmap": [63, 70], "plot_map": 63, "raw_data": 63, "clim": 63, "s0_predict": [63, 139, 145, 146, 162], "predicted_s0": 63, "measured_s0": 63, "perfusion_fract": [63, 139, 145, 146, 162], "perfusion_coeff": 63, "diffusion_coeff": 63, "varpro": [63, 139, 145, 189, 190, 196], "mix": [63, 113, 126, 139, 140, 145, 149, 150, 181, 182, 184], "farooq16": 63, "oppos": [63, 94, 122, 131, 139, 143, 145], "basin": 63, "fadnavis19": 63, "ivimmodel_vp": 63, "ivimfit_vp": 63, "ivim_trr_predict": 63, "s0_est": 63, "f_est": 63, "d_star_est": 63, "d_est": 63, "text_fit": 63, "3f": [63, 139], "4f": [63, 133], "5f": 63, "gca": 63, "ivim_predict_vp": 63, "ivim_voxel_plot": 63, "1965": [63, 120, 133, 139, 141, 143, 145, 162, 190], "spin": [63, 64, 107, 120, 134, 139, 141, 145, 161, 162, 163, 199, 201], "echo": [63, 107, 120, 134, 139, 141, 145, 161, 162, 199, 201], "presenc": [63, 69, 77, 120, 139, 141, 145, 162, 203], "chemic": [63, 120, 139, 141, 145, 162], "physic": [63, 64, 69, 77, 108, 120, 131, 133, 139, 141, 144, 145, 162, 202], "288": [63, 120, 139, 141, 145, 162, 186], "bibcod": [63, 120, 145, 162], "1965jchph": [63, 120, 145, 162], "1695690": [63, 120, 145, 162], "deni": [63, 120, 139, 145, 162], "radiologi": [63, 120, 139, 145, 162], "168": [63, 120, 133, 139, 145, 162, 186], "1988": [63, 120, 131, 133, 139, 145, 162, 190, 199], "497": [63, 120, 135, 136, 138, 139, 140, 141, 145, 162, 187, 203], "505": [63, 120, 139, 145, 162, 187], "microlearn": [63, 139, 184], "canada": [63, 73, 127, 139, 144, 145, 165], "farooq": [63, 139], "hamza": [63, 139], "ozarslan2013": [64, 67], "qiv": [64, 67, 139, 145, 146, 163], "teturn": 64, "ng": [64, 139, 145, 146, 163, 182], "interestingli": 64, "rtap": [64, 67, 120, 139, 145, 146, 163, 178], "plane": [64, 67, 82, 101, 104, 109, 120, 133, 139, 141, 143, 189, 199, 204], "rtpp": [64, 67, 120, 139, 145, 146, 163, 178], "delahaije2020": 64, "laplacian": [64, 67, 126, 139, 145, 163, 180], "mapl": [64, 106, 126, 128, 139, 181, 182], "fick2016a": 64, "mapmri": [64, 67, 120, 145, 146, 163, 178, 180, 181, 182, 183, 184, 191, 197], "compare_map": [64, 146], "187": 64, "explicitli": [64, 85, 131, 133, 134, 139, 140, 142, 179, 180, 189], "big_delta": [64, 67, 133, 134, 139, 141, 145, 163, 181], "small_delta": [64, 67, 133, 134, 139, 141, 145, 163, 181], "0365": [64, 120], "0157": [64, 120], "radial_ord": [64, 67, 73, 139, 145, 163], "anisotropic_sc": [64, 139], "laplacian_regular": [64, 67, 139, 191], "regularization_weight": 64, "gcv": [64, 67, 139, 189], "craven1978": 64, "omit": [64, 131, 135, 139, 143, 145], "custom": [64, 65, 131, 133, 138, 139, 140, 144, 145, 147, 180, 192], "positivity_constraint": [64, 139], "global_constraint": [64, 139], "pos_grid": [64, 139], "pos_radiu": [64, 139], "job": [64, 107, 142, 143, 183], "viabl": 64, "impos": [64, 67, 69, 133, 139], "extrapol": [64, 67, 139, 143], "mosek": [64, 69], "solver": [64, 69, 131, 133, 139, 183], "cvxpy_solv": [64, 69, 139], "greatli": [64, 139], "warn": [64, 84, 111, 129, 136, 137, 138, 146, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 196], "map_model_laplacian_aniso": 64, "mapmrimodel": [64, 146], "laplacian_weight": [64, 67, 139, 145, 163], "map_model_positivity_aniso": 64, "map_model_both_aniso": 64, "map_model_plus_aniso": 64, "preset": [64, 67, 133, 139], "mapfit_laplacian_aniso": [64, 182], "mapfit_positivity_aniso": 64, "mapfit_both_aniso": 64, "mapfit_plus_aniso": 64, "fit_label": [64, 144], "cmapl": 64, "map_label": [64, 144], "mapmri_rtop": 64, "smoother": [64, 131, 139, 140, 143, 145, 148], "norm_of_laplacian_sign": [64, 139, 146], "map_kwarg": [64, 144], "mapmri_norm_laplacian": 64, "mapmri_map": 64, "proton": [64, 107, 201], "said": 64, "hosseinbor2013": 64, "composit": [64, 131, 145], "fick2016b": 64, "puls": [64, 67, 107, 133, 134, 139, 141, 145, 199, 201], "appar": [64, 116, 118, 126, 135, 139, 145], "diamet": 64, "strong": [64, 139], "pore": [64, 139], "realist": 64, "map_model_both_ng": 64, "bval_threshold": [64, 139, 145, 163], "map_model_plus_ng": 64, "mapfit_both_ng": 64, "mapfit_plus_ng": 64, "ng_perpendicular": [64, 139, 146], "ng_parallel": [64, 139, 146], "mapmri_ng": 64, "clue": 64, "happen": [64, 75, 95, 102, 103, 111, 133, 134, 139, 140, 145, 189], "map_model_both_iso": 64, "mapfit_both_iso": 64, "noisier": 64, "sfu": [64, 73], "ozarslan": [64, 69, 106, 128, 135, 139], "hj": [64, 134, 139], "craven": [64, 139], "spline": [64, 131, 139, 142, 146], "math": [64, 66, 67, 68, 82, 131, 133, 134, 139, 143, 153, 179, 180, 183, 184, 187, 195], "1978": [64, 139, 190], "377": [64, 112, 139, 187], "403": [64, 139, 187], "hosseinbor": [64, 139], "bessel": [64, 139], "bfor": [64, 139], "650": [64, 139, 178], "670": [64, 139, 180], "dispers": [64, 66], "dela": [64, 69, 133, 134, 139, 196], "haij": [64, 69, 133, 134, 139, 196], "program": [64, 69, 107, 110, 133, 134, 139, 145, 166], "209": [64, 133, 134, 139, 145, 161, 186], "116405": [64, 133, 134, 139], "msmt": [65, 126, 139, 189, 190, 192], "jeurissen2014": 65, "overestim": [65, 139], "ssst": [65, 139, 145], "otsu": [65, 120, 145, 146, 180, 186], "powermap": 65, "unavail": [65, 133, 135, 137, 138, 139], "unique_bvals_toler": [65, 145, 146], "auto_response_msmt": [65, 146], "mask_for_response_msmt": [65, 146], "response_from_mask_msmt": [65, 146, 193], "multishelldeconvmodel": [65, 146], "dellacqua2014": [65, 106, 128], "qball_model": 65, "qballmodel": [65, 145, 146], "ap": [65, 139, 143], "anisotropic_pow": [65, 146, 180], "anisotropic_power_map": 65, "treat": [65, 131, 133, 134, 135, 138, 139, 142, 143, 145], "hidden": [65, 92, 131, 134, 138, 145, 182, 191], "markov": [65, 92, 140, 185, 186], "hmrf": [65, 92], "nclass": [65, 92, 140], "initial_segment": [65, 92, 140], "final_segment": [65, 92, 140], "precis": [65, 66, 80, 107, 131, 133, 139, 140, 143, 180, 182, 187, 188], "mask_wm": [65, 139], "mask_gm": [65, 139], "mask_csf": [65, 139], "wm_fa_thr": [65, 139], "gm_fa_thr": [65, 139], "csf_fa_thr": [65, 139], "gm_md_thr": [65, 139], "csf_md_thr": [65, 139], "0032": [65, 139], "nvoxels_wm": 65, "nvoxels_gm": 65, "nvoxels_csf": 65, "precalcul": 65, "response_wm": [65, 139], "response_gm": [65, 139], "response_csf": [65, 139], "auto_response_wm": 65, "auto_response_gm": 65, "auto_response_csf": 65, "multishellrespons": [65, 146], "ubval": [65, 133, 138, 139], "response_mcsd": 65, "wm_rf": [65, 139], "gm_rf": [65, 139], "csf_rf": [65, 139], "mcsd_model_simple_respons": 65, "mcsd_model": 65, "mcsd_fit": 65, "sh": [65, 72, 97, 126, 135, 136, 137, 138, 139, 145, 175, 183, 189, 191, 192, 195, 196, 203], "all_shm_coeff": [65, 139, 146], "vf": [65, 131], "volume_fract": [65, 139, 146], "sh_coeff": [65, 72, 139, 145, 146], "csf_sh_coeff": 65, "gm_sh_coeff": 65, "wm_sh_coeff": 65, "mcsd_pred": 65, "mcsd_odf": 65, "reset_camera_tight": 65, "msdodf": 65, "411": [65, 139, 145, 187], "426": [65, 187], "dell": [65, 70, 139, 145], "acqua": [65, 70, 139, 145], "reveal": [65, 66, 82, 138, 139], "milan": [65, 139], "itali": [65, 139], "implaus": 66, "mesoscop": 66, "contrari": [66, 78, 137, 140, 143], "netohe2019": [66, 106, 128], "confound": [66, 77], "secondli": 66, "kaden2016b": [66, 106, 128], "meval": [66, 72, 82, 83, 139, 141], "00099": [66, 82, 141], "00226": [66, 82, 141], "00087": [66, 82, 141], "linspac": [66, 67, 86, 131, 139, 140, 141, 142, 143], "num": [66, 133, 139, 179], "ang": 66, "f_i": [66, 139], "a_i": 66, "msdki_model": 66, "msdki_fit": 66, "ncol": [66, 67, 75, 131, 139, 144], "bbox_to_anchor": 66, "msdki_simul": 66, "curv": [66, 131, 139, 140, 142, 143], "independ": [66, 78, 106, 131, 133, 135, 139, 142, 143, 145, 192], "art": [66, 126, 139, 197], "im2": 66, "im3": 66, "msdki_invivo": 66, "insur": [66, 139, 180], "intris": [66, 139], "di": [66, 195], "microscop": [66, 68, 133, 139], "smt2f": [66, 139, 146], "smt2di": [66, 139, 146], "ufa2": 66, "smt2ufa": [66, 139, 146], "ufa": [66, 68, 69, 139, 144, 146], "msdki_smt2_invivo": 66, "rescal": 66, "invalid": [66, 85, 96, 100, 131, 133, 137, 139, 143, 144, 145, 178, 182, 195], "colleg": [66, 139], "shemesh": [66, 139], "misestim": [66, 139], "encod": [66, 68, 69, 126, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 199], "press": [66, 133, 139, 143], "27606": [66, 139], "kelm": [66, 139], "nd": [66, 93, 136, 137, 139, 140, 143, 145, 180], "carson": [66, 139], "rp": [66, 139], "dc": 66, "139": [66, 81, 139, 185], "346": [66, 139, 143, 187], "359": [66, 139, 187], "sought": 67, "unsolv": 67, "qtau": [67, 106, 126, 128, 183], "fick2017": 67, "terminologi": 67, "sparsiti": [67, 71, 133, 139], "drastic": 67, "nervou": 67, "mous": [67, 104], "fetch_qtdmri_test_retest_2subject": [67, 146], "read_qtdmri_test_retest_2subject": [67, 146], "qtdmri": [67, 146], "itself": [67, 69, 80, 111, 113, 134, 137, 139, 140, 143], "freeli": [67, 139], "citeabl": 67, "wassermann2017": 67, "cc_mask": [67, 134], "mt": [67, 106, 128, 133, 134, 139], "5m": [67, 134], "visualise_gradient_table_g_delta_rainbow": [67, 146], "dmri_acquisition_schem": 67, "dot": [67, 80, 89, 131, 133, 136, 137, 139, 140, 143, 145, 146, 185, 195, 196], "isolin": [67, 139], "architectur": [67, 139, 146, 189], "subplot_titl": 67, "subject1": 67, "subject2": 67, "data_": 67, "mask_": 67, "gtab_": [67, 139], "data_middle_slic": 67, "mask_middle_slic": 67, "tenmod": 67, "overlai": [67, 71, 90], "mask_templ": 67, "greys_r": 67, "tight_layout": [67, 68, 75, 100], "dmri_datasets_fa_with_ccmask": 67, "caution": [67, 98, 140, 143], "tau_min": 67, "tau_max": 67, "qtdmri_fit": 67, "cc_voxel": 67, "time_ord": [67, 139], "l1": [67, 71, 139, 143], "cv": [67, 139], "qtdmri_mod": 67, "qtdmrimodel": [67, 146], "l1_regular": [67, 139], "l1_weight": [67, 139], "5th": [67, 139, 145, 161], "trend": 67, "plot_mean_with_std": 67, "ind1": 67, "plotcolor": 67, "std_mult": 67, "lw": 67, "fill_between": 67, "005": [67, 139, 140, 141, 143], "msd_": 67, "4e": 67, "10e": 67, "delta_grid": 67, "msd_grid": 67, "meshgrid": 67, "d_grid": 67, "d_level": 67, "1e": [67, 68, 73, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 189], "contourf": 67, "1e3": 67, "1e5": 67, "dashdot": 67, "marker": [67, 113, 133, 135, 137, 138, 139], "0091": 67, "14e": 67, "set_ylim": [67, 139], "set_xlim": 67, "009": 67, "0185": 67, "cb": 67, "set_label": 67, "qt_indices_msd": 67, "slowli": 67, "nearli": [67, 143], "perfectli": [67, 131, 136], "rtxp_": 67, "rtxp_grid": 67, "d_color": 67, "tile": [67, 89], "162": [67, 133, 186], "3e": [67, 68, 139], "113": [67, 102, 112, 185], "6e": 67, "qt_indices_rtop": 67, "experienc": 67, "odd": [67, 135, 136, 138, 139, 192, 203], "arriv": [67, 139], "qt_indices_rtap": 67, "9e": 67, "15e": 67, "qt_indices_rtpp": 67, "bigger": [67, 133, 143], "asid": 67, "sharpening_factor": 67, "direction": [67, 95, 122], "conclud": 67, "tempor": [67, 107, 139, 199, 200], "westin": [68, 69, 106, 128, 133, 134, 139, 186], "briefli": [68, 69], "summar": [68, 69, 142], "dtd": [68, 69, 139], "langl": [68, 69, 139], "rangl": [68, 69], "otim": [68, 69, 139], "product": [68, 69, 131, 133, 139, 140, 141, 142, 143, 145, 146], "cumul": [68, 69, 139, 142, 143], "approx": [68, 69], "exp": [68, 69, 139, 140, 143, 201], "inner": [68, 69, 131, 133, 139, 141, 143], "ln": [68, 69, 139], "s_1": [68, 69], "vdot": [68, 69, 141], "s_n": [68, 69], "_1": [68, 69, 139, 199, 200], "_n": [68, 69, 139], "_i": [68, 69, 71, 139], "voigt": [68, 69, 139], "notat": [68, 69, 139, 145, 184], "qte": [68, 134], "fdata": 68, "fmask": 68, "qte_lte_pt": 68, "bten": [68, 133, 134, 139, 141, 145, 191, 192, 193], "lte": [68, 133, 134, 139, 141, 145], "pte": [68, 133, 134, 139, 141, 145], "122": [68, 81, 100, 131, 133, 139, 140, 185], "matrix_rank": 68, "qtimodel": [68, 69, 146], "qtifit": [68, 69, 146], "\u03bcfa": 68, "v_md": [68, 139, 146], "v_shear": [68, 139, 146], "v_iso": [68, 139, 146], "c_md": [68, 139, 146], "c_mu": [68, 139, 146], "\u03bc": 68, "c_m": [68, 139, 146], "c_c": [68, 139, 146], "k_bulk": [68, 139, 146], "bulk": [68, 139, 142, 143], "k_shear": [68, 139, 146], "k_mu": [68, 139, 146], "carl": [68, 69, 139], "fredrik": [68, 69, 139], "multidimension": [68, 69, 131, 135, 139, 140, 145, 191], "135": [68, 69, 81, 139, 185], "362": [68, 69, 71, 97, 99, 134, 135, 138, 139, 145, 187], "039": [68, 69, 139], "herberthson": [69, 106, 128, 139], "unconstrain": [69, 131, 133, 135, 139], "heteroskedast": 69, "mathrm": [69, 133, 139, 143, 199], "s_k": 69, "ddot": 69, "dictat": 69, "semi": [69, 131, 133, 140, 142, 143], "succeq": 69, "violat": [69, 139], "unreli": [69, 138], "enfoc": 69, "semidefinit": [69, 133, 134, 139], "sdp": [69, 139], "sc": [69, 139, 143], "readili": 69, "licenc": 69, "avaiabl": 69, "read_dib_217_lte_pte_st": [69, 146], "read_dib_70_lte_pte_st": [69, 146], "showcas": [69, 70, 116, 117, 119, 120, 122, 191], "subsampl": [69, 85, 131, 135, 137, 143], "richer": 69, "217": [69, 134, 186], "emul": 69, "scan": 69, "patient": [69, 77, 113, 134, 142, 145], "clinic": [69, 133, 134, 139, 145], "filip": 69, "szczepankiewicz": [69, 134], "szczepankiewicz_dib_2019": 69, "mark": [69, 75, 139, 142, 143, 145, 182], "_217": 69, "suffix": [69, 133, 135, 137, 138, 139], "data_img": [69, 134], "gtab_217": 69, "data_217": 69, "downsampl": [69, 81, 86, 131, 140, 142, 146, 185, 195], "_70": 69, "gtab_70": 69, "data_70": 69, "qtimodel_217": 69, "qtifit_217": 69, "qtimodel_unconstrain": 69, "qtifit_unconstrain": 69, "sdpdc": [69, 139], "qtimodel_constrain": 69, "qtifit_constrain": 69, "\u00b5fa": 69, "compare_qti_map": [69, 146], "clearli": [69, 124], "fall": [69, 131, 139, 143, 145, 148, 190, 193], "outsid": [69, 84, 89, 100, 131, 133, 135, 138, 139, 142, 143, 145, 171, 183, 189, 195], "rich": 69, "despit": 69, "dens": [69, 131, 133, 139, 145, 196], "boito": [69, 139, 196], "feragen": [69, 139], "238": [69, 139, 189], "118198": 69, "hoge": [69, 134], "waveform": [69, 134], "oil": [69, 134], "liquid": [69, 134], "crystal": [69, 134], "brief": [69, 78, 79, 134, 135], "dib": [69, 134], "104208": [69, 134], "rumba": [70, 126, 128, 145, 146, 195, 196], "sd": [70, 120, 126, 128, 139, 145, 196, 203], "canalesrodriguez2015": [70, 98], "priori": [70, 92, 139, 145], "rl": 70, "richardson1972": 70, "noncentr": [70, 98, 139, 145], "chi": [70, 98, 133, 139, 145], "constantinides1997": 70, "tv": [70, 98, 135, 139, 145, 164], "rudin1992": 70, "symmetric362": [70, 134, 135, 138, 139, 145], "rumbasdmodel": [70, 98, 146], "constructor": [70, 131, 133, 134, 136, 137, 139, 140, 141, 143, 145, 182, 190], "wm_respons": [70, 98, 139, 145], "7e": [70, 139, 145], "2e": [70, 139, 145], "csf_respons": [70, 139, 145], "gm_respons": [70, 139, 145], "8e": [70, 139, 145], "adequ": [70, 139, 145], "impuls": [70, 139, 145], "imprecis": [70, 131, 139, 140, 143, 145], "acqua2007": 70, "0017": [70, 139, 145], "003": [70, 139, 145], "0008": [70, 139, 145], "default_respons": 70, "auto_response_sst": 70, "00139919": 70, "0003007": 70, "7372408293461": 70, "estimated_respons": 70, "arang": [70, 78, 79, 80, 81, 131, 136, 139, 140, 141, 142, 143], "rec_respons": 70, "rec_response_sign": 70, "wish": [70, 85], "voxelwis": [70, 98, 139, 145, 180], "use_tv": [70, 98, 139, 145], "bear": 70, "n_iter": [70, 98, 139, 145], "recon_typ": [70, 139, 145], "n_coil": [70, 139, 145], "suitabl": [70, 133, 134, 139, 199, 200], "smf": [70, 139, 145], "isn": [70, 107, 133, 139], "ipat": [70, 139, 145], "asset": [70, 139, 145], "wherein": 70, "sequenti": [70, 80, 131, 133, 139, 140, 142, 144], "rumba_fit": [70, 98], "inclus": [70, 139, 143], "neither": [70, 131, 133, 139, 140, 141, 143, 145], "f_iso": [70, 139, 146], "f_wm": [70, 98, 139, 146], "ax0": 70, "wm_iso_partit": 70, "rumbafit": [70, 146], "combined_odf_iso": [70, 139, 146], "rumba_odf": 70, "rumba_peak": 70, "exchang": [70, 139], "demand": 70, "ram": [70, 97, 139, 145], "gb": [70, 139, 145], "singleton": [70, 139, 145, 179, 182], "data_tv": 70, "rumba_global_odf": 70, "peak_direct": [70, 139, 145, 146, 189], "idx": [70, 84, 133, 134, 135, 136, 137, 138, 139, 143, 146], "pk": 70, "rumba_global_peak": 70, "rodr\u00edguez": [70, 98, 106, 128, 139, 145], "sotiropoulo": [70, 98, 139, 145], "aja": [70, 98, 139, 145], "fern\u00e1ndez": [70, 98, 139, 145], "radua": [70, 98, 139, 145], "mendizab": [70, 98, 139, 145], "iturria": [70, 98, 139, 145], "medina": [70, 98, 139, 145], "meli": [70, 98, 139, 145], "garc\u00eda": [70, 98, 139, 145], "alem\u00e1n": [70, 98, 139, 145], "g\u00f3mez": [70, 98, 139, 145], "thiran": [70, 98, 139, 145], "sarr\u00f3": [70, 98, 139, 145], "pomarol": [70, 98, 139, 145], "clotet": [70, 98, 139, 145], "salvador": [70, 98, 139, 145], "multichannel": [70, 98, 139, 145], "e0138910": [70, 98, 139, 145], "0138910": [70, 98, 139, 145], "1972": [70, 139, 143, 190], "bayesian": [70, 92, 126, 180], "josa": 70, "1364": [70, 191], "000055": 70, "constantinid": [70, 139], "atalar": [70, 139], "mcveigh": [70, 139], "1997": [70, 133, 139, 183, 190], "offici": [70, 126, 127, 139], "852": [70, 139, 180, 183], "857": [70, 139, 179], "rudin": [70, 139], "osher": [70, 139], "fatemi": [70, 139], "1992": [70, 139, 190], "physica": [70, 139], "phenomena": [70, 139], "259": [70, 139, 186], "268": [70, 139, 186], "0167": [70, 133, 139], "2789": [70, 139], "90242": [70, 139], "dellacqua2007": 70, "rizzo": [70, 139, 145], "scifo": [70, 139, 145], "clark": [70, 139, 145], "scotti": [70, 139, 145], "fazio": [70, 139, 145], "bio": [70, 139, 145], "462": [70, 139, 145, 187], "472": [70, 139, 145, 187], "1109": [70, 139, 145, 180], "tbme": [70, 139, 145], "888830": [70, 139, 145], "067": [70, 112], "sfm": [71, 99, 106, 128, 146, 179, 180, 182, 188, 191, 195], "rokem2015": [71, 99, 139], "dpp": [71, 195], "internet": [71, 95], "subsequ": [71, 135, 139], "examin": [71, 75, 197], "elast": [71, 139], "net": [71, 133, 139, 145, 186], "zou2005": [71, 139], "y_i": [71, 137, 144, 145, 203], "lambda": [71, 80, 133, 135, 136, 138, 139, 143, 178], "w_j": [71, 135], "2_j": 71, "balanc": [71, 139], "l1_ratio": [71, 99, 139], "l2": [71, 109, 133, 139, 143], "sf_model": [71, 99], "sparsefasciclemodel": [71, 99, 146], "sf_fit": 71, "sf_odf": 71, "sf_peak": 71, "sf_both": 71, "kendrick": [71, 99, 139], "aviv": [71, 99, 139], "zou": [71, 139], "320": [71, 139, 187], "sf": [72, 133, 135, 136, 138, 139, 145, 183], "00015": 72, "symm_sign": 72, "sh_basi": [72, 139], "reproject": 72, "high_res_sph": 72, "symm_reconst": 72, "asymmetr": [72, 131, 140, 145, 170, 195, 203], "odf2": 72, "n_pts_hemispher": 72, "asym_odf": 72, "asym_sign": 72, "asym_reconst": 72, "deal": [72, 77, 139, 140, 145, 194, 195, 197], "full_basi": [72, 135, 136, 138, 139], "asym_reconst_ful": 72, "merlet2013": 73, "\u00f6zarslan2008": 73, "\u00f6zarslan2009": 73, "shoremodel": [73, 74, 146], "fetch_isbi2013_2shel": [73, 146], "contest": 73, "xmin": 73, "xmax": 73, "ymin": 73, "ymax": 73, "zmin": 73, "zmax": 73, "zeta": [73, 139], "lambdan": [73, 139], "lambdal": [73, 139], "cheng2011": 73, "asm": [73, 74, 139], "asmfit": [73, 74, 139], "\u00f6zarslan": [73, 106, 128], "toronto": 73, "honolulu": 73, "hi": [73, 133, 135, 137, 139], "eap": [73, 133, 139], "compress": [73, 86, 134, 137, 139, 143, 145, 158, 159, 178], "cheng": [73, 139, 141], "pratic": 73, "insight": [73, 139], "unifi": [73, 133, 139, 144, 145, 165], "shore_map": 74, "ON": [74, 133, 139, 140, 145], "skimag": [75, 140, 145, 178, 180], "imwarp": [75, 87, 90, 91, 146, 180], "symmetricdiffeomorphicregistr": [75, 87, 90, 91, 146], "ssdmetric": [75, 90, 146], "ellips": [75, 133], "draw_ellips": 75, "rr": 75, "img_ref": 75, "img_in": 75, "show_imag": 75, "img_warp": 75, "fig_nam": 75, "axarr": 75, "warp": [75, 87, 90, 91, 121, 131, 144, 145, 148, 194], "ssd": [75, 90, 121, 131, 139, 145, 148], "02f": 75, "step_length": [75, 131, 145, 148], "sdr": [75, 87, 90, 91, 182, 183, 196], "ndim": [75, 90, 131, 136, 137, 139, 140, 189], "inv_it": [75, 90, 131, 145, 148], "ss_sigma_factor": [75, 131, 145, 148], "opt_tol": [75, 131, 145, 148], "plot_2d_diffeomorphic_map": [75, 90, 146, 187], "scenario": 75, "though": [75, 131, 134, 135, 139, 142, 143, 199, 200], "facilit": [76, 137, 144, 145], "fimg": [76, 82, 134, 138, 139, 140, 141, 143], "aniso_vox": [76, 131, 134, 138, 139, 140, 141, 143, 145], "24": [76, 78, 84, 127, 131, 133, 137, 139, 140, 143, 145, 181, 182, 183, 185, 187], "new_voxel_s": 76, "trilinear": [76, 89, 96, 100, 131, 133, 143, 145, 171], "data2": [76, 87, 131, 140, 145], "affine2": [76, 87, 131, 145], "77": [76, 81, 131, 133, 139, 145, 185], "iso_vox": 76, "img3": 76, "spm2analyzeimag": 76, "realiz": [76, 131, 135], "physiolog": [77, 139, 145, 161], "pernici": 77, "particip": [77, 140, 145], "young": 77, "yendiki": 77, "yendiki2013": 77, "refit": 77, "chang2005": [77, 139], "intermitt": [77, 183, 189, 195], "ne": [77, 139], "dti_wl": 77, "roi_idx": 77, "establish": [77, 98, 131], "fit_wl": 77, "fa1": 77, "evals1": 77, "evecs1": 77, "cfa1": 77, "tensor_ellipsoids_wl": 77, "noisy_data": 77, "noisy_idx": 77, "fit_wls_noisi": 77, "fa2": 77, "evals2": 77, "evecs2": 77, "cfa2": 77, "tensor_ellipsoids_wls_noisi": 77, "distort": [77, 116, 131, 143], "dti_restor": 77, "fit_restore_noisi": 77, "fa3": 77, "evals3": 77, "evecs3": 77, "cfa3": 77, "tensor_ellipsoids_restore_noisi": 77, "convinc": 77, "ourselv": [77, 108], "chung2006": 77, "ravel": [77, 78, 80, 142, 143, 185], "count": [77, 84, 86, 88, 131, 139, 140, 142, 143, 144, 186], "dti_fa_distribut": 77, "resembl": [77, 134], "importantli": 77, "believ": 77, "koldewynb": 77, "kakunooria": 77, "kanwish": 77, "fischl": 77, "reject": [77, 139, 145, 160, 161], "1088": [77, 139, 145, 160, 161, 180], "chung": [77, 139, 192], "sw": [77, 139, 145, 161], "bootstrap": [77, 106, 126, 129, 136, 139, 145, 161, 182, 185], "uncertainti": [77, 107, 139, 145, 161], "531": [77, 139, 145, 161, 187], "541": [77, 139, 145, 161, 187], "familiar": [78, 79], "get_streamlin": [78, 79], "fornix": [78, 79, 80, 81, 126, 134, 138, 139, 140, 141, 142, 143], "identityfeatur": [78, 79, 146], "unalt": 78, "nb": [78, 79, 81, 139], "191": [78, 79, 81, 133, 140, 142, 186], "predetermin": 78, "perman": 78, "centerofmassfeatur": [78, 146], "graviti": [78, 131], "wiki": [78, 79, 80, 108, 131, 133, 134, 139, 140, 141, 145], "euclideanmetr": [78, 146], "belong": [78, 79, 80, 88, 113, 140, 142, 145], "create_colormap": [78, 79, 80, 81], "colormap_ful": [78, 79, 80, 81], "center_of_mass_featur": 78, "midpointfeatur": [78, 146], "halfwai": [78, 131], "midpoint_featur": 78, "arclengthfeatur": [78, 80, 146], "arclength_featur": 78, "vectorofendpointsfeatur": [78, 79, 80, 146], "ambigu": 78, "cosinemetr": [78, 79, 80, 146], "vector_of_endpoints_featur": 78, "sumpointwiseeuclideanmetr": [79, 80, 142, 146], "cosine_metr": 79, "wide": [80, 95, 122, 142, 143, 199], "n_i": [80, 86, 139, 142, 143], "modular": [80, 144, 145, 165], "subclass": [80, 133, 139, 140], "capabl": [80, 101, 133, 139, 191], "hierarch": 80, "clustermap": [80, 81, 146], "creation": [80, 106, 133, 139, 140, 142, 145, 178, 183, 185], "arc": [80, 131, 140], "redefin": 80, "infer_shap": [80, 146], "is_order_invari": [80, 140, 142, 146], "educ": [80, 81], "neuroanatomi": [80, 81], "fornix_clusters_arclength": 80, "cosin": [80, 86, 133, 139, 140, 143], "minu": [80, 131, 133, 135, 136, 139, 140, 143, 145, 158, 159, 164, 171, 172], "wikipedia": [80, 108, 109, 131, 133, 139, 140, 141, 145, 204], "cosine_similar": 80, "are_compat": [80, 137, 140, 144, 145, 146, 195], "shape1": [80, 140], "shape2": [80, 140], "v2": [80, 133, 135, 137, 138, 139], "cos_theta": 80, "arccosin": 80, "arcco": [80, 133, 140, 184, 204], "fornix_clusters_cosin": 80, "pickl": [81, 107, 146, 180], "save_pickl": [81, 107, 146], "10mm": [81, 140, 142, 143], "upsampl": [81, 131, 135, 140, 142, 143, 145], "101": [81, 134, 138, 139, 140, 141, 143, 185], "105": [81, 139, 185], "115": [81, 181], "116": [81, 135, 136, 138, 139, 185, 196, 203], "119": [81, 135, 185, 193], "123": [81, 133, 185], "126": [81, 84, 126, 185], "129": [81, 126, 185], "144": [81, 139, 179, 185], "148": 81, "151": 81, "159": [81, 186], "167": [81, 186], "181": [81, 97, 186, 187], "185": [81, 186], "208": [81, 133, 186], "210": [81, 186], "224": 81, "237": [81, 186], "246": 81, "249": [81, 186], "251": [81, 88, 186], "267": [81, 186], "270": [81, 186], "280": 81, "284": [81, 192], "293": 81, "296": 81, "299": [81, 187], "84": [81, 185, 186], "83773804": 81, "92590332": 81, "32278442": 81, "10850525": 81, "84362793": 81, "91885376": 81, "40357208": 81, "112": [81, 185], "25676727": 81, "72930145": 81, "48336792": 81, "107": [81, 185], "60327911": 81, "13782501": 81, "23897552": 81, "102": [81, 134, 138, 139, 140, 141, 143, 185], "5100708": 81, "29447174": 81, "04563904": 81, "97": [81, 139, 141, 185, 189], "46020508": 81, "54240417": 81, "82": [81, 185], "60240173": 81, "93": [81, 126, 179, 183], "14851379": 81, "84208679": 81, "78": [81, 185], "98937225": 81, "57682037": 81, "63652039": 81, "72344208": 81, "60827637": 81, "9391861": 81, "40846252": 81, "15874481": 81, "4484024": 81, "74534607": 81, "00262451": 81, "82582092": 81, "02451324": 81, "43942261": 81, "0697403": 81, "fornix_initi": 81, "fornix_centroid": 81, "fornix_clust": 81, "pkl": 81, "barrier": [82, 133], "media": 82, "rnh2015": 82, "multi_tensor_dki": [82, 146], "decompose_tensor": [82, 146], "from_lower_triangular": [82, 146], "small_64d": [82, 134, 138, 139, 140, 141, 143], "circ": [82, 139], "fie": 82, "signal_dki": 82, "signal_noisi": [82, 83], "decompos": 82, "dt_eval": 82, "dt_evec": 82, "signal_dti": 82, "simulated_dki_sign": 82, "gradients_spher": [83, 182], "simulated_sign": 83, "cach": [83, 135, 137, 143, 146, 185], "multi_tensor_simul": 83, "worst": 84, "closest": [84, 106, 118, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 187], "jones2013": 84, "segment_from_cfa": [84, 146], "bounding_box": [84, 146, 191], "cc_box": 84, "bounds_min": 84, "bounds_max": 84, "mask_cc_part": 84, "return_cfa": [84, 140, 145], "cfa_cc_part": 84, "cc_segment": 84, "crude": 84, "catch": [84, 131, 135, 136, 139, 140, 145, 178, 181], "manufactur": 84, "binary_dil": [84, 88, 146], "mask_nois": [84, 145], "noise_std": 84, "null": [84, 133, 135, 145, 153, 195], "axis_x": 84, "axis_i": 84, "axis_z": 84, "0695455758": 84, "98875": 84, "1177": [84, 180], "09229": 84, "46995373635": 84, "05039": 84, "99871": 84, "0054406": 84, "9329492871": 84, "11825": 84, "039925": 84, "99218": 84, "9965694823": 84, "highest": [84, 94, 113, 122, 131, 133, 136, 139, 140, 145, 183], "mangin": 84, "poupon": 84, "knosch": 84, "turner": 84, "fallaci": 84, "239": [84, 186], "dipy_": 85, "create_nifti_head": [85, 146], "get_reference_info": [85, 146], "is_header_compat": [85, 146], "fetch_file_format": [85, 146], "get_file_format": [85, 146], "cc_m_sub": 85, "laf_m_sub": 85, "lpt_m_sub": 85, "raf_m_sub": 85, "rpt_m_sub": 85, "template0": 85, "bundles_filenam": 85, "ref_anat_filenam": 85, "basenam": 85, "reference_anatomi": 85, "cc_trk": 85, "cc_sft": 85, "laf_sft": 85, "raf_sft": 85, "anywai": [85, 199, 200], "lpt_sft": 85, "rpt_sft": 85, "nifti1": [85, 134, 137, 145, 157, 166, 174], "trkfile": [85, 131, 134, 137, 140, 143, 144, 145], "nifti1head": [85, 131, 134, 137, 140, 143, 144, 145], "voxel_ord": [85, 137, 144, 145, 146], "accept": [85, 127, 131, 133, 135, 136, 137, 139, 140, 143, 145, 185], "fake": 85, "beginn": [85, 191], "nifti_head": 85, "manipul": [85, 98, 105, 129, 133, 137, 139, 143, 144, 145], "lpt": 85, "rpt": 85, "laf": 85, "raf": 85, "is_bbox_in_vox_valid": [85, 137, 144, 145, 146], "remove_invalid_streamlin": [85, 137, 144, 145, 146], "removing_invalid_coordin": 85, "to_voxmm": [85, 137, 144, 145, 146], "to_rasmm": [85, 137, 144, 145, 146], "to_corn": [85, 137, 144, 145, 146], "cc_streamlines_vox": 85, "laf_streamlines_vox": 85, "raf_streamlines_vox": 85, "lpt_streamlines_vox": 85, "rpt_streamlines_vox": 85, "cc_densiti": 85, "laf_dens": 85, "raf_dens": 85, "lpt_densiti": 85, "rpt_densiti": 85, "Be": [85, 131, 133, 137, 139, 143, 145], "metadata": [85, 137], "vox": [85, 88, 137, 144, 145, 146], "cc_1000": 85, "laf_1000": 85, "raf_1000": 85, "lpt_1000": 85, "rpt_1000": 85, "approx_polygon_track": [86, 146, 195], "simulated_bundl": 86, "no_streamlin": 86, "randint": [86, 146, 178, 184], "burlywood": 86, "length_histogram": 86, "2mm": 86, "bundle_downsampl": 86, "n_pts_d": 86, "curvi": 86, "bundle_downsampled2": 86, "n_pts_ds2": 86, "lossi": 86, "bundle_actor": 86, "bundle_actor2": 86, "bundle_actor3": 86, "simulated_cosine_bundl": 86, "equidist": 86, "obviou": 86, "great": [86, 133, 139], "n_pts_histogram": 86, "lengths_downsampl": 86, "lengths_downsampled2": 86, "id": [86, 133, 140, 145], "lengths_plot": 86, "greene17": 87, "ra": [87, 101, 112, 133, 137, 140, 145], "vox_siz": [87, 131, 134, 137, 143, 145], "2x2x2": [87, 131], "fetch_mni_templ": [87, 146], "read_mni_templ": [87, 146], "img_t2_mni": 87, "new_zoom": [87, 131, 145], "b0_idx_stanford": 87, "b0_data_stanford": 87, "skull": [87, 90, 91, 92], "b0_masked_stanford": 87, "mean_b0_masked_stanford": 87, "rigidli": 87, "transform_origin": [87, 146], "mismatch": [87, 140, 143, 180, 183], "affine_reg": [87, 121], "rigid_map": 87, "highres_map": 87, "diffeomorph": [87, 106, 110, 118, 126, 131, 144, 145, 148, 149, 184, 187, 192, 196], "avants09": [87, 90, 91, 121], "ccmetric": [87, 90, 91, 146, 180, 189], "warped_mov": [87, 90, 91, 121, 131, 145], "transformed_sagitt": 87, "transformed_coron": 87, "transformed_axi": 87, "sft": [87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 137, 144, 145, 190, 191, 196], "whose": [87, 131, 135, 139, 140, 142, 143, 145], "extent": [87, 131, 139, 142], "isocent": 87, "target_isocent": 87, "diag": [87, 131, 133, 135, 139], "origin_affin": 87, "fov": 87, "zoom": [87, 101, 104, 116, 117, 131, 134, 137, 145, 183], "implicitli": [87, 140], "mni_streamlin": 87, "deform_field": [87, 143], "get_forward_field": [87, 131, 145, 146], "stream_to_current_grid": [87, 143], "current_grid_to_world": [87, 143], "stream_to_ref_grid": [87, 143], "ref_grid_to_world": [87, 143], "has_furi": [87, 93, 94, 95, 96, 97, 99, 100], "show_template_bundl": 87, "template_actor": 87, "streamlines_dsn_mni": 87, "epstein": [87, 90, 91, 121, 131], "gee": [87, 90, 91, 92, 121, 131], "correl": [87, 90, 91, 116, 121, 126, 131, 133, 135, 142, 143, 145, 148, 180], "elderli": [87, 90, 91, 121, 131], "neurodegen": [87, 90, 91, 121, 131], "grafton": 87, "meant": [88, 131, 133, 135, 136, 139, 140, 143, 145], "labels_img": 88, "exit": [88, 100, 133, 139, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183], "streamline_gener": [88, 94, 97, 98, 99, 100], "cc_streamlin": 88, "other_streamlin": 88, "cc_streamlines_actor": 88, "corpuscallosum_axi": 88, "corpuscallosum_sagitt": 88, "return_map": [88, 133, 136, 139, 143], "mapping_as_streamlin": [88, 143], "log1p": 88, "gyru": 88, "surpris": 88, "tricki": 88, "literatur": [88, 139, 145, 203], "lr_superiorfrontal_track": 88, "dm": [88, 131, 140, 143], "int16": [88, 112, 137], "lr_sf_trk": 88, "footnot": 88, "aparc": [88, 134, 191], "aseg": 88, "mgz": 88, "freesurf": [88, 99, 134], "lie": [88, 133, 143], "label_info": 88, "4x4": [88, 131, 133, 134, 137, 144, 145], "stonge2018": 89, "mesh": [89, 126, 129, 133, 146, 194], "random_coordinates_from_surfac": [89, 146], "seeds_from_surface_coordin": [89, 146], "load_polydata": [89, 146], "get_polydata_triangl": 89, "get_polydata_vertic": 89, "get_actor_from_polydata": 89, "normals_from_v_f": 89, "brain_lh": 89, "fury_surfac": 89, "polydata": [89, 137, 191], "vt": [89, 143], "surface_actor": 89, "uncom": [89, 102, 103, 104], "reset_camera": [89, 101, 102, 104], "surface_seed1": 89, "nb_seed": [89, 143], "100000": [89, 139], "nb_triangl": [89, 143], "tri_idx": 89, "trilin_co": 89, "seed_pt": 89, "seed_n": 89, "seed_actor": 89, "dot_siz": 89, "normal_length": 89, "normal_in": 89, "newaxi": [89, 189], "normal_out": 89, "normal_in_actor": 89, "normal_out_actor": 89, "surface_seed2": 89, "ong": [89, 144, 145, 165, 180, 194], "169": [89, 133, 180, 186], "524": [89, 187], "539": [89, 178], "fname_mov": 90, "reg_o": [90, 134, 138, 139, 140, 141, 143], "fname_stat": 90, "reg_c": [90, 134, 138, 139, 140, 141, 143], "channel": [90, 91, 139, 140, 144, 145, 198], "overlay_imag": [90, 146], "input_imag": [90, 140], "decis": [90, 139], "dim": [90, 110, 131, 145, 182, 196], "n_0": [90, 91], "n_1": [90, 91, 139], "n_k": [90, 91, 139], "diffeomorphicmap": [90, 91, 144, 146, 192, 196], "forth": [90, 91], "diffeomorphic_map": 90, "lattic": [90, 131, 144], "direct_warp_result": 90, "warped_stat": [90, 91], "inverse_warp_result": 90, "callback_cc": 90, "react": [90, 182], "registrationstag": 90, "scale_end": 90, "wmove": 90, "moving_imag": [90, 131], "wstatic": 90, "static_imag": [90, 131, 145], "t1_name": 90, "b0_name": 90, "receiv": [90, 131, 135, 139, 145], "sigma_diff": [90, 131, 145, 195], "callback": [90, 101, 104, 131, 133, 139, 144, 145], "t1_slices_input": 90, "t1_slices_r": 90, "inv_warp": 90, "t1_slices_res2": 90, "diffeomorphic_map_b0": 90, "modal": [91, 131, 145, 148], "stanford_b0": 91, "stanford_b0_affin": 91, "b0_fname": 91, "syn_b0": 91, "syn_b0_affin": 91, "stanford_b0_mask": 91, "syn_b0_mask": 91, "pre_align": 91, "02783543e": 91, "83019053e": 91, "07735639e": 91, "57654118e": 91, "34051706e": 91, "41918267e": 91, "66525861e": 91, "23579799e": 91, "34288908e": 91, "90262026e": 91, "80820307e": 91, "46216651e": 91, "00000000e": [91, 133], "input_3d": 91, "mrf": [92, 126, 146, 180], "zhang": [92, 139, 140, 143], "zhang2001": 92, "avants2011": [92, 131], "fsl": [92, 134, 145, 161, 191, 199, 200], "atropo": 92, "strip": [92, 189], "coron": [92, 144, 189], "img_ax": 92, "imgplot": 92, "img_cor": 92, "t1_imag": 92, "pad_inch": 92, "adult": 92, "100th": 92, "t0": [92, 131, 133], "total_tim": 92, "final_seg": 92, "light": 92, "bradi": 92, "cook": 92, "multivari": [92, 139], "381": [92, 187], "berman": [93, 139], "berman2008": 93, "determinist": [93, 95, 97, 100, 106, 118, 126, 136, 139, 143, 145, 175, 183, 187, 195, 197], "small_spher": [93, 97, 98], "bootdirectiongett": [93, 146], "closestpeakdirectiongett": [93, 146], "boot_dg_csd": 93, "from_data": [93, 136, 146], "boot_streamline_gener": 93, "tractogram_bootstrap_dg": 93, "NOT": [93, 133, 134, 139, 140, 141, 145, 180, 189], "peak_dg": 93, "from_pmf": [93, 97, 98, 136, 145, 146], "peak_streamline_gener": 93, "closest_peak_dg_csd": 93, "tractogram_closest_peak_dg": 93, "unlik": [94, 97, 122, 139, 145], "deterministicmaximumdirectiongett": [94, 100, 146], "detmax_dg": 94, "tractogram_deterministic_dg": 94, "csa_direction_field": 95, "gfa_tracking_mask": 95, "tractogram_eudx": 95, "pft": [96, 118, 126, 183, 184], "girard2014": [96, 100, 122], "incorrectli": [96, 122, 133, 139], "continu": [96, 100, 112, 122, 126, 131, 139, 143, 145, 180, 186], "invalidpoint": [96, 100, 143, 146], "f_pve_csf": [96, 100], "f_pve_gm": [96, 100], "f_pve_wm": [96, 100], "stanford_pve_map": [96, 100, 122], "pve_csf_data": [96, 100], "pve_gm_data": [96, 100], "pve_wm_data": [96, 100], "dg": [96, 100, 143, 183], "smith2012": [96, 100], "conjunct": [96, 139], "cmc_criterion": 96, "from_pv": [96, 143, 146], "average_voxel_s": [96, 143, 145], "pft_streamline_gener": 96, "max_cross": [96, 143, 145], "maxlen": [96, 143, 145], "pft_back_tracking_dist": [96, 143, 145], "pft_front_tracking_dist": [96, 143, 145], "particle_count": [96, 143, 145], "return_al": [96, 100, 143, 145], "tractogram_pft": 96, "prob_streamline_gener": 96, "tractogram_probabilistic_cmc": 96, "whittingstal": [96, 100, 122, 134, 143, 145, 176], "98": [96, 100, 102, 122, 126, 143, 145, 176, 185], "266": [96, 100, 122, 143, 145, 176, 186], "278": [96, 100, 122, 143, 145, 176, 187], "1924": [96, 100, 143, 189], "1938": [96, 100, 143, 191], "tractogram_probabilistic_dg_pmf": 97, "disadvantag": 97, "tractogram_probabilistic_dg_sh": 97, "Not": [97, 133, 139, 178], "fod_coeff": 97, "tractogram_probabilistic_dg_sh_pfm": 97, "transform_streamlin": [98, 99, 101, 102, 146, 196], "t1_aff": [98, 99], "f_wm_tracking_mask": 98, "adher": 98, "tractogram_probabilistic_rumba": 98, "canon": [99, 133, 139, 143], "pnm": 99, "throughout": [99, 133, 143], "subset": [99, 131, 135, 140, 145], "plot_streamlin": 99, "tractogram_sfm": 99, "tractogram_sfm_detr": 99, "outsideimag": [100, 143, 146, 180], "trackpoint": [100, 143, 146, 189], "metric_map": [100, 143, 145], "tensor_model": 100, "threshold_criterion": 100, "mask_fa": 100, "threshold_fa": 100, "tractogram_probabilistic_thresh_al": 100, "tractogram_deterministic_thresh_al": 100, "binary_criterion": 100, "white_matter_mask": 100, "tractogram_deterministic_binary_al": 100, "include_map": [100, 143, 145], "exclude_map": [100, 143, 145], "stem": [100, 143], "plausibl": [100, 139], "act_criterion": 100, "121": [100, 131, 140, 185], "act_map": 100, "tractogram_deterministic_act_al": 100, "tractogram_deterministic_act_valid": 100, "cut": [100, 143, 144], "subcort": [100, 143], "backtrack": [100, 143], "thin": [101, 142, 143], "screenshot": [101, 104], "dialog": 101, "snapshot": [101, 113], "primit": 101, "slider": [101, 180, 182, 183, 195], "event": [101, 133, 140, 144, 145, 180, 183], "lineslider2d": 101, "fetch_bundles_2_subject": [101, 102, 104, 146], "read_bundles_2_subject": [101, 102, 146, 180], "subj_1": [101, 102, 104, 134], "cc_1": [101, 134], "1mm": [101, 140, 143, 145], "world_coord": [101, 144, 145], "image_actor_z": 101, "slicer_opac": 101, "display_ext": 101, "image_actor_x": 101, "x_midpoint": 101, "round": [101, 131, 133, 138, 139, 143, 179, 182, 187, 188], "image_actor_i": 101, "y_midpoint": 101, "image_actor": 101, "showmanag": [101, 104, 144, 145], "show_m": [101, 104], "line_slider_z": 101, "min_valu": 101, "max_valu": [101, 139], "initial_valu": 101, "text_templ": 101, "0f": [101, 139], "line_slider_x": 101, "line_slider_i": 101, "opacity_slid": 101, "change_slice_z": 101, "change_slice_x": 101, "change_slice_i": 101, "change_opac": 101, "on_chang": 101, "build_label": [101, 146], "textblock2d": [101, 104, 144, 182], "font_siz": [101, 144], "font_famili": 101, "arial": 101, "justif": 101, "ital": 101, "shadow": 101, "background_color": 101, "line_slider_label_z": 101, "line_slider_label_x": 101, "line_slider_label_i": 101, "opacity_slider_label": 101, "panel2d": [101, 104, 182], "1030": [101, 180], "add_el": [101, 104], "screen": [101, 108, 134, 139], "re_align": 101, "getsiz": 101, "win_callback": 101, "size_old": 101, "size_chang": 101, "reset_clipping_rang": 101, "add_window_callback": 101, "bundles_and_3_slic": 101, "del": 101, "garyfallidis2021": 101, "soham": 101, "biswa": 101, "david": [101, 139, 178, 180, 181, 182, 183, 194, 195, 196], "reagan": [101, 144, 145, 165, 180, 181, 182, 183], "nasim": [101, 194, 195], "anousheh": [101, 194, 195], "filipi": 101, "silva": 101, "geoffrei": 101, "fox": 101, "3384": 101, "21105": 101, "joss": [101, 189], "03384": 101, "dix": [102, 134, 137], "subj_id": [102, 134], "bundle_n": 102, "176": [102, 112, 186], "118": [102, 185], "knew": 102, "camera": [102, 140], "camera_info": 102, "focal": 102, "stream_actor2": 102, "stream_actor3": 102, "bar2": 102, "bundle3": 102, "stream_actor4": 102, "bundle4": 102, "stream_actor5": 102, "bundle5": 102, "stream_actor6": 102, "bundle6": 102, "decim": [103, 143, 181], "contour_from_roi_tutori": 103, "fname_t1": 104, "exp_bundles_and_map": 104, "t1_warp": 104, "value_rang": [104, 192], "slice_actor": 104, "slice_actor2": 104, "hsv": 104, "fname_fa": 104, "fa_1x1x1": 104, "lut": 104, "fa_actor": 104, "slices_lut": 104, "label_posit": 104, "label_valu": 104, "result_posit": 104, "result_valu": 104, "panel_pick": 104, "250": [104, 120, 131, 139, 145], "left_click_callback": 104, "ev": [104, 135], "event_po": 104, "iren": [104, 139, 144], "geteventposit": 104, "picker": [104, 183], "getpointijk": 104, "8f": 104, "setinterpol": 104, "addobserv": 104, "leftbuttonpressev": 104, "perspect": [104, 131, 133], "show_m_mosa": 104, "left_click_callback_mosa": 104, "col": 104, "slice_mosa": 104, "drag": 104, "scroll": [104, 183], "callabl": [105, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 187, 191], "t1_denois": 105, "my_workflow": 105, "shutil": 105, "Will": [105, 134, 137, 138, 139, 144, 145], "appendtextflow": 105, "text_to_append": 105, "myfil": 105, "glob": [105, 146], "newli": 105, "workflow_cr": 105, "text_fil": 105, "supervis": [106, 126, 135, 145, 156, 193], "empir": [106, 143], "nnl": [106, 128, 133, 139], "ye": [106, 107, 128, 139], "sdt": [106, 128, 139, 178, 179, 186, 189], "opdt": [106, 128], "tristan": [106, 128, 139], "vega": [106, 128, 139], "shore": [106, 128, 146, 183, 186, 187, 190, 195, 197], "sm": [106, 128], "forecast": [106, 126, 128, 146, 182, 183], "qti": [106, 110, 126, 128, 144, 146, 196], "behren": [106, 128, 139, 141], "smt2": [106, 126, 128, 139, 192], "contamin": [106, 139], "fold": [106, 139], "confid": [106, 133, 143], "afq": [106, 189, 194], "fuzzi": [106, 183], "groupwis": [106, 110, 131, 196], "paradigm": [107, 199], "bloch": 107, "torrei": 107, "pgse": [107, 199, 200, 201], "readout": 107, "gamma": [107, 108, 131, 135, 139, 199], "gyromagnet": [107, 199], "width": [107, 131, 139, 144, 199], "wave": [107, 131, 134, 138, 139, 140, 141, 143, 201], "proport": [107, 131, 139, 143, 145], "stand": [107, 131], "gather": [107, 145, 147], "mobil": 107, "molecul": 107, "movement": 107, "counterintuit": 107, "dephas": 107, "dwmri": 107, "speak": 107, "plenti": 107, "qbi": [107, 197, 203], "nonisotrop": [107, 187], "textrm": [107, 139, 145], "batteri": 107, "painless": 107, "noth": [107, 131, 145, 189], "ever": 107, "consol": [107, 111], "dicom": [107, 189], "npz": [107, 134, 139, 183], "pydicom": 107, "v4": 107, "v6": 107, "v7": 107, "loadmat": 107, "pytabl": [107, 126, 180, 181], "hdf5": [107, 126, 137, 138, 142, 145, 180, 190], "serial": [107, 139], "load_pickl": [107, 146], "huge": [107, 145, 170, 197], "pycharm": 107, "sublim": 107, "aptana": 107, "emac": 107, "eclips": 107, "pydev": 107, "chri": [107, 113, 183], "rorden": 107, "dcm2nii": 107, "cabiatl": 107, "mricro": 107, "mricron": 107, "reader": [107, 146], "openli": 107, "grade": 107, "fcon_1000": 107, "nitrc": 107, "humanconnectom": [107, 134], "openneuro": 107, "gimbal_lock": [108, 191], "euler": [108, 109, 131, 133, 191], "defici": [108, 139], "indistinguish": 108, "spitfir": 108, "aircraft": 108, "tail": 108, "wing": 108, "roll": [108, 133], "tilt": 108, "violent": 108, "straight": [108, 137, 143], "wait": 108, "pm": [108, 139, 199, 200], "radian": [108, 133, 143, 199], "smallmatrix": 108, "pm1": 108, "proof": 108, "mathworld": [108, 109, 133, 139, 141, 204], "rewrit": 108, "v_": [108, 133, 139], "v_1": [108, 140], "v_2": [108, 140], "conclus": 108, "gregslabaugh": 108, "homogen": [109, 131, 133, 137, 139, 140, 143], "theorem": 109, "boldsymbol": 109, "x_1": 109, "x_n": 109, "pure": [109, 133, 135], "pythagora": 109, "gimbal": 109, "lock": [109, 139], "quaternion": 109, "suffer": [109, 139], "rapid": 109, "orthogon": [109, 139, 143, 145, 203, 204], "transpos": [109, 133, 139, 141, 144], "synonym": [109, 131, 135, 139, 140, 142, 143], "paragon": 110, "special": [110, 129, 131, 133, 135, 138, 139, 140, 143, 145], "dtiflow": [110, 126], "lpcaflow": [110, 146], "rumbaflow": 110, "vtp": [110, 137, 140, 143, 144, 145, 195, 196], "older": [110, 139, 180, 182, 183, 185, 187], "2023": [110, 190, 196], "dec": [110, 112, 137, 144, 183], "colorfa": [110, 185], "exercis": 110, "filepath": 110, "acknowledg": [110, 189], "intellig": [110, 139], "bioengin": 110, "nih": [110, 137, 184], "gordon": 110, "betti": 110, "moor": [110, 139, 142, 143], "alfr": 110, "sloan": [110, 139], "escienc": 110, "summer": [110, 126, 127, 190], "facil": 110, "gotten": 111, "greatest": 111, "bleed": 111, "platform": [111, 117, 133, 187], "conda": [111, 178, 180, 181, 183, 188], "forg": 111, "success": [111, 129, 131, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145], "xcode": 111, "mint": 111, "neurodebian": 111, "mac": [111, 112, 179, 183, 192, 196, 197], "big": [111, 120, 133, 134, 139, 141, 145, 163, 181, 187, 189], "uninstal": 111, "__file__": 111, "canopi": 111, "pythonxi": 111, "64bit": [111, 126], "alloc": [111, 131, 137, 139, 140, 143, 145, 146], "chunk": [111, 139, 145], "32bit": [111, 188], "okai": 111, "among": [111, 143], "old": [111, 126, 131, 135, 136, 139, 140, 142, 145, 183, 185, 187, 191, 192], "pythonpath": 111, "bashrc": 111, "bash_profil": 111, "retyp": 111, "export": [111, 144], "user_dir": 111, "restart": [111, 139], "cmd": [111, 183], "powershel": 111, "python_compil": 111, "msc": 111, "1900": [111, 190], "amd64": 111, "visualstudiobuildtool": 111, "msc_ver": 111, "1700": [111, 184], "1910": [111, 189], "unabl": [111, 139, 180, 187, 192], "vcvarsal": 111, "bat": 111, "reinstal": 111, "multithread": [111, 126], "clang": 111, "brew": 111, "multilib": 111, "bash": 111, "usr": 111, "cellar": 111, "omp": [111, 180], "hombrew": 111, "hour": [111, 134], "encount": [111, 139], "build_modref_templ": 111, "docgen_cmd": 111, "reference_cmd": 111, "examples_built": 111, "make_exampl": 111, "traceback": [111, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145], "modulenotfounderror": [111, 190], "virtual": [111, 140], "sphinxbuild": 111, "path_to_sphinx": 111, "mkdir": [112, 113, 114, 115, 116, 117, 119, 120, 121, 122], "data_fold": [112, 115], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [112, 116, 120], "mv": 112, "uint16": [112, 178], "888": [112, 180], "avg": [112, 140, 143], "940581408413976": 112, "percentil": 112, "98th": 112, "psr": 112, "569": [112, 188], "451": [112, 187], "131": [112, 185], "289": [112, 126, 186, 189], "1257": [112, 180], "62918037280702": 112, "234": [112, 186], "498": [112, 187], "084": 112, "641": [112, 183], "069": 112, "488": [112, 187], "104": [112, 185], "082": 112, "486": [112, 187], "504": [112, 133, 187], "elef": 112, "b0_thr": 112, "out_work": 112, "ga": [112, 139, 145, 146, 160, 161], "fastest": 112, "out_mask": [112, 145, 168, 169], "pam5": [112, 113, 122, 126, 137, 145, 190], "out_tractogram": [112, 145, 175, 176], "tracks_from_peak": 112, "tracking_method": [112, 122, 145, 175], "random_color": [112, 114, 144, 145, 165, 195], "length_gt": [112, 144, 145, 165], "length_lt": [112, 144, 145, 165], "clusters_gt": [112, 144, 145, 165], "clusters_lt": [112, 144, 145, 165], "native_coord": [112, 145, 165], "stealth": [112, 144, 145, 165], "emergency_head": [112, 145, 165], "bg_color": [112, 144, 145, 165], "disable_order_transpar": [112, 145, 165], "out_stealth_png": [112, 145, 165], "out_strat": 112, "mix_nam": [112, 114, 145], "log_level": [112, 137, 138], "log_fil": 112, "stretch": 112, "nonetheless": 112, "chandio20": 113, "parkinson": 113, "ppmi": 113, "marek11": 113, "yeh18": [113, 114], "atlas_of_30_human_brain_bundles_in_mni_spac": [113, 114], "12089652": [113, 114], "35092": 113, "yhjc": 113, "12098397": 113, "h5": [113, 137, 142], "subjects_smal": 113, "af_r": 113, "ccmid": 113, "cc_forcepsmajor": [113, 134], "cc_forcepsminor": 113, "cst_r": [113, 134], "emc_l": 113, "emc_r": 113, "fpt_l": 113, "fpt_r": 113, "ifof_l": 113, "ifof_r": 113, "ilf_l": 113, "ilf_r": 113, "mlf_l": 113, "mlf_r": 113, "ml_l": 113, "ml_r": 113, "mdlf_l": 113, "mdlf_r": 113, "opt_l": 113, "opt_r": 113, "or_l": 113, "or_r": 113, "stt_l": 113, "stt_r": 113, "uf_l": 113, "uf_r": 113, "3805": 113, "anatomical_measur": [113, 146], "org_bundl": 113, "rec_bundl": 113, "3806": 113, "3809": 113, "3850": 113, "3851": 113, "3383": 113, "3387": 113, "3392": 113, "3552": 113, "streamlines_moved_af_l__labels__recognized_orig": 113, "streamlines_moved_af_r__labels__recognized_orig": 113, "streamlines_moved_ccmid__labels__recognized_orig": 113, "streamlines_moved_uf_l__labels__recognized_orig": 113, "streamlines_moved_uf_r__labels__recognized_orig": 113, "streamlines_moved_v__labels__recognized_orig": 113, "moved_af_l__recogn": 113, "moved_af_r__recogn": 113, "moved_ccmid__recogn": 113, "moved_uf_l__recogn": 113, "moved_uf_r__recogn": 113, "moved_v__recogn": 113, "overridden": [113, 139, 140], "eg": [113, 139, 140, 142, 145, 186], "bundle_profil": 113, "lmm": [113, 145], "lmm_plot": 113, "buan_thr": [113, 145, 165], "buan_highlight": [113, 145, 165], "af_l_fa_pvalu": 113, "pvalu": [113, 145, 165], "cst_l_fa_pvalu": 113, "sm_plot": 113, "dipy_buan_shap": [113, 191], "uncin": 113, "12033390": 113, "donwload": 113, "blob": 113, "marek": 113, "kenneth": 113, "jen": [113, 145, 160], "danna": 113, "lasch": 113, "shirlei": 113, "siderowf": 113, "carolin": 113, "simuni": 113, "tanya": 113, "coffei": 113, "kieburtz": 113, "karl": 113, "flagg": 113, "emili": 113, "chowdhuri": 113, "sohini": 113, "neurobiologi": 113, "panesar": [113, 114], "fernand": [113, 114], "meola": [113, 114], "yoshino": [113, 114], "fernandez": [113, 114], "miranda": [113, 114], "vettel": [113, 114], "verstynen": [113, 114], "hcp_tractogram_zip": 114, "7013003": 114, "whole_brain_mni": 114, "rb_output": 114, "pink": 114, "org_output": 114, "visit": [114, 129, 140, 144], "destin": 115, "specific_dataset": 115, "specific_data_out_fold": 115, "eigenspectrum": 116, "lpca": [116, 126, 145, 153, 189, 190, 195], "ow": 116, "denoise_lpca_output": 116, "suffic": [116, 117, 119], "dwi_lpca": [116, 145], "subtl": 116, "hardli": 116, "visibl": [116, 182, 185, 189, 193], "denoise_mppca_output": 116, "textur": 116, "denoise_nlmeans_output": 116, "lcpa": 116, "veraart15": 117, "perrone15": 117, "gibbs_ringing_output": 117, "t1_brain_denois": 117, "intravoxel": [118, 139, 145, 162], "motion_output": 119, "recons_csd_output": 120, "stanford_hardi_mask": 120, "recons_mapmri_output": 120, "recons_dti_output": 120, "save_metr": [120, 145, 147, 160, 161, 162, 163], "out_tensor": [120, 145, 161], "dti_tensor": [120, 145], "recons_dki_output": 120, "cfin_multib_mask": 120, "recons_csa_output": 120, "pam": [120, 136, 137, 139, 144, 145, 158, 159, 175, 176, 183], "extract_pam_valu": [120, 145, 158, 159], "recons_ivim_output": 120, "ivim_mask": 120, "sort": [121, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 165, 187], "image_reg_output": 121, "path_to_static_fil": 121, "path_to_moving_fil": 121, "affine_reg_output": 121, "out_affin": [121, 145, 147, 152, 172], "syn_reg_output": 121, "out_warp": [121, 145, 148], "em": [121, 131, 140, 145, 148], "syn_reg_warp": 121, "transform_typ": [121, 145, 149], "transform_reg_output": 121, "path_to_transform_map_fil": 121, "nb_pt": [121, 131, 140, 144, 145, 172], "sl_reg_output": 121, "stop_fil": 122, "seed_dens": [122, 145, 175, 176], "recon": [122, 180, 189], "pve_wm": 122, "eudx_tracking_output": 122, "det_tracking_output": 122, "det": [122, 133, 139, 145, 175, 181, 182], "prob_tracking_output": 122, "prob": [122, 145, 175, 189], "closest_peaks_output": 122, "prematur": 122, "pft_output": 122, "pve_gm": 122, "pve_csf": 122, "expertis": 123, "didn": 123, "depict": 123, "replic": [125, 131, 133, 135, 139, 140, 141, 142], "tripl": [125, 139, 184], "quot": [125, 139, 184, 187], "alter": [125, 139, 143], "pymvpa": 125, "resdnn": [126, 134, 138, 195], "dkiflow": 126, "imageregistrationflow": [126, 146], "motioncorrectionflow": [126, 146], "parallelis": 126, "horizon": [126, 146, 165, 184, 189, 190, 191, 192, 195], "govern": [126, 139, 194], "cli": [126, 189, 191, 192, 193, 194, 195, 196], "10x": 126, "multiplatform": [126, 197], "134": [126, 143, 185, 192], "vtk9": [126, 191], "typographi": 126, "94": [126, 135, 141, 178, 185, 191], "tensorflow": [126, 138, 190], "smarter": 126, "critic": [126, 137, 138], "mtm": [126, 189], "quickbundlesx": [126, 131, 144, 145, 146, 165, 172, 182], "tractometri": [126, 184], "almost": [126, 133, 139, 143, 185], "287": [126, 133, 178, 183], "cvxopt": [126, 181, 187, 189], "piesno": [126, 145, 146, 178, 179, 180, 182, 187], "reorient": [126, 133, 142, 143, 178, 179, 183], "cleaner": 126, "exhibitor": [126, 127], "ohbm": [126, 127], "massiv": 126, "geodes": [126, 139, 145, 160, 161, 188], "galleri": [126, 127, 180, 186, 189, 197], "robustli": 126, "novemb": [127, 133], "septemb": 127, "august": 127, "decemb": [127, 133], "octob": 127, "june": [127, 133], "magazin": 127, "nov": [127, 135, 136, 138, 139, 203], "22nd": 127, "3x": 127, "teach": 127, "fundament": 127, "seminar": 127, "neuroscientist": 127, "qbin": 127, "dont": 127, "april": [127, 139], "creator": 127, "attend": 127, "hbm": [127, 178, 187], "0dev": 127, "win": 127, "took": 127, "mia": 127, "school": 127, "mcgill": [127, 134], "3rd": [127, 139, 140, 143], "sprint": 127, "gui": [129, 139], "unittest": [129, 187], "__version__": 129, "extra_argv": [129, 133, 135, 138, 139, 143], "benchmark": [129, 135, 138, 146, 180, 185], "nosetest": [129, 133, 135, 138, 139, 143, 183], "attribute_identifi": [129, 133, 135, 138, 139, 143], "expos": [129, 133, 135, 138, 139, 142, 143], "562341": [129, 135, 138, 139, 143], "unique1d": [129, 135, 138, 139, 143], "nuniqu": [129, 135, 138, 139, 143], "56230": [129, 135, 138, 139, 143], "ok": [129, 133, 135, 138, 139, 143, 145], "legaci": [129, 134, 135, 136, 138, 139, 181, 182, 189, 195, 203], "710e0327687b9f7653e5ac02d222ba62c657a718": 129, "734b907fc2f7af6e40ec989ca49ee6d87e21c495": 129, "556": [129, 188], "coverag": [129, 133, 135, 138, 139, 143, 180, 187, 189, 194, 195], "raise_warn": [129, 133, 135, 138, 139, 143], "timer": [129, 135, 138, 139, 143, 146, 183], "slowest": [129, 133, 135, 138, 139, 143], "texttestresult": [129, 133, 135, 138, 139, 143], "976": [129, 133, 135, 138, 139, 143, 180], "933": [129, 133, 135, 138, 139, 143, 179, 180], "knownfail": [129, 133, 135, 138, 139, 143], "encapsul": 131, "codomain": [131, 145], "parzen": 131, "parzen62": 131, "cubic": [131, 139, 143, 145, 148], "annal": 131, "1065": [131, 180], "1076": [131, 180], "1962": [131, 190], "kwd": [131, 139], "enum": [131, 134, 137, 140, 143, 144, 145], "ret_metr": [131, 145], "metric_kwarg": [131, 145], "ride": [131, 137, 139, 145], "gradual": [131, 145], "boolean": [131, 133, 134, 135, 139, 140, 141, 143, 144, 145], "sampling_proport": [131, 145], "interv": [131, 135, 139, 143, 145], "xopt": [131, 133, 137, 139, 140, 145, 146], "fopt": [131, 133, 137, 139, 145, 146], "disp": [131, 133, 139], "domain_img": 131, "codomain_img": 131, "prealign": [131, 145], "b0_ref": 131, "xform_img": 131, "affine_arrai": 131, "dwi_affin": 131, "template_affin": 131, "reg_kwarg": 131, "warped_b0": 131, "fist": 131, "ref_affin": 131, "between_affin": 131, "n_point": [131, 135, 139, 142, 143, 145, 164, 191], "native_resampl": 131, "ndarrai": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 192], "domain_grid_shap": [131, 145], "domain_grid2world": [131, 145], "codomain_grid_shap": [131, 145], "codomain_grid2world": [131, 145], "domain_grid": [131, 145], "codomain_grid": [131, 145], "stream": [131, 139, 143, 145], "get_affin": [131, 145, 146, 180], "set_affin": [131, 145, 146], "affine_inv": [131, 145], "unchang": [131, 134, 143, 145], "image_grid2world": [131, 145], "sampling_grid_shap": [131, 145], "sampling_grid2world": [131, 145], "resample_onli": [131, 145], "domain_shap": [131, 145], "codomain_shap": [131, 145], "bfg": [131, 133, 139, 140, 145, 187], "newton": [131, 133, 139, 145, 195], "dogleg": [131, 133, 139], "trust": [131, 133, 134, 139, 145], "ncg": [131, 133, 139], "n_scale": [131, 145, 148], "never": [131, 134, 139, 143], "docstring_addendum": [131, 146], "accomplish": [131, 139, 145], "get_dim": [131, 146], "get_number_of_paramet": [131, 146], "compute_backward": [131, 145, 146], "compute_forward": [131, 145, 146], "free_iter": [131, 145, 146], "get_energi": [131, 145, 146], "initialize_iter": [131, 145, 146], "disp_shap": [131, 145], "disp_grid2world": [131, 145], "transform_point": [131, 145, 146], "transform_points_invers": [131, 145, 146], "compute_inversion_error": [131, 145, 146], "perfect": [131, 145], "comp": [131, 139, 145], "dinv": [131, 145], "expand_field": [131, 145, 146], "expand_factor": [131, 145], "new_shap": [131, 145], "get_backward_field": [131, 145, 146], "is_invers": [131, 145], "get_simplified_transform": [131, 145, 146], "diffeomorh": [131, 145], "interpret_matrix": [131, 145, 146], "shallow_copi": [131, 145, 146], "shallow": [131, 139, 143, 145], "new_map": [131, 145], "image_world2grid": [131, 145], "out_shap": [131, 145], "out_grid2world": [131, 145], "_warp_forward": [131, 145], "_warp_backward": [131, 145], "coord2world": [131, 145], "world2coord": [131, 145], "warp_endomorph": [131, 145, 146], "endomorph": [131, 145], "inherit": [131, 135, 139, 140, 145, 156], "costli": [131, 145], "computation": [131, 139, 145], "simpler": [131, 145, 185], "inner_it": [131, 145], "q_level": [131, 145], "double_gradi": [131, 145], "step_typ": [131, 145], "gauss_newton": [131, 145, 148], "transfer": [131, 145, 184], "gauss": [131, 139, 145, 148], "seidel": [131, 145, 148], "quantiz": [131, 145, 148], "demon": [131, 145, 148, 182, 183], "schedul": [131, 142, 143, 145, 148, 180], "compute_demons_step": [131, 145, 146], "forward_step": [131, 145], "compute_gauss_newton_step": [131, 145, 146], "bruhn": [131, 145], "weickert": [131, 145], "bruhn05": [131, 145], "andr": [131, 145], "joachim": [131, 145], "ultim": [131, 145], "iccv": [131, 145], "use_double_gradi": [131, 145], "use_moving_image_dynam": [131, 145, 146], "original_moving_imag": [131, 145], "dynam": [131, 136, 139, 140, 142, 145], "set_moving_imag": [131, 145, 146], "use_static_image_dynam": [131, 145, 146], "original_static_imag": [131, 145], "originalstaticimag": [131, 145], "set_static_imag": [131, 145, 146], "drive": 131, "neg_mi": 131, "distance_and_gradi": [131, 146], "neg_mi_grad": 131, "grad": [131, 139, 143], "isosc": [131, 192, 195], "vercauteren": [131, 145], "vercauteren09": [131, 145], "tom": [131, 145, 180, 196], "xavier": [131, 145], "pennec": [131, 139, 145], "aymer": [131, 145], "perchant": [131, 145], "nichola": [131, 145], "ayach": [131, 139, 145], "l_bfgs_b": [131, 140, 145], "powel": [131, 133, 139, 140, 145], "mat": [131, 133, 137, 139, 140, 143, 145, 186], "inv_tol": [131, 145, 148], "get_map": [131, 145, 146, 192], "static_to_ref": [131, 145], "current_displac": [131, 145], "new_displac": [131, 145], "disp_world2grid": [131, 145], "time_sc": [131, 145], "intend": [131, 138, 144, 145, 163, 196], "d2": [131, 137, 139, 145], "d1": [131, 139, 145], "mean_norm": [131, 145], "func": [131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146], "arg": [131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 184], "kwarg": [131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 178, 192, 196], "return_coord": [131, 134, 137, 145], "as_ndarrai": [131, 134, 137, 139, 145], "aff2axcod": [131, 134, 137, 145], "arrayproxi": [131, 134, 137, 139, 145], "to_spac": [131, 134, 137, 140, 143, 144, 145, 146], "to_origin": [131, 134, 137, 140, 143, 144, 145, 146], "trk_header_check": [131, 134, 137, 140, 143, 145], "verif": [131, 134, 137, 140, 143, 144, 145], "helper": [131, 137, 138, 139, 143], "hdr": [131, 134, 137, 145], "ni": [131, 133, 140, 142, 143, 144, 178, 184], "common_shap": [131, 140, 142, 143, 144], "new_streamlin": [131, 137, 140, 142, 143, 145], "modified_streamlin": [131, 140, 142, 143], "tracking_output": [131, 143], "save_se": [131, 143, 145, 175, 176, 192], "arraysequ": [131, 134, 137, 140, 142, 143, 144, 145, 180, 181], "voxel_to_rasmm": [131, 142, 143], "stacklevel": [131, 133, 135, 139, 140, 143, 144, 145], "opm_get_num_proc": [131, 135, 143], "streamlines_a": 131, "streamlines_b": 131, "grad_mov": 131, "rb7e0e20c1a76": 131, "avants2008": 131, "precomput": [131, 139], "avants08": 131, "grad_stat": 131, "r1684b0862e45": 131, "r418c58b05724": 131, "rc27aa752565c": 131, "pointwis": [131, 140, 142, 143], "sq": 131, "reda22c03a495": 131, "ocegueda2016": 131, "delta_field": 131, "sigma_sq_field": 131, "gradient_mov": 131, "sigma_sq_x": 131, "arce14": 131, "sigma_i": 131, "sigma_x": 131, "demons_step": 131, "santana": 131, "campo": 131, "delgado": 131, "viguera": 131, "multimod": 131, "168140": 131, "suppl": 131, "s61": 131, "040": 131, "num_label": 131, "infinit": [131, 133, 139, 141, 142, 143, 145, 189], "num_level": 131, "undefin": [131, 143], "secial": 131, "input_spac": 131, "mask0": 131, "jac": [131, 133, 139], "hess": [131, 133, 139], "hessp": [131, 133, 139], "nfev": [131, 133, 139, 146], "nit": [131, 133, 139, 146, 187], "print_summari": [131, 133, 139, 146], "jacobian": [131, 133, 139, 146], "hessian": [131, 133, 139], "nelder": [131, 133, 139], "mead": [131, 133, 139], "anneal": [131, 133, 139], "tnc": [131, 133, 139], "cobyla": [131, 133, 139], "slsqp": [131, 133, 139], "ineq": [131, 133, 139], "wherea": [131, 133, 134, 139, 143, 145], "xk": [131, 133, 139, 142, 143], "maxit": [131, 133, 139, 145], "show_opt": [131, 133, 139], "_joint_pdf_gradient_dense_2d": 131, "_joint_pdf_gradient_dense_3d": 131, "bin_index": [131, 146], "xnorm": 131, "bin_normalize_mov": [131, 146], "mmin": 131, "mmax": 131, "bin_normalize_stat": [131, 146], "smin": 131, "smax": 131, "smask": 131, "mmask": 131, "ones_lik": 131, "update_gradient_dens": [131, 146], "grid2world": 131, "mgradient": 131, "joint_grad": 131, "update_gradient_spars": [131, 146], "sval": 131, "mval": 131, "sample_point": 131, "sampled_point": 131, "update_pdfs_dens": [131, 146], "smargin": 131, "mmargin": 131, "update_pdfs_spars": [131, 146], "sigma_factor": 131, "weaker": 131, "from_level": 131, "get_affine_inv": [131, 146], "get_domain_shap": [131, 146], "get_expand_factor": [131, 146], "to_level": 131, "get_imag": [131, 146], "get_scal": [131, 146], "get_sigma": [131, 146], "get_spac": [131, 146], "print_level": [131, 146], "joint_gradi": 131, "mi_gradi": 131, "buffer": [131, 139, 143, 180], "old_nam": [131, 135, 136, 139, 140, 145], "new_nam": [131, 135, 136, 139, 140, 145], "version_compar": [131, 133, 135, 136, 137, 139, 140, 143, 145], "cmp_pkg_version": [131, 133, 135, 136, 137, 139, 140, 143, 145], "arg_in_kwarg": [131, 135, 136, 139, 140, 145], "warn_class": [131, 133, 135, 136, 137, 139, 140, 143, 145], "argsdeprecationwarn": [131, 135, 136, 139, 140, 145], "error_class": [131, 133, 135, 136, 137, 139, 140, 143, 145], "expireddeprecationerror": [131, 133, 135, 136, 137, 139, 140, 143, 145], "decor": [131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 178, 180, 182, 183, 185, 190, 196], "signatur": [131, 133, 135, 136, 139, 140, 145, 188], "thereof": [131, 135, 136, 139, 140, 145], "becam": [131, 135, 136, 139, 140, 145], "typeerror": [131, 135, 136, 139, 140, 145, 178, 186, 187], "astropi": [131, 135, 136, 139, 140, 145], "sig": [131, 135, 136, 139, 140, 145], "bilinear": [131, 133], "wrapper": [131, 133, 138, 139, 143, 185], "_interpolate_scalar_2d": [131, 133], "map_coordin": [131, 133, 143, 146], "_interpolate_scalar_3d": [131, 133, 143], "floor": [131, 135, 139, 146], "total_voxel": 131, "lexicograph": 131, "perturb": 131, "increasingli": 131, "rate": [131, 139, 140], "total_pixel": 131, "isampl": 131, "abstract": [131, 133, 135, 137, 138, 139, 140, 143, 145], "upon": [131, 139, 143, 145, 185, 186], "set_level_it": [131, 146], "charg": [131, 133, 135], "registrationoptim": 131, "unpract": 131, "set_levels_abov": [131, 146], "set_levels_below": [131, 146], "moving_spac": 131, "moving_direct": 131, "static_spac": 131, "static_direct": 131, "diffeomorficmap": 131, "vararg": 131, "edge_ord": 131, "interior": [131, 133, 139, 143], "array_lik": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "unitari": [131, 133], "dx": [131, 139, 141], "dy": [131, 141], "dz": [131, 141], "h_": [131, 139], "stepsiz": [131, 143, 145], "eta_": [131, 140], "f_": [131, 139], "taylor": [131, 133, 141], "worth": 131, "2h": 131, "quarteroni": 131, "sacco": 131, "saleri": 131, "durran": 131, "geophys": 131, "fornberg": 131, "184": [131, 143, 190], "699": [131, 178], "706": [131, 133], "gradient_field": 131, "lambda_param": 131, "coarser": 131, "sigmafield": 131, "initarg": [131, 135, 136], "maxtasksperchild": [131, 135, 136], "output_shap": 131, "cval": [131, 135, 139, 140, 142, 145, 171], "prefilt": [131, 139, 142], "spline_filt": [131, 139, 142], "blur": [131, 139, 142], "imaginari": [131, 139, 140, 141, 142, 203], "homogeneous_coordin": 131, "cpu_count": [131, 135, 136, 139, 145, 158, 159], "f_name": [131, 145], "truncat": [131, 133, 139, 203], "insuffici": 131, "grayscal": [131, 140], "ascent": [131, 140], "aka": [131, 140], "hungri": [131, 179], "matopt_histori": 131, "optimum": [131, 133, 139], "matrix1": 131, "matrix2": 131, "matopt": 131, "matrix_histori": 131, "block_siz": 131, "inv_shift": [131, 143], "gohlk": [131, 133], "lfd": [131, 133], "uci": [131, 133], "partit": [131, 133, 139, 143], "persp": [131, 133], "m0": [131, 133], "mat1": [131, 133], "mat2": [131, 133], "matn": [131, 133], "n_bundl": 131, "asign": 131, "max_it": [131, 140], "qbx_thr": [131, 145, 172], "select_random": [131, 145], "deafult": 131, "rd50d670f3909": 131, "expected_length": [131, 140, 143, 144], "allclos": [131, 133, 135, 136, 139, 140, 143, 144, 185], "default_bound": 131, "select_randomli": [131, 140, 144], "layer": [131, 138, 139, 140, 144, 191], "garyfallidis16": [131, 140, 144], "million": [131, 140, 143, 144], "singapor": [131, 140, 144], "4187": [131, 140, 144], "min_siz": [131, 140], "selected_streamlin": [131, 140, 143], "rm_small_clust": [131, 145, 172], "greater_than": [131, 140, 145, 170, 172], "less_than": [131, 139, 140, 145, 170, 172], "r778a6c20f622": 131, "epoch": [131, 133, 135, 137, 138, 139, 140, 145, 146], "clock": [131, 139, 140, 145], "in_plac": [131, 137, 142, 143, 145], "r9eb8c2315518": 131, "greedi": [131, 144], "descent": [131, 133], "useless": 131, "sigmasq_field": 131, "displacement_field": [131, 145], "max_displac": 131, "mx": 131, "2x2": 131, "is_singular": 131, "singular": [131, 133, 135, 139, 145, 153, 154, 200], "contract": [131, 133, 140, 145], "_jacobian": 131, "_get_identity_paramet": 131, "_param_to_matrix": 131, "get_identity_paramet": [131, 146], "param_to_matrix": [131, 146], "premult_index": 131, "premult_disp": 131, "sinv": 131, "cancel": 131, "standard_devi": 131, "iff": 131, "chen": [131, 178], "ruchala": 131, "olivera": 131, "1118": [131, 180], "2816107": 131, "nslice": 131, "from_shap": 131, "to_shap": 131, "from_grid2world": 131, "to_grid2world": 131, "int_field": 131, "ceil": [131, 146], "img_world2grid": 131, "img_spac": 131, "d_world2grid": 131, "linearli": [131, 142, 143], "cell": [131, 133, 142, 143, 178], "affine_idx_in": 131, "affine_idx_out": 131, "affine_disp": 131, "rinv": 131, "cinv": 131, "pinv": [131, 146], "tinv": 131, "ref_shap": 131, "necessarili": [131, 139], "bi": 131, "in2world": 131, "world2out": 131, "field_world2grid": 131, "dipycor": 133, "bench": [133, 140, 146], "svv": [133, 139, 140, 143], "ini": [133, 139, 140, 143], "algebra": 133, "descriptor": [133, 140], "reserv": [133, 140, 145], "redistribut": [133, 140, 145], "permit": [133, 139, 140, 145], "met": [133, 140, 141, 145], "retain": [133, 140, 145], "disclaim": [133, 140, 145], "materi": [133, 140, 145], "endors": [133, 140, 145], "BY": [133, 140, 145], "THE": [133, 140, 145], "holder": 133, "AND": [133, 137, 140, 144, 145], "AS": [133, 139, 140, 145], "OR": [133, 140, 145], "warranti": [133, 134, 140, 145], "BUT": [133, 140, 145], "TO": [133, 140, 145], "OF": [133, 140, 145], "merchant": [133, 140, 145], "FOR": [133, 140, 145], "NO": [133, 140, 145], "shall": [133, 140, 142, 143, 145], "owner": 133, "liabl": [133, 140, 145], "indirect": [133, 140, 145], "incident": [133, 140, 145], "exemplari": [133, 140, 145], "consequenti": [133, 140, 145], "damag": [133, 134, 140, 145], "procur": [133, 140, 145], "profit": [133, 140, 145], "busi": [133, 140, 145], "interrupt": [133, 140, 145], "liabil": [133, 140, 145], "strict": [133, 137, 140, 143, 144, 145], "neglig": [133, 140, 145], "aris": [133, 140, 145], "IF": [133, 140, 145], "SUCH": [133, 140, 145], "declar": [133, 138, 140, 143, 145, 184, 185, 189], "overhead": [133, 139], "untrigg": 133, "raymond": 133, "hetting": 133, "rcn": 133, "htm": 133, "datamodel": 133, "debug": [133, 137, 138, 180], "octahedron": [133, 185], "absolut": [133, 134, 139, 140, 142, 143, 145, 180, 184, 191, 203], "modulu": 133, "lon": 133, "lat": 133, "parameter": [133, 143, 196], "duration_in_second": [133, 146], "init_hemispher": 133, "num_iter": 133, "init_pointset": 133, "inclin": [133, 134, 135, 136, 137, 138, 139, 141, 204], "azimuth": [133, 134, 135, 136, 137, 138, 139, 141, 204], "pts1": 133, "pts2": 133, "broadcast": [133, 139, 140, 142, 143, 189, 196], "smallest": [133, 135, 136, 139, 143, 145], "collinear": [133, 143, 178], "furthest": [133, 142, 143], "aj": 133, "sxyz": 133, "yaw": 133, "syxz": 133, "34786452": 133, "383436184": 133, "_axes2tupl": 133, "_tuple2ax": 133, "vec": [133, 139, 140, 143, 145], "is_hemi": 133, "pole": [133, 139, 143], "rstudio": 133, "pub": 133, "s3": [133, 134], "amazonaw": 133, "27121_a22e51b47c544980bad594d5e0bb2d04": 133, "noqa": [133, 134], "lambert": 133, "y_1": 133, "y_2": 133, "mardia": 133, "jupp": 133, "161": [133, 186], "annulu": 133, "vice": [133, 191], "versa": [133, 191], "cartes": [133, 139, 141], "npd": 133, "niethamm": 133, "estepar": 133, "bouix": 133, "shenton": 133, "cf": [133, 139, 186], "eng": 133, "biol": 133, "2622": [133, 196], "pubm": 133, "pmid": 133, "17946125": 133, "pmcid": 133, "pmc2791793": 133, "nvec": 133, "l2n": 133, "circumfer": [133, 139], "otherw": [133, 139], "psampl": [133, 139], "frame": [133, 139, 143, 145], "third": [133, 135, 137, 138, 139, 143, 145, 164], "a_": [133, 139], "gsoc2015dipydki": [133, 139], "blogspot": [133, 139], "rnh": [133, 139], "instabl": 133, "tetha": 133, "teta2": 133, "theta2": 133, "ur": 133, "rad2deg": 133, "latitud": [133, 139, 141, 204], "longitud": [133, 139, 141, 204], "south": [133, 139, 141, 204], "north": [133, 139, 141, 204], "west": [133, 139, 141, 204], "east": [133, 139, 141, 204], "posterior": [133, 137, 139, 141], "anterior": [133, 137, 139, 141], "zenith": [133, 139, 141, 204], "counter": [133, 139, 141], "clockwis": [133, 139, 141], "geograph": [133, 139, 141], "nomenclatur": [133, 139, 141, 190], "spherical_coordinate_system": [133, 139, 141], "wolfram": [133, 139, 141], "sphericalcoordin": [133, 139, 141], "hypotenus": [133, 139, 141], "sph2cart": [133, 139, 141, 204], "unusu": [133, 139, 141, 189], "trivial": [133, 139, 141, 184], "check_radiu": 133, "5708": 133, "7124": 133, "3x3": [133, 135, 139, 140, 141, 145], "ru": [133, 139, 141], "span": [133, 139, 141], "vecs1": 133, "vecs2": 133, "v_co": 133, "vco": 133, "keepdim": [133, 139], "flatten": [133, 139, 143], "immut": [133, 134, 139, 141], "factori": [133, 134, 141, 143, 146, 182], "qval": [133, 134, 139, 141, 146], "ie": [133, 134, 136, 139, 141, 143], "gradient_strength": [133, 134, 139, 141, 146], "remap": [133, 134, 135, 138, 189], "unspecifi": [133, 134, 135, 136, 137, 138, 139, 144], "delaunai": [133, 134, 135, 136, 137, 138, 139, 185], "triangul": [133, 134, 135, 136, 137, 138, 139, 144, 145], "find_closest": [133, 134, 135, 136, 137, 138, 139, 146], "vertex": [133, 134, 135, 136, 137, 138, 139, 143, 187], "classmethod": [133, 134, 135, 138, 139, 145], "from_spher": [133, 134, 135, 138, 146], "afterward": [133, 139], "magicprop": [133, 139], "__dict__": [133, 139, 143], "ztol": 133, "trace": [133, 146, 199], "assymetri": 133, "bdelta": 133, "b_eta": 133, "n_bval": [133, 139], "non_zero": [133, 139], "bmag": [133, 138, 139], "log_": [133, 138, 139], "deprecationwarn": [133, 137, 139, 143, 184], "warning_class": [133, 137, 139, 143], "hemi": [133, 135], "const": [133, 135], "felt": [133, 135], "unstabl": [133, 135, 183], "bvector": [133, 139, 145, 152, 153, 158, 159, 161, 179], "gap": [133, 138, 139], "atol": [133, 134, 137, 139, 140, 141, 143, 145], "bo_threshold": [133, 134, 139, 141, 145], "ste": [133, 134, 139, 141, 145], "cte": [133, 134, 139, 141, 145], "cigar": [133, 134, 139, 141, 145], "sq2": [133, 134, 139, 141, 145], "gt": [133, 134, 139, 140, 141, 144, 145], "03e": [133, 134, 139], "30m": [133, 134, 139], "10m": [133, 134, 139], "overwrite_a": [133, 135], "check_finit": [133, 135], "gain": [133, 135, 139, 141, 142, 143], "infin": [133, 135, 139, 142, 143, 144, 145], "ainv": 133, "linalgerror": [133, 135, 139, 179, 183], "string_ornt": [133, 137], "ornt": [133, 137], "ornt1": [133, 137], "ornt2": [133, 137], "orn1": [133, 137], "orn2": [133, 137], "topgaard": 133, "valiullin": 133, "ed": [133, 139, 140], "transport": [133, 196], "porou": 133, "royal": [133, 142, 143], "chemistri": 133, "decomposit": [133, 135, 139, 145, 153, 154, 195, 199, 200], "pu": 133, "orthonorm": [133, 203], "hermitian": [133, 135, 139], "nonsingular": 133, "horn": 133, "johnson": 133, "1985": 133, "higham": 133, "siam": [133, 139], "85749293": 133, "51449576": 133, "88648444": 133, "2004901": 133, "94446746": 133, "21196618": 133, "42393237": 133, "88054056": 133, "39378971": 133, "78757942": 133, "4739708": 133, "48470147": 133, "96940295": 133, "15122648": 133, "9388059": 133, "30245295": 133, "65696431": 133, "07353665e": 133, "23116567": 133, "93241587": 133, "84930602": 133, "26363763e": 133, "compens": 133, "leemans2009": 133, "1336": [133, 181], "1349": [133, 181], "current_ornt": [133, 137], "new_ornt": [133, 137], "stort": [133, 137], "lp": [133, 137], "inferior": [133, 137], "bmagmax": [133, 139], "bmaxmag": [133, 139], "rbval": [133, 138, 139], "regroup": [133, 139], "add_edg": [133, 146], "add_nod": [133, 146], "all_path": [133, 146], "del_nod": [133, 146], "del_node_and_edg": [133, 146], "down_short": [133, 146], "shortest_path": [133, 146], "up_short": [133, 146], "wp": 133, "attr": [133, 180], "arr": [133, 134, 135, 139, 143, 145], "num_bin": 133, "janeriksolem": 133, "sphere_origin": 133, "sphere_target": 133, "multiquadr": 133, "epsilon": [133, 137, 139, 140, 144, 145, 191], "spread": [133, 134], "rbf": [133, 185], "_interpolate_scalar_nn_2d": 133, "_interpolate_scalar_nn_3d": 133, "_interpolate_vector_2d": 133, "_interpolate_vector_3d": [133, 143], "data_strid": 133, "len_point": 133, "subok": [133, 139], "writeabl": [133, 139, 187], "readonli": [133, 139], "writabl": [133, 139], "broadcast_to": [133, 139], "stride_trick": [133, 139], "sliding_window_view": [133, 139], "userfriendli": [133, 139], "relianc": [133, 139, 196], "contigu": [133, 136, 139, 141, 142, 143], "layout": [133, 139], "unpredict": [133, 139], "mostli": [133, 139, 143, 178, 185, 188], "mixin": 133, "offer": [133, 139, 203], "accessor": [133, 135], "uniformtimeseri": 133, "sampling_r": 133, "sampling_interv": 133, "lose": [133, 194], "circular": [133, 141, 180, 181], "chain": [133, 141, 146], "_no_reset": 133, "protect": [133, 142, 143], "caveat": 133, "emptor": 133, "recomput": 133, "fire": 133, "sklearn": [133, 135, 139, 145, 156, 190, 195], "a_0": [133, 139], "h_i": [133, 139], "s_j": [133, 139], "slack": [133, 139], "polynomi": [133, 139, 143, 203], "design_matrix": [133, 145, 146, 192], "coef_": 133, "y_hat": 133, "n_sampl": 133, "n_featur": 133, "_basevers": [133, 135, 137, 138, 139], "awar": [133, 135, 137, 138, 139, 143, 144, 145, 200], "0a5": [133, 135, 137, 138, 139], "base_vers": [133, 135, 137, 138, 139, 146], "is_devreleas": [133, 135, 137, 138, 139, 146], "is_postreleas": [133, 135, 137, 138, 139, 146], "is_prereleas": [133, 135, 137, 138, 139, 146], "minor": [133, 135, 137, 138, 139, 146, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193], "invalidvers": [133, 135, 137, 138, 139], "pep": [133, 135, 137, 138, 139, 187], "440": [133, 135, 137, 138, 139, 187], "abc": [133, 135, 137, 138, 139, 140, 195], "dev1": [133, 135, 137, 138, 139], "post1": [133, 135, 137, 138, 139], "3a1": [133, 135, 137, 138, 139], "3b1": [133, 135, 137, 138, 139], "3rc1": [133, 135, 137, 138, 139], "3dev1": [133, 135, 137, 138, 139], "rc": [133, 134, 135, 137, 138, 139, 178], "post0": [133, 135, 137, 138, 139], "trail": [133, 135, 137, 138, 139], "constr": [133, 139], "krylov": 133, "obei": [133, 139], "hessianupdatestrategi": 133, "linearoper": [133, 139], "spmatrix": 133, "quasi": [133, 143], "sr1": 133, "linearconstraint": [133, 139], "nonlinearconstraint": [133, 139], "maxfun": [133, 139], "optimizeresult": [133, 139], "minimize_scalar": 133, "univari": 133, "conjug": [133, 139, 141, 203], "polak": 133, "ribier": 133, "variant": 133, "fletcher": 133, "reev": 133, "broyden": [133, 139], "goldfarb": 133, "shanno": 133, "proven": 133, "hess_inv": 133, "dog": 133, "leg": 133, "gltr": 133, "indefinit": 133, "subproblem": [133, 139], "simplex": 133, "direc": 133, "unbound": [133, 139], "fortran": [133, 139, 143], "subroutin": [133, 139], "dieter": 133, "kraft": 133, "swich": 133, "versatil": 133, "byrd": [133, 139], "omojokun": 133, "sqp": 133, "549": [133, 188], "hu": 133, "lo": [133, 135, 137], "frontend": 133, "basinhop": 133, "mangl": 133, "wright": [133, 139, 180], "1996": [133, 139, 145, 161, 191, 194], "scorn": 133, "1995": [133, 139, 141, 190], "dunde": 133, "biennial": 133, "griffith": 133, "watson": [133, 139], "addison": 133, "weslei": 133, "longman": 133, "harlow": 133, "1964": [133, 190], "teukolski": 133, "vetterl": 133, "flanneri": 133, "recip": [133, 139], "noced": [133, 139], "1190": [133, 139, 180], "1208": [133, 136, 139, 180], "zhu": [133, 139], "778": [133, 139], "acm": [133, 139], "550": [133, 139, 188], "560": [133, 139, 188], "nash": 133, "lanczo": 133, "770": 133, "gomez": 133, "hennart": 133, "kluwer": 133, "dordrecht": 133, "1998": [133, 190], "acta": 133, "numerica": 133, "336": [133, 187], "damtp": 133, "na03": 133, "tech": 133, "dfvlr": 133, "fb": 133, "dlr": 133, "aerospac": 133, "flight": 133, "mechan": [133, 140], "koln": 133, "germani": 133, "conn": 133, "gould": 133, "toint": 133, "lender": 133, "kirch": 133, "potschka": 133, "trlib": 133, "arxiv": [133, 138, 139, 142, 143], "1611": [133, 183], "04718": 133, "lucidi": 133, "roma": 133, "richard": [133, 139], "mari": 133, "hribar": 133, "jorg": [133, 139, 204], "877": [133, 180], "lale": 133, "marucha": 133, "todd": 133, "plantega": 133, "682": [133, 178], "rosenbrock": [133, 139], "rosen": [133, 139], "resp": 133, "rosen_d": 133, "rosen_hess": 133, "gtol": [133, 139], "00749589": 133, "01255155": 133, "02396251": 133, "04750988": 133, "09495377": 133, "02510441": 133, "04794055": 133, "09502834": 133, "18996269": 133, "09631614": 133, "19092151": 133, "38165151": 133, "38341252": 133, "7664427": 133, "53713523": 133, "con": 133, "bnd": 133, "trip_msg": [133, 134, 135, 137, 138, 139, 142, 144, 145], "tripwir": [133, 135, 137, 138, 139, 142, 144, 145, 146], "pkg_like": [133, 134, 135, 137, 138, 139, 142, 144, 145], "have_pkg": [133, 134, 135, 137, 138, 139, 142, 144, 145], "module_setup": [133, 134, 135, 137, 138, 139, 142, 144, 145], "setup_modul": [133, 134, 135, 138, 139, 142, 146], "optpkg": [133, 134, 135, 137, 138, 139, 142, 144, 145], "pkg": [133, 134, 135, 137, 138, 139, 142, 144, 145], "not_a_packag": [133, 134, 135, 137, 138, 139, 142, 144, 145], "some_funct": [133, 134, 135, 137, 138, 139, 142, 144, 145], "tripwireerror": [133, 134, 135, 137, 138, 139, 142, 144, 145], "importerror": [133, 134, 135, 137, 138, 139, 142, 144, 145], "hasattr": [133, 134, 135, 137, 138, 139, 142, 144, 145], "submodul": [133, 134, 135, 137, 138, 139, 142, 144, 145], "subpkg": [133, 134, 135, 137, 138, 139, 142, 144, 145], "dirnam": [133, 135, 137, 138, 139, 142, 144, 145, 146], "momentum": 133, "non_neg": [133, 139], "check_error_it": 133, "max_error_check": 133, "converge_on_ss": 133, "xh": 133, "persist": [133, 180], "increment": [133, 139, 143], "sse": [133, 139], "h_best": 133, "pipermail": 133, "027700": 133, "caller": [133, 139, 140, 143], "src": 133, "profiling_tutori": 133, "line_profil": 133, "1000000": [133, 140, 145], "print_stat": [133, 146], "prin": 133, "pstat": 133, "function_nam": 133, "s1": [133, 140, 142], "100001": 133, "s2": [133, 140, 142], "200002": 133, "uniformli": [133, 140], "ecuy": 133, "portabl": 133, "742": [133, 179, 183], "749": [133, 178], "774": 133, "claim": 133, "30584e": 133, "r_number": 133, "ix": 133, "iz": 133, "300003": 133, "183": [133, 186], "1982": [133, 143, 190], "rectangularli": 133, "95e": 133, "30000": 133, "arithmet": [133, 139], "5212632": 133, "400004": 133, "wichmann": 133, "hill": 133, "1614": [133, 183], "1622": [133, 183], "9473": 133, "csda": 133, "019": 133, "sciencedirect": 133, "b6v8v": 133, "4k7f86w": 133, "a3a33291b8264e4c882a8f21b6e43351": 133, "homebrew": 133, "caskroom": 133, "miniforg": 133, "env": 133, "x86": 133, "linkag": 133, "queri": [133, 142, 143, 146], "sizeof": 133, "unix": 133, "_default_architectur": 133, "____": [133, 134, 135, 136, 137, 139], "subdivis": [133, 134, 135, 136, 137, 139], "new_spher": [133, 134, 135, 136, 137, 139], "reimplement": 133, "fmin_slsqp": 133, "number_of_edg": 133, "unit_octahedron": 133, "unit_icosahedron": 133, "return_index": [133, 136, 139], "return_indic": [133, 136, 139, 140, 146], "unique_vertic": [133, 136, 139, 185], "__________": 133, "return_invers": 133, "max_cosine_dist": 133, "7071067811865475": 133, "unimport": 133, "12f": 133, "707106781187": 133, "max_mean_cosin": 133, "fisher": 133, "lewi": 133, "embleton": 133, "b1": [133, 190], "coord": [133, 143, 179], "spherepointpick": 133, "recursion_level": 133, "af1": 133, "af2": 133, "af3": 133, "bank": 133, "n1": [133, 140, 143], "n2": [133, 143], "n3": [133, 184], "afi": 133, "lowpass": 133, "highpass": 133, "subband": 133, "n1xn2xn2": 133, "shife": 133, "synthesi": [133, 139], "perm": 133, "sf1": 133, "sf2": 133, "sf3": 133, "sfi": 133, "n1xn2xn3": 133, "byteord": [134, 139], "endian": [134, 189], "native_arr": 134, "pathnam": [134, 137, 145], "broken": [134, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191], "oneof": 134, "with_raw": 134, "meta": 134, "uw": 134, "ndarek918ec2": 134, "bid": 134, "1993": [134, 142, 143, 190], "mcconnel": 134, "neurolog": 134, "fee": 134, "herebi": 134, "equip": 134, "injuri": 134, "misus": [134, 180], "nath": [134, 138], "3shell": 134, "site": [134, 187, 190], "session": 134, "file1": 134, "file2": 134, "maptlotlib": 134, "small_101d": [134, 138, 139, 140, 141, 143], "pittsburgh": [134, 138, 139, 140, 141, 143], "competit": [134, 138, 139, 140, 141, 143], "gqi_vector": [134, 138, 139, 140, 141, 143, 188], "small_25": [134, 138, 139, 140, 141, 143], "10x8x2": [134, 138, 139, 140, 141, 143], "test_piesno": [134, 138, 139, 140, 141, 143], "cb_2": [134, 138, 139, 140, 141, 143], "fib1": 134, "fib0": 134, "fib2": 134, "sv2": 134, "c1": 134, "skeleton": [134, 188], "lsc": 134, "c3": 134, "symmetric642": [134, 135, 138, 139, 145], "repulsion100": [134, 135, 138, 139, 145], "repulsion200": [134, 135, 138, 139, 145], "vert": [134, 135, 138, 139, 144, 145], "720": [134, 135, 138, 139, 145, 180, 189], "csc_matrix": 134, "csr_matrix": [134, 139], "bsr_matrix": 134, "dia_matrix": 134, "coo_matrix": [134, 142, 143], "oserror": 134, "save_npz": 134, "sparse_matrix": 134, "2x3": 134, "int64": [134, 139, 140, 143, 180], "toarrai": [134, 142, 143], "model_nam": [134, 139], "unsign": [134, 139, 143, 145, 191], "sdp_constraint": [134, 139], "id_constraint_ord": [134, 139], "byte_data": 134, "func_coef": 134, "func_discret": 134, "dwi2sh": 134, "subj_2": 134, "exp_bundles_map": 134, "renauld": [134, 196], "bernier": 134, "thalamu": 134, "eeg": [134, 184], "submiss": 134, "constrast": 134, "msg": [134, 139, 143, 183], "proxi": [134, 190], "silly_module_nam": 134, "do_silly_th": 134, "silli": 134, "tqdm_asyncio": 134, "stored_md5": 134, "fsrc": 134, "fdst": 134, "total_length": 134, "16384": 134, "data_s": 134, "checksum": [134, 145, 157], "mb": 134, "hcp_bucket": 134, "openaccess": 134, "profile_nam": 134, "hcp_1200": 134, "aws_access_key_id": 134, "aws_secret_access_kei": 134, "bucket": 134, "aw": 134, "credenti": 134, "xxxxxxxxxxxxxxxx": 134, "publicdata": 134, "gorgolewski": [134, 183], "160044": 134, "bundles_list": 134, "ref_anat": 134, "usedforsecur": 134, "au": [134, 143], "wild": 134, "bruker": 134, "80x160x5": 134, "110x110x500\u03bcm": 134, "drawn": [134, 139, 142, 143, 144], "subject1_test": 134, "subject1_retest": 134, "subject2_test": 134, "subject2_retest": 134, "dataset_descript": 134, "json": [134, 145], "bidsvers": 134, "dump": 134, "timeout": [134, 178, 187, 192, 195], "cafil": 134, "capath": 134, "cadefault": 134, "sent": [134, 137, 139, 187], "urllib": 134, "ftp": [134, 139], "ssl": [134, 191], "sslcontext": 134, "httpsconnect": 134, "certif": [134, 191], "load_verify_loc": 134, "addinfourl": 134, "client": 134, "httprespons": 134, "phrase": [134, 143], "fancyurlopen": 134, "handler": 134, "openerdirector": 134, "unknownhandl": 134, "_proxi": 134, "http_proxi": 134, "proxyhandl": 134, "ima": [135, 143], "fimau": 135, "fimao": 135, "5x5": 135, "fima": 135, "force_recomput": 135, "meesters2016_ismrm": 135, "duitsandfranken_ijcv": 135, "evaluate_kernel": [135, 146], "kernel_valu": 135, "get_lookup_t": [135, 146], "dataerror": [135, 138, 139, 145, 146], "tempfil": [135, 136, 137, 139, 145, 196], "tempdir": [135, 136, 139, 145, 187], "numpyvers": 135, "rfce522a872fd": 135, "vg": [135, 145, 164], "eigvals_onli": 135, "overwrite_b": 135, "turbo": 135, "eigval": [135, 139, 145], "subset_by_index": 135, "subset_by_valu": 135, "driver": 135, "\u03bb": 135, "vi": [135, 142, 143], "conj": 135, "pertin": 135, "ascend": [135, 139, 143], "evr": 135, "evx": 135, "gvx": 135, "lapack": 135, "evd": 135, "gv": 135, "gvd": 135, "favour": 135, "eigvalsh": 135, "eig": [135, 145, 153, 154], "eigh_tridiagon": 135, "eiegenvector": 135, "tridiagon": [135, 139], "unaffect": 135, "sy": [135, 139, 145], "he": 135, "syevr": 135, "hegvx": 135, "qr": [135, 139], "occas": 135, "expens": [135, 139, 142, 143], "wors": 135, "69199443e": 135, "11938152e": 135, "11938152": 135, "pca_method": [135, 145, 153, 154], "out_dtyp": [135, 145], "suppress_warn": [135, 145], "r4bed7265c934": 135, "svd": [135, 139, 145, 153, 154, 180, 181], "occasion": [135, 145, 153, 154], "tau_": [135, 145, 153], "patch_siz": [135, 145, 196], "descoteaux08": [135, 145, 155], "wiest": [135, 145, 155], "daessl\u00e9": [135, 145, 155], "nicola": [135, 145, 155], "christian": [135, 139, 145, 155], "rachid": [135, 145, 155], "columnwis": [135, 139], "upfirdn": 135, "port": [135, 196], "c_i": [135, 139], "sum_j": 135, "i_": [135, 139], "disable_background_mask": [135, 145], "grappa": [135, 145], "oversmooth": [135, 145], "un": [135, 145, 182, 187], "inaccuraci": [135, 145], "nonloc": [135, 145], "itermax": 135, "ep": [135, 139, 140, 142, 143], "return_mask": 135, "realis": 135, "fmri": 135, "repetit": [135, 137], "cord": 135, "197": [135, 143, 187], "108": [135, 139, 185], "1x1x1": [135, 140, 145, 169], "lasso": [135, 139, 145, 156], "sklearnlinearsolv": [135, 139, 145, 146, 156], "scikit": [135, 139, 140, 145, 156], "linear_model": [135, 139, 145, 156, 190], "linearregress": [135, 145, 156], "regressormixin": [135, 139, 145, 156], "sigma_corr": [135, 145], "basis_typ": [135, 136, 138, 139], "r62f851f19ba8": 135, "angelino": [135, 136, 138, 139, 140, 141, 145, 203], "fitzgibbon": [135, 136, 138, 139, 140, 141, 145, 203], "510": [135, 136, 138, 139, 140, 141, 145, 187, 203], "raffelt": [135, 136, 138, 139, 203], "tabbara": [135, 136, 138, 139, 203], "dholland": [135, 136, 138, 139, 203], "pietsch": [135, 136, 138, 139, 203], "mrtrix3": [135, 136, 138, 139, 189, 203], "137": [135, 136, 138, 139, 185, 203], "r72146e2b2f52": 135, "generate_streamlin": [136, 137, 139, 145, 146, 195], "get_direct": [136, 137, 139, 143, 145, 146], "max_attempt": 136, "ang_thr": [136, 137, 139, 143, 146], "qa_thr": [136, 137, 139, 143, 146], "total_weight": [136, 137, 139, 143, 146], "initial_direct": [136, 139, 143, 146, 189], "incom": [136, 137, 145], "pmf_gen": [136, 145], "endlessli": 136, "sum_i": [136, 139, 143], "psi_i": [136, 139], "psi": [136, 139], "bracket": [136, 139, 142, 143], "cohen": [136, 139], "adad": [136, 139], "wald": [136, 139], "jmri": [136, 139], "1194": [136, 139, 180], "descend": [136, 139, 140, 145], "sphere_ev": 136, "xtol": [136, 139], "finder": [136, 185], "gfa_thr": [136, 139, 145], "sh_basis_typ": [136, 139, 145], "invb": [136, 139, 145], "subprocess": [136, 139, 145, 158, 159], "fibernavig": [136, 137, 180], "relative_threshold": [136, 139], "intp": [136, 139], "return_inv": [136, 139], "r0296267dba6e": 136, "get_pmf_no_boot": [136, 146], "get_pmf": [136, 146], "shcoeff": 136, "real_sh_descoteaux": [136, 146], "rc855ec825848": 136, "hierach": 137, "hdfgroup": 137, "storag": [137, 143], "mkstemp": 137, "temp": [137, 186], "dpy_exampl": 137, "fd": 137, "dpw": 137, "write_track": [137, 146], "dpr": 137, "read_track": [137, 146], "read_tracksi": [137, 146], "attach": [137, 139], "fh": 137, "neat": 137, "ext": [137, 139, 143], "fname_shm": [137, 145], "fname_dir": [137, 145], "fname_valu": [137, 145], "fname_indic": [137, 145], "fname_gfa": [137, 145], "reshape_dir": [137, 145], "n_row": 137, "sliceabledatadict": 137, "behav": 137, "Its": [137, 138, 139, 141], "voxmm": [137, 143, 144, 145, 146], "data_per_point": [137, 144, 145, 146, 195], "data_per_streamlin": [137, 144, 145, 146, 175, 176], "sft_1": [137, 144, 145], "sft_2": [137, 144, 145], "compute_bounding_box": [137, 144, 145, 146], "from_sft": [137, 144, 145, 146], "get_data_per_point_kei": [137, 144, 145, 146], "get_data_per_streamline_kei": [137, 144, 145, 146], "get_streamlines_copi": [137, 144, 145, 146], "indices_to_remov": [137, 144, 145], "indices_to_keep": [137, 144, 145], "to_cent": [137, 144, 145, 146], "target_origin": [137, 144, 145], "target_spac": [137, 144, 145], "affine_to_rasmm": [137, 146], "coordinate_system": 137, "n_t": 137, "alongsid": [137, 139, 143, 145], "p_i": 137, "m_i": 137, "lazi": [137, 139], "lazytractogram": 137, "to_world": [137, 146], "leftmost": 137, "outermost": 137, "odomet": 137, "rightmost": 137, "transformed_pt": [137, 140, 143], "freshli": [137, 140, 143], "memo": [137, 143], "_nil": [137, 143], "__doc__": [137, 143, 145], "reference_1": 137, "reference_2": 137, "logger": [137, 138, 196], "tractogram_typ": 137, "fileobj": 137, "streamlinesfil": 137, "tractogram_fil": 137, "tractogramfil": 137, "ttype": 137, "loader": 137, "to_lp": 137, "mitkdiffus": 137, "saver": 137, "ply": 137, "stl": 137, "xml": 137, "file_map": 137, "nifti1pair": 137, "serializableimag": 137, "in_memori": 137, "sform_cod": 137, "qform_cod": 137, "initialis": [137, 139, 191], "set_sform": 137, "set_qform": 137, "files_typ": [137, 146], "header_class": [137, 146], "update_head": [137, 146], "valid_ext": [137, 146], "img_orig": 137, "compliant": 137, "nimh": 137, "gov": 137, "nifti1field": 137, "nifti1fields_pag": 137, "image_data": [137, 145], "intent": [137, 145], "datafram": [137, 139, 142, 145], "panda": [137, 139, 142, 146], "file_nam": [137, 144], "vtkpolydata": 137, "color_array_nam": 137, "histolog": 138, "histologi": 138, "resdnn_model": 138, "fetch_model_weights_path": 138, "histo_resdnn_weight": 138, "load_model_weight": [138, 146], "mimick": 138, "schill": 138, "parvathaneni": 138, "hainlin": 138, "huo": 138, "stepniewska": 138, "untap": 138, "220": [138, 187], "227": [138, 186], "bermudez": 138, "st\u0119pniewska": 138, "1911": [138, 189], "07927": 138, "fetch_default_weight": [138, 146], "weights_path": 138, "chunk_siz": [138, 139], "facili": 138, "assembl": 138, "nonzero": [138, 139, 140, 145], "pred_sh_coef": 138, "have_amodul": [138, 144], "have_bmodul": [138, 144], "expresss": [138, 144], "r35636a4a5d66": 138, "r30944dc1667c": 138, "m_list": [138, 139], "n_list": [138, 139], "kx1": [138, 139], "real_sh_descoteaux_from_index": [138, 146], "real_sh_tournier_from_index": [138, 146], "input_shap": 138, "num_hidden": 138, "act_hidden": 138, "relu": 138, "dropout": 138, "num_out": 138, "act_out": 138, "softmax": 138, "sparse_categorical_crossentropi": 138, "perceptron": 138, "x_test": 138, "y_test": 138, "batchsiz": 138, "x_train": 138, "y_train": [138, 139], "testsiz": 138, "outputs": 138, "textual": 138, "nonetyp": 138, "reus": 139, "dire": 139, "summat": [139, 141], "methodologi": 139, "funk": 139, "radon": 139, "bx": 139, "plug": 139, "rewritten": [139, 144], "sh_coef": 139, "code_str": [139, 140, 143], "elaps": [139, 140, 143], "milli": [139, 140, 143], "timescal": [139, 140, 143], "etim": [139, 140, 143], "reg_spher": [139, 145], "sharp": [139, 145], "inject": [139, 145], "knowledg": [139, 145], "tmi": [139, 145], "tractomet": [139, 145], "pred_sig": [139, 145], "ndarri": [139, 142, 143], "mymodel": 139, "mymodelfit": 139, "cache_get": [139, 146], "odf_basis_matrix": 139, "_compute_basis_matrix": 139, "cache_set": [139, 146], "cache_clear": [139, 146], "compute_expensive_matrix": 139, "expensive_matrix": 139, "onetimeproperti": [139, 146], "cod": 139, "rac": 139, "model_arg": 139, "model_kwarg": 139, "implementd": 139, "dwi_respons": 139, "sdtmodel": 139, "csdmodel": 139, "opppos": 139, "shm_coef": 139, "setter": 139, "sampling_matrix": [139, 146], "return_s0_hat": [139, 145], "nll": [139, 145, 161, 190], "min_sign": [139, 145, 187, 189], "consumpt": [139, 145], "1e4": [139, 145], "mattiello": [139, 145, 161], "247": [139, 145, 161, 186], "254": [139, 145, 161], "elucid": [139, 145, 161], "219": [139, 145, 161, 186], "lin": [139, 145, 161], "ching": [139, 145, 161], "1095": [139, 145, 161], "dti_param": [139, 145], "roi_cent": [139, 145, 159], "roi_radiu": 139, "fa_cal": 139, "return_number_of_voxel": 139, "fa_oper": [139, 181], "versu": [139, 145], "dwsignal": 139, "b_reg": 139, "r_rh": 139, "fodf_sh": 139, "num_it": 139, "minimis": 139, "f_n": 139, "xf_n": 139, "b_": [139, 199, 200], "reg": 139, "hf_": 139, "rightarrow": 139, "2x": 139, "th_": 139, "tx": 139, "regularis": 139, "superresolut": 139, "mu": [139, 140], "qf_n": 139, "choleski": [139, 188], "l_y": 139, "tf_n": 139, "rankn": 139, "f_0": 139, "pf_0": 139, "l_": 139, "h_n": 139, "donald": 139, "rh": 139, "r2_term": 139, "frt": 139, "legendr": [139, 203], "pn": 139, "shanji": 139, "jin": 139, "jianm": 139, "wilei": [139, 143], "son": 139, "fsu": 139, "jburkardt": 139, "f77_src": 139, "special_funct": 139, "20x20x20": 139, "single_voxel_fit": 139, "odf_sh": [139, 146], "odfs_sh": 139, "plai": 139, "odfdeconv": [139, 187], "peaksandmetr": [139, 144, 145, 146, 180], "full_output": [139, 143], "epsab": 139, "49e": 139, "epsrel": 139, "wvar": 139, "wopt": 139, "maxp1": 139, "limlst": 139, "complex_func": 139, "quadpack": 139, "lowlevelcal": 139, "user_data": 139, "ctype": 139, "infodict": 139, "abserr": 139, "ierlst": 139, "subinterv": 139, "difficulti": 139, "integrand": 139, "discontinu": 139, "chebyshev": [139, 143], "sinusoid": 139, "dblquad": 139, "tplquad": 139, "nquad": 139, "fixed_quad": 139, "quadratur": 139, "odeint": 139, "od": [139, 143], "simpson": 139, "romb": 139, "tabul": 139, "neval": 139, "alist": 139, "blist": 139, "rlist": 139, "elist": 139, "moduli": 139, "iord": 139, "aa": 139, "bb": 139, "ndin": 139, "slot": 139, "alg": 139, "loga": 139, "logb": 139, "cauchi": 139, "clenshaw": 139, "curti": [139, 143], "momcom": 139, "m_c": 139, "nnlog": 139, "chebmo": 139, "neq": 139, "besid": 139, "lst": 139, "k_f": 139, "rslst": 139, "m_f": 139, "kc": 139, "erlst": 139, "rslist": 139, "qags": 139, "qagi": 139, "qagp": 139, "qawo": 139, "qawf": 139, "qaws": 139, "qawc": 139, "descipt": 139, "qag": 139, "troubl": [139, 145], "spot": 139, "abscissa": 139, "b_a": 139, "omega": 139, "infty_a": 139, "varepsilon": 139, "ih": 139, "int_a": 139, "intev": 139, "piessen": 139, "doncker": 139, "kapenga": 139, "elis": 139, "\u00fcberhub": 139, "kahan": 139, "1983": [139, 190], "isbn": 139, "978": [139, 141, 180], "540": [139, 187], "12553": 139, "mccullough": 139, "phillip": 139, "keith": 139, "1973": [139, 194], "holt": 139, "rinehart": 139, "winston": 139, "086370": 139, "4_0": 139, "333333333333332": 139, "3684757858670003e": 139, "3333333333": 139, "infty_0": 139, "invexp": 139, "842605999138044e": 139, "1_0": 139, "testlib": 139, "cdll": 139, "restyp": 139, "c_doubl": 139, "argtyp": 139, "c_int": 139, "3333333333333333": 139, "4802973661668752e": 139, "1102230246251565e": 139, "0000000002199108": 139, "0189464580163188e": 139, "ra6d8f6cd2652": 139, "m_n": 139, "0_n": 139, "colatitudin": 139, "real_sh": 139, "r2763a8caef3c": 139, "r64bc28ca561d": 139, "rb280cc58c30e": 139, "r_sh": 139, "ten": [139, 141], "nr": [139, 141], "292": [139, 141, 186], "s0_hat": [139, 146], "fifteen": [139, 145], "min_kurtosi": 139, "42857142857142855": 139, "e1": [139, 141], "1111": [139, 183], "analogi": 139, "ardekani": [139, 145, 160], "823": [139, 145, 160], "836": [139, 145, 160, 179], "barmpouti": 139, "zhuo": 139, "8th": 139, "symposium": [139, 145], "nano": [139, 145, 170], "macro": 139, "262": [139, 186], "265": [139, 186], "5872402": 139, "akc": [139, 146], "adc": [139, 146, 186], "coeffic": 139, "equiv": 139, "_f": 139, "frobeniu": 139, "kmax": [139, 146], "r1a4c5980fd18": 139, "omega_": 139, "f_1": 139, "2222": [139, 192], "3333": 139, "f_2": 139, "2233": [139, 192], "1133": 139, "1122": [139, 180], "r_f": 139, "r_d": 139, "carlson": 139, "hardin": 139, "mclaren": 139, "snub": 139, "429": [139, 187], "mathnbf": 139, "n_j": 139, "n_l": 139, "tr": 139, "2w_": 139, "medicine69": 139, "388": [139, 187], "2pi": 139, "domega": 139, "_mathbf": 139, "k_": 139, "bot": [139, 178, 182, 183, 187, 189], "g_1": 139, "g_2": 139, "ull": [139, 145, 160], "uwll": [139, 145, 160], "dki_param": [139, 145], "model_s0": 139, "ec": 139, "pele": 139, "gubjartsson": 139, "kikini": 139, "jolesz": 139, "dodf": 139, "scratch": [139, 180, 189], "566": [139, 141, 188], "sop": 139, "athena": [139, 180], "descoteaux_thesi": 139, "000": 139, "heta": 139, "k_element": 139, "wrot": 139, "hui": 139, "cheung": 139, "qi": 139, "indi": 139, "indj": 139, "indk": 139, "indl": 139, "wre": 139, "ind_i": [139, 141], "ind_j": [139, 141], "ind_k": [139, 141], "ind_l": [139, 141], "min_diffus": [139, 185], "physicali": 139, "biologicali": 139, "pluasibl": 139, "errtol": 139, "incomplet": [139, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 196], "infti": [139, 203], "9409227": 139, "1994a": 139, "eigvec": [139, 145], "columnar": [139, 145], "bxx": [139, 141], "bxy": [139, 141], "bzz": [139, 141], "bxz": [139, 141], "byz": [139, 141], "bxxxx": [139, 141], "byyyi": [139, 141], "bzzzz": [139, 141], "bxxxy": [139, 141], "bxxxz": [139, 141], "bxyyi": [139, 141], "byyyz": [139, 141], "bxzzz": [139, 141], "byzzz": [139, 141], "bxxyi": [139, 141], "bxxzz": [139, 141], "byyzz": [139, 141], "bxxyz": [139, 141], "bxyyz": [139, 141], "bxyzz": [139, 141], "blogs0": [139, 141], "adv": 139, "advc": 139, "sixth": 139, "eingenvalu": 139, "max_dir": 139, "dummi": [139, 145], "r953e26c55b6a": 139, "fail_is_nan": 139, "npar": 139, "gmm": 139, "5267": [139, 145, 160, 161], "background_nois": [139, 145, 160, 161], "nlls_param": 139, "nls_fit_dki": 139, "236": 139, "1020": [139, 180], "n_direct": 139, "num_vox": 139, "restore_param": 139, "ellid": 139, "sunaert": 139, "pitfal": 139, "335": [139, 187], "rb657f27beb9": 139, "axonal_diffus": [139, 146], "hindered_ad": [139, 146], "hindered_ev": [139, 146], "hindered_rd": [139, 146], "restricted_ev": [139, 146], "rde": 139, "kurtosismicrostructur": 139, "defind": 139, "006": [139, 145], "adc_": 139, "kurtosismicrostruturemodel": 139, "awf_onli": 139, "optiom": 139, "edt": 139, "idt": 139, "byi": 139, "r_start": 139, "r_end": 139, "r_step": 139, "nowrap": 139, "eqnarrai": 139, "p_": [139, 201], "iiintlimits_": 139, "q_": 139, "i2pimathbf": 139, "cdotmathbf": 139, "dmathbf": 139, "q_space": 139, "han": [139, 143], "bigg": 139, "1766": [139, 189], "1775": [139, 189], "dr_x": 139, "dr_y": 139, "dr_z": 139, "psi_": 139, "rhat": 139, "dr": 139, "2002": [139, 142, 143, 190], "sit": 139, "generalizedqsampl": 139, "gqrid_siz": 139, "dsi_voxel": [139, 146], "prop": 139, "psf": 139, "numit": 139, "acc_factor": 139, "qspace": 139, "qgrid": 139, "qtabl": 139, "overwrite_x": 139, "j_1": 139, "j_d": 139, "k_1": 139, "k_d": 139, "n_d": 139, "prod": 139, "j_i": 139, "k_i": 139, "ith": 139, "destroi": 139, "dft": [139, 199, 200], "ifftn": 139, "fftpack": 139, "swap": 139, "nyquist": 139, "freq": 139, "fftfreq": 139, "qgrid_sampl": 139, "siz_x": 139, "siz_i": 139, "siz_z": 139, "ifft": 139, "diffusionspectrum": 139, "new_data": 139, "new_gtab": 139, "premultipli": 139, "geometric_transform": [139, 142], "rradiu": 139, "interp_coord": 139, "estimated_snr": 139, "q_form": [139, 145], "a_squiggl": 139, "widetild": [139, 145], "daniel": [139, 145, 183], "enni": [139, 145], "kindlmann": [139, 145], "146": [139, 145, 185], "lambda_i": [139, 145, 199, 200], "denomin": [139, 145], "appendix": [139, 145], "batchelor": [139, 145], "moakher": [139, 145], "atkinson": [139, 145], "rigor": [139, 145], "calculu": [139, 145], "221": [139, 145, 186], "225": [139, 145, 185, 186], "newcomb": [139, 145], "1103": [139, 145, 180], "1115": [139, 145, 180], "etal": [139, 145], "thompson": [139, 145], "monozygot": [139, 145], "dizygot": [139, 145], "twin": [139, 145], "943": [139, 145, 180], "946": [139, 145, 180], "arsigni": [139, 145], "fillard": [139, 145], "medecin": [139, 145], "421": [139, 145, 187], "a_hat": 139, "fit_tensor": [139, 178, 180], "counteract": 139, "mo": [139, 145], "orthotropi": [139, 145], "return_lower_triangular": 139, "rd310240b4eed": 139, "rcond": [139, 182, 192], "cutoff": 139, "odf_vertic": [139, 143, 187], "heteroscedast": 139, "analyticalmodel": 139, "clip_neg": 139, "lambda_lb": 139, "lambda_csd": 139, "rho": [139, 199, 201], "po": [139, 186], "tessel": 139, "get_3shell_gtab": [139, 146], "descoteaux07_legacy_msg": 139, "catch_warn": 139, "filterwarn": 139, "pendingdeprecationwarn": 139, "b_uniqu": 139, "data_norm": 139, "lb_matrix": 139, "dfun": 139, "col_deriv": 139, "ftol": 139, "49012e": 139, "maxfev": 139, "epsfcn": 139, "unsuccess": 139, "cov_x": 139, "fjac": 139, "ipvt": 139, "curvatur": [139, 143, 195], "curve_fit": 139, "fvec": 139, "permut": [139, 146], "nonincreas": 139, "qtf": 139, "mesg": 139, "ier": [139, 143], "minpack": 139, "lmdif": 139, "lmder": 139, "ydata": 139, "xdata": 139, "99999999": 139, "rded9a56186a6": 139, "fwdti_param": 139, "decompost": 139, "r0": 139, "r1": 139, "r3": 139, "r4": 139, "r5": 139, "tensor_el": 139, "carew": 139, "meyerand": 139, "anomal": 139, "930": [139, 180], "936": [139, 196], "20832": 139, "diso": 139, "cholesky_el": 139, "mdreg": 139, "0027": 139, "f_transform": 139, "md_reg": 139, "ft": 139, "arcsin": 139, "fw_param": 139, "piter": 139, "inter": 139, "pg": 139, "1628": [139, 183], "subdivide_octahedron": [139, 146], "create_unit_spher": [139, 146], "gq": 139, "voxel_sign": 139, "equatori": 139, "zone": 139, "max_qa": 139, "nqa": 139, "cone": 139, "band": 139, "x_scale": 139, "extracellular": 139, "fill_na": 139, "federau": 139, "874": [139, 180], "881": [139, 180, 181], "estimate_f_d_star": [139, 146], "params_f_d_star": 139, "estimate_linear_fit": [139, 146], "split_b": 139, "intercept": 139, "ivim_param": 139, "ivim_sign": 139, "cvx_fit": [139, 146], "f1": 139, "f2": 139, "ivim_mix_cost_on": [139, 146], "stoc_search_cost": [139, 146], "penros": 139, "thorough": 139, "nlls_cost": [139, 146], "x_f": 139, "stationari": 139, "exp_phi1": 139, "funtion": 139, "x_and_f_to_x_f": [139, 146], "x_f_to_x_and_f": [139, 146], "selector": [139, 145, 181], "best1bin": 139, "popsiz": 139, "mutat": 139, "recombin": 139, "polish": 139, "init": 139, "latinhypercub": 139, "worker": [139, 142, 143], "storn": 139, "price": 139, "best1exp": 139, "rand1exp": 139, "randtobest1exp": 139, "currenttobest1exp": 139, "best2exp": 139, "rand2exp": 139, "randtobest1bin": 139, "currenttobest1bin": 139, "best2bin": 139, "rand2bin": 139, "rand1bin": 139, "evolv": 139, "sobol": 139, "population_energi": 139, "dither": 139, "emploi": 139, "crossov": 139, "mutant": 139, "risk": 139, "halt": 139, "halton": 139, "latin": 139, "hypercub": 139, "qmc": 139, "bunch": [139, 143, 146], "therebi": 139, "defer": 139, "trial": [139, 143, 145], "pool": [139, 145, 146, 164, 171, 186], "overrid": [139, 140, 143, 180, 191], "pickleabl": 139, "lampinen": 139, "ly": 139, "suit": [139, 185, 187], "Their": [139, 203], "b_0": 139, "rand0": 139, "rand1": 139, "modulo": 139, "binomi": 139, "chanc": [139, 196], "widen": 139, "mpi": 139, "aid": 139, "heurist": 139, "341": [139, 187], "www1": 139, "icsi": 139, "wormington": 139, "panaccion": 139, "matnei": 139, "bowen": 139, "rai": [139, 143, 196], "genet": 139, "phil": 139, "lond": 139, "357": [139, 187], "2827": 139, "2848": 139, "congress": 139, "evolutionari": 139, "cec": 139, "cat": 139, "02th8600": 139, "mpi4pi": 139, "readthedoc": 139, "schwimmbad": 139, "9216496320061384e": 139, "lc": 139, "96632622": 139, "93367155": 139, "0011352416852625719": 139, "acklei": 139, "test_functions_for_optim": 139, "arg1": 139, "arg2": 139, "440892098500626e": 139, "trf": 139, "f_scale": 139, "diff_step": 139, "tr_solver": 139, "tr_option": 139, "jac_spars": 139, "max_nfev": 139, "lb": [139, 145, 168], "ub": [139, 143, 145, 168], "atleast_2d": 139, "dogbox": 139, "levenberg": 139, "marquardt": 139, "df": 139, "agreement": 139, "g_scale": 139, "ord": 139, "stir": 139, "g_free": 139, "reformul": 139, "jth": 139, "jjmore": 139, "soft_l1": 139, "huber": 139, "weaken": 139, "arctan": 139, "inlier": 139, "rho_": 139, "crucial": 139, "lsmr": 139, "differenc": 139, "silent": 139, "active_mask": 139, "somewhat": 139, "feasibl": 139, "njev": 139, "improp": 139, "exceed": [139, 140, 142], "verbal": 139, "marquadt": 139, "smart": 139, "motiv": [139, 203], "constitut": 139, "augment": [139, 145], "subspac": 139, "deliv": 139, "vogli": 139, "numopt": 139, "outperform": 139, "ba": [139, 140, 145], "coleman": 139, "sec": 139, "schnabel": 139, "shultz": 139, "263": [139, 186], "reid": 139, "1974": 139, "lectur": 139, "630": [139, 178], "1977": [139, 190], "lagari": 139, "wsea": 139, "corfu": 139, "greec": 139, "trigg": 139, "modern": 139, "298": [139, 187], "372": [139, 187], "fun_rosenbrock": 139, "x0_rosenbrock": 139, "res_1": 139, "8669242910846867e": 139, "8928864934219529e": 139, "infeas": [139, 189], "jac_rosenbrock": 139, "res_2": 139, "22437075": 139, "025213093946805685": 139, "5885401433157753e": 139, "fun_broyden": 139, "lil_matrix": 139, "sparsity_broyden": 139, "x0_broyden": 139, "res_3": 139, "5687069299604613e": 139, "1650454296851518e": 139, "predictor": 139, "default_rng": [139, 142, 143], "gen_data": 139, "n_outlier": 139, "standard_norm": 139, "t_min": 139, "t_max": 139, "t_train": 139, "res_lsq": 139, "exce": 139, "res_soft_l1": 139, "res_log": 139, "t_test": 139, "y_true": 139, "y_lsq": 139, "y_soft_l1": 139, "y_log": 139, "xlabel": [139, 144], "ylabel": [139, 144], "5j": 139, "f_wrap": 139, "fx": 139, "1j": 139, "2m": 139, "2n": 139, "res_wrap": 139, "49999999999925893": 139, "49999999999925893j": 139, "mapmri_coef": 139, "lopt": 139, "errorcod": 139, "mapmri_r": [139, 146], "mapmri_coeff": [139, 146], "mapmri_mu": [139, 146], "fitted_sign": [139, 146], "c13": 139, "ensembl": [139, 141], "ph": [139, 142, 143], "gaussiann": 139, "avram": 139, "act": [139, 140, 143, 144, 180, 188], "c8": 139, "r_point": 139, "recalcul": 139, "qvals_or_gtab": 139, "qvalu": [139, 187], "c14": 139, "44a": 139, "c11": 139, "eigenvalue_threshold": 139, "dti_scale_estim": 139, "static_diffus": 139, "0007": [139, 141], "eapoc": 139, "posiv": 139, "vastli": 139, "golden_direct": 139, "map_model": 139, "mapfit": 139, "index_matrix": 139, "gridsiz": 139, "radius_max": 139, "tab": [139, 185, 187], "rapidli": [139, 142, 143], "answer": [139, 143], "nff": 139, "00000000000001": 139, "gcv_startpoint": 139, "ncoef": 139, "n_coef": 139, "startpoint": [139, 146], "optimal_lambda": 139, "weights_arrai": 139, "n_of_weight": 139, "monic": 139, "laguerr": 139, "l_n": 139, "nl_n": 139, "orthopoly1d": 139, "hyp1f1": [139, 178], "confluent": 139, "hypergeometr": 139, "milton": 139, "abramowitz": 139, "stegun": 139, "handbook": 139, "dover": 139, "_1f_1": 139, "binom": 139, "l_3": 139, "p_monic": 139, "poly1d": 139, "49999999999999983": 139, "h_3": 139, "mu_squar": 139, "u0": 139, "phi_n": 139, "phi_m": 139, "submatric": 139, "rgrad": 139, "c7": 139, "ind_mat": 139, "odf_mat": 139, "n_vertic": 139, "n_mapmri_coef": 139, "odf_sh_mat": 139, "n_sh_coef": 139, "s_mat": 139, "t_mat": 139, "u_mat": 139, "q_gradient": 139, "r85c991cbd5ae": 139, "coeff": 139, "warm": 139, "qp": 139, "002": 139, "iso_comp": 139, "multishel": [139, 145, 195], "ra8b305330c9c": 139, "osqp": 139, "primal": 139, "diffusit": 139, "intrins": 139, "msdki_param": 139, "msignal": 139, "nub": 139, "items": [139, 143], "nbyte": [139, 146], "fit_arrai": 139, "__": 139, "progressbar": [139, 180, 192], "format_dict": [139, 146], "monitor": [139, 146, 182, 197], "moveto": [139, 146], "desc": 139, "mininterv": 139, "maxinterv": 139, "minit": 139, "ascii": [139, 180, 182, 186, 187], "unit_scal": 139, "dynamic_ncol": 139, "bar_format": 139, "postfix": 139, "unit_divisor": 139, "write_byt": 139, "lock_arg": 139, "colour": 139, "blank": [139, 184, 187], "resort": 139, "eta": 139, "9e9": 139, "textiowrapp": 139, "stderr": 139, "flush": 139, "resiz": 139, "fallback": 139, "meter": 139, "lag": 139, "dynamic_minit": 139, "tweak": 139, "errat": 139, "charact": [139, 145, 180, 182, 186, 187], "123456789": 139, "tty": 139, "kilo": 139, "mega": 139, "constantli": 139, "instantan": 139, "l_bar": 139, "r_bar": 139, "n_fmt": 139, "total_fmt": 139, "rate_fmt": 139, "elapsed_": 139, "rate_noinv": 139, "rate_noinv_fmt": 139, "rate_inv": 139, "rate_inv_fmt": 139, "remaining_": 139, "set_postfix": [139, 146], "hide": 139, "00ff00": 139, "nolock": 139, "cleanup": [139, 178, 180, 185, 186, 187, 188, 191, 194, 195], "overload": 139, "some_frontend": 139, "repr": [139, 182], "external_write_mod": [139, 146], "format_interv": [139, 146], "ss": 139, "format_met": [139, 146], "extra_kwarg": 139, "meaningless": 139, "382": [139, 187], "format_num": [139, 146], "3g": 139, "format_sizeof": [139, 146], "divisor": 139, "uniti": 139, "get_lock": [139, 146], "monitor_interv": [139, 146], "tqdm_kwarg": 139, "groupbi": [139, 146], "dataframegroupbi": 139, "seriesgroupbi": 139, "progress_appli": 139, "stackoverflow": 139, "18603270": 139, "tqdm_gui": 139, "set_descript": [139, 146], "set_description_str": [139, 146], "set_lock": [139, 146], "ordered_dict": 139, "set_postfix_str": [139, 146], "status_print": [139, 146], "unpaus": [139, 146], "files": 139, "current_buff": 139, "wrapattr": [139, 146], "file_obj": 139, "fobj": 139, "ndrrai": 139, "qtdmri_coef": 139, "ut": 139, "tau_scal": 139, "cvxpy_solution_optim": 139, "r9ee09c2d0d0c": 139, "re930b800cbc4": 139, "r0a1decd741db": 139, "rt_point": 139, "r1e32c9d7d6dc": 139, "qtdmri_to_mapmri_coef": [139, 146], "convers": [139, 140, 189, 204], "depen": 139, "rb426f7ff6c1f": 139, "rae9ef6a2072f": 139, "r0ef534f1e9fc": 139, "sparsity_ab": [139, 146], "sparsity_dens": [139, 146], "constrain_q0": 139, "10000000000": 139, "eco": 139, "textbf": 139, "sum_k": 139, "ik": 139, "phi_i": 139, "t_k": 139, "five": 139, "q0": 139, "cham": 139, "grid_size_r": 139, "max_radius_r": 139, "grid_size_tau": 139, "min_radius_tau": 139, "max_radius_tau": 139, "weight_arrai": 139, "04": 139, "fprime": 139, "approx_grad": 139, "factr": 139, "10000000": 139, "pgtol": 139, "iprint": 139, "15000": 139, "maxl": 139, "1e12": 139, "1e7": 139, "moder": 139, "proj": 139, "g_i": [139, 199], "pg_i": 139, "warnflag": 139, "ish": 139, "funcal": 139, "finfo": 139, "ciyou": 139, "nwu": 139, "commerci": 139, "bsd": 139, "moral": 139, "remark": 139, "0005": 139, "c4": 139, "b2": 139, "part1_uq_iso_precomp": 139, "part1_ut_precomp": 139, "part23_ut_precomp": 139, "part4_ut_precomp": 139, "r6e399bd6d05a": 139, "big_delta_start": 139, "big_delta_end": 139, "g_start": 139, "g_end": 139, "bval_isolin": 139, "7500": 139, "14000": 139, "alpha_shad": 139, "shade": 139, "c_": [139, 142, 143], "d_sq": [139, 146], "mean_d_sq": [139, 146], "themselv": 139, "_ols_fit": 139, "_wls_fit": 139, "_sdpdc_fit": 139, "bmat": 139, "egin": 139, "ig": 139, "bmatrix": 139, "otimesmathbf": 139, "_notimesmathbf": 139, "ight": 139, "obj_arr": 139, "adj_indic": 139, "adj_ind": 139, "unrol": 139, "vertex_ind": 139, "vertind": 139, "uint32": 139, "adj_count": 139, "f_csf": [139, 146], "f_gm": [139, 146], "e0": [139, 141, 187, 188], "npmin": [139, 140, 145], "conta": [139, 140, 145], "npmax": [139, 140, 145], "i_n": 139, "gautschi": 139, "slavik": 139, "875": [139, 180], "1090": [139, 180], "s0025": 139, "5718": 139, "0470267": 139, "where_b0": 139, "fit_vec": 139, "s_i": 139, "f_j": 139, "b_i": 139, "_j": 139, "b_id_": 139, "v_i": [139, 143], "d_j": 139, "hf": 139, "prod_": 139, "t_n": 139, "global_fit": 139, "elsewher": 139, "alpha_": 139, "div": 139, "triangledown": 139, "lvert": 139, "rvert": 139, "biggr": 139, "rvert_": 139, "discrep": [139, 180, 187, 192], "chambol": 139, "n_vox": 139, "boil": 139, "fromkei": [139, 143, 146], "move_to_end": [139, 143, 146], "keyerror": [139, 143], "popitem": [139, 143, 146], "lifo": [139, 143], "fifo": [139, 143], "setdefault": [139, 143, 146], "lack": [139, 143], "elasticnet": 139, "betwe": 139, "parallel_backend": 139, "joblib": [139, 195], "parallelbackendbas": 139, "backend": 139, "loki": 139, "bottleneck": 139, "gil": 139, "runtimewarn": [139, 187, 191], "inexact": 139, "nanvar": 139, "inaccur": [139, 196], "allevi": 139, "6666666666666665": 139, "prinicip": 139, "behrens2007": 139, "tej": [139, 180], "berg": 139, "jbabdi": 139, "rushworth": 139, "mf": [139, 141], "woolrich": 139, "mw": 139, "tensor_matrix": 139, "stick_matrix": 139, "assume_norm": [139, 145], "999": [139, 145, 180], "qball": [139, 185], "signal_object": 139, "where_dwi": 139, "boostrap": 139, "residualbootstrapwapp": 139, "norm_factor": 139, "rectifi": 139, "log_ap": 139, "ixjxkxc": 139, "2l": [139, 203], "ixjxkx6": 139, "lacerda": 139, "catani": 139, "simmon": 139, "haroon": 139, "n_coeff": 139, "rarrow": 139, "3l": 139, "8n": 139, "r8020d68d5dcd": 139, "out_sh_coeff": 139, "full_sh_coeff": 139, "r2032a14b59d6": 139, "dirac": [139, 196], "leverag": 139, "hd": 139, "lcr": 139, "ruturn": 139, "exclus": [139, 143], "random_integ": [139, 184], "r191e35d27b5b": 139, "r700bd48b1688": 139, "y_mn": 139, "sph_harm": [139, 178], "gadian": 139, "1176": [139, 180, 187], "1185": [139, 180], "r52104e733a02": 139, "rc2e19fb985c5": 139, "r8e8198e28e5b": 139, "use_scipi": 139, "onward": 139, "interchang": 139, "agre": [139, 143, 203], "shore_coef": 139, "shore_coeff": [139, 146], "pdf_grid": [139, 146], "025330295910584444": [139, 141], "constrain_e0": 139, "positive_constraint": 139, "amongst": 139, "rathi": 139, "20e": 139, "get_isbi2013_2shell_gtab": [139, 146], "rf0cd5775fa0d": 139, "nlm": 139, "biggl": 139, "dfrac": 139, "y_l": [139, 203], "qtextbf": 139, "sphere_vertic": 139, "rtab": 139, "dipyseg": 140, "features1": 140, "features2": 140, "nb_dimens": [140, 142], "err_msg": [140, 143], "assertionerror": [140, 143], "assert_allclos": [140, 143], "assert_array_almost_equal_nulp": [140, 143], "assert_array_max_ulp": [140, 143], "33333": [140, 143], "4408921e": [140, 143], "41357986e": [140, 143], "141593": [140, 143], "nulp": [140, 143], "rtol": [140, 143], "fill_valu": [140, 143, 146], "arrays1": 140, "arrays2": 140, "streamlinedistancemetr": [140, 146], "bundlemindistancematrixmetr": [140, 146], "cluster_map": [140, 145], "evaluate_result": [140, 145, 146], "slr_select": [140, 145], "similiar": [140, 145], "neirborhood": [140, 145], "ba_valu": [140, 145], "prune": [140, 142, 143, 145, 170], "bmd_valu": [140, 145], "slr_metric": [140, 145, 170], "slr_x0": [140, 145], "slr_bound": [140, 145], "slr_method": [140, 145], "recognized_transf": [140, 145], "recognized_label": [140, 145], "ouput": [140, 145], "streamlineregistrationmap": [140, 146], "exhaust": 140, "from_iter": [140, 146], "lazili": 140, "recognized_bundl": 140, "expert_bundl": 140, "inout": 140, "dtracks0": 140, "dtracks1": 140, "tracksa": [140, 143], "nm": [140, 143], "tracksb": [140, 143], "lt": 140, "500000": 140, "metaclass": 140, "unrel": 140, "issubclass": 140, "mro": 140, "refdata": [140, 146], "id_datum": 140, "add_clust": [140, 146], "clusters_s": [140, 146], "get_large_clust": [140, 146], "get_small_clust": [140, 146], "max_siz": 140, "remove_clust": [140, 146], "mdf_12point": [140, 142], "max_nb_clust": [140, 142], "2147483647": [140, 142], "nk": [140, 142], "farther": [140, 142], "tradeoff": [140, 142, 143], "quickbundlex": 140, "is_leaf": [140, 146], "child": [140, 145], "get_clust": [140, 146], "iter_preord": [140, 146], "traverse_postord": [140, 146], "wanted_level": 140, "funcobj": 140, "my_abstract_method": 140, "clusters_list": 140, "hierarchi": 140, "centroid_shap": 140, "get_cluster_map": [140, 146], "get_stat": [140, 146], "get_tree_cluster_map": [140, 146], "c_infer_shap": 140, "masked_vol": 140, "border_valu": [140, 145], "brute_forc": [140, 145], "anymor": [140, 145, 179, 183, 185, 187, 192, 196], "placement": [140, 145], "grey_dil": [140, 145], "binary_eros": [140, 145], "binary_clos": [140, 145], "binary_open": [140, 145], "locu": [140, 145], "dilation_": [140, 145], "28morphologi": [140, 145], "mathematical_morphologi": [140, 145], "struct1": [140, 145], "struct2": [140, 145], "coars": 140, "new_cc_mask": 140, "morpholog": 140, "iterate_structur": 140, "erod": 140, "struct": [140, 182, 195], "footprint": [140, 195], "medfilt2d": 140, "specialis": 140, "input_volum": [140, 145, 169], "bet": [140, 145], "maskedvolum": [140, 145], "foreground": 140, "s_method": 140, "thresh": 140, "threshold_otsu": 140, "tensor_fit": [140, 145], "r_min": [140, 145], "r_max": [140, 145], "g_min": [140, 145], "g_max": [140, 145], "b_min": [140, 145], "b_max": [140, 145], "datum1": 140, "datum2": 140, "c_dist": 140, "c_are_compat": 140, "spawn": 140, "data1": 140, "llist": 140, "mu_": 140, "sigma_": 140, "initialize_param_uniform": [140, 146], "negloglikelihood": [140, 146], "sigmasq": 140, "nloglik": 140, "prob_imag": [140, 146], "p_l_n": 140, "prob_neighborhood": [140, 146], "p_l_y": 140, "seg_stat": [140, 146], "seg_imag": 140, "update_param": [140, 146], "jan": 140, "mu_upd": 140, "var_upd": 140, "icm_is": [140, 146], "seg": 140, "pott": 140, "Ising": 140, "potts_model": 140, "new_seg": 140, "initialize_maximum_likelihood": [140, 146], "loglikelihood": 140, "neglog": 140, "likelihhood": 140, "stan": 140, "pln": 140, "upper_bound": 140, "upperbound": 140, "spicif": 140, "save_histori": 140, "posteriori": 140, "rice": [140, 141], "rayleigh": [140, 141], "gudbjartson": [140, 141], "patz": [140, 141], "910": [140, 141, 179], "914": [140, 141, 179], "signal_w_nois": [140, 141], "0004": 141, "00628947": 141, "01257895": 141, "01886842": 141, "0251579": 141, "03144737": 141, "03773685": 141, "04402632": 141, "0503158": 141, "05660527": 141, "06289475": 141, "06918422": 141, "0754737": 141, "08176317": 141, "08805265": 141, "09434212": 141, "1006316": 141, "10692107": 141, "11321055": 141, "11950002": 141, "1257895": 141, "13207897": 141, "13836845": 141, "14465792": 141, "15094739": 141, "15723687": 141, "16352634": 141, "16981582": 141, "17610529": 141, "18239477": 141, "18868424": 141, "19497372": 141, "20126319": 141, "20755267": 141, "21384214": 141, "22013162": 141, "22642109": 141, "23271057": 141, "23900004": 141, "24528952": 141, "25157899": 141, "25786847": 141, "26415794": 141, "27044742": 141, "27673689": 141, "28302637": 141, "28931584": 141, "29560531": 141, "30189479": 141, "30818426": 141, "31447374": 141, "32076321": 141, "32705269": 141, "33334216": 141, "33963164": 141, "34592111": 141, "35221059": 141, "35850006": 141, "36478954": 141, "37107901": 141, "37736849": 141, "38365796": 141, "38994744": 141, "39623691": 141, "40252639": 141, "40881586": 141, "41510534": 141, "42139481": 141, "42768429": 141, "43397376": 141, "44026323": 141, "44655271": 141, "45284218": 141, "45913166": 141, "46542113": 141, "47171061": 141, "47800008": 141, "48428956": 141, "49057903": 141, "49686851": 141, "50315798": 141, "50944746": 141, "51573693": 141, "52202641": 141, "52831588": 141, "53460536": 141, "54089483": 141, "54718431": 141, "55347378": 141, "55976326": 141, "56605273": 141, "57234221": 141, "57863168": 141, "58492115": 141, "59121063": 141, "5975001": 141, "60378958": 141, "61007905": 141, "61636853": 141, "622658": 141, "62894748": 141, "63523695": 141, "64152643": 141, "6478159": 141, "65410538": 141, "66039485": 141, "66668433": 141, "6729738": 141, "67926328": 141, "68555275": 141, "69184223": 141, "6981317": 141, "70442118": 141, "71071065": 141, "71700013": 141, "7232896": 141, "72957907": 141, "73586855": 141, "74215802": 141, "7484475": 141, "75473697": 141, "76102645": 141, "76731592": 141, "7736054": 141, "77989487": 141, "78618435": 141, "79247382": 141, "7987633": 141, "80505277": 141, "81134225": 141, "81763172": 141, "8239212": 141, "83021067": 141, "83650015": 141, "84278962": 141, "8490791": 141, "85536857": 141, "86165805": 141, "86794752": 141, "87423699": 141, "88052647": 141, "88681594": 141, "89310542": 141, "89939489": 141, "90568437": 141, "91197384": 141, "91826332": 141, "92455279": 141, "93084227": 141, "93713174": 141, "94342122": 141, "94971069": 141, "95600017": 141, "96228964": 141, "96857912": 141, "97486859": 141, "98115807": 141, "98744754": 141, "99373702": 141, "00002649": 141, "00631597": 141, "01260544": 141, "01889491": 141, "02518439": 141, "03147386": 141, "03776334": 141, "04405281": 141, "05034229": 141, "05663176": 141, "06292124": 141, "06921071": 141, "07550019": 141, "08178966": 141, "08807914": 141, "09436861": 141, "10065809": 141, "10694756": 141, "11323704": 141, "11952651": 141, "12581599": 141, "13210546": 141, "13839494": 141, "14468441": 141, "15097389": 141, "15726336": 141, "16355283": 141, "16984231": 141, "17613178": 141, "18242126": 141, "18871073": 141, "19500021": 141, "20128968": 141, "20757916": 141, "21386863": 141, "22015811": 141, "22644758": 141, "23273706": 141, "23902653": 141, "24531601": 141, "25160548": 141, "25789496": 141, "26418443": 141, "27047391": 141, "27676338": 141, "28305286": 141, "28934233": 141, "29563181": 141, "30192128": 141, "30821075": 141, "31450023": 141, "3207897": 141, "32707918": 141, "33336865": 141, "33965813": 141, "3459476": 141, "35223708": 141, "35852655": 141, "36481603": 141, "3711055": 141, "37739498": 141, "38368445": 141, "38997393": 141, "3962634": 141, "40255288": 141, "40884235": 141, "41513183": 141, "4214213": 141, "42771078": 141, "43400025": 141, "44028973": 141, "4465792": 141, "45286867": 141, "45915815": 141, "46544762": 141, "4717371": 141, "47802657": 141, "48431605": 141, "49060552": 141, "496895": 141, "50318447": 141, "50947395": 141, "51576342": 141, "5220529": 141, "52834237": 141, "53463185": 141, "54092132": 141, "5472108": 141, "55350027": 141, "55978975": 141, "56607922": 141, "5723687": 141, "57865817": 141, "58494765": 141, "59123712": 141, "59752659": 141, "60381607": 141, "61010554": 141, "61639502": 141, "62268449": 141, "62897397": 141, "63526344": 141, "64155292": 141, "64784239": 141, "65413187": 141, "66042134": 141, "66671082": 141, "67300029": 141, "67928977": 141, "68557924": 141, "69186872": 141, "69815819": 141, "70444767": 141, "71073714": 141, "71702662": 141, "72331609": 141, "72960557": 141, "73589504": 141, "74218451": 141, "74847399": 141, "75476346": 141, "76105294": 141, "76734241": 141, "77363189": 141, "77992136": 141, "78621084": 141, "79250031": 141, "79878979": 141, "80507926": 141, "81136874": 141, "81765821": 141, "82394769": 141, "83023716": 141, "83652664": 141, "84281611": 141, "84910559": 141, "85539506": 141, "86168454": 141, "86797401": 141, "87426349": 141, "88055296": 141, "88684243": 141, "89313191": 141, "89942138": 141, "90571086": 141, "91200033": 141, "91828981": 141, "92457928": 141, "93086876": 141, "93715823": 141, "94344771": 141, "94973718": 141, "95602666": 141, "96231613": 141, "96860561": 141, "97489508": 141, "98118456": 141, "98747403": 141, "99376351": 141, "00005298": 141, "00634246": 141, "01263193": 141, "01892141": 141, "02521088": 141, "03150035": 141, "03778983": 141, "0440793": 141, "05036878": 141, "05665825": 141, "06294773": 141, "0692372": 141, "07552668": 141, "08181615": 141, "08810563": 141, "0943951": 141, "10068458": 141, "10697405": 141, "11326353": 141, "119553": 141, "12584248": 141, "13213195": 141, "13842143": 141, "1447109": 141, "15100038": 141, "15728985": 141, "16357932": 141, "1698688": 141, "17615827": 141, "18244775": 141, "18873722": 141, "1950267": 141, "20131617": 141, "20760565": 141, "21389512": 141, "2201846": 141, "22647407": 141, "23276355": 141, "23905302": 141, "2453425": 141, "25163197": 141, "25792145": 141, "26421092": 141, "2705004": 141, "27678987": 141, "28307935": 141, "28936882": 141, "2956583": 141, "30194777": 141, "30823724": 141, "31452672": 141, "32081619": 141, "32710567": 141, "33339514": 141, "33968462": 141, "34597409": 141, "35226357": 141, "35855304": 141, "36484252": 141, "37113199": 141, "37742147": 141, "38371094": 141, "39000042": 141, "39628989": 141, "40257937": 141, "40886884": 141, "41515832": 141, "42144779": 141, "42773727": 141, "43402674": 141, "44031622": 141, "44660569": 141, "45289516": 141, "45918464": 141, "46547411": 141, "47176359": 141, "47805306": 141, "48434254": 141, "49063201": 141, "49692149": 141, "50321096": 141, "50950044": 141, "51578991": 141, "52207939": 141, "52836886": 141, "53465834": 141, "54094781": 141, "54723729": 141, "55352676": 141, "55981624": 141, "56610571": 141, "57239519": 141, "57868466": 141, "58497414": 141, "59126361": 141, "59755308": 141, "60384256": 141, "61013203": 141, "61642151": 141, "62271098": 141, "62900046": 141, "63528993": 141, "64157941": 141, "64786888": 141, "65415836": 141, "66044783": 141, "66673731": 141, "67302678": 141, "67931626": 141, "68560573": 141, "69189521": 141, "69818468": 141, "70447416": 141, "71076363": 141, "71705311": 141, "72334258": 141, "72963206": 141, "73592153": 141, "742211": 141, "74850048": 141, "75478995": 141, "76107943": 141, "7673689": 141, "77365838": 141, "77994785": 141, "78623733": 141, "7925268": 141, "79881628": 141, "80510575": 141, "81139523": 141, "8176847": 141, "82397418": 141, "83026365": 141, "83655313": 141, "8428426": 141, "84913208": 141, "85542155": 141, "86171103": 141, "8680005": 141, "87428998": 141, "88057945": 141, "88686892": 141, "8931584": 141, "89944787": 141, "90573735": 141, "91202682": 141, "9183163": 141, "92460577": 141, "93089525": 141, "93718472": 141, "9434742": 141, "94976367": 141, "95605315": 141, "96234262": 141, "9686321": 141, "97492157": 141, "98121105": 141, "98750052": 141, "99379": 141, "00007947": 141, "00636895": 141, "01265842": 141, "0189479": 141, "02523737": 141, "03152684": 141, "03781632": 141, "04410579": 141, "05039527": 141, "05668474": 141, "06297422": 141, "06926369": 141, "07555317": 141, "08184264": 141, "08813212": 141, "09442159": 141, "10071107": 141, "10700054": 141, "11329002": 141, "11957949": 141, "12586897": 141, "13215844": 141, "13844792": 141, "14473739": 141, "15102687": 141, "15731634": 141, "16360582": 141, "16989529": 141, "17618476": 141, "18247424": 141, "18876371": 141, "19505319": 141, "20134266": 141, "20763214": 141, "21392161": 141, "22021109": 141, "22650056": 141, "23279004": 141, "23907951": 141, "24536899": 141, "25165846": 141, "25794794": 141, "26423741": 141, "27052689": 141, "27681636": 141, "28310584": 141, "28939531": 141, "29568479": 141, "30197426": 141, "30826374": 141, "31455321": 141, "32084268": 141, "32713216": 141, "33342163": 141, "33971111": 141, "34600058": 141, "35229006": 141, "35857953": 141, "36486901": 141, "37115848": 141, "37744796": 141, "38373743": 141, "39002691": 141, "39631638": 141, "40260586": 141, "40889533": 141, "41518481": 141, "42147428": 141, "42776376": 141, "43405323": 141, "44034271": 141, "44663218": 141, "45292166": 141, "45921113": 141, "4655006": 141, "47179008": 141, "47807955": 141, "48436903": 141, "4906585": 141, "49694798": 141, "50323745": 141, "50952693": 141, "5158164": 141, "52210588": 141, "52839535": 141, "53468483": 141, "5409743": 141, "54726378": 141, "55355325": 141, "55984273": 141, "5661322": 141, "57242168": 141, "57871115": 141, "58500063": 141, "5912901": 141, "59757958": 141, "60386905": 141, "61015852": 141, "616448": 141, "62273747": 141, "62902695": 141, "63531642": 141, "6416059": 141, "64789537": 141, "65418485": 141, "66047432": 141, "6667638": 141, "67305327": 141, "67934275": 141, "68563222": 141, "6919217": 141, "69821117": 141, "70450065": 141, "71079012": 141, "7170796": 141, "72336907": 141, "72965855": 141, "73594802": 141, "7422375": 141, "74852697": 141, "75481644": 141, "76110592": 141, "76739539": 141, "77368487": 141, "77997434": 141, "78626382": 141, "79255329": 141, "79884277": 141, "80513224": 141, "81142172": 141, "81771119": 141, "82400067": 141, "83029014": 141, "83657962": 141, "84286909": 141, "84915857": 141, "85544804": 141, "86173752": 141, "86802699": 141, "87431647": 141, "88060594": 141, "88689542": 141, "89318489": 141, "89947436": 141, "90576384": 141, "91205331": 141, "91834279": 141, "92463226": 141, "93092174": 141, "93721121": 141, "94350069": 141, "94979016": 141, "95607964": 141, "96236911": 141, "96865859": 141, "97494806": 141, "98123754": 141, "98752701": 141, "99381649": 141, "00010596": 141, "00639544": 141, "01268491": 141, "01897439": 141, "02526386": 141, "03155334": 141, "03784281": 141, "04413228": 141, "05042176": 141, "05671123": 141, "06300071": 141, "06929018": 141, "07557966": 141, "08186913": 141, "08815861": 141, "09444808": 141, "10073756": 141, "10702703": 141, "11331651": 141, "11960598": 141, "12589546": 141, "13218493": 141, "13847441": 141, "14476388": 141, "15105336": 141, "15734283": 141, "16363231": 141, "16992178": 141, "17621126": 141, "18250073": 141, "1887902": 141, "19507968": 141, "20136915": 141, "20765863": 141, "2139481": 141, "22023758": 141, "22652705": 141, "23281653": 141, "239106": 141, "24539548": 141, "25168495": 141, "25797443": 141, "2642639": 141, "27055338": 141, "27684285": 141, "28313233": 141, "2894218": 141, "29571128": 141, "30200075": 141, "30829023": 141, "3145797": 141, "32086918": 141, "32715865": 141, "33344812": 141, "3397376": 141, "34602707": 141, "35231655": 141, "35860602": 141, "3648955": 141, "37118497": 141, "37747445": 141, "38376392": 141, "3900534": 141, "39634287": 141, "40263235": 141, "40892182": 141, "4152113": 141, "42150077": 141, "42779025": 141, "43407972": 141, "4403692": 141, "44665867": 141, "45294815": 141, "45923762": 141, "4655271": 141, "47181657": 141, "47810604": 141, "48439552": 141, "49068499": 141, "49697447": 141, "50326394": 141, "50955342": 141, "51584289": 141, "52213237": 141, "52842184": 141, "53471132": 141, "54100079": 141, "54729027": 141, "55357974": 141, "55986922": 141, "56615869": 141, "57244817": 141, "57873764": 141, "58502712": 141, "59131659": 141, "59760607": 141, "60389554": 141, "61018502": 141, "61647449": 141, "62276396": 141, "62905344": 141, "63534291": 141, "64163239": 141, "64792186": 141, "65421134": 141, "66050081": 141, "66679029": 141, "67307976": 141, "67936924": 141, "68565871": 141, "69194819": 141, "69823766": 141, "70452714": 141, "71081661": 141, "71710609": 141, "72339556": 141, "72968504": 141, "73597451": 141, "74226399": 141, "74855346": 141, "75484294": 141, "76113241": 141, "76742188": 141, "77371136": 141, "78000083": 141, "78629031": 141, "79257978": 141, "79886926": 141, "80515873": 141, "81144821": 141, "81773768": 141, "82402716": 141, "83031663": 141, "83660611": 141, "84289558": 141, "84918506": 141, "85547453": 141, "86176401": 141, "86805348": 141, "87434296": 141, "88063243": 141, "88692191": 141, "89321138": 141, "89950086": 141, "90579033": 141, "9120798": 141, "91836928": 141, "92465875": 141, "93094823": 141, "9372377": 141, "94352718": 141, "94981665": 141, "95610613": 141, "9623956": 141, "96868508": 141, "97497455": 141, "98126403": 141, "9875535": 141, "99384298": 141, "00013245": 141, "00642193": 141, "0127114": 141, "01900088": 141, "02529035": 141, "03157983": 141, "0378693": 141, "04415878": 141, "05044825": 141, "05673772": 141, "0630272": 141, "06931667": 141, "07560615": 141, "08189562": 141, "0881851": 141, "09447457": 141, "10076405": 141, "10705352": 141, "113343": 141, "11963247": 141, "12592195": 141, "13221142": 141, "1385009": 141, "14479037": 141, "15107985": 141, "15736932": 141, "1636588": 141, "16994827": 141, "17623775": 141, "18252722": 141, "1888167": 141, "19510617": 141, "20139564": 141, "20768512": 141, "21397459": 141, "22026407": 141, "22655354": 141, "23284302": 141, "23913249": 141, "24542197": 141, "25171144": 141, "25800092": 141, "26429039": 141, "27057987": 141, "27686934": 141, "28315882": 141, "28944829": 141, "29573777": 141, "30202724": 141, "30831672": 141, "31460619": 141, "32089567": 141, "32718514": 141, "33347462": 141, "33976409": 141, "34605356": 141, "35234304": 141, "35863251": 141, "36492199": 141, "37121146": 141, "37750094": 141, "38379041": 141, "39007989": 141, "39636936": 141, "40265884": 141, "40894831": 141, "41523779": 141, "42152726": 141, "42781674": 141, "43410621": 141, "44039569": 141, "44668516": 141, "45297464": 141, "45926411": 141, "46555359": 141, "47184306": 141, "47813254": 141, "48442201": 141, "49071148": 141, "49700096": 141, "50329043": 141, "50957991": 141, "51586938": 141, "52215886": 141, "52844833": 141, "53473781": 141, "54102728": 141, "54731676": 141, "55360623": 141, "55989571": 141, "56618518": 141, "57247466": 141, "57876413": 141, "58505361": 141, "59134308": 141, "59763256": 141, "60392203": 141, "61021151": 141, "61650098": 141, "62279046": 141, "62907993": 141, "6353694": 141, "64165888": 141, "64794835": 141, "65423783": 141, "6605273": 141, "66681678": 141, "67310625": 141, "67939573": 141, "6856852": 141, "69197468": 141, "69826415": 141, "70455363": 141, "7108431": 141, "71713258": 141, "72342205": 141, "72971153": 141, "736001": 141, "74229048": 141, "74857995": 141, "75486943": 141, "7611589": 141, "76744838": 141, "77373785": 141, "78002732": 141, "7863168": 141, "79260627": 141, "79889575": 141, "80518522": 141, "8114747": 141, "81776417": 141, "82405365": 141, "83034312": 141, "8366326": 141, "84292207": 141, "84921155": 141, "85550102": 141, "8617905": 141, "86807997": 141, "87436945": 141, "88065892": 141, "8869484": 141, "89323787": 141, "89952735": 141, "90581682": 141, "9121063": 141, "91839577": 141, "92468524": 141, "93097472": 141, "93726419": 141, "94355367": 141, "94984314": 141, "95613262": 141, "96242209": 141, "96871157": 141, "97500104": 141, "98129052": 141, "98757999": 141, "99386947": 141, "00015894": 141, "00644842": 141, "01273789": 141, "01902737": 141, "02531684": 141, "03160632": 141, "03789579": 141, "04418527": 141, "05047474": 141, "05676422": 141, "06305369": 141, "06934316": 141, "07563264": 141, "08192211": 141, "08821159": 141, "09450106": 141, "10079054": 141, "10708001": 141, "11336949": 141, "11965896": 141, "12594844": 141, "13223791": 141, "13852739": 141, "14481686": 141, "15110634": 141, "15739581": 141, "16368529": 141, "16997476": 141, "17626424": 141, "18255371": 141, "18884319": 141, "19513266": 141, "20142214": 141, "20771161": 141, "21400108": 141, "22029056": 141, "22658003": 141, "23286951": 141, "23915898": 141, "24544846": 141, "25173793": 141, "25802741": 141, "26431688": 141, "27060636": 141, "27689583": 141, "28318531": 141, "datashap": 141, "2026834": 141, "40536679": 141, "60805019": 141, "81073359": 141, "01341699": 141, "21610038": 141, "41878378": 141, "62146718": 141, "82415057": 141, "02683397": 141, "22951737": 141, "43220076": 141, "63488416": 141, "83756756": 141, "04025096": 141, "24293435": 141, "44561775": 141, "64830115": 141, "85098454": 141, "05366794": 141, "25635134": 141, "45903473": 141, "66171813": 141, "86440153": 141, "06708493": 141, "26976832": 141, "47245172": 141, "67513512": 141, "87781851": 141, "08050191": 141, "orbit": 141, "thick": 141, "cylind": [141, 143], "soderman": 141, "s\u00f6derman": 141, "oll": 141, "bengt": 141, "j\u00f6nsson": 141, "unweight": [141, 142, 143], "remaind": 141, "yaniv": 141, "matmul": 141, "bla": 141, "tensordot": 141, "einsum": [141, 185], "einstein": 141, "multi_dot": [141, 196], "2j": 141, "3j": 141, "0j": 141, "499128": 141, "d_comp": 141, "multicompartment": 141, "imperm": 141, "neglect": [141, 143], "bvals_2": 141, "bvecs_2": 141, "odf_vert": 141, "pdf_point": 141, "leafsiz": [142, 143, 146], "compact_nod": [142, 143], "copy_data": [142, 143], "balanced_tre": [142, 143], "boxsiz": [142, 143, 146], "kd": [142, 143], "kdtree": [142, 146], "concern": [142, 196], "bogu": [142, 143], "brute": [142, 143], "hyperrectangl": [142, 143], "midpoint": [142, 146], "toroid": [142, 143], "x_i": [142, 143], "l_i": [142, 143], "maneewongvatana": [142, 143], "mount": [142, 143], "ckdtreenod": [142, 143], "count_neighbor": [142, 143, 146], "nearbi": [142, 143], "minkowski": [142, 143], "overflow": [142, 143, 178, 183, 187], "cosmologi": [142, 143], "assembli": [142, 143], "landi": [142, 143], "szalai": [142, 143], "xi": [142, 143], "loos": [142, 143, 199], "dual": [142, 143], "redshift": [142, 143], "sky": [142, 143], "astro": [142, 143], "0012333": [142, 143], "astrophys": [142, 143], "1086": [142, 180], "172900": 142, "sheth": [142, 143], "connolli": [142, 143], "skibba": [142, 143], "galaxi": [142, 143], "0511773": [142, 143], "hawkin": [142, 143], "2df": [142, 143], "survei": [142, 143], "peculiar": [142, 143], "veloc": [142, 143], "monthli": [142, 143], "astronom": [142, 143], "1046": [142, 180], "1365": 142, "2966": 142, "07063": 142, "5647": [142, 143], "issuecom": [142, 143], "168474926": [142, 143], "points1": [142, 143], "points2": [142, 143], "kd_tree1": [142, 143], "kd_tree2": [142, 143], "query_ball_tre": [142, 143, 146], "distance_upper_bound": [142, 143], "manhattan": [142, 143], "n_job": 142, "period": [142, 143, 191], "mgrid": [142, 143], "dd": [142, 143], "sep": [142, 143], "2236068": [142, 143], "unsqueez": [142, 143], "23606798": [142, 143], "80622577": [142, 143], "query_ball_point": [142, 143, 146], "return_sort": [142, 143], "return_length": [142, 143], "nearer": [142, 143], "indici": [142, 143], "versionad": 142, "nearby_point": [142, 143], "markers": [142, 143], "og": [142, 143], "query_pair": [142, 143, 146], "output_typ": [142, 143], "kd_tree": [142, 143], "sparse_distance_matrix": [142, 143, 146], "max_dist": [142, 143], "dok_matrix": [142, 143], "sdm": [142, 143], "12295571": [142, 143], "28942611": [142, 143], "2333084": [142, 143], "24617575": [142, 143], "29571802": [142, 143], "26836782": [142, 143], "distance_matrix": [142, 143, 146], "56906522": [142, 143], "39923701": [142, 143], "8658745": [142, 143], "79428925": [142, 143], "37327919": [142, 143], "7225693": [142, 143], "87665969": [142, 143], "32580855": [142, 143], "75679479": [142, 143], "30088013": [142, 143], "6395831": [142, 143], "33630734": [142, 143], "31994999": [142, 143], "72658602": [142, 143], "71124834": [142, 143], "55396483": [142, 143], "90785663": [142, 143], "57714465": [142, 143], "6473269": [142, 143], "profile_stat": 142, "orient_bi": 142, "weights_kwarg": 142, "outlin": 142, "pname": [142, 145], "bname": [142, 145], "group_id": [142, 145], "dir_nam": [142, 145], "hd5": [142, 145], "10001": [142, 145], "target_bundl": [142, 145], "no_disk": [142, 145, 150, 151], "return_mahalnobi": 142, "return_mahalanobi": 142, "n_streamlin": [142, 143], "iv": 142, "7320508075688772": 142, "as_gener": [142, 143], "ndarrrai": [142, 143], "n_node": [142, 143], "dipytrack": 143, "distanch": 143, "looser": 143, "vagari": 143, "assert_equ": [143, 146, 182, 185, 191], "33339": 143, "57136612e": 143, "nb_streamlin": 143, "min_nb_point": 143, "max_nb_point": 143, "n_pol": 143, "392": [143, 190, 192], "rougher": 143, "393": [143, 187], "decahexagon": 143, "7853": 143, "octagon": 143, "characteristic_point": 143, "helix": 143, "xyza": 143, "hit": 143, "rcd": 143, "refx": 143, "bundlex": 143, "70710683": 143, "70710677": 143, "sa": [143, 145], "sb": [143, 145], "collis": 143, "ericson": 143, "reassign": 143, "distant": 143, "sqd_thr": 143, "larch_fast_split": 143, "3track": 143, "sqd_trh": 143, "trh": 143, "rep3": 143, "whang": 143, "sigmod07": 143, "end0": 143, "start0": 143, "end1": 143, "start1": 143, "angle_dist": 143, "l_0": 143, "l_1": 143, "cos_theta_squar": 143, "perpendicular_dist": 143, "l0": 143, "k0": 143, "u1": 143, "u2": 143, "pe": 143, "lperp1": 143, "lperp2": 143, "6f": 143, "787888": 143, "d_thr": 143, "t_1": 143, "t_2": 143, "fo": 143, "xyz1": 143, "xyz2": 143, "laidlaw": 143, "ieeexplor": 143, "xpl": 143, "freeabs_al": 143, "jsp": 143, "arnumb": 143, "4479455": 143, "coroug": 143, "avg_mcd": 143, "average_mean_closest_dist": 143, "min_mcd": 143, "minimum_mean_closest_dist": 143, "max_mcd": 143, "maximum_mean_closest_dist": 143, "minab": 143, "minba": 143, "avg_minab": 143, "avg_minba": 143, "min_minab": 143, "min_minba": 143, "vagu": 143, "tracks_combinations_of_2": 143, "mean_closest_dist": 143, "mcd_i": 143, "mcd_j": 143, "vec_out": 143, "sq_dist_thr": 143, "sq_distanc": 143, "f4": 143, "3pt": 143, "721573": 143, "min_fiberlength": 143, "minimum_length": 143, "max_windows": 143, "meesters2016_hbm": 143, "stress": 143, "ckdtree": [143, 146], "innernod": [143, 146], "leafnod": [143, 146], "adsab": 143, "harvard": 143, "1993apj": 143, "412": [143, 187], "64l": 143, "2003mnra": 143, "78h": 143, "split_dim": [143, 146], "ckdtree_nod": 143, "kth": 143, "bounds_error": 143, "assume_sort": 143, "_interpolator1d": 143, "slinear": 143, "zeroth": 143, "x_new": 143, "monoton": 143, "splrep": 143, "fitpack": 143, "univariatesplin": 143, "interp2d": 143, "xnew": 143, "ynew": 143, "streamlines_length": 143, "streamlines_scor": 143, "tracks1": 143, "tracks2": 143, "m1": 143, "track2track": 143, "tl": 143, "indices2": 143, "colum": 143, "to_fit": 143, "weighted_sign": 143, "relative_sign": 143, "mean_sig": 143, "vox_data": 143, "speedi": 143, "calc_sign": [143, 146], "maker": 143, "mitig": 143, "in_arrai": 143, "u_return": 143, "unique_idx": 143, "v2f": 143, "v2fn": 143, "interp_out_doubl": [143, 145], "interp_out_view": [143, 145], "check_point": [143, 145, 146], "get_exclud": [143, 145, 146], "get_includ": [143, 145, 146], "wm_map": 143, "gm_map": 143, "csf_map": 143, "fixedstep": [143, 145], "random_se": [143, 145], "pft_max_trial": [143, 145], "back_tracking_dist": [143, 145, 176], "front_tracking_dist": [143, 145, 176], "intenum": 143, "pyerror": [143, 146], "workhors": 143, "seed_po": 143, "first_step": 143, "prev_dir": 143, "fixed_step": 143, "stream_statu": 143, "pft_max_nbr_back_step": 143, "pft_max_nbr_front_step": 143, "particle_path": 143, "pft_max_step": 143, "particle_dir": 143, "particle_weight": 143, "particle_step": 143, "particle_stream_status": 143, "triangles_mask": 143, "triangles_weight": 143, "rand_gen": 143, "triangles_indic": 143, "trilinear_coord": 143, "triangles_idx": 143, "trilin_coord": 143, "trilinear_coordin": 143, "vts_valu": 143, "vertices_norm": 143, "vertices_color": 143, "triangles_valu": 143, "travel": 143, "frenet": 143, "serret": 143, "mathwork": [143, 144], "matlabcentr": [143, 144], "fileexchang": [143, 144], "11169": 143, "parametris": 143, "qquad": 143, "tangent": 143, "binorm": 143, "kappa": 143, "torsion": 143, "tm": 143, "ic": 143, "mathematicali": 143, "tf": 143, "sph_cent": 143, "sph_radiu": 143, "xyzn": 143, "wasp": 143, "uwa": 143, "pbourk": 143, "spherelin": 143, "cpp": 143, "expected_len": 143, "len_along": 143, "cumsum": 143, "longest": [143, 145], "longest_or_indic": 143, "va": 143, "51010101": 143, "09883545": 143, "knot": 143, "splder": 143, "bspline": 143, "sproot": 143, "spald": 143, "splint": 143, "bisplrep": 143, "bisplev": 143, "boor": 143, "cox": 143, "inst": 143, "dierckx": 143, "monograph": 143, "oxford": 143, "cookbook": 143, "netlib": 143, "datapoint": 143, "spiral": 143, "ue": 143, "quiet": 143, "parcur": 143, "trade": 143, "fp": 143, "bivariatesplin": 143, "make_interp_splin": 143, "171": [143, 187], "tw55": 143, "dept": 143, "leuven": 143, "1981": [143, 190], "limacon": 143, "new_point": 143, "ro": 143, "step_sz": 143, "max_point": 143, "lenind": 143, "types": 143, "cmc": [143, 145, 176], "correction_factor": [143, 145], "pxd": [143, 145], "m_a": 143, "m_b": 143, "braycurti": 143, "canberra": 143, "cityblock": 143, "dice": 143, "ham": 143, "jaccard": 143, "jensenshannon": 143, "kulczynski1": 143, "mahalanobi": [143, 146], "rogerstanimoto": 143, "russellrao": 143, "seuclidean": 143, "sokalmichen": 143, "sokalsneath": 143, "sqeuclidean": 143, "yule": 143, "ddof": 143, "cov": 143, "thrown": 143, "_p": 143, "citi": 143, "u_i": 143, "_2": [143, 199, 200], "disagre": 143, "shannon": 143, "kullback": 143, "leibler": 143, "max_i": 143, "brai": 143, "kulczynski": 143, "roger": 143, "tanimoto": 143, "russel": 143, "rao": 143, "sokal": 143, "michen": 143, "sneath": 143, "ariti": 143, "ineffici": 143, "0456": 143, "2672": [143, 196], "1174": [143, 180], "9711": 143, "9728": 143, "83": [143, 185], "9422": 143, "1667": [143, 183], "7833": 143, "7044": 143, "6172": 143, "8856": 143, "0893": 143, "3561": 143, "8477": 143, "max_mdf": 143, "subsamplen": 143, "degrad": 143, "5mm": 143, "jordan17": 143, "roi1": 143, "roi2": 143, "n_roi": 143, "either_end": 143, "both_end": 143, "mask1": 143, "mask2": 143, "presseau15": 143, "consecut": [143, 189], "max_segment_length": 143, "rheault15": 143, "tol_error": 143, "01mm": 143, "probabilit": 143, "compressed_streamlin": 143, "houde15": 143, "presseau": 143, "109": [143, 185], "wiggl": 143, "c_streamlin": 143, "default_factori": [143, 146], "__getitem__": 143, "__missing__": 143, "label_volum": 143, "vol_dim": 143, "image_volum": 143, "indexerror": [143, 189], "min_radius_curvatur": 143, "onlinelibrari": 143, "22005": 143, "unbuff": 143, "operand": [143, 189], "bincount": 143, "region_of_interest": 143, "aoi": 143, "seq": 143, "plm": 143, "seeds_count": 143, "seed_count_per_voxel": 143, "0640051": 143, "47407377": 143, "04966248": 143, "0507979": 143, "20814782": 143, "20909526": 143, "46702984": 143, "04723225": 143, "47268436": 143, "27800683": 143, "37073231": 143, "29328084": 143, "39286015": 143, "16802019": 143, "32122912": 143, "42369171": 143, "27991879": 143, "06159077": 143, "70671916": 143, "48962585": 143, "00187459": 143, "99577329": 143, "new_label": 143, "include_roi": 143, "exclude_roi": 143, "roi_coord": 143, "output_streamlin": 143, "target_mask": 143, "whatev": 143, "bresenham5": 143, "bresenham": 143, "jack": 143, "elton": 143, "plotter": 143, "ibm": 143, "__module__": 143, "__qualname__": 143, "__annotations__": [143, 145], "update_wrapp": 143, "invok": 143, "trackviz": 143, "return_el": 143, "tc": 143, "vox_track0": 143, "vox_track1": 143, "vox_dim": 143, "icon": [144, 178, 183], "icomoon": 144, "out_png": [144, 145], "recorded_ev": [144, 145], "return_showm": [144, 145], "order_transpar": [144, 145], "buan_color": [144, 145], "roi_imag": [144, 145, 165], "roi_color": [144, 145, 165], "build_scen": [144, 146], "build_show": [144, 146], "remove_cluster_actor": [144, 146], "peakandmetr": [144, 145], "pictur": [144, 145, 165], "cababl": [144, 145], "peel": [144, 145, 165], "anti": [144, 145, 165], "alias": [144, 145, 165], "horizon_ismrm19": [144, 145, 165], "juneja": [144, 145, 165, 182], "add_cluster_actor": [144, 146], "enable_callback": 144, "hz": 144, "shader": [144, 191], "bg": 144, "nb_color": 144, "perceptu": 144, "distinct": 144, "percept": 144, "farthest": 144, "rbg": 144, "tim": 144, "holi": 144, "29702": 144, "75862069": 144, "03448276": 144, "89655172": 144, "17241379": 144, "mem": 144, "interactor": [144, 180, 181], "fit_kwarg": 144, "fit1": 144, "fit2": 144, "fitnam": 144, "xlimit": 144, "disprang": 144, "cbar": 144, "basemap_arg": 144, "triang": 144, "segular": 144, "img0": 144, "img1": 144, "title0": 144, "title_mid": 144, "title1": 144, "fig_kwarg": [144, 191], "slice_index": 144, "slice_typ": 144, "ltitl": 144, "rtitl": 144, "direct_grid_shap": 144, "direct_grid2world": 144, "inverse_grid_shap": 144, "inverse_grid2world": 144, "show_figur": 144, "warped_forward": 144, "warped_backward": 144, "wouldn": 144, "slice_indic": 144, "sagit": 144, "ylabl": 144, "docscrap": 145, "numpydoc": 145, "mentat": 145, "virtanen": 145, "pav": 145, "iki": 145, "fi": 145, "output_strategi": 145, "static_image_fil": [145, 147, 148, 149], "moving_image_fil": [145, 147, 148, 149], "transform_map_fil": [145, 149], "overwritten": [145, 149], "similaritymetr": [145, 146], "out_mov": [145, 147, 152, 172], "out_qual": [145, 147], "quality_metr": [145, 147], "bvalues_fil": [145, 152, 153, 158, 159, 160, 161, 162], "bvectors_fil": [145, 152, 153, 158, 159, 160, 161, 162], "bvecs_tol": [145, 152, 153, 158, 159, 161, 166], "get_short_nam": [145, 146], "subworkflow": 145, "strongli": 145, "new_vox_s": [145, 171], "out_resl": [145, 171], "new_vox_sz": [145, 171], "static_fil": [145, 172], "moving_fil": [145, 172], "out_stat_centroid": [145, 172], "static_centroid": 145, "out_moving_centroid": [145, 172], "moving_centroid": 145, "out_moved_centroid": [145, 172], "moved_centroid": 145, "diffeomorphicregistr": [145, 146, 189], "prealign_fil": [145, 148], "inv_stat": [145, 148], "mopt_sigma_diff": [145, 148], "mopt_radiu": [145, 148], "mopt_smooth": [145, 148], "mopt_inner_it": [145, 148], "mopt_q_level": [145, 148], "mopt_double_gradi": [145, 148], "mopt_step_typ": [145, 148], "out_inv_stat": [145, 148], "inc_stat": 145, "out_field": [145, 148], "get_sub_run": [145, 146], "manage_output_overwrit": [145, 146], "_force_overwrit": 145, "outcom": 145, "liter": [145, 191, 192], "r890e584ccf15": 145, "prog": 145, "epilog": 145, "formatter_class": 145, "rawtexthelpformatt": 145, "prefix_char": 145, "fromfile_prefix_char": 145, "argument_default": 145, "conflict_handl": 145, "add_help": 145, "argumentpars": 145, "optional_paramet": [145, 146], "output_paramet": [145, 146], "positional_paramet": [145, 146], "add_argument_group": 145, "add_descript": [145, 146], "add_epilogu": [145, 146], "add_mutually_exclusive_group": 145, "convert_arg_line_to_arg": 145, "format_help": 145, "get_default": 145, "parse_intermixed_arg": 145, "parse_known_arg": 145, "parse_known_intermixed_arg": 145, "print_help": 145, "show_argu": [145, 146], "update_argu": [145, 146], "argv": 145, "helpformatt": 145, "add_sub_flow_arg": [145, 146], "sub_flow": 145, "introspect": 145, "sub_flow_opt": 145, "add_workflow": [145, 146], "arpars": 145, "get_flow_arg": [145, 146], "dest": 145, "karg": 145, "get_opt": [145, 146], "set_sub_flows_opt": [145, 146], "_option": 145, "out_unr": [145, 164], "dwi_unr": 145, "dwi_mppca": 145, "out_sigma": [145, 154], "dwi_sigma": 145, "dwi_nlmean": 145, "globe": [145, 155, 156, 160, 161, 162, 169, 204], "bval_fil": [145, 156], "dwi_patch2self": [145, 156], "rae70c6436165": 145, "eof": [145, 146], "is_empti": [145, 146], "peek": [145, 146], "read_to_condit": [145, 146], "read_to_next_empty_lin": [145, 146], "read_to_next_unindented_lin": [145, 146], "seek_next_non_empty_lin": [145, 146], "condition_func": 145, "deindent": 145, "lvl": 145, "load_modul": [145, 146], "module_path": 145, "reload": [145, 180], "data_nam": [145, 157], "md5": [145, 146, 157, 180, 186], "bshell_thr": [145, 166], "out_split": [145, 174], "predic": 145, "__code__": 145, "bytecod": 145, "__defaults__": 145, "__globals__": 145, "__kwdefaults__": 145, "out_fnam": 145, "create_directori": [145, 146], "create_output": [145, 146], "file_existence_check": [145, 146], "set_input": [145, 146], "set_out_dir": [145, 146], "set_out_fnam": [145, 146], "set_output_kei": [145, 146], "substr": 145, "multi_input": 145, "prepend": 145, "fnmatch": 145, "subdirectori": 145, "out_kei": 145, "fnc": 145, "frameobject": 145, "dir_str": 145, "sphharmmodel": [145, 146, 186], "axsymshrespons": [145, 146], "qballbasemodel": [145, 146, 189], "normalize_data": [145, 146], "reconstmodel": [145, 146], "ols_fit_dki": [145, 146], "wls_fit_dki": [145, 146], "mask_fil": [145, 158, 159, 160, 161, 162, 173], "odf_to_sh_ord": [145, 158, 159], "out_pam": [145, 158, 159], "out_shm": [145, 158, 159], "out_peaks_dir": [145, 158, 159], "peaks_dir": 145, "out_peaks_valu": [145, 158, 159], "peaks_valu": 145, "out_peaks_indic": [145, 158, 159], "peaks_indic": 145, "out_gfa": [145, 158, 159], "peak_from_model": [145, 158, 159, 186], "frf": [145, 159], "get_fitted_tensor": [145, 146], "optional_arg": 145, "out_dt_tensor": [145, 160], "out_fa": [145, 160, 161], "out_ga": [145, 160, 161], "out_rgb": [145, 160, 161], "out_md": [145, 160, 161], "out_ad": [145, 160, 161], "out_rd": [145, 160, 161], "out_mod": [145, 160, 161], "out_evec": [145, 160, 161], "out_ev": [145, 160, 161], "out_dk_tensor": [145, 160], "dki_tensor": 145, "out_mk": [145, 160], "out_ak": [145, 160], "out_rk": [145, 160], "joseph": [145, 160], "anita": [145, 160], "hanzhang": [145, 160], "kyle": [145, 160], "nifti_tensor": [145, 161], "hung": [145, 161], "get_fitted_ivim": [145, 146], "out_s0_predict": [145, 162], "out_perfusion_fract": [145, 162], "out_d_star": [145, 162], "out_d": [145, 162], "data_fil": [145, 163, 173], "out_rtop": [145, 163], "out_lapnorm": [145, 163], "lapnorm": [145, 163], "out_msd": [145, 163], "out_qiv": [145, 163], "out_rtap": [145, 163], "out_rtpp": [145, 163], "out_ng": [145, 163], "out_perng": [145, 163], "perng": [145, 163], "out_parng": [145, 163], "parng": [145, 163], "laplacian_sign": [145, 163], "sphere_nam": 145, "odfmodel": [145, 146], "wls_fit_tensor": [145, 146], "ols_fit_tensor": [145, 146], "nlls_fit_tensor": [145, 146], "restore_fit_tensor": [145, 146], "iter_fit_tensor": [145, 146, 178], "quad": [145, 146], "deviator": [145, 146], "node_or_str": 145, "streamline_fil": [145, 167, 170], "labels_fil": [145, 167], "out_bundl": [145, 167], "recognized_orig": 145, "save_mask": [145, 169], "dwi_mask": 145, "bundlemindistancemetr": [145, 146], "model_bundle_fil": [145, 170], "no_slr": [145, 170], "slr_matrix": [145, 170], "r_reduction_thr": [145, 170], "r_pruning_thr": [145, 170], "no_r_slr": [145, 170], "out_recognized_transf": [145, 170], "out_recognized_label": [145, 170], "tini": [145, 170], "model_bundle_fold": [145, 151], "subject_fold": [145, 151], "get_metric_nam": [145, 146], "af_l_fa": 145, "h5_file": [145, 150], "save_lmm_plot": [145, 146], "plot_fil": 145, "bundle_nam": 145, "log10": 145, "bbox_threshold": [145, 173], "out_mask_cc": [145, 173], "out_mask_nois": [145, 173], "generate_binary_structur": [145, 146], "bundle_fold": 145, "orig_bundle_fold": 145, "metric_fold": 145, "orig_fold": 145, "pmfgendirectiongett": [145, 146], "pam_fil": [145, 175, 176], "stopping_fil": [145, 175], "seeding_fil": [145, 175, 176], "use_binary_mask": [145, 175], "stopping_thr": [145, 175], "binar": [145, 175], "regularli": [145, 175, 176, 191], "closestpeak": [145, 175, 184], "direction_gett": [145, 146], "wm_file": [145, 176], "gm_file": [145, 176], "csf_file": [145, 176], "pft_back": [145, 176], "pft_front": [145, 176], "pft_count": [145, 176], "100000000": 145, "icbm_2009a": [145, 165], "emerg": [145, 165], "icbm_2009c": [145, 165], "rgb_standard": 145, "boys_standard": 145, "vtk_color": 145, "vtkdataarrai": 145, "unsigned_char": 145, "rgb_arrai": 145, "subpackag": 146, "setup_test": 146, "_public": [146, 193], "bundlemin": 146, "crosscorr": [146, 187], "expectmax": 146, "parzenhist": 146, "scalespac": 146, "sumsqdiff": 146, "read_map": 146, "register_dwi_seri": 146, "streamline_registr": 146, "syn_registr": [146, 187], "write_map": [146, 196], "emmetr": 146, "rigidisoscalingtransform3d": 146, "rigidscalingtransform3d": 146, "read_img_arr_or_path": 146, "transform_tracking_output": 146, "determine_num_thread": 146, "distance_matrix_mdf": 146, "compute_cc_backward_step_2d": 146, "compute_cc_backward_step_3d": 146, "compute_cc_forward_step_2d": 146, "compute_cc_forward_step_3d": 146, "precompute_cc_factors_2d": 146, "precompute_cc_factors_2d_test": 146, "precompute_cc_factors_3d": 146, "precompute_cc_factors_3d_test": 146, "compute_em_demons_step_2d": 146, "compute_em_demons_step_3d": 146, "compute_masked_class_stats_2d": 146, "compute_masked_class_stats_3d": 146, "quantize_positive_2d": 146, "quantize_positive_3d": 146, "affineinvalidvalueserror": 146, "affineinversionerror": 146, "isotropicscalespac": 146, "parzenjointhistogram": 146, "compute_parzen_mi": 146, "deprecated_param": 146, "get_direction_and_spac": 146, "interpolate_scalar_2d": 146, "interpolate_scalar_3d": 146, "sample_domain_regular": 146, "transform_geometric_cent": 146, "mult_aff": 146, "v_cycle_2d": 146, "v_cycle_3d": 146, "cubic_splin": 146, "cubic_spline_deriv": 146, "affine_transform": 146, "determine_num_process": 146, "bundlemindistanceasymmetricmetr": 146, "bundlesumdistancematrixmetr": 146, "jointbundlemindistancemetr": 146, "jointstreamlineregistrationmap": 146, "bundle_min_dist": 146, "bundle_min_distance_asymmetric_fast": 146, "bundle_min_distance_fast": 146, "bundle_sum_dist": 146, "center_streamlin": 146, "compose_matrix": [146, 187], "compose_matrix44": 146, "compose_transform": 146, "decompose_matrix": 146, "decompose_matrix44": 146, "get_unique_pair": 146, "progressive_slr": 146, "qbx_and_merg": 146, "remove_clusters_by_s": 146, "slr_with_qbx": 146, "unlist_streamlin": 146, "compute_energy_ssd_2d": 146, "compute_energy_ssd_3d": 146, "compute_residual_displacement_field_ssd_2d": 146, "compute_residual_displacement_field_ssd_3d": 146, "compute_ssd_demons_step_2d": 146, "compute_ssd_demons_step_3d": 146, "iterate_residual_displacement_field_ssd_2d": 146, "iterate_residual_displacement_field_ssd_3d": 146, "solve_2d_symmetric_positive_definit": 146, "solve_3d_symmetric_positive_definit": 146, "affinetransform2d": 146, "rigidisoscalingtransform2d": 146, "rigidscalingtransform2d": 146, "rigidtransform2d": 146, "rotationtransform2d": 146, "rotationtransform3d": 146, "scalingtransform2d": 146, "scalingtransform3d": 146, "translationtransform2d": [146, 194], "compose_vector_fields_2d": 146, "compose_vector_fields_3d": 146, "create_circl": 146, "create_harmonic_fields_2d": 146, "create_harmonic_fields_3d": 146, "create_random_displacement_2d": 146, "create_random_displacement_3d": 146, "create_spher": 146, "downsample_displacement_field_2d": 146, "downsample_displacement_field_3d": 146, "downsample_scalar_field_2d": 146, "downsample_scalar_field_3d": 146, "invert_vector_field_fixed_point_2d": 146, "invert_vector_field_fixed_point_3d": 146, "is_valid_affin": 146, "reorient_vector_field_2d": 146, "reorient_vector_field_3d": 146, "resample_displacement_field_2d": 146, "resample_displacement_field_3d": 146, "simplify_warp_function_2d": 146, "simplify_warp_function_3d": [146, 180], "sparse_gradi": 146, "warp_2d": 146, "warp_2d_nn": 146, "warp_3d": 146, "warp_3d_nn": 146, "warp_coordinates_2d": 146, "warp_coordinates_3d": 146, "bench_spher": 146, "onetim": 146, "sphere_stat": [146, 186, 187], "wavelet": 146, "bench_disperse_charges_alt": 146, "func_minimize_adhoc": 146, "func_minimize_scipi": 146, "cart2spher": [146, 185, 188], "cart_dist": 146, "circumradiu": 146, "dist_to_corn": 146, "euler_matrix": 146, "is_hemispher": [146, 189], "lambert_equal_area_projection_cart": 146, "lambert_equal_area_projection_polar": 146, "nearest_pos_semi_def": 146, "normalized_vector": 146, "perpendicular_direct": 146, "rodrigues_axis_rot": 146, "sph2latlon": 146, "sphere2cart": [146, 185, 204], "sphere_dist": 146, "vec2vec_rotmat": [146, 178, 194], "vector_cosin": 146, "vector_norm": [146, 185], "auto_attr": [146, 187], "btens_to_param": 146, "check_multi_b": 146, "deprecate_with_vers": 146, "generate_bvec": 146, "get_bval_indic": 146, "gradient_table_from_bvals_bvec": 146, "gradient_table_from_gradient_strength_bvec": 146, "gradient_table_from_qvals_bvec": 146, "orientation_from_str": 146, "orientation_to_str": 146, "ornt_map": 146, "params_to_bten": 146, "reorient_bvec": [146, 191], "reorient_on_axi": 146, "reorient_vector": 146, "round_bval": 146, "nearestneighborinterpol": 146, "trilinearinterpol": 146, "interpolate_scalar_nn_2d": 146, "interpolate_scalar_nn_3d": 146, "interpolate_vector_2d": 146, "interpolate_vector_3d": 146, "map_coordinates_trilinear_iso": 146, "nearestneighbor_interpol": [146, 180], "trilinear_interp": 146, "trilinear_interpolate4d": [146, 189], "as_strid": 146, "resetmixin": 146, "nonnegativeleastsquar": 146, "positivedefiniteleastsquar": 146, "optional_packag": 146, "sparse_nnl": 146, "lecuy": 146, "wichmannhill1982": 146, "wichmannhill2006": 146, "disperse_charges_alt": 146, "euler_characteristic_check": 146, "faces_from_sphere_vertic": 146, "remove_similar_vertic": [146, 185], "unique_edg": 146, "unique_set": 146, "angular_similar": 146, "compare_orientation_set": 146, "eigenstat": 146, "random_uniform_on_spher": [146, 186, 187], "create_unit_hemispher": 146, "afb3d": 146, "afb3d_a": 146, "cshift3d": 146, "dwt3d": 146, "idwt3d": 146, "permutationinvers": 146, "sfb3d": 146, "sfb3d_a": 146, "as_native_arrai": 146, "dsi_deconv_voxel": 146, "fetch_cenir_multib": 146, "fetch_cfin_multib": 146, "fetch_gold_standard_io": [146, 191], "fetch_resdnn_weight": 146, "fetch_scil_b0": 146, "fetch_stanford_label": 146, "fetch_stanford_t1": 146, "fetch_taiwan_ntu_dsi": 146, "fetch_tissue_data": 146, "get_cmap": [146, 187], "get_gtab_taiwan_dsi": 146, "get_sim_voxel": 146, "get_skeleton": 146, "load_npz": 146, "load_sdp_constraint": 146, "loads_compat": 146, "matlab_life_result": 146, "mrtrix_spherical_funct": 146, "read_cfin_dwi": 146, "read_cfin_t1": 146, "read_isbi2013_2shel": 146, "read_qte_lte_pt": 146, "read_scil_b0": 146, "read_sherbrooke_3shel": 146, "read_stanford_hardi": 146, "read_stanford_label": 146, "read_stanford_pve_map": 146, "read_stanford_t1": 146, "read_syn_data": 146, "read_taiwan_ntu_dsi": 146, "read_tissue_data": 146, "relist_streamlin": 146, "fetchererror": 146, "check_md5": 146, "copyfileobj": 146, "copyfileobj_withprogress": 146, "extract_example_tract": 146, "fetch_dib_217_lte_pte_st": 146, "fetch_dib_70_lte_pte_st": 146, "fetch_data": 146, "fetch_fury_surfac": 146, "fetch_hcp": 146, "fetch_qte_lte_pt": 146, "read_siemens_scil_b0": 146, "to_bids_descript": 146, "urlopen": [146, 179], "adaptive_soft_match": 146, "denspe": [146, 180], "nlmeans_block": 146, "add_padding_reflect": 146, "correspond_indic": 146, "nlmeans_3d": [146, 187], "remove_pad": 146, "gettempdir": 146, "eigh": [146, 181], "genpca": 146, "firdn": 146, "upfir": 146, "convolve_sf": 146, "bootstrap_direction_gett": 146, "local_maxima": 146, "peak_directions_nl": 146, "reshape_peaks_for_visu": 146, "search_descend": 146, "sh_to_sf_matrix": 146, "bootpmfgen": 146, "shcoeffpmfgen": 146, "simplepmfgen": 146, "read_bvec_fil": 146, "splitext": 146, "save_qa_metr": 146, "load_peak": [146, 190], "peaks_to_nifti": 146, "save_peak": 146, "perarraydict": 146, "perarraysequencedict": 146, "apply_affin": 146, "bisect": 146, "deepcopi": 146, "is_reference_info_valid": 146, "set_sft_logger_level": 146, "detect_format": 146, "load_dpi": 146, "load_fib": 146, "load_gener": 146, "load_vtk": 146, "load_vtk_streamlin": [146, 191], "load_vtp": 146, "save_dpi": 146, "save_fib": 146, "save_gener": 146, "save_vtk": 146, "save_vtk_streamlin": [146, 191], "save_vtp": 146, "decfa": [146, 184, 189], "decfa_to_float": 146, "make5d": 146, "nifti1_symmat": 146, "save_buan_profiles_hdf5": 146, "save_polydata": 146, "histo_resdnn": 146, "historesdnn": 146, "doctest_skip_pars": 146, "set_logger_level": 146, "sph_harm_ind_list": 146, "multiplelayerpercepton": 146, "singlelayerperceptron": 146, "bench_bounding_box": 146, "bench_csd": 146, "bench_peak": 146, "bench_squash": 146, "bench_vec_val_sum": 146, "multi_voxel": [146, 185, 191], "quick_squash": 146, "recspe": 146, "vec_val_sum": 146, "reconstfit": 146, "bench_csdeconv": 146, "num_grad": 146, "bench_local_maxima": 146, "bench_quick_squash": 146, "old_squash": 146, "bench_vec_val_vect": 146, "coeff_of_determin": 146, "constrainedsdtmodel": 146, "sphharmfit": [146, 186], "estimate_respons": 146, "fa_trace_to_lambda": 146, "forward_sdeconv_mat": 146, "forward_sdt_deconv_mat": 146, "lazy_index": 146, "lpn": 146, "multi_voxel_fit": [146, 195], "odf_deconv": 146, "sh_to_rh": 146, "wcon": 146, "wrotat": 146, "wrotate_el": 146, "apparent_kurtosis_coef": 146, "carlson_rd": 146, "carlson_rf": 146, "directional_diffus": 146, "directional_diffusion_vari": 146, "directional_kurtosi": 146, "dki_predict": 146, "kurtosis_fractional_anisotropi": 146, "kurtosis_maximum": 146, "mean_kurtosis_tensor": 146, "radial_kurtosi": 146, "split_dki_param": 146, "vec_val_vect": [146, 185], "kurtosismicrostructuralfit": 146, "axial_diffus": 146, "axonal_water_fract": 146, "diffusion_compon": 146, "dkimicro_predict": 146, "dti_design_matrix": 146, "radial_diffus": 146, "diffusionspectrumdeconvfit": 146, "diffusionspectrumfit": 146, "odffit": 146, "lr_deconv": 146, "create_qspac": 146, "create_qt": 146, "fftn": 146, "gen_psf": 146, "half_to_full_qspac": 146, "hanning_filt": 146, "ifftshift": 146, "pdf_interp_coord": 146, "pdf_odf": [146, 185], "project_hemisph_bvec": 146, "threshold_propag": 146, "apparent_diffusion_coef": 146, "eig_from_lo_tri": [146, 187], "geodesic_anisotropi": 146, "quantize_evec": [146, 180, 191], "tensor_predict": 146, "forecastfit": 146, "find_signal_mean": 146, "forecast_error_func": 146, "forecast_matrix": 146, "lb_forecast": 146, "leastsq": 146, "psi_l": 146, "rho_matrix": 146, "cholesky_to_lower_triangular": 146, "fwdti_predict": 146, "lower_triangular_to_choleski": 146, "nls_fit_tensor": 146, "nls_iter": 146, "wls_iter": 146, "generalizedqsamplingfit": 146, "equatorial_maximum": 146, "equatorial_zone_vertic": 146, "normalize_qa": 146, "npa": 146, "odf_sum": 146, "patch_maximum": 146, "patch_sum": 146, "patch_vertic": 146, "polar_zone_vertic": 146, "squared_radial_compon": 146, "triple_odf_maxima": 146, "upper_hemi_map": 146, "ivimmodeltrr": 146, "ivimmodelvp": 146, "differential_evolut": 146, "f_d_star_error": 146, "f_d_star_predict": 146, "ivim_model_selector": 146, "ivim_predict": 146, "least_squar": 146, "mapmrifit": 146, "b_mat": 146, "b_mat_isotrop": 146, "binomialfloat": 146, "create_rspac": 146, "factorial2": 146, "gcv_cost_funct": 146, "generalized_crossvalid": 146, "generalized_crossvalidation_arrai": 146, "genlaguerr": 146, "hermit": 146, "isotropic_scale_factor": 146, "map_laplace_": 146, "map_laplace_t": 146, "map_laplace_u": 146, "mapmri_stu_reg_matric": 146, "mapmri_index_matrix": 146, "mapmri_isotropic_k_mu_depend": 146, "mapmri_isotropic_k_mu_independ": 146, "mapmri_isotropic_m_mu_depend": 146, "mapmri_isotropic_m_mu_independ": 146, "mapmri_isotropic_index_matrix": 146, "mapmri_isotropic_laplacian_reg_matrix": 146, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 146, "mapmri_isotropic_odf_matrix": 146, "mapmri_isotropic_odf_sh_matrix": 146, "mapmri_isotropic_phi_matrix": 146, "mapmri_isotropic_psi_matrix": 146, "mapmri_isotropic_radial_pdf_basi": 146, "mapmri_isotropic_radial_signal_basi": 146, "mapmri_laplacian_reg_matrix": 146, "mapmri_odf_matrix": 146, "mapmri_phi_1d": 146, "mapmri_phi_matrix": 146, "mapmri_psi_1d": 146, "mapmri_psi_matrix": 146, "mfactori": 146, "sfactori": 146, "msdeconvfit": 146, "qpfitter": 146, "multi_tissue_basi": 146, "solve_qp": [146, 192], "meandiffusionkurtosisfit": 146, "awf_from_msk": 146, "mean_signal_bvalu": 146, "msdki_predict": 146, "msk_from_awf": 146, "wls_fit_msdki": 146, "callablearrai": 146, "multivoxelfit": 146, "minmax_norm": [146, 186, 189], "qtdmrifit": 146, "angular_basis_eap_opt": 146, "angular_basis_opt": 146, "create_rt_space_grid": 146, "design_matrix_spati": 146, "elastic_crossvalid": 146, "fmin_l_bfgs_b": 146, "l1_crossvalid": 146, "part1_reg_matrix_tau": 146, "part23_iso_reg_matrix_q": 146, "part23_reg_matrix_q": 146, "part23_reg_matrix_tau": 146, "part4_iso_reg_matrix_q": 146, "part4_reg_matrix_q": 146, "part4_reg_matrix_tau": 146, "qtdmri_anisotropic_sc": 146, "qtdmri_eap_matrix": 146, "qtdmri_eap_matrix_": 146, "qtdmri_index_matrix": 146, "qtdmri_isotropic_eap_matrix": 146, "qtdmri_isotropic_eap_matrix_": 146, "qtdmri_isotropic_index_matrix": 146, "qtdmri_isotropic_laplacian_reg_matrix": 146, "qtdmri_isotropic_sc": 146, "qtdmri_isotropic_signal_matrix": 146, "qtdmri_isotropic_signal_matrix_": 146, "qtdmri_isotropic_to_mapmri_matrix": 146, "qtdmri_laplacian_reg_matrix": 146, "qtdmri_mapmri_isotropic_norm": 146, "qtdmri_mapmri_norm": 146, "qtdmri_number_of_coeffici": 146, "qtdmri_signal_matrix": 146, "qtdmri_signal_matrix_": 146, "qtdmri_temporal_norm": 146, "qtdmri_to_mapmri_matrix": 146, "radial_basis_eap_opt": 146, "radial_basis_opt": 146, "temporal_basi": 146, "cvxpy_1x21_to_6x6": 146, "cvxpy_1x6_to_3x3": 146, "dtd_covari": 146, "from_21x1_to_6x6": 146, "from_3x3_to_6x1": 146, "from_6x1_to_3x3": 146, "from_6x6_to_21x1": 146, "qti_sign": 146, "adj_to_countarr": 146, "argmax_from_adj": 146, "argmax_from_countarr": 146, "le_to_odf": 146, "proc_reco_arg": 146, "sum_on_blocks_1d": 146, "all_tensor_evec": [146, 188], "generate_kernel": 146, "mbessel_ratio": 146, "rumba_deconv": 146, "rumba_deconv_glob": 146, "exponentialisotropicfit": 146, "exponentialisotropicmodel": 146, "isotropicfit": 146, "isotropicmodel": 146, "ordereddict": 146, "sparsefasciclefit": 146, "nanmean": [146, 178, 188], "sfm_design_matrix": 146, "opdtmodel": 146, "residualbootstrapwrapp": 146, "bootstrap_data_arrai": 146, "bootstrap_data_voxel": 146, "calculate_max_ord": [146, 183], "convert_sh_from_legaci": 146, "convert_sh_to_full_basi": 146, "convert_sh_to_legaci": [146, 196], "gen_dirac": 146, "lcr_matrix": 146, "order_from_ncoef": 146, "real_sh_tourni": 146, "real_sph_harm": [146, 180], "real_sym_sh_basi": 146, "real_sym_sh_mrtrix": 146, "smooth_pinv": 146, "spherical_harmon": 146, "shorefit": 146, "l_shore": 146, "n_shore": 146, "shore_indic": 146, "shore_matrix": 146, "shore_matrix_odf": 146, "shore_matrix_pdf": 146, "shore_ord": 146, "dki_design_matrix": 146, "bench_quickbundl": 146, "clustering_algorithm": 146, "clusteringspe": 146, "cythonutil": 146, "mdfpy": 146, "qb_new": 146, "assert_array_equ": 146, "assert_arrays_equ": [146, 180], "ba_analysi": 146, "bundle_adjac": 146, "bundles_distances_mam": 146, "bundles_distances_mdf": [146, 195], "check_rang": 146, "cluster_bundl": 146, "abcmeta": 146, "clustercentroid": 146, "minimumaveragedirectflipmetr": 146, "treeclust": 146, "treeclustermap": 146, "abstractmethod": 146, "clusters_centroid2clustermap_centroid": 146, "clusterscentroid": 146, "evaluate_aabb_check": 146, "cythonfeatur": 146, "applymask": 146, "clean_cc_mask": 146, "median_filt": 146, "cythonmetr": 146, "constantobservationmodel": 146, "iteratedconditionalmod": 146, "upper_bound_by_perc": 146, "upper_bound_by_r": 146, "diff2eigenvector": 146, "orbital_phantom": 146, "callaghan_perpendicular": 146, "cylinders_and_ball_soderman": 146, "dki_sign": [146, 180], "gaussian_parallel": 146, "kurtosis_el": 146, "multi_tensor_msd": 146, "multi_tensor_pdf": 146, "multi_tensor_rtop": 146, "single_tensor_msd": 146, "single_tensor_pdf": 146, "single_tensor_rtop": 146, "bench_streamlin": 146, "propspe": [146, 187], "streamlinespe": [146, 180, 187], "vox2track": 146, "assert_array_almost_equ": 146, "bench_compress_streamlin": 146, "bench_length": 146, "bench_set_number_of_point": 146, "length_python": 146, "set_number_of_points_python": 146, "add_3vec": 146, "approximate_mdl_trajectori": 146, "cut_plan": 146, "inner_3vec": 146, "intersect_segment_cylind": 146, "larch_3merg": 146, "larch_3split": 146, "lee_angle_dist": 146, "lee_perpendicular_dist": 146, "local_skeleton_clust": 146, "local_skeleton_clustering_3pt": 146, "mam_dist": 146, "minimum_closest_dist": 146, "most_similar_track_mam": 146, "mul_3vec": 146, "norm_3vec": 146, "normalized_3vec": 146, "point_segment_sq_dist": 146, "point_track_sq_distance_check": 146, "sub_3vec": 146, "track_dist_3pt": 146, "track_roi_intersection_check": 146, "interp1d": 146, "compute_rfbc": 146, "min_moving_averag": 146, "detect_corresponding_track": 146, "detect_corresponding_tracks_plu": 146, "lifesignalmak": 146, "streamline_sign": 146, "grad_tensor": 146, "streamline_gradi": 146, "streamline_tensor": 146, "unique_row": [146, 187], "pft_tracker": 146, "triangles_area": 146, "vertices_to_triangles_valu": 146, "arbitrarypoint": 146, "frenet_serret": 146, "generate_combin": 146, "inside_spher": 146, "inside_sphere_point": 146, "intersect_spher": 146, "longest_track_bundl": 146, "mean_curvatur": 146, "mean_orient": 146, "midpoint2point": 146, "principal_compon": 146, "splev": 146, "splprep": 146, "wind": [146, 180], "eudx_both_direct": 146, "ndarray_offset": 146, "cdist": 146, "compress_streamlin": [146, 178, 196], "defaultdict": 146, "max_angle_from_curvatur": 146, "min_radius_curvature_from_angl": 146, "minimum_at": 146, "ndbincount": 146, "reduce_label": 146, "reduce_roi": [146, 195], "streamline_near_roi": [146, 195], "subseg": 146, "streamline_map": [146, 182], "track_count": 146, "gmem": 146, "fetch_viz_icon": 146, "read_viz_icon": 146, "globalhorizon": 146, "apply_shad": 146, "distinguishable_colormap": 146, "slicer_panel": 146, "sph_project": [146, 185, 187], "draw_lattice_2d": 146, "plot_slic": 146, "simple_plot": 146, "docstring_pars": 146, "multi_io": [146, 181, 183], "applytransformflow": 146, "resliceflow": 146, "slrwithqbxflow": 146, "synregistrationflow": 146, "check_dimens": 146, "introspectiveargumentpars": 146, "numpydocstr": 146, "get_args_default": 146, "none_or_dtyp": 146, "gibbsringingflow": 146, "mppcaflow": 146, "patch2selfflow": 146, "dedent_lin": 146, "get_level": 146, "ioinfoflow": 146, "splitflow": [146, 190], "getmemb": 146, "isfunct": 146, "maskflow": 146, "basename_without_extens": 146, "common_start": 146, "concatenate_input": 146, "connect_output_path": 146, "io_iter": 146, "io_iterator_": 146, "slash_to_und": 146, "reconstcsaflow": 146, "reconstcsdflow": 146, "reconstdkiflow": 146, "reconstdtiflow": 146, "reconstivimflow": 146, "reconstmapmriflow": 146, "reconstrumbaflow": 146, "get_mod": 146, "literal_ev": 146, "labelsbundlesflow": 146, "recobundlesflow": 146, "bundleanalysistractometryflow": 146, "bundleshapeanalysi": 146, "linearmixedmodelsflow": 146, "snrinccflow": 146, "buan_bundle_profil": 146, "localfibertrackingpamflow": 146, "pftrackingpamflow": 146, "horizonflow": 146, "numpy_to_vtk_color": 146, "andgaryfallidi": [151, 170], "forinvestig": [151, 170], "acrosspopul": [151, 170], "randommatrix": [153, 189], "noisemap": [153, 154], "inmedicin": 153, "matrixtheori": 154, "andprima": 155, "onhardi": 155, "mridata": 164, "ringingartifact": 164, "2016doi": 164, "linearregistr": 172, "ofstreamlin": 172, "fiberbundl": 172, "matterbundl": 172, "registrationand": 172, "towardsquantit": 176, "alphabet": 178, "1022": [178, 180, 189], "qixiang": 178, "gonzalo": 178, "232": [178, 186], "github_stat": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "769": 178, "altogeth": 178, "772": 178, "xvfb": 178, "headless": 178, "754": 178, "car": 178, "gitter": [178, 179, 182, 191, 198], "chat": [178, 179, 182], "753": 178, "tst": [178, 179, 180, 182, 183, 185, 187, 190, 191, 192], "767": 178, "offscreen": 178, "test_slic": 178, "768": 178, "766": 178, "751": 178, "765": 178, "757": 178, "587": 178, "pr1": [178, 188], "748": 178, "_to_voxel_toler": 178, "678": 178, "714": 178, "739": 178, "733": 178, "743": 178, "memleak": 178, "sinkpoint": 178, "741": 178, "727": 178, "726": 178, "729": 178, "736": 178, "tk": 178, "735": 178, "732": 178, "wip": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196], "731": 178, "640": 178, "716": 178, "712": 178, "gh707": 178, "713": 178, "677": 178, "pr3": 178, "721": 178, "572": 178, "708": 178, "707": [178, 189], "709": 178, "703": 178, "705": 178, "635": 178, "702": 178, "689": 178, "681": 178, "da": [178, 195], "696": 178, "691": 178, "661": 178, "690": 178, "segfault": [178, 183, 186], "667": 178, "sourceforg": 178, "gh": [178, 187], "upl": 178, "676": [178, 183], "infrastructur": 178, "533": 178, "mrg": [178, 179, 180, 181, 182, 186, 187], "686": 178, "pyhon26": 178, "683": 178, "654": 178, "684": 178, "674": 178, "679": 178, "680": 178, "664": 178, "pr2": 178, "671": 178, "663": 178, "usherbrook": 178, "648": 178, "582": 178, "660": 178, "612": 178, "wrt": 178, "651": 178, "659": 178, "658": 178, "resav": 178, "657": 178, "628": 178, "637": 178, "639": 178, "614": 178, "633": 178, "tissuetyp": 178, "632": 178, "627": 178, "626": 178, "loosevers": 178, "625": 178, "624": 178, "619": 178, "618": 178, "616": 178, "576": 178, "387": [178, 183], "610": 178, "609": 178, "607": 178, "606": 178, "605": 178, "594": [178, 188], "771": 178, "761": 178, "dconn": 178, "723": 178, "738": 178, "tkinter": 178, "752": 178, "mesa": 178, "763": 178, "764": 178, "404": [178, 188, 190], "286": 178, "755": 178, "test_shm": 178, "test_sf_to_sh": 178, "same_kind": 178, "737": 178, "672": 178, "730": 178, "734": 178, "688": 178, "cento": [178, 183], "python2": 178, "725": 178, "611": 178, "715": 178, "segment_quickbundl": [178, 182, 186], "719": 178, "693": 178, "694": 178, "697": 178, "test_spher": 178, "test_interp_rbf": 178, "649": 178, "656": 178, "701": 178, "syn_registration_3d": 178, "704": 178, "622": 178, "233": [178, 187], "652": 178, "653": 178, "revisit": [178, 186], "cuba": 178, "655": 178, "638": 178, "623": 178, "604": 178, "arm": 178, "613": 178, "test_vector_field": [178, 180], "test_reorient_vector_field_2d": 178, "271": 179, "925": 179, "915": 179, "dipy_quickbundl": 179, "922": 179, "921": 179, "918": 179, "test_expectmax": 179, "917": 179, "916": 179, "908": 179, "911": 179, "904": 179, "851": 179, "upcom": [179, 181, 187, 189, 190, 194], "856": 179, "room": 179, "762": 179, "816": 179, "811": 179, "853": 179, "miscellan": [179, 195, 196], "849": 179, "850": 179, "848": 179, "847": 179, "845": 179, "examples_index": 179, "846": 179, "826": 179, "841": 179, "839": 179, "819": 179, "843": 179, "838": 179, "833": 179, "817": 179, "695": 179, "829": 179, "813": [179, 180], "830": 179, "825": 179, "toollib": 179, "802": 179, "760": 179, "824": 179, "815": 179, "669": 179, "moco": 179, "809": 179, "821": 179, "revert": [179, 180, 183, 185, 187], "commit_info": 179, "818": 179, "797": 179, "806": 179, "814": [179, 186], "745": 179, "807": 179, "shebang": [179, 180], "801": 179, "886": 179, "863": 179, "919": 179, "896": [179, 180], "906": 179, "890": 179, "905": 179, "898": 179, "891": [179, 180], "892": 179, "894": 179, "895": 179, "893": 179, "860": 179, "badg": [179, 180, 181, 182, 183, 195], "692": 179, "quickstart": [179, 183], "822": 179, "me": 179, "urlerror": 179, "errno": 179, "10060": 179, "840": 179, "855": 179, "3rc": 179, "153": [179, 194], "665": 179, "macosx": 179, "758": 179, "842": 179, "pip": [179, 180, 187], "805": 179, "812": 179, "685": [179, 193], "pr5": [179, 193], "666": 179, "747": 179, "631": 179, "820": 179, "810": 179, "_voxel2stream": 179, "803": 179, "vm": 179, "1491": [180, 182], "antonio": 180, "ossa": 180, "etienn": [180, 194], "julio": 180, "villalon": 180, "manu": 180, "sharma": [180, 183, 184], "gonzalez": 180, "riddhish": 180, "bhalodia": 180, "sourav": 180, "singh": [180, 182], "stong": 180, "guillaum": [180, 181, 183], "theaud": [180, 181, 183], "tingyi": 180, "wanyan": 180, "vibhatha": 180, "abeykoon": 180, "theaveragegui": 180, "511": [180, 187], "342": [180, 192], "1273": 180, "1272": 180, "1269": 180, "1271": 180, "tut": 180, "1268": 180, "1243": 180, "1223": 180, "1270": 180, "1263": 180, "1254": 180, "1261": 180, "1255": 180, "1260": 180, "1241": 180, "1250": 180, "reconst_dki": 180, "1244": 180, "1235": 180, "1233": 180, "dipy_hom": 180, "1234": 180, "1222": 180, "lightweight": [180, 181, 183], "1228": 180, "1227": 180, "1226": 180, "1229": 180, "1225": 180, "1219": 180, "dropbox": 180, "1221": 180, "1212": 180, "1217": 180, "reconst_gqi": 180, "1205": 180, "1166": 180, "1216": 180, "1214": 180, "clarif": 180, "simplify_warp_funcion_3d": 180, "1206": 180, "1204": 180, "1196": 180, "1199": 180, "1202": 180, "1198": 180, "1201": 180, "cla": 180, "1052": 180, "1183": 180, "textbox": 180, "1186": 180, "wheelhous": 180, "1195": 180, "1193": 180, "accent": [180, 189], "anticip": 180, "1140": 180, "1171": 180, "1123": 180, "1162": 180, "1147": 180, "1050": 180, "1082": 180, "1153": 180, "1159": 180, "1157": 180, "get_head": 180, "1160": 180, "1158": 180, "1151": 180, "fmin": 180, "studio": 180, "1149": 180, "1137": 180, "942": 180, "indivdu": 180, "1141": 180, "1098": 180, "vizualis": 180, "1136": 180, "1113": 180, "1134": 180, "993": 180, "1064": 180, "1114": 180, "pathlength": 180, "reconst_dti": 180, "1132": 180, "1125": 180, "1130": 180, "1092": 180, "1129": 180, "1127": 180, "1034": 180, "1060": 180, "1124": 180, "1110": 180, "1120": 180, "1119": 180, "1075": 180, "drop26": 180, "835": 180, "nbr_process": 180, "1049": 180, "1087": 180, "1112": 180, "1106": 180, "1066": 180, "1091": 180, "1105": 180, "imp": 180, "1102": 180, "py35": 180, "1100": 180, "1094": 180, "1059": 180, "1061": 180, "1089": 180, "1079": 180, "1080": 180, "828": 180, "1072": 180, "1025": 180, "1077": 180, "1069": 180, "1068": 180, "test_shor": 180, "1067": 180, "1062": 180, "1056": 180, "1028": 180, "1041": 180, "1039": 180, "1019": 180, "heavi": 180, "1018": 180, "1035": 180, "974": 180, "1021": 180, "1024": 180, "documnet": 180, "reconst_dsid": 180, "981": 180, "979": 180, "958": 180, "1005": 180, "951": 180, "1015": 180, "992": 180, "1003": 180, "1004": 180, "pkg_info": 180, "1006": 180, "1010": 180, "929": 180, "941": 180, "956": [180, 187], "955": 180, "952": 180, "982": 180, "972": [180, 185], "901": 180, "971": 180, "989": 180, "977": 180, "957": 180, "959": 180, "967": 180, "954": 180, "948": 180, "test_sumsqdiff": 180, "test_scalespac": 180, "964": 180, "test_imaffin": 180, "963": 180, "947": 180, "897": 180, "926": 180, "937": 180, "clamp": 180, "907": 180, "mathjax": 180, "932": 180, "931": 180, "927": 180, "test_bvectxt": 180, "913": 180, "935": 180, "934": 180, "todai": 180, "1143": 180, "1246": 180, "1265": 180, "test_nlmeans_4d_3dsigma_and_thread": 180, "1251": 180, "1238": 180, "cryptic": 180, "1242": 180, "intermittenli": 180, "1252": 180, "revamp": 180, "1179": 180, "1253": 180, "1001": 180, "1258": 180, "369": 180, "1155": 180, "1070": 180, "711": 180, "api_chang": 180, "321": 180, "994": 180, "608": 180, "test_imwarp": 180, "591": 180, "seed_from_mask": [180, 189], "518": 180, "todo": 180, "328": 180, "incompat": [180, 187, 196], "1210": 180, "1209": 180, "909": 180, "inconsist": [180, 187, 192, 193], "1182": 180, "1211": 180, "1027": 180, "1218": 180, "1215": 180, "tracking_quick_start": [180, 181, 187], "1213": 180, "1191": 180, "1207": 180, "1107": 180, "swallow": [180, 191], "rework": [180, 185, 187], "1188": 180, "1187": 180, "1170": 180, "1173": 180, "test_peaksfrommodelparallel": 180, "1189": 180, "np1": 180, "1139": 180, "1142": 180, "streamlines_format": 180, "1097": 180, "1163": 180, "940": 180, "1040": 180, "ivim_linear": 180, "1128": 180, "1138": 180, "1148": 180, "740": 180, "1045": 180, "1154": 180, "1145": 180, "827": 180, "1051": 180, "673": 180, "859": 180, "983": 180, "884": 180, "984": 180, "1009": 180, "1036": 180, "anaconda": [180, 181, 183, 192], "973": 180, "1121": 180, "1083": 180, "332": 180, "nipyp": [180, 195], "1116": 180, "bufferediobas": 180, "351": 180, "912": 180, "1104": 180, "restore_dti": 180, "367": [180, 187], "1101": 180, "1085": 180, "1081": 180, "1031": 180, "1071": 180, "1037": 180, "1078": 180, "953": 180, "883": 180, "1011": 180, "1055": 180, "1057": 180, "workaround": [180, 186], "slowadcopdfmodel": 180, "1054": 180, "1043": 180, "899": 180, "991": 180, "footer": 180, "1008": 180, "charm": 180, "1033": 180, "1032": 180, "1029": 180, "1014": 180, "1013": 180, "make_fetch": 180, "1023": 180, "882": 180, "885": 180, "902": 180, "997": 180, "675": 180, "stabilis": 180, "1012": 180, "996": 180, "998": 180, "1007": 180, "980": 180, "1017": 180, "887": 180, "995": 180, "344": 180, "970": 180, "986": 180, "pip3": [180, 191], "990": 180, "988": 180, "975": 180, "517": 180, "960": 180, "961": 180, "880": [180, 181], "962": 180, "889": 180, "866": 180, "test_metr": 180, "867": 180, "test_parzenhist": 180, "868": 180, "869": 180, "870": 180, "test_transform": 180, "871": 180, "864": 180, "862": 180, "test_crosscorr": 180, "873": 180, "831": 180, "weird": 180, "876": 180, "968": 180, "872": 180, "966": 180, "920": 180, "950": 180, "949": 180, "878": 180, "939": 180, "945": 180, "indent": 180, "unsus": 180, "924": 180, "879": 180, "938": 180, "212": [181, 186], "bennet": [181, 182], "fauber": [181, 182], "saber": 181, "sheybani": 181, "1367": 181, "1361": 181, "1316": 181, "1360": 181, "1348": 181, "1357": 181, "1332": 181, "1239": 181, "1356": 181, "1351": 181, "1353": 181, "epilogu": 181, "1262": 181, "1352": 181, "1314": 181, "1345": 181, "1330": 181, "1315": 181, "gpl": [181, 187, 193], "1328": 181, "1329": 181, "1335": 181, "test_csdeconv": 181, "1319": 181, "1297": 181, "1298": 181, "textactor2d": 181, "1312": 181, "1285": 181, "1307": 181, "1310": 181, "1308": 181, "1304": 181, "1303": 181, "reciproc": [181, 199], "1289": 181, "1288": 181, "1290": 181, "1279": 181, "1287": 181, "1286": 181, "1284": 181, "1278": 181, "viz_ui": 181, "1366": 181, "1146": 181, "1084": 181, "1248": 181, "1359": 181, "1324": 181, "1334": 181, "1344": 181, "1346": 181, "1333": 181, "clinicalgraph": 181, "1044": 181, "1247": 181, "1337": 181, "coveral": 181, "baggi": 181, "1341": 181, "activeax": [181, 182], "1325": 181, "1323": 181, "1042": 181, "1317": 181, "reconst_fwdti": 181, "1313": 181, "vtkcommoncor": 181, "1318": 181, "func_mul": 181, "1167": 181, "1180": 181, "375": 181, "directiion": 181, "ppc": [181, 187, 192], "804": 181, "662": 181, "1306": 181, "1309": 181, "step_help": 181, "1293": 181, "1292": 181, "570": 181, "1169": 181, "645": [182, 183], "conor": 182, "corbin": 182, "jiri": [182, 183], "borovec": [182, 183, 191], "mendoza": 182, "karandeep": [182, 183], "kumar": 182, "ashutosh": 182, "pradeep": 182, "reddi": 182, "raamana": 182, "ricci": [182, 183, 190], "woo": [182, 183, 190], "aman": 182, "arya": 182, "215": 182, "1504": 182, "test_whole_brain_slr": 182, "1503": 182, "1424": 182, "1502": 182, "1498": 182, "1431": 182, "1443": 182, "1398": 182, "1447": 182, "1423": 182, "reconst_mapmri": 182, "1493": 182, "vtk8": 182, "1497": 182, "fiber_to_bundle_coher": 182, "1496": 182, "1495": 182, "sfm_reconst": 182, "1494": 182, "reconst_csd": 182, "1474": 182, "1471": 182, "1457": 182, "1468": 182, "1484": 182, "punctuat": 182, "1475": 182, "_iter": 182, "1482": 182, "test_mapmri": 182, "1460": 182, "diskslid": 182, "1452": 182, "1466": 182, "logo": [182, 187], "1464": 182, "banner": [182, 187], "1465": 182, "progit": 182, "1451": 182, "1379": 182, "1445": 182, "1450": 182, "delimit": 182, "1425": 182, "1446": 182, "hyperlink": [182, 184], "1437": 182, "mdfmetric": 182, "qbx": 182, "1428": 182, "1385": 182, "textblock": 182, "1422": 182, "1434": 182, "1430": 182, "1421": 182, "1416": 182, "1413": 182, "getargspec": 182, "1393": 182, "1294": 182, "1419": 182, "1384": 182, "1411": 182, "eddy_rotated_bvec": 182, "1407": 182, "1408": 182, "reconst_csa": 182, "reconst_forecast": 182, "1406": 182, "assert_tru": 182, "1347": 182, "1322": 182, "1326": 182, "1399": 182, "1391": 182, "1331": 182, "1386": 182, "1165": 182, "1300": 182, "ravel_multi_index": [182, 187], "1381": 182, "1375": 182, "1342": 182, "whatnot": 182, "1378": 182, "1377": 182, "1374": 182, "1368": 182, "affili": [182, 183], "1370": 182, "1369": 182, "1418": [182, 196], "parallel_voxel_fit": [182, 183, 196], "1291": 182, "644": 182, "1490": 182, "1469": 182, "1485": 182, "1483": 182, "1480": 182, "1479": 182, "1477": 182, "1448": 182, "1481": 182, "globalimmediatemoderenderingon": 182, "1454": 182, "1467": 182, "1488": 182, "1478": 182, "1476": 182, "1470": 182, "1458": 182, "1438": 182, "1473": 182, "1462": 182, "1461": 182, "1463": 182, "1455": 182, "pyautogui": 182, "1456": 182, "1453": 182, "1339": 182, "1441": 182, "1449": 182, "1362": 182, "1395": 182, "1436": 182, "1417": 182, "1435": 182, "1439": 182, "memview": 182, "1184": 182, "1380": 182, "1429": 182, "syntaxerror": 182, "xe2": [182, 186], "596": [182, 188], "1390": 182, "coding_style_guidelin": 182, "1427": 182, "1426": 182, "987": 182, "faq": [182, 185, 191], "1327": 182, "1181": 182, "1150": 182, "1409": 182, "1415": 182, "1117": 182, "1412": 182, "791": 182, "1410": 182, "1403": 182, "jet": 182, "1387": 182, "1405": 182, "1402": 182, "rint": 182, "1321": 182, "1161": 182, "1394": 182, "misc": [182, 183, 195], "1382": 182, "1350": 182, "1392": 182, "chrome": 182, "1388": 182, "1340": 182, "1383": 182, "mmriflow": 182, "1299": 182, "test_rmi": [182, 187], "1301": 182, "1376": 182, "1343": 182, "1282": 182, "filo": 183, "albai": 183, "parichit": [183, 184], "chandan": 183, "gangwar": 183, "enrico": 183, "cahal": 183, "hunt": 183, "194": 183, "1684": 183, "1686": 183, "1685": 183, "1663": 183, "snr_in_cc": [183, 189], "1681": 183, "1680": 183, "1683": 183, "1677": 183, "1678": 183, "1676": 183, "1283": 183, "1670": 183, "1669": 183, "1659": 183, "1621": 183, "1657": 183, "1660": 183, "1658": 183, "honor": 183, "1281": 183, "1651": 183, "1656": 183, "neurostar": [183, 198], "1624": 183, "1655": 183, "1650": 183, "codecov": [183, 194], "1649": 183, "1556": 183, "1645": 183, "worflow": [183, 190], "1647": 183, "1644": 183, "1643": 183, "787": 183, "starter": 183, "1642": 183, "1641": 183, "evenly_distributed_sphere_642": 183, "1564": 183, "listbox2d": 183, "1636": 183, "1584": 183, "1554": 183, "1528": 183, "imread": 183, "1526": 183, "1623": 183, "1626": 183, "1619": 183, "1592": 183, "1559": 183, "checkbox": 183, "radiobutton": 183, "1583": 183, "1602": 183, "1609": 183, "1560": 183, "1593": 183, "1597": 183, "1601": 183, "1515": 183, "1590": 183, "1570": 183, "1589": 183, "1580": 183, "1533": 183, "1523": 183, "1543": 183, "out_strategi": 183, "1547": 183, "1561": 183, "1578": 183, "1563": 183, "major_vers": 183, "1557": 183, "button2d": 183, "1555": 183, "1522": 183, "1355": 183, "listbox": 183, "1540": 183, "1548": 183, "1542": 183, "1546": 183, "1545": 183, "1492": 183, "mistakenli": 183, "1536": 183, "1537": 183, "unncessari": 183, "importd": 183, "1530": 183, "1529": 183, "1520": 183, "1524": 183, "1521": 183, "1518": 183, "1517": 183, "1516": 183, "1514": 183, "pep8speak": [183, 190], "1513": 183, "quick_start": 183, "1510": 183, "1508": 183, "appeas": 183, "1506": 183, "1679": 183, "1220": 183, "746": 183, "1637": 183, "1673": 183, "1338": 183, "1682": 183, "634": 183, "944": 183, "1099": 183, "1544": 183, "643": 183, "1674": 183, "1397": 183, "1668": 183, "1662": 183, "oustid": [183, 184], "1296": 183, "ana": 183, "mini": 183, "1653": 183, "1654": 183, "1414": 183, "1093": 183, "preload": 183, "1615": 183, "1631": 183, "1638": 183, "noddix": 183, "1618": 183, "filemenu2d": 183, "1569": 183, "listboxitem2d": 183, "1532": 183, "sierra": 183, "ananoda": 183, "1420": 183, "1396": 183, "1295": 183, "1232": 183, "disappear": 183, "928": 183, "854": 183, "759": 183, "vtk6": [183, 186, 187], "647": 183, "voxsz": 183, "646": 183, "353": 183, "1203": 183, "1156": 183, "642": 183, "1135": 183, "442": 183, "558": 183, "1236": 183, "1389": 183, "1519": 183, "1596": 183, "gsoc": [183, 184], "noddix_pr": 183, "1576": 183, "1568": 183, "1108": 183, "1629": 183, "userwarn": [183, 189], "1591": 183, "1582": 183, "1575": 183, "1620": 183, "1598": 183, "1595": 183, "1588": 183, "1608": 183, "1610": 183, "tortois": 183, "1607": 183, "1586": 183, "viz_advanc": 183, "1585": 183, "1594": 183, "1577": 183, "1571": 183, "1579": 183, "1433": 183, "mess": 183, "1541": 183, "1573": 183, "test_ui_listbox_2d": 183, "1566": 183, "1572": 183, "1567": 183, "1551": 183, "1549": 183, "1562": 183, "1550": 183, "1527": 183, "1534": 183, "1487": 183, "check_scratch": 183, "1486": 183, "1539": 183, "1535": 183, "1507": 183, "1512": 183, "1511": 183, "exaampl": 183, "1509": 183, "361": [184, 187], "cl\u00e9ment": 184, "zotti": 184, "katrin": 184, "leinweb": 184, "yijun": 184, "liu": [184, 194], "1755": 184, "1748": 184, "1714": 184, "1726": 184, "1753": 184, "1751": 184, "1743": 184, "1749": 184, "1739": 184, "1695": 184, "1741": 184, "1742": 184, "1745": 184, "1746": 184, "sponsor": 184, "1735": 184, "1738": 184, "1740": 184, "1730": 184, "1666": 184, "1737": 184, "1733": 184, "1732": 184, "maiincrement": 184, "1716": 184, "1640": 184, "1652": 184, "1720": 184, "1719": 184, "1715": 184, "bullet": 184, "1706": 184, "liner": 184, "1705": 184, "1704": 184, "linear_fascicle_evalu": 184, "1701": 184, "1707": 184, "pendingdeprec": 184, "1703": 184, "1708": 184, "1710": 184, "1702": 184, "1697": 184, "1696": 184, "1690": 184, "1693": 184, "1757": 184, "sensor": 184, "acsept": 184, "usersranjianaconda3libsit": 184, "packagesipykernel_launch": 184, "imsav": 184, "imageio": 184, "imwrit": 184, "1616": 184, "1605": 184, "1661": 184, "1604": [184, 195], "1734": 184, "1565": 184, "1729": 184, "n4": 184, "1280": 184, "1727": 184, "1723": 184, "1718": [184, 189], "1717": 184, "1664": 184, "1633": 184, "1698": 184, "1691": 184, "1692": 184, "1632": 184, "mdesco": 185, "141": 185, "sf2sh": 185, "dsi_deconv": 185, "133": 185, "132": 185, "130": [185, 190], "127": 185, "result_typ": 185, "getitem": 185, "seper": 185, "_squash": 185, "110": 185, "xp": 185, "sty": 185, "multivoxel": 185, "ip": 185, "yai": 185, "l2norm": 185, "refrenc": 185, "e1381s6_edcor": 185, "optional_trait": 185, "brought": 185, "_filter": 185, "reduce_antipod": 185, "preview": 185, "_filter_peak": 185, "optionalimporterror": 185, "trait": 185, "gitwash": 185, "frontpag": 185, "longest_track_len": 185, "mayavi": 185, "consisten": 185, "refacotor": 185, "tb": 185, "hap": 185, "triangle_subdivid": 185, "badrequest": 185, "erik": 186, "279": 186, "257": 186, "274": 186, "275": 186, "261": 186, "273": 186, "autopep8": 186, "shmfit": 186, "260": 186, "peaks_from_model_parallel": 186, "sdeconv": 186, "253": [186, 187], "252": 186, "243": 186, "240": 186, "245": 186, "230": 186, "229": 186, "brainextract": 186, "226": 186, "setinput": 186, "vtk5": 186, "setinputdata": 186, "223": 186, "222": 186, "216": 186, "mask_voxel_s": 186, "promote_dtyp": 186, "wi": 186, "211": 186, "213": 186, "207": 186, "205": 186, "173": 186, "tensor_": 186, "201": 186, "testfail": 186, "189": 186, "probabilisticodfweightedtrack": 186, "190": 186, "182": 186, "soureforg": 186, "py3": 186, "supersed": 186, "174": 186, "invoc": [186, 187], "172": 186, "stamp": 186, "166": 186, "164": [186, 191], "163": [186, 191], "544": 187, "543": 187, "plot_2d": 187, "537": 187, "534": 187, "536": 187, "535": 187, "527": 187, "npymath": 187, "528": 187, "530": 187, "ugli": 187, "msvc": 187, "529": 187, "526": 187, "523": 187, "522": 187, "521": 187, "520": 187, "519": 187, "christma": 187, "513": 187, "reinstat": 187, "508": 187, "516": 187, "495": 187, "509": 187, "460": 187, "499": 187, "501": 187, "507": 187, "mergsort": 187, "494": 187, "503": 187, "471": 187, "importlib": 187, "__import__": 187, "419": 187, "489": 187, "484": 187, "490": 187, "traco": 187, "redesign": 187, "483": 187, "485": 187, "unus": [187, 189, 190, 195], "482": 187, "479": 187, "481": 187, "476": 187, "478": 187, "477": 187, "474": 187, "virtualenv": 187, "473": 187, "469": 187, "463": 187, "466": 187, "465": 187, "433": 187, "458": 187, "npy_math": 187, "447": 187, "439": 187, "443": 187, "456": 187, "454": 187, "checker": 187, "453": 187, "446": 187, "445": 187, "pxi": 187, "431": 187, "408": 187, "438": [187, 201], "405": 187, "418": 187, "437": 187, "435": 187, "434": 187, "430": 187, "427": 187, "422": 187, "415": 187, "420": 187, "413": 187, "memory_leak": 187, "test_strealin": 187, "417": 187, "409": 187, "pipe": 187, "396": 187, "407": 187, "omarocegueda": 187, "402": 187, "ae": 187, "test_peak_directions_thorough": 187, "401": 187, "skiptest": 187, "340": 187, "397": 187, "386": 187, "352": 187, "odf_sh_sharpen": 187, "374": 187, "bumpi": 187, "380": 187, "378": 187, "379": 187, "339": 187, "373": 187, "371": 187, "fopenmp": 187, "crossplatform": 187, "337": 187, "370": 187, "tone": 187, "364": 187, "368": 187, "363": 187, "355": 187, "356": 187, "349": 187, "348": 187, "347": 187, "338": 187, "334": 187, "vec2vec": 187, "324": 187, "331": 187, "326": 187, "327": 187, "319": 187, "318": 187, "316": 187, "315": 187, "305": 187, "311": 187, "309": 187, "stuf": 187, "303": 187, "304": 187, "302": 187, "290": 187, "542": 187, "538": 187, "449": 187, "512": 187, "467": 187, "464": 187, "wheezi": [187, 188], "argsort": 187, "mergesort": 187, "506": 187, "383": 187, "350": 187, "424": 187, "493": 187, "complier": 187, "uisng": 187, "dpy_math": 187, "hyp2f1": 187, "502": 187, "492": 187, "410": 187, "implemen": 187, "487": 187, "428": 187, "travis": 187, "475": 187, "tmp_file": 187, "470": 187, "461": 187, "432": 187, "450": 187, "matrix44": 187, "452": 187, "398": 187, "444": 187, "mkl": 187, "pow": 187, "391": 187, "16gb": 187, "wasn": 187, "385": 187, "376": 187, "demianw": 187, "358": 187, "343": 187, "277": 187, "235": [187, 188], "329": 187, "330": 187, "312": 187, "quicki": 187, "307": 187, "241": 187, "248": 187, "peaksfrommodel": 187, "282": 187, "incomprehens": 187, "228": 187, "dipy_fit_tensor": 187, "brittl": 187, "create_half_unit_spher": 187, "306": 187, "310": 187, "575": 188, "595": 188, "599": 188, "dpy_rint": 188, "test_center_of_mass": 188, "601": 188, "598": 188, "undetect": 188, "593": 188, "mor": 188, "588": 188, "565": 188, "589": 188, "typograph": 188, "584": 188, "lenght": 188, "568": 188, "quickbundles2": 188, "559": 188, "586": 188, "574": 188, "581": 188, "580": 188, "579": 188, "577": 188, "553": 188, "552": 188, "571": 188, "557": 188, "563": 188, "564": 188, "561": 188, "francopestilli": 188, "551": 188, "602": 188, "test_feature_center_of_mass": 188, "597": 188, "585": 188, "strcutur": 188, "amico": 188, "567": 188, "414": 188, "three_shells_voxel": 188, "555": 188, "chatroom": 188, "354": 188, "532": 188, "sparc": 188, "antoin": 189, "theberg": 189, "clint": 189, "1946": 189, "1947": 189, "1942": 189, "1917": 189, "1940": 189, "1909": 189, "1931": 189, "1944": 189, "1939": 189, "1943": 189, "1941": 189, "1926": 189, "1935": 189, "1903": 189, "s390x": 189, "1892": 189, "1804": 189, "1937": 189, "1928": 189, "1925": 189, "1927": 189, "1923": 189, "1894": 189, "1812": 189, "stateful": 189, "1922": 189, "1885": 189, "1913": 189, "1915": 189, "1630": 189, "1896": 189, "1912": 189, "1916": 189, "1918": 189, "1881": 189, "python_requir": 189, "1914": 189, "1907": 189, "1908": 189, "1887": 189, "1905": 189, "1849": 189, "1902": 189, "1904": 189, "1771": 189, "1899": 189, "1898": 189, "1897": 189, "1893": 189, "1891": 189, "test_refine_rb": 189, "test_bundl": 189, "1888": 189, "1879": 189, "1884": 189, "1875": 189, "1882": 189, "1880": 189, "1878": 189, "numpy_less_0": 189, "1877": 189, "scipy_less_0": 189, "1876": 189, "1874": 189, "oversight": 189, "1858": 189, "1843": 189, "1866": 189, "1850": 189, "1855": 189, "statsmodel": 189, "1835": 189, "1836": 189, "1792": 189, "1851": 189, "1842": 189, "tput": 189, "1830": 189, "1821": 189, "1816": 189, "1818": 189, "1827": 189, "1824": 189, "1819": 189, "diffeormorph": 189, "1823": 189, "1814": 189, "1815": 189, "1813": 189, "1772": 189, "1810": 189, "1806": 189, "1789": 189, "1770": 189, "1796": 189, "1795": 189, "1768": 189, "1788": 189, "1769": 189, "1767": 189, "1759": 189, "1230": 189, "1798": 189, "plote": 189, "1817": 189, "1774": 189, "1587": 189, "1890": 189, "1933": 189, "985": 189, "1558": 189, "389": 189, "peaks_direct": 189, "590": 189, "1722": 189, "1832": 189, "728": 189, "1920": 189, "bedpostx": 189, "1779": 189, "1906": 189, "1901": 189, "1747": 189, "1839": 189, "583": 189, "1694": 189, "test_streamlin": 189, "1724": [189, 191], "844": 189, "1752": 189, "1856": 189, "1807": 189, "1889": 189, "1713": 189, "668": 189, "592": 189, "shouldn": [189, 195], "nodirect": 189, "1811": 189, "1831": 189, "1857": 189, "1863": 189, "1781": 189, "1869": 189, "1844": 189, "1865": 189, "1860": 189, "1168": 189, "1854": 189, "1764": 189, "1731": 189, "1845": 189, "1829": 189, "reco": 189, "1606": 189, "qualit": 189, "1837": 189, "1786": 189, "1828": 189, "1833": 189, "1834": 189, "1721": 189, "b0slice": 189, "implicit": 189, "1499": 189, "dii": 189, "1822": 189, "1825": 189, "1048": 189, "1797": 189, "1802": 189, "1787": 189, "1763": 189, "1756": 189, "1761": 189, "795": 189, "620": 189, "436": 189, "1758": 189, "1808": 189, "1794": 189, "dettrackpamflow": 189, "1801": 189, "1803": 189, "1809": 189, "1799": 189, "nifiti": 189, "1712": 189, "3075": 189, "1783": 189, "1784": 189, "1790": 189, "1782": 189, "1320": 189, "1245": 189, "1240": 189, "1237": 189, "flesh": 189, "1192": 189, "1096": 189, "832": 189, "578": 189, "behnel": 189, "1780": 189, "1126": 189, "1603": 189, "2030": 190, "2029": 190, "dead": [190, 195], "1862": 190, "1952": 190, "1975": 190, "1711": 190, "1989": 190, "1987": 190, "1986": 190, "1980": 190, "1979": 190, "1956": 190, "stateful_tractogram_post_1": 190, "0_fix": 190, "1971": 190, "1970": 190, "1929": 190, "reloc": 190, "sim_respons": 190, "1966": 190, "1967": 190, "1961": 190, "1963": 190, "1948": 190, "1951": 190, "1958": 190, "1197": 190, "1959": 190, "1777": 190, "read_": 190, "1634": 190, "1949": 190, "1870": 190, "1953": 190, "1976": 190, "785": 190, "1859": 190, "1950": 190, "statefulltractogram": 190, "1930": 190, "ioerror": 190, "1968": 190, "1960": 190, "1867": 190, "circleci": 190, "1954": 190, "1840": 190, "1841": 190, "1955": 190, "intersphinx": 190, "inventori": 190, "1401": 190, "1442": 190, "1791": 190, "aryansh": 191, "omrai": 191, "charl": [191, 192], "poirier": [191, 192], "fabio": 191, "neri": 191, "jirka": 191, "leevi": [191, 195], "kerkela": [191, 195], "leon": [191, 195], "wening": [191, 195], "martijn": 191, "nagtega": 191, "sarath": 191, "chandra": 191, "shrishti": 191, "hore": 191, "shubham": 191, "shaswat": 191, "taki": 191, "panagopoulo": 191, "tashrif": 191, "billah": 191, "kunal": 191, "mehta": 191, "svabhishek29": 191, "areesha": [191, 192, 193], "tariq": [191, 192, 193], "karan": [191, 192, 193], "2191": 191, "2212": 191, "2207": 191, "2208": 191, "2157": 191, "uniniti": 191, "2205": 191, "2204": 191, "2183": 191, "_streamlines_in_mask": 191, "2203": 191, "2142": 191, "2195": 191, "2161": 191, "2163": 191, "2174": 191, "2168": 191, "2178": 191, "2193": 191, "buan_flow": 191, "2196": 191, "2188": 191, "2176": 191, "2173": 191, "2171": 191, "2154": 191, "2162": 191, "2156": 191, "2160": 191, "assert_": 191, "2158": 191, "2155": 191, "2147": 191, "2148": 191, "2150": 191, "2149": 191, "2145": 191, "2152": 191, "2146": 191, "2134": 191, "2135": 191, "2141": 191, "2136": 191, "2140": 191, "rag": 191, "2139": 191, "2108": 191, "2121": 191, "2129": 191, "2133": 191, "2125": 191, "2124": 191, "2033": 191, "2111": 191, "2086": 191, "2091": 191, "2057": 191, "2103": 191, "grammar": [191, 196], "2088": 191, "2120": 191, "2113": 191, "cigar_tensor": 191, "2116": 191, "2100": 191, "grammat": 191, "2101": 191, "2095": 191, "2099": 191, "2102": 191, "2055": 191, "2097": 191, "sform": 191, "get_best_affin": 191, "2104": 191, "2065": 191, "2090": 191, "2067": 191, "2093": 191, "2077": 191, "2071": 191, "2084": 191, "kunakl07": 191, "2085": 191, "2068": 191, "2069": 191, "2063": 191, "2045": 191, "2060": 191, "2058": 191, "2059": 191, "2056": 191, "2053": 191, "_gibbs_removal_2d": 191, "2043": 191, "2047": 191, "2044": 191, "2041": 191, "2039": 191, "2042": 191, "2040": 191, "2038": 191, "2037": 191, "fw": 191, "2028": 191, "2035": 191, "2114": 191, "1793": 191, "wf": 191, "2061": 191, "colab": 191, "kaggl": 191, "2070": 191, "2107": 191, "2153": 191, "2138": 191, "2194": 191, "2177": 191, "2182": 191, "tp_print": 191, "2199": 191, "2175": 191, "2190": [191, 192], "2051": 191, "2172": 191, "2169": 191, "2170": 191, "2144": 191, "2159": 191, "2151": 191, "2130": 191, "2131": 191, "elementwis": 191, "2128": 191, "1765": 191, "2122": 191, "2127": 191, "2126": 191, "2096": 191, "2118": 191, "1861": 191, "2024": 191, "winter": 191, "2094": 191, "friendli": 191, "regn": 191, "2078": 191, "1305": 191, "polici": 191, "2089": 191, "2072": 191, "2073": 191, "old_highlight": 191, "2074": 191, "2075": 191, "maintainer_workflow": 191, "2076": 191, "2079": 191, "2080": 191, "2081": 191, "2082": 191, "2083": 191, "2066": 191, "1363": 191, "1871": 191, "2052": 191, "1785": 191, "gifti": 191, "1728": 191, "1699": 191, "1671": 191, "1552": 191, "1373": 191, "troubleshoot": 191, "1152": 191, "1047": 191, "2049": 191, "2048": 191, "218": 191, "313": 191, "1848": 191, "hub": 191, "2034": 191, "queue": 191, "backlog": 191, "1864": 191, "basil": 192, "pinsard": 192, "jaewon": 192, "siddharth": 192, "kapoor": 192, "2181": 192, "2223": 192, "2238": 192, "2265": 192, "2206": 192, "2266": 192, "2255": 192, "2271": 192, "2263": 192, "part2": 192, "2259": 192, "2264": 192, "2268": 192, "2267": 192, "2262": 192, "2244": 192, "2119": 192, "2260": 192, "2258": 192, "2257": 192, "2261": 192, "1919": 192, "2256": 192, "2253": 192, "2240": 192, "2198": 192, "btensor": 192, "2025": 192, "2197": 192, "2227": 192, "2250": 192, "2252": 192, "2248": 192, "2249": 192, "2247": 192, "2246": 192, "backtick": 192, "2239": 192, "2242": 192, "2241": 192, "2235": 192, "2234": 192, "2231": 192, "2221": 192, "robustifi": 192, "solvererror": 192, "2226": 192, "2225": 192, "rackspac": 192, "nightli": [192, 195], "2224": 192, "xfail": 192, "assert_rais": 192, "2220": 192, "2218": 192, "2217": 192, "lstsq": 192, "2211": 192, "2272": 192, "2180": 192, "2054": 192, "unr": 192, "2046": 192, "2132": 192, "1266": 192, "test_mapmri_isotropic_static_scale_factor": 192, "1264": 192, "2117": 192, "2202": 192, "2115": 192, "1744": 192, "1489": 192, "2192": 192, "2201": 192, "2232": 192, "somesuch": 192, "2219": 192, "2236": 192, "2254": 192, "2251": 192, "2243": 192, "2237": 192, "2245": 192, "verbatim": 192, "2230": 192, "2228": 192, "2109": 192, "spring": [192, 195], "2214": 192, "2216": 192, "test_multi_shell_fiber_respons": 192, "2185": 192, "2215": 192, "1762": 192, "1354": 192, "325": 192, "2318": 193, "p2": [193, 194], "2317": 193, "2315": 193, "weekli": 193, "2307": 193, "2278": 193, "2275": 193, "2277": 193, "2289": 193, "2292": 193, "2296": 193, "2294": 193, "2291": 193, "2295": 193, "2280": 193, "2287": 193, "doctstr": 193, "2286": 193, "2284": 193, "doctsr": 193, "2283": 193, "2282": 193, "2210": 193, "arclength": 193, "722": 193, "2328": 193, "2323": 193, "2229": 193, "2098": 193, "2303": 193, "2279": 193, "felix": 194, "kruper": 194, "2367": 194, "2387": 194, "2386": 194, "2375": 194, "2382": 194, "2385": 194, "2384": 194, "2351": 194, "2381": 194, "2371": 194, "2352": 194, "2373": 194, "2372": 194, "2348": 194, "2363": 194, "2365": 194, "2349": 194, "2350": 194, "size_t": 194, "2346": 194, "mnt": [194, 195], "wherev": 194, "2347": 194, "2340": 194, "reactiv": 194, "2344": 194, "2339": 194, "1648": 194, "2337": 194, "2333": 194, "__str__": 194, "2335": 194, "2332": 194, "2377": 194, "2380": 194, "2300": 194, "2320": 194, "2341": 194, "2353": 194, "1311": 194, "1302": 194, "366": 194, "1672": 194, "fault": 194, "1444": 194, "562": 194, "cordin": 194, "2324": 194, "vr": 194, "2345": 194, "423": 194, "837": 194, "636": 194, "861": 194, "1895": 194, "545": 194, "1847": 194, "1872": 194, "1646": 194, "1635": 194, "2309": 194, "2334": 194, "aphys": 194, "1873": 194, "2343": 194, "2311": 194, "2274": 194, "1675": 194, "2316": 194, "2331": 194, "573": 195, "dan": 195, "franci": 195, "jerom": 195, "giulia": 195, "bert\u00f2": 195, "joshua": 195, "kenji": 195, "marshal": 195, "luca": 195, "costa": 195, "sam": [195, 196], "covenei": [195, 196], "2561": 195, "2520": 195, "2558": 195, "errant": 195, "2557": 195, "2556": 195, "2554": 195, "2555": 195, "2539": 195, "embarassingli": 195, "2545": 195, "2548": 195, "concurr": 195, "gha": 195, "2549": 195, "reconst_sh": 195, "2550": 195, "2551": 195, "minin": 195, "2536": 195, "2533": 195, "underlin": 195, "2342": 195, "2512": 195, "2526": 195, "2534": 195, "2532": 195, "2529": 195, "2528": 195, "2527": 195, "2493": 195, "2522": 195, "2521": 195, "2420": 195, "2482": 195, "2423": 195, "2518": 195, "2515": 195, "2513": 195, "2506": 195, "2510": 195, "reboot": 195, "2487": 195, "2442": 195, "2470": 195, "2485": 195, "2481": 195, "2480": 195, "2478": 195, "2479": 195, "2475": 195, "2476": 195, "2472": 195, "2471": 195, "2468": 195, "2467": 195, "2466": 195, "2453": 195, "2413": 195, "2447": 195, "bitwis": 195, "2444": 195, "2434": 195, "2435": 195, "2436": 195, "2438": 195, "misplac": 195, "2374": 195, "2390": 195, "2417": 195, "2419": 195, "2406": 195, "2411": 195, "c_compress_streamlin": 195, "2416": 195, "2415": 195, "2410": 195, "2409": 195, "2405": 195, "2407": 195, "2392": 195, "2389": 195, "2368": 195, "_local_track": 195, "2123": 195, "2489": 195, "2525": 195, "2509": 195, "2543": 195, "2546": 195, "2542": 195, "2477": 195, "2541": 195, "2507": 195, "2422": 195, "1969": 195, "2456": 195, "2524": 195, "2449": 195, "nonsens": 195, "2179": 195, "2492": 195, "reusabl": 195, "2497": 195, "2495": 195, "2305": 195, "2499": 195, "2488": 195, "whereev": 195, "2504": 195, "fwdwi": 195, "2502": 195, "2490": 195, "2402": 195, "dipy_to_nipype_interfac": 195, "2486": 195, "2484": 195, "2483": 195, "2463": 195, "2460": 195, "2429": 195, "2461": 195, "2464": 195, "homepag": 195, "2457": 195, "2454": 195, "2446": 195, "bitwise_or": 195, "2443": 195, "2441": 195, "2430": 195, "2431": 195, "2432": 195, "2314": 195, "1805": 195, "2418": 195, "365": 195, "2404": 195, "2209": 195, "_pytest": 195, "pathlib": 195, "importpathmismatcherror": 195, "1934": 195, "2312": 195, "2383": 195, "dcperror": 195, "2391": 195, "2393": 195, "probtrackx2": 195, "fmrib": 195, "toolbox": 195, "2310": 195, "deneb": 196, "jacob": 196, "malinda": 196, "dilhara": 196, "2710": 196, "2711": 196, "2702": 196, "2704": 196, "2701": 196, "progbar": 196, "2700": 196, "2694": 196, "2697": 196, "2692": 196, "2693": 196, "2687": 196, "2690": 196, "2688": 196, "2683": 196, "2668": 196, "2674": 196, "2670": 196, "2669": 196, "2664": 196, "2553": 196, "2369": 196, "diffeormorphicmap": 196, "2631": 196, "2630": 196, "2629": 196, "2618": 196, "2606": 196, "2531": 196, "2589": 196, "intemporarydirectori": 196, "tmpfile": 196, "2577": 196, "2595": 196, "2591": 196, "mutabl": 196, "2592": 196, "2579": 196, "2584": 196, "2566": 196, "2581": 196, "2580": 196, "2576": 196, "2568": 196, "2709": 196, "2708": 196, "2699": 196, "noreg": 196, "redux": 196, "2696": 196, "pyafq": 196, "2679": 196, "2676": 196, "2673": 196, "2667": 196, "2662": 196, "cmd_line": 196, "2658": 196, "arm64": 196, "2659": 196, "2649": 196, "2424": 196, "2327": 196, "2313": 196, "wholebrain": 196, "2616": 196, "2627": 196, "2635": 196, "tvis_hdr": 196, "nii_aff": 196, "2634": 196, "2559": 196, "2564": 196, "2572": 196, "2617": 196, "2602": 196, "dear": 196, "expert": 196, "2603": 196, "dti_peak": 196, "2587": 196, "safeti": 196, "tmpdir": 196, "2450": 196, "ptt": 196, "2594": 196, "2573": 196, "2567": 196, "2565": 196, "broader": 198, "respond": 198, "b_matrix": [199, 200], "privat": [199, 200], "req": [199, 200], "g_x": [199, 200], "g_y": [199, 200], "g_z": [199, 200], "supposedli": [199, 200], "envelop": 199, "int_0": 199, "matiello": 199, "onset": 199, "g_j": 199, "direcrt": 199, "trse": [199, 200], "ramp": [199, 200], "2b_": [199, 200], "_3": [199, 200], "callaghan": 199, "eccl": 199, "xia": 199, "narrow": [199, 201], "mysteri": 199, "exposit": 200, "clearer": 200, "frank": 201, "calaghan": 201, "transit": 201, "p_l": 203, "overlin": 203, "a_l": 203, "m_l": 203, "formal": 203, "leq": 203, "foral": 203, "omiss": 203, "stolfi": 204, "atan2": 204, "cart2sph": 204}, "objects": {"": [[129, 0, 0, "-", "dipy"]], "dipy": [[130, 0, 0, "-", "__config__"], [131, 0, 0, "-", "align"], [129, 4, 1, "", "bench"], [132, 0, 0, "-", "boots"], [133, 0, 0, "-", "core"], [134, 0, 0, "-", "data"], [135, 0, 0, "-", "denoise"], [136, 0, 0, "-", "direction"], [129, 4, 1, "", "get_info"], [137, 0, 0, "-", "io"], [138, 0, 0, "-", "nn"], [139, 0, 0, "-", "reconst"], [140, 0, 0, "-", "segment"], [129, 4, 1, "", "setup_test"], [141, 0, 0, "-", "sims"], [142, 0, 0, "-", "stats"], [129, 4, 1, "", "test"], [143, 0, 0, "-", "tracking"], [144, 0, 0, "-", "viz"], [145, 0, 0, "-", "workflows"]], "dipy.align": [[131, 1, 1, "", "Bunch"], [131, 0, 0, "-", "_public"], [131, 4, 1, "", "affine_registration"], [131, 0, 0, "-", "bundlemin"], [131, 0, 0, "-", "crosscorr"], [131, 0, 0, "-", "expectmax"], [131, 3, 1, "", "floating"], [131, 0, 0, "-", "imaffine"], [131, 0, 0, "-", "imwarp"], [131, 0, 0, "-", "metrics"], [131, 0, 0, "-", "parzenhist"], [131, 4, 1, "", "read_mapping"], [131, 4, 1, "", "register_dwi_series"], [131, 4, 1, "", "register_dwi_to_template"], [131, 4, 1, "", "register_series"], [131, 4, 1, "", "resample"], [131, 0, 0, "-", "reslice"], [131, 0, 0, "-", "scalespace"], [131, 4, 1, "", "streamline_registration"], [131, 0, 0, "-", "streamlinear"], [131, 0, 0, "-", "sumsqdiff"], [131, 4, 1, "", "syn_registration"], [131, 0, 0, "-", "transforms"], [131, 0, 0, "-", "vector_fields"], [131, 4, 1, "", "write_mapping"]], "dipy.align.Bunch": [[131, 2, 1, "", "__init__"]], "dipy.align._public": [[131, 1, 1, "", "AffineMap"], [131, 1, 1, "", "AffineRegistration"], [131, 1, 1, "", "AffineTransform3D"], [131, 1, 1, "", "CCMetric"], [131, 1, 1, "", "DiffeomorphicMap"], [131, 1, 1, "", "EMMetric"], [131, 1, 1, "", "MutualInformationMetric"], [131, 1, 1, "", "RigidIsoScalingTransform3D"], [131, 1, 1, "", "RigidScalingTransform3D"], [131, 1, 1, "", "RigidTransform3D"], [131, 1, 1, "", "SSDMetric"], [131, 1, 1, "", "StreamlineLinearRegistration"], [131, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [131, 1, 1, "", "TranslationTransform3D"], [131, 4, 1, "", "affine_registration"], [131, 4, 1, "", "load_nifti"], [131, 4, 1, "", "load_trk"], [131, 1, 1, "", "partial"], [131, 4, 1, "", "read_img_arr_or_path"], [131, 4, 1, "", "read_mapping"], [131, 4, 1, "", "register_dwi_series"], [131, 4, 1, "", "register_dwi_to_template"], [131, 4, 1, "", "register_series"], [131, 4, 1, "", "resample"], [131, 4, 1, "", "save_nifti"], [131, 4, 1, "", "set_number_of_points"], [131, 4, 1, "", "streamline_registration"], [131, 4, 1, "", "syn_registration"], [131, 4, 1, "", "transform_centers_of_mass"], [131, 4, 1, "", "transform_tracking_output"], [131, 4, 1, "", "warn"], [131, 4, 1, "", "write_mapping"]], "dipy.align._public.AffineMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_affine"], [131, 2, 1, "", "set_affine"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "transform_inverse"]], "dipy.align._public.AffineRegistration": [[131, 2, 1, "", "__init__"], [131, 3, 1, "", "docstring_addendum"], [131, 2, 1, "", "optimize"]], "dipy.align._public.AffineTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align._public.CCMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"]], "dipy.align._public.DiffeomorphicMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "allocate"], [131, 2, 1, "", "compute_inversion_error"], [131, 2, 1, "", "expand_fields"], [131, 2, 1, "", "get_backward_field"], [131, 2, 1, "", "get_forward_field"], [131, 2, 1, "", "get_simplified_transform"], [131, 2, 1, "", "interpret_matrix"], [131, 2, 1, "", "inverse"], [131, 2, 1, "", "shallow_copy"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "transform_inverse"], [131, 2, 1, "", "transform_points"], [131, 2, 1, "", "transform_points_inverse"], [131, 2, 1, "", "warp_endomorphism"]], "dipy.align._public.EMMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_demons_step"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "compute_gauss_newton_step"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"], [131, 2, 1, "", "use_moving_image_dynamics"], [131, 2, 1, "", "use_static_image_dynamics"]], "dipy.align._public.MutualInformationMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "distance_and_gradient"], [131, 2, 1, "", "gradient"], [131, 2, 1, "", "setup"]], "dipy.align._public.RigidIsoScalingTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align._public.RigidScalingTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align._public.RigidTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align._public.SSDMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_demons_step"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "compute_gauss_newton_step"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"]], "dipy.align._public.StreamlineLinearRegistration": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "optimize"]], "dipy.align._public.SymmetricDiffeomorphicRegistration": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_map"], [131, 2, 1, "", "optimize"], [131, 2, 1, "", "update"]], "dipy.align._public.TranslationTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align._public.partial": [[131, 2, 1, "", "__init__"], [131, 3, 1, "", "args"], [131, 3, 1, "", "func"], [131, 3, 1, "", "keywords"]], "dipy.align.bundlemin": [[131, 4, 1, "", "determine_num_threads"], [131, 4, 1, "", "distance_matrix_mdf"]], "dipy.align.crosscorr": [[131, 4, 1, "", "compute_cc_backward_step_2d"], [131, 4, 1, "", "compute_cc_backward_step_3d"], [131, 4, 1, "", "compute_cc_forward_step_2d"], [131, 4, 1, "", "compute_cc_forward_step_3d"], [131, 4, 1, "", "precompute_cc_factors_2d"], [131, 4, 1, "", "precompute_cc_factors_2d_test"], [131, 4, 1, "", "precompute_cc_factors_3d"], [131, 4, 1, "", "precompute_cc_factors_3d_test"]], "dipy.align.expectmax": [[131, 4, 1, "", "compute_em_demons_step_2d"], [131, 4, 1, "", "compute_em_demons_step_3d"], [131, 4, 1, "", "compute_masked_class_stats_2d"], [131, 4, 1, "", "compute_masked_class_stats_3d"], [131, 4, 1, "", "quantize_positive_2d"], [131, 4, 1, "", "quantize_positive_3d"]], "dipy.align.imaffine": [[131, 1, 1, "", "AffineInvalidValuesError"], [131, 1, 1, "", "AffineInversionError"], [131, 1, 1, "", "AffineMap"], [131, 1, 1, "", "AffineRegistration"], [131, 1, 1, "", "IsotropicScaleSpace"], [131, 1, 1, "", "MutualInformationMetric"], [131, 1, 1, "", "Optimizer"], [131, 1, 1, "", "ParzenJointHistogram"], [131, 1, 1, "", "ScaleSpace"], [131, 4, 1, "", "compute_parzen_mi"], [131, 4, 1, "", "deprecated_params"], [131, 4, 1, "", "get_direction_and_spacings"], [131, 4, 1, "", "interpolate_scalar_2d"], [131, 4, 1, "", "interpolate_scalar_3d"], [131, 4, 1, "", "sample_domain_regular"], [131, 4, 1, "", "transform_centers_of_mass"], [131, 4, 1, "", "transform_geometric_centers"], [131, 4, 1, "", "transform_origins"], [131, 4, 1, "", "warn"]], "dipy.align.imaffine.AffineInvalidValuesError": [[131, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[131, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_affine"], [131, 2, 1, "", "set_affine"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[131, 2, 1, "", "__init__"], [131, 3, 1, "", "docstring_addendum"], [131, 2, 1, "", "optimize"]], "dipy.align.imaffine.IsotropicScaleSpace": [[131, 2, 1, "", "__init__"]], "dipy.align.imaffine.MutualInformationMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "distance_and_gradient"], [131, 2, 1, "", "gradient"], [131, 2, 1, "", "setup"]], "dipy.align.imaffine.Optimizer": [[131, 2, 1, "", "__init__"], [131, 5, 1, "", "evolution"], [131, 5, 1, "", "fopt"], [131, 5, 1, "", "message"], [131, 5, 1, "", "nfev"], [131, 5, 1, "", "nit"], [131, 2, 1, "", "print_summary"], [131, 5, 1, "", "xopt"]], "dipy.align.imaffine.ParzenJointHistogram": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "bin_index"], [131, 2, 1, "", "bin_normalize_moving"], [131, 2, 1, "", "bin_normalize_static"], [131, 2, 1, "", "setup"], [131, 2, 1, "", "update_gradient_dense"], [131, 2, 1, "", "update_gradient_sparse"], [131, 2, 1, "", "update_pdfs_dense"], [131, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.imaffine.ScaleSpace": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_affine"], [131, 2, 1, "", "get_affine_inv"], [131, 2, 1, "", "get_domain_shape"], [131, 2, 1, "", "get_expand_factors"], [131, 2, 1, "", "get_image"], [131, 2, 1, "", "get_scaling"], [131, 2, 1, "", "get_sigmas"], [131, 2, 1, "", "get_spacing"], [131, 2, 1, "", "print_level"]], "dipy.align.imwarp": [[131, 1, 1, "", "Bunch"], [131, 1, 1, "", "DiffeomorphicMap"], [131, 1, 1, "", "DiffeomorphicRegistration"], [131, 1, 1, "", "ScaleSpace"], [131, 3, 1, "", "Streamlines"], [131, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [131, 3, 1, "", "floating"], [131, 4, 1, "", "get_direction_and_spacings"], [131, 4, 1, "", "mult_aff"]], "dipy.align.imwarp.Bunch": [[131, 2, 1, "", "__init__"]], "dipy.align.imwarp.DiffeomorphicMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "allocate"], [131, 2, 1, "", "compute_inversion_error"], [131, 2, 1, "", "expand_fields"], [131, 2, 1, "", "get_backward_field"], [131, 2, 1, "", "get_forward_field"], [131, 2, 1, "", "get_simplified_transform"], [131, 2, 1, "", "interpret_matrix"], [131, 2, 1, "", "inverse"], [131, 2, 1, "", "shallow_copy"], [131, 2, 1, "", "transform"], [131, 2, 1, "", "transform_inverse"], [131, 2, 1, "", "transform_points"], [131, 2, 1, "", "transform_points_inverse"], [131, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_map"], [131, 2, 1, "", "optimize"], [131, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.ScaleSpace": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_affine"], [131, 2, 1, "", "get_affine_inv"], [131, 2, 1, "", "get_domain_shape"], [131, 2, 1, "", "get_expand_factors"], [131, 2, 1, "", "get_image"], [131, 2, 1, "", "get_scaling"], [131, 2, 1, "", "get_sigmas"], [131, 2, 1, "", "get_spacing"], [131, 2, 1, "", "print_level"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_map"], [131, 2, 1, "", "optimize"], [131, 2, 1, "", "update"]], "dipy.align.metrics": [[131, 1, 1, "", "CCMetric"], [131, 1, 1, "", "EMMetric"], [131, 1, 1, "", "SSDMetric"], [131, 1, 1, "", "SimilarityMetric"], [131, 3, 1, "", "floating"], [131, 4, 1, "", "gradient"], [131, 4, 1, "", "v_cycle_2d"], [131, 4, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_demons_step"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "compute_gauss_newton_step"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"], [131, 2, 1, "", "use_moving_image_dynamics"], [131, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_demons_step"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "compute_gauss_newton_step"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "compute_backward"], [131, 2, 1, "", "compute_forward"], [131, 2, 1, "", "free_iteration"], [131, 2, 1, "", "get_energy"], [131, 2, 1, "", "initialize_iteration"], [131, 2, 1, "", "set_levels_above"], [131, 2, 1, "", "set_levels_below"], [131, 2, 1, "", "set_moving_image"], [131, 2, 1, "", "set_static_image"], [131, 2, 1, "", "use_moving_image_dynamics"], [131, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.parzenhist": [[131, 1, 1, "", "ParzenJointHistogram"], [131, 4, 1, "", "compute_parzen_mi"], [131, 4, 1, "", "cubic_spline"], [131, 4, 1, "", "cubic_spline_derivative"], [131, 4, 1, "", "sample_domain_regular"]], "dipy.align.parzenhist.ParzenJointHistogram": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "bin_index"], [131, 2, 1, "", "bin_normalize_moving"], [131, 2, 1, "", "bin_normalize_static"], [131, 2, 1, "", "setup"], [131, 2, 1, "", "update_gradient_dense"], [131, 2, 1, "", "update_gradient_sparse"], [131, 2, 1, "", "update_pdfs_dense"], [131, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.reslice": [[131, 4, 1, "", "Pool"], [131, 4, 1, "", "affine_transform"], [131, 4, 1, "", "determine_num_processes"], [131, 4, 1, "", "reslice"]], "dipy.align.scalespace": [[131, 1, 1, "", "IsotropicScaleSpace"], [131, 1, 1, "", "ScaleSpace"], [131, 3, 1, "", "floating"], [131, 4, 1, "", "gaussian_filter"]], "dipy.align.scalespace.IsotropicScaleSpace": [[131, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_affine"], [131, 2, 1, "", "get_affine_inv"], [131, 2, 1, "", "get_domain_shape"], [131, 2, 1, "", "get_expand_factors"], [131, 2, 1, "", "get_image"], [131, 2, 1, "", "get_scaling"], [131, 2, 1, "", "get_sigmas"], [131, 2, 1, "", "get_spacing"], [131, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[131, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [131, 1, 1, "", "BundleMinDistanceMatrixMetric"], [131, 1, 1, "", "BundleMinDistanceMetric"], [131, 1, 1, "", "BundleSumDistanceMatrixMetric"], [131, 1, 1, "", "JointBundleMinDistanceMetric"], [131, 1, 1, "", "JointStreamlineRegistrationMap"], [131, 1, 1, "", "Optimizer"], [131, 1, 1, "", "StreamlineDistanceMetric"], [131, 1, 1, "", "StreamlineLinearRegistration"], [131, 1, 1, "", "StreamlineRegistrationMap"], [131, 3, 1, "", "Streamlines"], [131, 4, 1, "", "bundle_min_distance"], [131, 4, 1, "", "bundle_min_distance_asymmetric_fast"], [131, 4, 1, "", "bundle_min_distance_fast"], [131, 4, 1, "", "bundle_sum_distance"], [131, 4, 1, "", "center_streamlines"], [131, 1, 1, "", "combinations"], [131, 4, 1, "", "compose_matrix"], [131, 4, 1, "", "compose_matrix44"], [131, 4, 1, "", "compose_transformations"], [131, 4, 1, "", "decompose_matrix"], [131, 4, 1, "", "decompose_matrix44"], [131, 4, 1, "", "distance_matrix_mdf"], [131, 4, 1, "", "get_unique_pairs"], [131, 4, 1, "", "groupwise_slr"], [131, 4, 1, "", "length"], [131, 4, 1, "", "progressive_slr"], [131, 4, 1, "", "qbx_and_merge"], [131, 4, 1, "", "remove_clusters_by_size"], [131, 4, 1, "", "select_random_set_of_streamlines"], [131, 4, 1, "", "set_number_of_points"], [131, 4, 1, "", "slr_with_qbx"], [131, 4, 1, "", "time"], [131, 4, 1, "", "transform_streamlines"], [131, 4, 1, "", "unlist_streamlines"], [131, 4, 1, "", "whole_brain_slr"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "transform"]], "dipy.align.streamlinear.Optimizer": [[131, 2, 1, "", "__init__"], [131, 5, 1, "", "evolution"], [131, 5, 1, "", "fopt"], [131, 5, 1, "", "message"], [131, 5, 1, "", "nfev"], [131, 5, 1, "", "nit"], [131, 2, 1, "", "print_summary"], [131, 5, 1, "", "xopt"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "distance"], [131, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "transform"]], "dipy.align.streamlinear.combinations": [[131, 2, 1, "", "__init__"]], "dipy.align.sumsqdiff": [[131, 4, 1, "", "compute_energy_ssd_2d"], [131, 4, 1, "", "compute_energy_ssd_3d"], [131, 4, 1, "", "compute_residual_displacement_field_ssd_2d"], [131, 4, 1, "", "compute_residual_displacement_field_ssd_3d"], [131, 4, 1, "", "compute_ssd_demons_step_2d"], [131, 4, 1, "", "compute_ssd_demons_step_3d"], [131, 4, 1, "", "iterate_residual_displacement_field_ssd_2d"], [131, 4, 1, "", "iterate_residual_displacement_field_ssd_3d"], [131, 4, 1, "", "solve_2d_symmetric_positive_definite"], [131, 4, 1, "", "solve_3d_symmetric_positive_definite"]], "dipy.align.transforms": [[131, 1, 1, "", "AffineTransform2D"], [131, 1, 1, "", "AffineTransform3D"], [131, 1, 1, "", "RigidIsoScalingTransform2D"], [131, 1, 1, "", "RigidIsoScalingTransform3D"], [131, 1, 1, "", "RigidScalingTransform2D"], [131, 1, 1, "", "RigidScalingTransform3D"], [131, 1, 1, "", "RigidTransform2D"], [131, 1, 1, "", "RigidTransform3D"], [131, 1, 1, "", "RotationTransform2D"], [131, 1, 1, "", "RotationTransform3D"], [131, 1, 1, "", "ScalingTransform2D"], [131, 1, 1, "", "ScalingTransform3D"], [131, 1, 1, "", "Transform"], [131, 1, 1, "", "TranslationTransform2D"], [131, 1, 1, "", "TranslationTransform3D"]], "dipy.align.transforms.AffineTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.AffineTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.Transform": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "get_dim"], [131, 2, 1, "", "get_identity_parameters"], [131, 2, 1, "", "get_number_of_parameters"], [131, 2, 1, "", "jacobian"], [131, 2, 1, "", "param_to_matrix"]], "dipy.align.transforms.TranslationTransform2D": [[131, 2, 1, "", "__init__"]], "dipy.align.transforms.TranslationTransform3D": [[131, 2, 1, "", "__init__"]], "dipy.align.vector_fields": [[131, 4, 1, "", "compose_vector_fields_2d"], [131, 4, 1, "", "compose_vector_fields_3d"], [131, 4, 1, "", "create_circle"], [131, 4, 1, "", "create_harmonic_fields_2d"], [131, 4, 1, "", "create_harmonic_fields_3d"], [131, 4, 1, "", "create_random_displacement_2d"], [131, 4, 1, "", "create_random_displacement_3d"], [131, 4, 1, "", "create_sphere"], [131, 4, 1, "", "downsample_displacement_field_2d"], [131, 4, 1, "", "downsample_displacement_field_3d"], [131, 4, 1, "", "downsample_scalar_field_2d"], [131, 4, 1, "", "downsample_scalar_field_3d"], [131, 4, 1, "", "gradient"], [131, 4, 1, "", "invert_vector_field_fixed_point_2d"], [131, 4, 1, "", "invert_vector_field_fixed_point_3d"], [131, 4, 1, "", "is_valid_affine"], [131, 4, 1, "", "reorient_vector_field_2d"], [131, 4, 1, "", "reorient_vector_field_3d"], [131, 4, 1, "", "resample_displacement_field_2d"], [131, 4, 1, "", "resample_displacement_field_3d"], [131, 4, 1, "", "simplify_warp_function_2d"], [131, 4, 1, "", "simplify_warp_function_3d"], [131, 4, 1, "", "sparse_gradient"], [131, 4, 1, "", "transform_2d_affine"], [131, 4, 1, "", "transform_2d_affine_nn"], [131, 4, 1, "", "transform_3d_affine"], [131, 4, 1, "", "transform_3d_affine_nn"], [131, 4, 1, "", "warp_2d"], [131, 4, 1, "", "warp_2d_nn"], [131, 4, 1, "", "warp_3d"], [131, 4, 1, "", "warp_3d_nn"], [131, 4, 1, "", "warp_coordinates_2d"], [131, 4, 1, "", "warp_coordinates_3d"]], "dipy.core": [[133, 0, 0, "-", "benchmarks"], [133, 0, 0, "-", "geometry"], [133, 0, 0, "-", "gradients"], [133, 0, 0, "-", "graph"], [133, 0, 0, "-", "histeq"], [133, 0, 0, "-", "interpolation"], [133, 0, 0, "-", "ndindex"], [133, 0, 0, "-", "onetime"], [133, 0, 0, "-", "optimize"], [133, 0, 0, "-", "profile"], [133, 0, 0, "-", "rng"], [133, 0, 0, "-", "sphere"], [133, 0, 0, "-", "sphere_stats"], [133, 0, 0, "-", "subdivide_octahedron"], [133, 4, 1, "", "test"], [133, 0, 0, "-", "wavelet"]], "dipy.core.benchmarks": [[133, 0, 0, "-", "bench_sphere"]], "dipy.core.benchmarks.bench_sphere": [[133, 1, 1, "", "Timer"], [133, 4, 1, "", "bench_disperse_charges_alt"], [133, 4, 1, "", "func_minimize_adhoc"], [133, 4, 1, "", "func_minimize_scipy"]], "dipy.core.benchmarks.bench_sphere.Timer": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "duration_in_seconds"]], "dipy.core.geometry": [[133, 4, 1, "", "cart2sphere"], [133, 4, 1, "", "cart_distance"], [133, 4, 1, "", "circumradius"], [133, 4, 1, "", "compose_matrix"], [133, 4, 1, "", "compose_transformations"], [133, 4, 1, "", "decompose_matrix"], [133, 4, 1, "", "dist_to_corner"], [133, 4, 1, "", "euler_matrix"], [133, 4, 1, "", "is_hemispherical"], [133, 4, 1, "", "lambert_equal_area_projection_cart"], [133, 4, 1, "", "lambert_equal_area_projection_polar"], [133, 4, 1, "", "nearest_pos_semi_def"], [133, 4, 1, "", "normalized_vector"], [133, 4, 1, "", "perpendicular_directions"], [133, 4, 1, "", "rodrigues_axis_rotation"], [133, 4, 1, "", "sph2latlon"], [133, 4, 1, "", "sphere2cart"], [133, 4, 1, "", "sphere_distance"], [133, 4, 1, "", "vec2vec_rotmat"], [133, 4, 1, "", "vector_cosine"], [133, 4, 1, "", "vector_norm"]], "dipy.core.gradients": [[133, 1, 1, "", "GradientTable"], [133, 1, 1, "", "HemiSphere"], [133, 4, 1, "", "auto_attr"], [133, 4, 1, "", "btens_to_params"], [133, 4, 1, "", "check_multi_b"], [133, 4, 1, "", "deprecate_with_version"], [133, 4, 1, "", "disperse_charges"], [133, 4, 1, "", "generate_bvecs"], [133, 4, 1, "", "get_bval_indices"], [133, 4, 1, "", "gradient_table"], [133, 4, 1, "", "gradient_table_from_bvals_bvecs"], [133, 4, 1, "", "gradient_table_from_gradient_strength_bvecs"], [133, 4, 1, "", "gradient_table_from_qvals_bvecs"], [133, 4, 1, "", "inv"], [133, 4, 1, "", "orientation_from_string"], [133, 4, 1, "", "orientation_to_string"], [133, 4, 1, "", "ornt_mapping"], [133, 4, 1, "", "params_to_btens"], [133, 4, 1, "", "polar"], [133, 4, 1, "", "reorient_bvecs"], [133, 4, 1, "", "reorient_on_axis"], [133, 4, 1, "", "reorient_vectors"], [133, 4, 1, "", "round_bvals"], [133, 4, 1, "", "unique_bvals"], [133, 4, 1, "", "unique_bvals_magnitude"], [133, 4, 1, "", "unique_bvals_tolerance"], [133, 4, 1, "", "vec2vec_rotmat"], [133, 4, 1, "", "vector_norm"], [133, 4, 1, "", "warn"]], "dipy.core.gradients.GradientTable": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "b0s_mask"], [133, 2, 1, "", "bvals"], [133, 2, 1, "", "bvecs"], [133, 2, 1, "", "gradient_strength"], [133, 5, 1, "", "info"], [133, 2, 1, "", "qvals"], [133, 2, 1, "", "tau"]], "dipy.core.gradients.HemiSphere": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "faces"], [133, 2, 1, "", "find_closest"], [133, 2, 1, "", "from_sphere"], [133, 2, 1, "", "mirror"], [133, 2, 1, "", "subdivide"]], "dipy.core.graph": [[133, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "add_edge"], [133, 2, 1, "", "add_node"], [133, 2, 1, "", "all_paths"], [133, 2, 1, "", "children"], [133, 2, 1, "", "del_node"], [133, 2, 1, "", "del_node_and_edges"], [133, 2, 1, "", "down"], [133, 2, 1, "", "down_short"], [133, 2, 1, "", "parents"], [133, 2, 1, "", "shortest_path"], [133, 2, 1, "", "up"], [133, 2, 1, "", "up_short"]], "dipy.core.histeq": [[133, 4, 1, "", "histeq"]], "dipy.core.interpolation": [[133, 1, 1, "", "Interpolator"], [133, 1, 1, "", "NearestNeighborInterpolator"], [133, 1, 1, "", "OutsideImage"], [133, 1, 1, "", "TriLinearInterpolator"], [133, 4, 1, "", "interp_rbf"], [133, 4, 1, "", "interpolate_scalar_2d"], [133, 4, 1, "", "interpolate_scalar_3d"], [133, 4, 1, "", "interpolate_scalar_nn_2d"], [133, 4, 1, "", "interpolate_scalar_nn_3d"], [133, 4, 1, "", "interpolate_vector_2d"], [133, 4, 1, "", "interpolate_vector_3d"], [133, 4, 1, "", "map_coordinates_trilinear_iso"], [133, 4, 1, "", "nearestneighbor_interpolate"], [133, 4, 1, "", "trilinear_interp"], [133, 4, 1, "", "trilinear_interpolate4d"]], "dipy.core.interpolation.Interpolator": [[133, 2, 1, "", "__init__"]], "dipy.core.interpolation.NearestNeighborInterpolator": [[133, 2, 1, "", "__init__"]], "dipy.core.interpolation.OutsideImage": [[133, 2, 1, "", "__init__"]], "dipy.core.interpolation.TriLinearInterpolator": [[133, 2, 1, "", "__init__"]], "dipy.core.ndindex": [[133, 4, 1, "", "as_strided"], [133, 4, 1, "", "ndindex"]], "dipy.core.onetime": [[133, 1, 1, "", "OneTimeProperty"], [133, 1, 1, "", "ResetMixin"], [133, 4, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[133, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "reset"]], "dipy.core.optimize": [[133, 1, 1, "", "NonNegativeLeastSquares"], [133, 1, 1, "", "Optimizer"], [133, 1, 1, "", "PositiveDefiniteLeastSquares"], [133, 1, 1, "", "SKLearnLinearSolver"], [133, 1, 1, "", "Version"], [133, 4, 1, "", "minimize"], [133, 4, 1, "", "optional_package"], [133, 4, 1, "", "sparse_nnls"], [133, 4, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[133, 2, 1, "", "__init__"], [133, 5, 1, "", "evolution"], [133, 5, 1, "", "fopt"], [133, 5, 1, "", "message"], [133, 5, 1, "", "nfev"], [133, 5, 1, "", "nit"], [133, 2, 1, "", "print_summary"], [133, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "fit"], [133, 2, 1, "", "predict"]], "dipy.core.optimize.Version": [[133, 2, 1, "", "__init__"], [133, 5, 1, "", "base_version"], [133, 5, 1, "", "dev"], [133, 5, 1, "", "epoch"], [133, 5, 1, "", "is_devrelease"], [133, 5, 1, "", "is_postrelease"], [133, 5, 1, "", "is_prerelease"], [133, 5, 1, "", "local"], [133, 5, 1, "", "major"], [133, 5, 1, "", "micro"], [133, 5, 1, "", "minor"], [133, 5, 1, "", "post"], [133, 5, 1, "", "pre"], [133, 5, 1, "", "public"], [133, 5, 1, "", "release"]], "dipy.core.profile": [[133, 1, 1, "", "Profiler"], [133, 4, 1, "", "optional_package"]], "dipy.core.profile.Profiler": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "print_stats"]], "dipy.core.rng": [[133, 4, 1, "", "LEcuyer"], [133, 4, 1, "", "WichmannHill1982"], [133, 4, 1, "", "WichmannHill2006"], [133, 4, 1, "", "architecture"], [133, 4, 1, "", "floor"]], "dipy.core.sphere": [[133, 1, 1, "", "HemiSphere"], [133, 1, 1, "", "Sphere"], [133, 4, 1, "", "auto_attr"], [133, 4, 1, "", "cart2sphere"], [133, 4, 1, "", "disperse_charges"], [133, 4, 1, "", "disperse_charges_alt"], [133, 4, 1, "", "euler_characteristic_check"], [133, 4, 1, "", "faces_from_sphere_vertices"], [133, 4, 1, "", "remove_similar_vertices"], [133, 4, 1, "", "sphere2cart"], [133, 4, 1, "", "unique_edges"], [133, 4, 1, "", "unique_sets"], [133, 4, 1, "", "vector_norm"]], "dipy.core.sphere.HemiSphere": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "faces"], [133, 2, 1, "", "find_closest"], [133, 2, 1, "", "from_sphere"], [133, 2, 1, "", "mirror"], [133, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "edges"], [133, 2, 1, "", "faces"], [133, 2, 1, "", "find_closest"], [133, 2, 1, "", "subdivide"], [133, 2, 1, "", "vertices"], [133, 5, 1, "", "x"], [133, 5, 1, "", "y"], [133, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[133, 4, 1, "", "angular_similarity"], [133, 4, 1, "", "compare_orientation_sets"], [133, 4, 1, "", "eigenstats"], [133, 1, 1, "", "permutations"], [133, 4, 1, "", "random_uniform_on_sphere"]], "dipy.core.sphere_stats.permutations": [[133, 2, 1, "", "__init__"]], "dipy.core.subdivide_octahedron": [[133, 1, 1, "", "HemiSphere"], [133, 4, 1, "", "create_unit_hemisphere"], [133, 4, 1, "", "create_unit_sphere"]], "dipy.core.subdivide_octahedron.HemiSphere": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "faces"], [133, 2, 1, "", "find_closest"], [133, 2, 1, "", "from_sphere"], [133, 2, 1, "", "mirror"], [133, 2, 1, "", "subdivide"]], "dipy.core.wavelet": [[133, 4, 1, "", "afb3D"], [133, 4, 1, "", "afb3D_A"], [133, 4, 1, "", "cshift3D"], [133, 4, 1, "", "dwt3D"], [133, 4, 1, "", "idwt3D"], [133, 4, 1, "", "permutationinverse"], [133, 4, 1, "", "sfb3D"], [133, 4, 1, "", "sfb3D_A"]], "dipy.data": [[134, 1, 1, "", "DataError"], [134, 1, 1, "", "GradientTable"], [134, 1, 1, "", "HemiSphere"], [134, 1, 1, "", "Sphere"], [134, 4, 1, "", "as_native_array"], [134, 4, 1, "", "dirname"], [134, 4, 1, "", "dsi_deconv_voxels"], [134, 4, 1, "", "dsi_voxels"], [134, 4, 1, "", "exists"], [134, 4, 1, "", "fetch_bundle_atlas_hcp842"], [134, 4, 1, "", "fetch_bundle_fa_hcp"], [134, 4, 1, "", "fetch_bundles_2_subjects"], [134, 4, 1, "", "fetch_cenir_multib"], [134, 4, 1, "", "fetch_cfin_multib"], [134, 4, 1, "", "fetch_gold_standard_io"], [134, 4, 1, "", "fetch_hbn"], [134, 4, 1, "", "fetch_isbi2013_2shell"], [134, 4, 1, "", "fetch_ivim"], [134, 4, 1, "", "fetch_mni_template"], [134, 4, 1, "", "fetch_resdnn_weights"], [134, 4, 1, "", "fetch_scil_b0"], [134, 4, 1, "", "fetch_sherbrooke_3shell"], [134, 4, 1, "", "fetch_stanford_hardi"], [134, 4, 1, "", "fetch_stanford_labels"], [134, 4, 1, "", "fetch_stanford_pve_maps"], [134, 4, 1, "", "fetch_stanford_t1"], [134, 4, 1, "", "fetch_syn_data"], [134, 4, 1, "", "fetch_taiwan_ntu_dsi"], [134, 4, 1, "", "fetch_target_tractogram_hcp"], [134, 4, 1, "", "fetch_tissue_data"], [134, 0, 0, "-", "fetcher"], [134, 4, 1, "", "get_3shell_gtab"], [134, 4, 1, "", "get_bundle_atlas_hcp842"], [134, 4, 1, "", "get_cmap"], [134, 4, 1, "", "get_fnames"], [134, 4, 1, "", "get_gtab_taiwan_dsi"], [134, 4, 1, "", "get_isbi2013_2shell_gtab"], [134, 4, 1, "", "get_sim_voxels"], [134, 4, 1, "", "get_skeleton"], [134, 4, 1, "", "get_sphere"], [134, 4, 1, "", "get_target_tractogram_hcp"], [134, 4, 1, "", "get_two_hcp842_bundles"], [134, 4, 1, "", "gradient_table"], [134, 4, 1, "", "load_nifti"], [134, 4, 1, "", "load_npz"], [134, 4, 1, "", "load_sdp_constraints"], [134, 4, 1, "", "loads_compat"], [134, 4, 1, "", "matlab_life_results"], [134, 4, 1, "", "mrtrix_spherical_functions"], [134, 4, 1, "", "pjoin"], [134, 4, 1, "", "read_DiB_217_lte_pte_ste"], [134, 4, 1, "", "read_DiB_70_lte_pte_ste"], [134, 4, 1, "", "read_bundles_2_subjects"], [134, 4, 1, "", "read_cenir_multib"], [134, 4, 1, "", "read_cfin_dwi"], [134, 4, 1, "", "read_cfin_t1"], [134, 4, 1, "", "read_five_af_bundles"], [134, 4, 1, "", "read_isbi2013_2shell"], [134, 4, 1, "", "read_ivim"], [134, 4, 1, "", "read_mni_template"], [134, 4, 1, "", "read_qte_lte_pte"], [134, 4, 1, "", "read_scil_b0"], [134, 4, 1, "", "read_sherbrooke_3shell"], [134, 4, 1, "", "read_stanford_hardi"], [134, 4, 1, "", "read_stanford_labels"], [134, 4, 1, "", "read_stanford_pve_maps"], [134, 4, 1, "", "read_stanford_t1"], [134, 4, 1, "", "read_syn_data"], [134, 4, 1, "", "read_taiwan_ntu_dsi"], [134, 4, 1, "", "read_tissue_data"], [134, 4, 1, "", "relist_streamlines"], [134, 4, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[134, 2, 1, "", "__init__"]], "dipy.data.GradientTable": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "b0s_mask"], [134, 2, 1, "", "bvals"], [134, 2, 1, "", "bvecs"], [134, 2, 1, "", "gradient_strength"], [134, 5, 1, "", "info"], [134, 2, 1, "", "qvals"], [134, 2, 1, "", "tau"]], "dipy.data.HemiSphere": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "faces"], [134, 2, 1, "", "find_closest"], [134, 2, 1, "", "from_sphere"], [134, 2, 1, "", "mirror"], [134, 2, 1, "", "subdivide"]], "dipy.data.Sphere": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "edges"], [134, 2, 1, "", "faces"], [134, 2, 1, "", "find_closest"], [134, 2, 1, "", "subdivide"], [134, 2, 1, "", "vertices"], [134, 5, 1, "", "x"], [134, 5, 1, "", "y"], [134, 5, 1, "", "z"]], "dipy.data.fetcher": [[134, 1, 1, "", "FetcherError"], [134, 1, 1, "", "TripWire"], [134, 4, 1, "", "check_md5"], [134, 4, 1, "", "copyfileobj"], [134, 4, 1, "", "copyfileobj_withprogress"], [134, 4, 1, "", "extract_example_tracts"], [134, 4, 1, "", "fetch_DiB_217_lte_pte_ste"], [134, 4, 1, "", "fetch_DiB_70_lte_pte_ste"], [134, 4, 1, "", "fetch_bundle_atlas_hcp842"], [134, 4, 1, "", "fetch_bundle_fa_hcp"], [134, 4, 1, "", "fetch_bundles_2_subjects"], [134, 4, 1, "", "fetch_cenir_multib"], [134, 4, 1, "", "fetch_cfin_multib"], [134, 4, 1, "", "fetch_data"], [134, 4, 1, "", "fetch_file_formats"], [134, 4, 1, "", "fetch_fury_surface"], [134, 4, 1, "", "fetch_gold_standard_io"], [134, 4, 1, "", "fetch_hbn"], [134, 4, 1, "", "fetch_hcp"], [134, 4, 1, "", "fetch_isbi2013_2shell"], [134, 4, 1, "", "fetch_ivim"], [134, 4, 1, "", "fetch_mni_template"], [134, 4, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [134, 4, 1, "", "fetch_qte_lte_pte"], [134, 4, 1, "", "fetch_resdnn_weights"], [134, 4, 1, "", "fetch_scil_b0"], [134, 4, 1, "", "fetch_sherbrooke_3shell"], [134, 4, 1, "", "fetch_stanford_hardi"], [134, 4, 1, "", "fetch_stanford_labels"], [134, 4, 1, "", "fetch_stanford_pve_maps"], [134, 4, 1, "", "fetch_stanford_t1"], [134, 4, 1, "", "fetch_syn_data"], [134, 4, 1, "", "fetch_taiwan_ntu_dsi"], [134, 4, 1, "", "fetch_target_tractogram_hcp"], [134, 4, 1, "", "fetch_tissue_data"], [134, 4, 1, "", "get_bundle_atlas_hcp842"], [134, 4, 1, "", "get_file_formats"], [134, 4, 1, "", "get_fnames"], [134, 4, 1, "", "get_target_tractogram_hcp"], [134, 4, 1, "", "get_two_hcp842_bundles"], [134, 4, 1, "", "gradient_table"], [134, 4, 1, "", "gradient_table_from_gradient_strength_bvecs"], [134, 4, 1, "", "load_nifti"], [134, 4, 1, "", "load_nifti_data"], [134, 4, 1, "", "load_trk"], [134, 4, 1, "", "md5"], [134, 4, 1, "", "optional_package"], [134, 4, 1, "", "pjoin"], [134, 4, 1, "", "read_DiB_217_lte_pte_ste"], [134, 4, 1, "", "read_DiB_70_lte_pte_ste"], [134, 4, 1, "", "read_bundles_2_subjects"], [134, 4, 1, "", "read_bvals_bvecs"], [134, 4, 1, "", "read_cenir_multib"], [134, 4, 1, "", "read_cfin_dwi"], [134, 4, 1, "", "read_cfin_t1"], [134, 4, 1, "", "read_five_af_bundles"], [134, 4, 1, "", "read_isbi2013_2shell"], [134, 4, 1, "", "read_ivim"], [134, 4, 1, "", "read_mni_template"], [134, 4, 1, "", "read_qtdMRI_test_retest_2subjects"], [134, 4, 1, "", "read_qte_lte_pte"], [134, 4, 1, "", "read_scil_b0"], [134, 4, 1, "", "read_sherbrooke_3shell"], [134, 4, 1, "", "read_siemens_scil_b0"], [134, 4, 1, "", "read_stanford_hardi"], [134, 4, 1, "", "read_stanford_labels"], [134, 4, 1, "", "read_stanford_pve_maps"], [134, 4, 1, "", "read_stanford_t1"], [134, 4, 1, "", "read_syn_data"], [134, 4, 1, "", "read_taiwan_ntu_dsi"], [134, 4, 1, "", "read_tissue_data"], [134, 4, 1, "", "save_nifti"], [134, 4, 1, "", "to_bids_description"], [134, 3, 1, "", "tqdm"], [134, 4, 1, "", "urlopen"]], "dipy.data.fetcher.FetcherError": [[134, 2, 1, "", "__init__"]], "dipy.data.fetcher.TripWire": [[134, 2, 1, "", "__init__"]], "dipy.denoise": [[135, 0, 0, "-", "adaptive_soft_matching"], [135, 4, 1, "", "bench"], [135, 0, 0, "-", "denspeed"], [135, 0, 0, "-", "enhancement_kernel"], [135, 0, 0, "-", "gibbs"], [135, 0, 0, "-", "localpca"], [135, 0, 0, "-", "nlmeans"], [135, 0, 0, "-", "nlmeans_block"], [135, 0, 0, "-", "noise_estimate"], [135, 0, 0, "-", "non_local_means"], [135, 0, 0, "-", "patch2self"], [135, 0, 0, "-", "pca_noise_estimate"], [135, 0, 0, "-", "shift_twist_convolution"], [135, 4, 1, "", "test"]], "dipy.denoise.adaptive_soft_matching": [[135, 4, 1, "", "adaptive_soft_matching"]], "dipy.denoise.denspeed": [[135, 4, 1, "", "add_padding_reflection"], [135, 4, 1, "", "correspond_indices"], [135, 4, 1, "", "determine_num_threads"], [135, 4, 1, "", "nlmeans_3d"], [135, 4, 1, "", "remove_padding"]], "dipy.denoise.enhancement_kernel": [[135, 1, 1, "", "EnhancementKernel"], [135, 1, 1, "", "HemiSphere"], [135, 1, 1, "", "Sphere"], [135, 4, 1, "", "ceil"], [135, 4, 1, "", "disperse_charges"], [135, 4, 1, "", "get_sphere"], [135, 4, 1, "", "gettempdir"]], "dipy.denoise.enhancement_kernel.EnhancementKernel": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "evaluate_kernel"], [135, 2, 1, "", "get_lookup_table"], [135, 2, 1, "", "get_orientations"], [135, 2, 1, "", "get_sphere"]], "dipy.denoise.enhancement_kernel.HemiSphere": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "faces"], [135, 2, 1, "", "find_closest"], [135, 2, 1, "", "from_sphere"], [135, 2, 1, "", "mirror"], [135, 2, 1, "", "subdivide"]], "dipy.denoise.enhancement_kernel.Sphere": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "edges"], [135, 2, 1, "", "faces"], [135, 2, 1, "", "find_closest"], [135, 2, 1, "", "subdivide"], [135, 2, 1, "", "vertices"], [135, 5, 1, "", "x"], [135, 5, 1, "", "y"], [135, 5, 1, "", "z"]], "dipy.denoise.gibbs": [[135, 4, 1, "", "Pool"], [135, 3, 1, "", "Version"], [135, 4, 1, "", "deprecated_params"], [135, 4, 1, "", "determine_num_processes"], [135, 4, 1, "", "gibbs_removal"], [135, 1, 1, "", "partial"]], "dipy.denoise.gibbs.partial": [[135, 2, 1, "", "__init__"], [135, 3, 1, "", "args"], [135, 3, 1, "", "func"], [135, 3, 1, "", "keywords"]], "dipy.denoise.localpca": [[135, 1, 1, "", "Version"], [135, 4, 1, "", "eigh"], [135, 4, 1, "", "genpca"], [135, 4, 1, "", "localpca"], [135, 4, 1, "", "mppca"], [135, 4, 1, "", "warn"]], "dipy.denoise.localpca.Version": [[135, 2, 1, "", "__init__"], [135, 5, 1, "", "base_version"], [135, 5, 1, "", "dev"], [135, 5, 1, "", "epoch"], [135, 5, 1, "", "is_devrelease"], [135, 5, 1, "", "is_postrelease"], [135, 5, 1, "", "is_prerelease"], [135, 5, 1, "", "local"], [135, 5, 1, "", "major"], [135, 5, 1, "", "micro"], [135, 5, 1, "", "minor"], [135, 5, 1, "", "post"], [135, 5, 1, "", "pre"], [135, 5, 1, "", "public"], [135, 5, 1, "", "release"]], "dipy.denoise.nlmeans": [[135, 4, 1, "", "nlmeans"], [135, 4, 1, "", "nlmeans_3d"]], "dipy.denoise.nlmeans_block": [[135, 4, 1, "", "firdn"], [135, 4, 1, "", "nlmeans_block"], [135, 4, 1, "", "upfir"]], "dipy.denoise.noise_estimate": [[135, 4, 1, "", "convolve"], [135, 4, 1, "", "estimate_sigma"], [135, 4, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[135, 4, 1, "", "nlmeans_block"], [135, 4, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[135, 4, 1, "", "optional_package"], [135, 4, 1, "", "patch2self"], [135, 4, 1, "", "warn"]], "dipy.denoise.pca_noise_estimate": [[135, 4, 1, "", "pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[135, 4, 1, "", "convolve"], [135, 4, 1, "", "convolve_sf"], [135, 4, 1, "", "determine_num_threads"], [135, 4, 1, "", "sf_to_sh"], [135, 4, 1, "", "sh_to_sf"]], "dipy.direction": [[136, 1, 1, "", "BootDirectionGetter"], [136, 1, 1, "", "ClosestPeakDirectionGetter"], [136, 1, 1, "", "DeterministicMaximumDirectionGetter"], [136, 1, 1, "", "EuDXDirectionGetter"], [136, 1, 1, "", "PeaksAndMetrics"], [136, 4, 1, "", "Pool"], [136, 1, 1, "", "ProbabilisticDirectionGetter"], [136, 1, 1, "", "Sphere"], [136, 0, 0, "-", "bootstrap_direction_getter"], [136, 0, 0, "-", "closest_peak_direction_getter"], [136, 4, 1, "", "deprecated_params"], [136, 4, 1, "", "determine_num_processes"], [136, 4, 1, "", "gfa"], [136, 4, 1, "", "local_maxima"], [136, 4, 1, "", "ndindex"], [136, 4, 1, "", "peak_directions"], [136, 4, 1, "", "peak_directions_nl"], [136, 0, 0, "-", "peaks"], [136, 4, 1, "", "peaks_from_model"], [136, 0, 0, "-", "pmf"], [136, 0, 0, "-", "probabilistic_direction_getter"], [136, 4, 1, "", "remove_similar_vertices"], [136, 1, 1, "", "repeat"], [136, 4, 1, "", "reshape_peaks_for_visualization"], [136, 4, 1, "", "search_descending"], [136, 4, 1, "", "sh_to_sf_matrix"]], "dipy.direction.BootDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "from_data"]], "dipy.direction.ClosestPeakDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.DeterministicMaximumDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.EuDXDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "ang_thr"], [136, 2, 1, "", "initial_direction"], [136, 3, 1, "", "qa_thr"], [136, 3, 1, "", "total_weight"]], "dipy.direction.PeaksAndMetrics": [[136, 2, 1, "", "__init__"]], "dipy.direction.ProbabilisticDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.Sphere": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "edges"], [136, 2, 1, "", "faces"], [136, 2, 1, "", "find_closest"], [136, 2, 1, "", "subdivide"], [136, 2, 1, "", "vertices"], [136, 5, 1, "", "x"], [136, 5, 1, "", "y"], [136, 5, 1, "", "z"]], "dipy.direction.bootstrap_direction_getter": [[136, 1, 1, "", "BootDirectionGetter"], [136, 1, 1, "", "BootPmfGen"]], "dipy.direction.bootstrap_direction_getter.BootDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "from_data"]], "dipy.direction.bootstrap_direction_getter.BootPmfGen": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "get_pmf"], [136, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.closest_peak_direction_getter": [[136, 1, 1, "", "BaseDirectionGetter"], [136, 1, 1, "", "BasePmfDirectionGetter"], [136, 1, 1, "", "ClosestPeakDirectionGetter"], [136, 1, 1, "", "PmfGenDirectionGetter"], [136, 4, 1, "", "peak_directions"]], "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "from_pmf"], [136, 2, 1, "", "from_shcoeff"]], "dipy.direction.peaks": [[136, 1, 1, "", "EuDXDirectionGetter"], [136, 1, 1, "", "PeaksAndMetrics"], [136, 4, 1, "", "Pool"], [136, 1, 1, "", "Sphere"], [136, 4, 1, "", "deprecated_params"], [136, 4, 1, "", "determine_num_processes"], [136, 4, 1, "", "gfa"], [136, 4, 1, "", "local_maxima"], [136, 4, 1, "", "ndindex"], [136, 4, 1, "", "peak_directions"], [136, 4, 1, "", "peak_directions_nl"], [136, 4, 1, "", "peaks_from_model"], [136, 4, 1, "", "remove_similar_vertices"], [136, 1, 1, "", "repeat"], [136, 4, 1, "", "reshape_peaks_for_visualization"], [136, 4, 1, "", "search_descending"], [136, 4, 1, "", "sh_to_sf_matrix"]], "dipy.direction.peaks.EuDXDirectionGetter": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "ang_thr"], [136, 2, 1, "", "initial_direction"], [136, 3, 1, "", "qa_thr"], [136, 3, 1, "", "total_weight"]], "dipy.direction.peaks.PeaksAndMetrics": [[136, 2, 1, "", "__init__"]], "dipy.direction.peaks.Sphere": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "edges"], [136, 2, 1, "", "faces"], [136, 2, 1, "", "find_closest"], [136, 2, 1, "", "subdivide"], [136, 2, 1, "", "vertices"], [136, 5, 1, "", "x"], [136, 5, 1, "", "y"], [136, 5, 1, "", "z"]], "dipy.direction.peaks.repeat": [[136, 2, 1, "", "__init__"]], "dipy.direction.pmf": [[136, 1, 1, "", "BootPmfGen"], [136, 1, 1, "", "PmfGen"], [136, 1, 1, "", "SHCoeffPmfGen"], [136, 1, 1, "", "SimplePmfGen"]], "dipy.direction.pmf.BootPmfGen": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "get_pmf"], [136, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.pmf.PmfGen": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "get_pmf"], [136, 2, 1, "", "get_pmf_value"]], "dipy.direction.pmf.SHCoeffPmfGen": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "get_pmf"]], "dipy.direction.pmf.SimplePmfGen": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "get_pmf"]], "dipy.direction.probabilistic_direction_getter": [[136, 1, 1, "", "DeterministicMaximumDirectionGetter"], [136, 1, 1, "", "ProbabilisticDirectionGetter"], [136, 4, 1, "", "random"]], "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter": [[136, 2, 1, "", "__init__"]], "dipy.direction.repeat": [[136, 2, 1, "", "__init__"]], "dipy.io": [[137, 1, 1, "", "Dpy"], [137, 0, 0, "-", "bvectxt"], [137, 0, 0, "-", "dpy"], [137, 0, 0, "-", "gradients"], [137, 0, 0, "-", "image"], [137, 4, 1, "", "load_pickle"], [137, 4, 1, "", "orientation_from_string"], [137, 4, 1, "", "orientation_to_string"], [137, 4, 1, "", "ornt_mapping"], [137, 0, 0, "-", "peaks"], [137, 0, 0, "-", "pickles"], [137, 4, 1, "", "read_bvals_bvecs"], [137, 4, 1, "", "read_bvec_file"], [137, 4, 1, "", "reorient_on_axis"], [137, 4, 1, "", "reorient_vectors"], [137, 4, 1, "", "save_pickle"], [137, 0, 0, "-", "stateful_tractogram"], [137, 0, 0, "-", "streamline"], [137, 0, 0, "-", "utils"], [137, 0, 0, "-", "vtk"]], "dipy.io.Dpy": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "close"], [137, 2, 1, "", "read_track"], [137, 2, 1, "", "read_tracks"], [137, 2, 1, "", "read_tracksi"], [137, 2, 1, "", "version"], [137, 2, 1, "", "write_track"], [137, 2, 1, "", "write_tracks"]], "dipy.io.bvectxt": [[137, 4, 1, "", "deprecate_with_version"], [137, 4, 1, "", "orientation_from_string"], [137, 4, 1, "", "orientation_to_string"], [137, 4, 1, "", "ornt_mapping"], [137, 4, 1, "", "read_bvec_file"], [137, 4, 1, "", "reorient_on_axis"], [137, 4, 1, "", "reorient_vectors"], [137, 4, 1, "", "splitext"]], "dipy.io.dpy": [[137, 1, 1, "", "Dpy"], [137, 3, 1, "", "Streamlines"]], "dipy.io.dpy.Dpy": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "close"], [137, 2, 1, "", "read_track"], [137, 2, 1, "", "read_tracks"], [137, 2, 1, "", "read_tracksi"], [137, 2, 1, "", "version"], [137, 2, 1, "", "write_track"], [137, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[137, 4, 1, "", "read_bvals_bvecs"], [137, 4, 1, "", "splitext"]], "dipy.io.image": [[137, 1, 1, "", "Version"], [137, 4, 1, "", "load_nifti"], [137, 4, 1, "", "load_nifti_data"], [137, 4, 1, "", "save_nifti"], [137, 4, 1, "", "save_qa_metric"]], "dipy.io.image.Version": [[137, 2, 1, "", "__init__"], [137, 5, 1, "", "base_version"], [137, 5, 1, "", "dev"], [137, 5, 1, "", "epoch"], [137, 5, 1, "", "is_devrelease"], [137, 5, 1, "", "is_postrelease"], [137, 5, 1, "", "is_prerelease"], [137, 5, 1, "", "local"], [137, 5, 1, "", "major"], [137, 5, 1, "", "micro"], [137, 5, 1, "", "minor"], [137, 5, 1, "", "post"], [137, 5, 1, "", "pre"], [137, 5, 1, "", "public"], [137, 5, 1, "", "release"]], "dipy.io.peaks": [[137, 1, 1, "", "PeaksAndMetrics"], [137, 1, 1, "", "Sphere"], [137, 4, 1, "", "load_peaks"], [137, 4, 1, "", "peaks_to_niftis"], [137, 4, 1, "", "reshape_peaks_for_visualization"], [137, 4, 1, "", "save_nifti"], [137, 4, 1, "", "save_peaks"]], "dipy.io.peaks.PeaksAndMetrics": [[137, 2, 1, "", "__init__"]], "dipy.io.peaks.Sphere": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "edges"], [137, 2, 1, "", "faces"], [137, 2, 1, "", "find_closest"], [137, 2, 1, "", "subdivide"], [137, 2, 1, "", "vertices"], [137, 5, 1, "", "x"], [137, 5, 1, "", "y"], [137, 5, 1, "", "z"]], "dipy.io.pickles": [[137, 4, 1, "", "load_pickle"], [137, 4, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[137, 1, 1, "", "Origin"], [137, 1, 1, "", "PerArrayDict"], [137, 1, 1, "", "PerArraySequenceDict"], [137, 1, 1, "", "Space"], [137, 1, 1, "", "StatefulTractogram"], [137, 3, 1, "", "Streamlines"], [137, 1, 1, "", "Tractogram"], [137, 4, 1, "", "apply_affine"], [137, 4, 1, "", "bisect"], [137, 4, 1, "", "deepcopy"], [137, 4, 1, "", "get_reference_info"], [137, 4, 1, "", "is_header_compatible"], [137, 4, 1, "", "is_reference_info_valid"], [137, 1, 1, "", "product"], [137, 4, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[137, 3, 1, "", "NIFTI"], [137, 3, 1, "", "TRACKVIS"], [137, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.PerArrayDict": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "extend"]], "dipy.io.stateful_tractogram.PerArraySequenceDict": [[137, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[137, 3, 1, "", "RASMM"], [137, 3, 1, "", "VOX"], [137, 3, 1, "", "VOXMM"], [137, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[137, 2, 1, "", "__init__"], [137, 5, 1, "", "affine"], [137, 2, 1, "", "are_compatible"], [137, 2, 1, "", "compute_bounding_box"], [137, 5, 1, "", "data_per_point"], [137, 5, 1, "", "data_per_streamline"], [137, 5, 1, "", "dimensions"], [137, 2, 1, "", "from_sft"], [137, 2, 1, "", "get_data_per_point_keys"], [137, 2, 1, "", "get_data_per_streamline_keys"], [137, 2, 1, "", "get_streamlines_copy"], [137, 2, 1, "", "is_bbox_in_vox_valid"], [137, 5, 1, "", "origin"], [137, 2, 1, "", "remove_invalid_streamlines"], [137, 5, 1, "", "space"], [137, 5, 1, "", "space_attributes"], [137, 5, 1, "", "streamlines"], [137, 2, 1, "", "to_center"], [137, 2, 1, "", "to_corner"], [137, 2, 1, "", "to_origin"], [137, 2, 1, "", "to_rasmm"], [137, 2, 1, "", "to_space"], [137, 2, 1, "", "to_vox"], [137, 2, 1, "", "to_voxmm"], [137, 5, 1, "", "voxel_order"], [137, 5, 1, "", "voxel_sizes"]], "dipy.io.stateful_tractogram.Tractogram": [[137, 2, 1, "", "__init__"], [137, 5, 1, "", "affine_to_rasmm"], [137, 2, 1, "", "apply_affine"], [137, 2, 1, "", "copy"], [137, 5, 1, "", "data_per_point"], [137, 5, 1, "", "data_per_streamline"], [137, 2, 1, "", "extend"], [137, 5, 1, "", "streamlines"], [137, 2, 1, "", "to_world"]], "dipy.io.stateful_tractogram.product": [[137, 2, 1, "", "__init__"]], "dipy.io.streamline": [[137, 1, 1, "", "Dpy"], [137, 1, 1, "", "Origin"], [137, 1, 1, "", "Space"], [137, 1, 1, "", "StatefulTractogram"], [137, 1, 1, "", "Tractogram"], [137, 4, 1, "", "create_tractogram_header"], [137, 4, 1, "", "deepcopy"], [137, 4, 1, "", "detect_format"], [137, 4, 1, "", "is_header_compatible"], [137, 4, 1, "", "load_dpy"], [137, 4, 1, "", "load_fib"], [137, 4, 1, "", "load_generator"], [137, 4, 1, "", "load_tck"], [137, 4, 1, "", "load_tractogram"], [137, 4, 1, "", "load_trk"], [137, 4, 1, "", "load_vtk"], [137, 4, 1, "", "load_vtk_streamlines"], [137, 4, 1, "", "load_vtp"], [137, 4, 1, "", "save_dpy"], [137, 4, 1, "", "save_fib"], [137, 4, 1, "", "save_generator"], [137, 4, 1, "", "save_tck"], [137, 4, 1, "", "save_tractogram"], [137, 4, 1, "", "save_trk"], [137, 4, 1, "", "save_vtk"], [137, 4, 1, "", "save_vtk_streamlines"], [137, 4, 1, "", "save_vtp"]], "dipy.io.streamline.Dpy": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "close"], [137, 2, 1, "", "read_track"], [137, 2, 1, "", "read_tracks"], [137, 2, 1, "", "read_tracksi"], [137, 2, 1, "", "version"], [137, 2, 1, "", "write_track"], [137, 2, 1, "", "write_tracks"]], "dipy.io.streamline.Origin": [[137, 3, 1, "", "NIFTI"], [137, 3, 1, "", "TRACKVIS"], [137, 2, 1, "", "__init__"]], "dipy.io.streamline.Space": [[137, 3, 1, "", "RASMM"], [137, 3, 1, "", "VOX"], [137, 3, 1, "", "VOXMM"], [137, 2, 1, "", "__init__"]], "dipy.io.streamline.StatefulTractogram": [[137, 2, 1, "", "__init__"], [137, 5, 1, "", "affine"], [137, 2, 1, "", "are_compatible"], [137, 2, 1, "", "compute_bounding_box"], [137, 5, 1, "", "data_per_point"], [137, 5, 1, "", "data_per_streamline"], [137, 5, 1, "", "dimensions"], [137, 2, 1, "", "from_sft"], [137, 2, 1, "", "get_data_per_point_keys"], [137, 2, 1, "", "get_data_per_streamline_keys"], [137, 2, 1, "", "get_streamlines_copy"], [137, 2, 1, "", "is_bbox_in_vox_valid"], [137, 5, 1, "", "origin"], [137, 2, 1, "", "remove_invalid_streamlines"], [137, 5, 1, "", "space"], [137, 5, 1, "", "space_attributes"], [137, 5, 1, "", "streamlines"], [137, 2, 1, "", "to_center"], [137, 2, 1, "", "to_corner"], [137, 2, 1, "", "to_origin"], [137, 2, 1, "", "to_rasmm"], [137, 2, 1, "", "to_space"], [137, 2, 1, "", "to_vox"], [137, 2, 1, "", "to_voxmm"], [137, 5, 1, "", "voxel_order"], [137, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline.Tractogram": [[137, 2, 1, "", "__init__"], [137, 5, 1, "", "affine_to_rasmm"], [137, 2, 1, "", "apply_affine"], [137, 2, 1, "", "copy"], [137, 5, 1, "", "data_per_point"], [137, 5, 1, "", "data_per_streamline"], [137, 2, 1, "", "extend"], [137, 5, 1, "", "streamlines"], [137, 2, 1, "", "to_world"]], "dipy.io.utils": [[137, 1, 1, "", "Nifti1Image"], [137, 4, 1, "", "create_nifti_header"], [137, 4, 1, "", "create_tractogram_header"], [137, 4, 1, "", "decfa"], [137, 4, 1, "", "decfa_to_float"], [137, 4, 1, "", "detect_format"], [137, 4, 1, "", "get_reference_info"], [137, 4, 1, "", "is_header_compatible"], [137, 4, 1, "", "is_reference_info_valid"], [137, 4, 1, "", "make5d"], [137, 4, 1, "", "nifti1_symmat"], [137, 4, 1, "", "optional_package"], [137, 4, 1, "", "read_img_arr_or_path"], [137, 4, 1, "", "save_buan_profiles_hdf5"]], "dipy.io.utils.Nifti1Image": [[137, 2, 1, "", "__init__"], [137, 3, 1, "", "files_types"], [137, 3, 1, "", "header_class"], [137, 2, 1, "", "update_header"], [137, 3, 1, "", "valid_exts"]], "dipy.io.vtk": [[137, 4, 1, "", "load_polydata"], [137, 4, 1, "", "load_vtk_streamlines"], [137, 4, 1, "", "optional_package"], [137, 4, 1, "", "save_polydata"], [137, 4, 1, "", "save_vtk_streamlines"], [137, 4, 1, "", "setup_module"], [137, 4, 1, "", "transform_streamlines"]], "dipy.nn": [[138, 4, 1, "", "bench"], [138, 0, 0, "-", "histo_resdnn"], [138, 0, 0, "-", "model"], [138, 4, 1, "", "test"]], "dipy.nn.histo_resdnn": [[138, 1, 1, "", "HemiSphere"], [138, 1, 1, "", "HistoResDNN"], [138, 1, 1, "", "Version"], [138, 4, 1, "", "doctest_skip_parser"], [138, 4, 1, "", "get_bval_indices"], [138, 4, 1, "", "get_fnames"], [138, 4, 1, "", "get_sphere"], [138, 4, 1, "", "optional_package"], [138, 4, 1, "", "set_logger_level"], [138, 4, 1, "", "sf_to_sh"], [138, 4, 1, "", "sh_to_sf"], [138, 4, 1, "", "sph_harm_ind_list"], [138, 4, 1, "", "unique_bvals_magnitude"]], "dipy.nn.histo_resdnn.HemiSphere": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "faces"], [138, 2, 1, "", "find_closest"], [138, 2, 1, "", "from_sphere"], [138, 2, 1, "", "mirror"], [138, 2, 1, "", "subdivide"]], "dipy.nn.histo_resdnn.HistoResDNN": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "fetch_default_weights"], [138, 2, 1, "", "load_model_weights"], [138, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn.Version": [[138, 2, 1, "", "__init__"], [138, 5, 1, "", "base_version"], [138, 5, 1, "", "dev"], [138, 5, 1, "", "epoch"], [138, 5, 1, "", "is_devrelease"], [138, 5, 1, "", "is_postrelease"], [138, 5, 1, "", "is_prerelease"], [138, 5, 1, "", "local"], [138, 5, 1, "", "major"], [138, 5, 1, "", "micro"], [138, 5, 1, "", "minor"], [138, 5, 1, "", "post"], [138, 5, 1, "", "pre"], [138, 5, 1, "", "public"], [138, 5, 1, "", "release"]], "dipy.nn.model": [[138, 1, 1, "", "MultipleLayerPercepton"], [138, 1, 1, "", "SingleLayerPerceptron"], [138, 1, 1, "", "Version"], [138, 4, 1, "", "optional_package"]], "dipy.nn.model.MultipleLayerPercepton": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "evaluate"], [138, 2, 1, "", "fit"], [138, 2, 1, "", "predict"], [138, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "evaluate"], [138, 2, 1, "", "fit"], [138, 2, 1, "", "predict"], [138, 2, 1, "", "summary"]], "dipy.nn.model.Version": [[138, 2, 1, "", "__init__"], [138, 5, 1, "", "base_version"], [138, 5, 1, "", "dev"], [138, 5, 1, "", "epoch"], [138, 5, 1, "", "is_devrelease"], [138, 5, 1, "", "is_postrelease"], [138, 5, 1, "", "is_prerelease"], [138, 5, 1, "", "local"], [138, 5, 1, "", "major"], [138, 5, 1, "", "micro"], [138, 5, 1, "", "minor"], [138, 5, 1, "", "post"], [138, 5, 1, "", "pre"], [138, 5, 1, "", "public"], [138, 5, 1, "", "release"]], "dipy.reconst": [[139, 0, 0, "-", "base"], [139, 4, 1, "", "bench"], [139, 0, 0, "-", "benchmarks"], [139, 0, 0, "-", "cache"], [139, 0, 0, "-", "cross_validation"], [139, 0, 0, "-", "csdeconv"], [139, 0, 0, "-", "dki"], [139, 0, 0, "-", "dki_micro"], [139, 0, 0, "-", "dsi"], [139, 0, 0, "-", "dti"], [139, 0, 0, "-", "eudx_direction_getter"], [139, 0, 0, "-", "forecast"], [139, 0, 0, "-", "fwdti"], [139, 0, 0, "-", "gqi"], [139, 0, 0, "-", "ivim"], [139, 0, 0, "-", "mapmri"], [139, 0, 0, "-", "mcsd"], [139, 0, 0, "-", "msdki"], [139, 0, 0, "-", "multi_voxel"], [139, 0, 0, "-", "odf"], [139, 0, 0, "-", "qtdmri"], [139, 0, 0, "-", "qti"], [139, 0, 0, "-", "quick_squash"], [139, 0, 0, "-", "recspeed"], [139, 0, 0, "-", "rumba"], [139, 0, 0, "-", "sfm"], [139, 0, 0, "-", "shm"], [139, 0, 0, "-", "shore"], [139, 4, 1, "", "test"], [139, 0, 0, "-", "utils"], [139, 0, 0, "-", "vec_val_sum"]], "dipy.reconst.base": [[139, 1, 1, "", "ReconstFit"], [139, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[139, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.benchmarks": [[139, 0, 0, "-", "bench_bounding_box"], [139, 0, 0, "-", "bench_csd"], [139, 0, 0, "-", "bench_peaks"], [139, 0, 0, "-", "bench_squash"], [139, 0, 0, "-", "bench_vec_val_sum"]], "dipy.reconst.benchmarks.bench_bounding_box": [[139, 4, 1, "", "bench_bounding_box"], [139, 4, 1, "", "measure"]], "dipy.reconst.benchmarks.bench_csd": [[139, 1, 1, "", "ConstrainedSphericalDeconvModel"], [139, 1, 1, "", "GradientTable"], [139, 4, 1, "", "bench_csdeconv"], [139, 4, 1, "", "load_nifti_data"], [139, 4, 1, "", "num_grad"], [139, 4, 1, "", "read_stanford_labels"]], "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.benchmarks.bench_csd.GradientTable": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "b0s_mask"], [139, 2, 1, "", "bvals"], [139, 2, 1, "", "bvecs"], [139, 2, 1, "", "gradient_strength"], [139, 5, 1, "", "info"], [139, 2, 1, "", "qvals"], [139, 2, 1, "", "tau"]], "dipy.reconst.benchmarks.bench_peaks": [[139, 4, 1, "", "bench_local_maxima"], [139, 4, 1, "", "measure"]], "dipy.reconst.benchmarks.bench_squash": [[139, 4, 1, "", "bench_quick_squash"], [139, 4, 1, "", "measure"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "old_squash"], [139, 4, 1, "", "reduce"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[139, 4, 1, "", "bench_vec_val_vect"], [139, 4, 1, "", "measure"]], "dipy.reconst.cache": [[139, 1, 1, "", "Cache"], [139, 4, 1, "", "auto_attr"]], "dipy.reconst.cache.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[139, 4, 1, "", "coeff_of_determination"], [139, 4, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[139, 1, 1, "", "AxSymShResponse"], [139, 1, 1, "", "ConstrainedSDTModel"], [139, 1, 1, "", "ConstrainedSphericalDeconvModel"], [139, 1, 1, "", "SphHarmFit"], [139, 1, 1, "", "SphHarmModel"], [139, 1, 1, "", "TensorModel"], [139, 4, 1, "", "auto_response"], [139, 4, 1, "", "auto_response_ssst"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "csdeconv"], [139, 4, 1, "", "deprecate_with_version"], [139, 4, 1, "", "deprecated_params"], [139, 4, 1, "", "estimate_response"], [139, 4, 1, "", "fa_trace_to_lambdas"], [139, 4, 1, "", "forward_sdeconv_mat"], [139, 4, 1, "", "forward_sdt_deconv_mat"], [139, 4, 1, "", "fractional_anisotropy"], [139, 4, 1, "", "get_sphere"], [139, 4, 1, "", "lazy_index"], [139, 4, 1, "", "lpn"], [139, 4, 1, "", "mask_for_response_ssst"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "odf_deconv"], [139, 4, 1, "", "odf_sh_to_sharp"], [139, 4, 1, "", "peaks_from_model"], [139, 4, 1, "", "quad"], [139, 4, 1, "", "real_sh_descoteaux"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "recursive_response"], [139, 4, 1, "", "response_from_mask"], [139, 4, 1, "", "response_from_mask_ssst"], [139, 4, 1, "", "sh_to_rh"], [139, 4, 1, "", "single_tensor"], [139, 4, 1, "", "sph_harm_ind_list"], [139, 4, 1, "", "vec2vec_rotmat"]], "dipy.reconst.csdeconv.AxSymShResponse": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "basis"], [139, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.csdeconv.SphHarmFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "gfa"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "shape"], [139, 5, 1, "", "shm_coeff"]], "dipy.reconst.csdeconv.SphHarmModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "sampling_matrix"]], "dipy.reconst.csdeconv.TensorModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.dki": [[139, 1, 1, "", "DiffusionKurtosisFit"], [139, 1, 1, "", "DiffusionKurtosisModel"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "TensorFit"], [139, 4, 1, "", "Wcons"], [139, 4, 1, "", "Wrotate"], [139, 4, 1, "", "Wrotate_element"], [139, 4, 1, "", "apparent_kurtosis_coef"], [139, 4, 1, "", "axial_kurtosis"], [139, 4, 1, "", "carlson_rd"], [139, 4, 1, "", "carlson_rf"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "check_multi_b"], [139, 4, 1, "", "decompose_tensor"], [139, 4, 1, "", "design_matrix"], [139, 4, 1, "", "directional_diffusion"], [139, 4, 1, "", "directional_diffusion_variance"], [139, 4, 1, "", "directional_kurtosis"], [139, 4, 1, "", "dki_prediction"], [139, 4, 1, "", "from_lower_triangular"], [139, 4, 1, "", "get_fnames"], [139, 4, 1, "", "get_sphere"], [139, 4, 1, "", "kurtosis_fractional_anisotropy"], [139, 4, 1, "", "kurtosis_maximum"], [139, 4, 1, "", "local_maxima"], [139, 4, 1, "", "lower_triangular"], [139, 4, 1, "", "mean_diffusivity"], [139, 4, 1, "", "mean_kurtosis"], [139, 4, 1, "", "mean_kurtosis_tensor"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "nlls_fit_tensor"], [139, 4, 1, "", "ols_fit_dki"], [139, 4, 1, "", "perpendicular_directions"], [139, 4, 1, "", "radial_kurtosis"], [139, 4, 1, "", "restore_fit_tensor"], [139, 4, 1, "", "sphere2cart"], [139, 4, 1, "", "split_dki_param"], [139, 4, 1, "", "vec_val_vect"], [139, 4, 1, "", "wls_fit_dki"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "ak"], [139, 2, 1, "", "akc"], [139, 5, 1, "", "kfa"], [139, 2, 1, "", "kmax"], [139, 5, 1, "", "kt"], [139, 2, 1, "", "mk"], [139, 2, 1, "", "mkt"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.dki.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.dki.TensorFit": [[139, 5, 1, "", "S0_hat"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "ad"], [139, 2, 1, "", "adc"], [139, 2, 1, "", "color_fa"], [139, 5, 1, "", "directions"], [139, 5, 1, "", "evals"], [139, 5, 1, "", "evecs"], [139, 2, 1, "", "fa"], [139, 2, 1, "", "ga"], [139, 2, 1, "", "linearity"], [139, 2, 1, "", "lower_triangular"], [139, 2, 1, "", "md"], [139, 2, 1, "", "mode"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "planarity"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "quadratic_form"], [139, 2, 1, "", "rd"], [139, 5, 1, "", "shape"], [139, 2, 1, "", "sphericity"], [139, 2, 1, "", "trace"]], "dipy.reconst.dki_micro": [[139, 1, 1, "", "DiffusionKurtosisFit"], [139, 1, 1, "", "DiffusionKurtosisModel"], [139, 1, 1, "", "KurtosisMicrostructuralFit"], [139, 1, 1, "", "KurtosisMicrostructureModel"], [139, 4, 1, "", "axial_diffusivity"], [139, 4, 1, "", "axonal_water_fraction"], [139, 4, 1, "", "decompose_tensor"], [139, 4, 1, "", "diffusion_components"], [139, 4, 1, "", "directional_diffusion"], [139, 4, 1, "", "directional_kurtosis"], [139, 4, 1, "", "dkimicro_prediction"], [139, 4, 1, "", "dti_design_matrix"], [139, 4, 1, "", "from_lower_triangular"], [139, 4, 1, "", "get_sphere"], [139, 4, 1, "", "kurtosis_maximum"], [139, 4, 1, "", "lower_triangular"], [139, 4, 1, "", "mean_diffusivity"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "radial_diffusivity"], [139, 4, 1, "", "split_dki_param"], [139, 4, 1, "", "tortuosity"], [139, 4, 1, "", "trace"], [139, 4, 1, "", "vec_val_vect"]], "dipy.reconst.dki_micro.DiffusionKurtosisFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "ak"], [139, 2, 1, "", "akc"], [139, 5, 1, "", "kfa"], [139, 2, 1, "", "kmax"], [139, 5, 1, "", "kt"], [139, 2, 1, "", "mk"], [139, 2, 1, "", "mkt"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "rk"]], "dipy.reconst.dki_micro.DiffusionKurtosisModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "awf"], [139, 5, 1, "", "axonal_diffusivity"], [139, 5, 1, "", "hindered_ad"], [139, 5, 1, "", "hindered_evals"], [139, 5, 1, "", "hindered_rd"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "restricted_evals"], [139, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "DiffusionSpectrumDeconvFit"], [139, 1, 1, "", "DiffusionSpectrumDeconvModel"], [139, 1, 1, "", "DiffusionSpectrumFit"], [139, 1, 1, "", "DiffusionSpectrumModel"], [139, 4, 1, "", "LR_deconv"], [139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 4, 1, "", "create_qspace"], [139, 4, 1, "", "create_qtable"], [139, 4, 1, "", "fftn"], [139, 4, 1, "", "fftshift"], [139, 4, 1, "", "gen_PSF"], [139, 4, 1, "", "half_to_full_qspace"], [139, 4, 1, "", "hanning_filter"], [139, 4, 1, "", "ifftshift"], [139, 4, 1, "", "map_coordinates"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "pdf_interp_coords"], [139, 4, 1, "", "pdf_odf"], [139, 4, 1, "", "project_hemisph_bvecs"], [139, 4, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "msd_discrete"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "pdf"], [139, 2, 1, "", "rtop_pdf"], [139, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.dsi.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.dsi.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.dti": [[139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "TensorFit"], [139, 1, 1, "", "TensorModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "apparent_diffusion_coef"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "axial_diffusivity"], [139, 4, 1, "", "color_fa"], [139, 4, 1, "", "decompose_tensor"], [139, 4, 1, "", "design_matrix"], [139, 4, 1, "", "determinant"], [139, 4, 1, "", "deviatoric"], [139, 4, 1, "", "eig_from_lo_tri"], [139, 4, 1, "", "fractional_anisotropy"], [139, 4, 1, "", "from_lower_triangular"], [139, 4, 1, "", "geodesic_anisotropy"], [139, 4, 1, "", "get_sphere"], [139, 4, 1, "", "gradient_table"], [139, 4, 1, "", "isotropic"], [139, 4, 1, "", "iter_fit_tensor"], [139, 4, 1, "", "linearity"], [139, 4, 1, "", "lower_triangular"], [139, 4, 1, "", "mean_diffusivity"], [139, 4, 1, "", "mode"], [139, 4, 1, "", "nlls_fit_tensor"], [139, 4, 1, "", "norm"], [139, 4, 1, "", "ols_fit_tensor"], [139, 4, 1, "", "pinv"], [139, 4, 1, "", "planarity"], [139, 4, 1, "", "quantize_evecs"], [139, 4, 1, "", "radial_diffusivity"], [139, 4, 1, "", "restore_fit_tensor"], [139, 4, 1, "", "sphericity"], [139, 4, 1, "", "tensor_prediction"], [139, 4, 1, "", "trace"], [139, 4, 1, "", "vec_val_vect"], [139, 4, 1, "", "vector_norm"], [139, 4, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.dti.TensorFit": [[139, 5, 1, "", "S0_hat"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "ad"], [139, 2, 1, "", "adc"], [139, 2, 1, "", "color_fa"], [139, 5, 1, "", "directions"], [139, 5, 1, "", "evals"], [139, 5, 1, "", "evecs"], [139, 2, 1, "", "fa"], [139, 2, 1, "", "ga"], [139, 2, 1, "", "linearity"], [139, 2, 1, "", "lower_triangular"], [139, 2, 1, "", "md"], [139, 2, 1, "", "mode"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "planarity"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "quadratic_form"], [139, 2, 1, "", "rd"], [139, 5, 1, "", "shape"], [139, 2, 1, "", "sphericity"], [139, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.dti.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.eudx_direction_getter": [[139, 1, 1, "", "EuDXDirectionGetter"]], "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter": [[139, 2, 1, "", "__init__"], [139, 3, 1, "", "ang_thr"], [139, 2, 1, "", "initial_direction"], [139, 3, 1, "", "qa_thr"], [139, 3, 1, "", "total_weight"]], "dipy.reconst.forecast": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "ForecastFit"], [139, 1, 1, "", "ForecastModel"], [139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "csdeconv"], [139, 4, 1, "", "find_signal_means"], [139, 4, 1, "", "forecast_error_func"], [139, 4, 1, "", "forecast_matrix"], [139, 4, 1, "", "lb_forecast"], [139, 4, 1, "", "leastsq"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "psi_l"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "rho_matrix"], [139, 4, 1, "", "warn"]], "dipy.reconst.forecast.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.forecast.ForecastFit": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "dpar"], [139, 5, 1, "", "dperp"], [139, 2, 1, "", "fractional_anisotropy"], [139, 2, 1, "", "mean_diffusivity"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.forecast.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.forecast.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.forecast.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.fwdti": [[139, 1, 1, "", "FreeWaterTensorFit"], [139, 1, 1, "", "FreeWaterTensorModel"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "TensorFit"], [139, 4, 1, "", "check_multi_b"], [139, 4, 1, "", "cholesky_to_lower_triangular"], [139, 4, 1, "", "decompose_tensor"], [139, 4, 1, "", "design_matrix"], [139, 4, 1, "", "from_lower_triangular"], [139, 4, 1, "", "fwdti_prediction"], [139, 4, 1, "", "lower_triangular"], [139, 4, 1, "", "lower_triangular_to_cholesky"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "nls_fit_tensor"], [139, 4, 1, "", "nls_iter"], [139, 4, 1, "", "vec_val_vect"], [139, 4, 1, "", "wls_fit_tensor"], [139, 4, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "f"], [139, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.fwdti.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.fwdti.TensorFit": [[139, 5, 1, "", "S0_hat"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "ad"], [139, 2, 1, "", "adc"], [139, 2, 1, "", "color_fa"], [139, 5, 1, "", "directions"], [139, 5, 1, "", "evals"], [139, 5, 1, "", "evecs"], [139, 2, 1, "", "fa"], [139, 2, 1, "", "ga"], [139, 2, 1, "", "linearity"], [139, 2, 1, "", "lower_triangular"], [139, 2, 1, "", "md"], [139, 2, 1, "", "mode"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "planarity"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "quadratic_form"], [139, 2, 1, "", "rd"], [139, 5, 1, "", "shape"], [139, 2, 1, "", "sphericity"], [139, 2, 1, "", "trace"]], "dipy.reconst.gqi": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "GeneralizedQSamplingFit"], [139, 1, 1, "", "GeneralizedQSamplingModel"], [139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 4, 1, "", "equatorial_maximum"], [139, 4, 1, "", "equatorial_zone_vertices"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "normalize_qa"], [139, 4, 1, "", "npa"], [139, 4, 1, "", "odf_sum"], [139, 4, 1, "", "patch_maximum"], [139, 4, 1, "", "patch_sum"], [139, 4, 1, "", "patch_vertices"], [139, 4, 1, "", "polar_zone_vertices"], [139, 4, 1, "", "squared_radial_component"], [139, 4, 1, "", "triple_odf_maxima"], [139, 4, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.gqi.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.gqi.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[139, 1, 1, "", "IvimFit"], [139, 4, 1, "", "IvimModel"], [139, 1, 1, "", "IvimModelTRR"], [139, 1, 1, "", "IvimModelVP"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "differential_evolution"], [139, 4, 1, "", "f_D_star_error"], [139, 4, 1, "", "f_D_star_prediction"], [139, 4, 1, "", "ivim_model_selector"], [139, 4, 1, "", "ivim_prediction"], [139, 4, 1, "", "least_squares"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "optional_package"]], "dipy.reconst.ivim.IvimFit": [[139, 5, 1, "", "D"], [139, 5, 1, "", "D_star"], [139, 5, 1, "", "S0_predicted"], [139, 2, 1, "", "__init__"], [139, 5, 1, "", "perfusion_fraction"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "estimate_f_D_star"], [139, 2, 1, "", "estimate_linear_fit"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cvx_fit"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "ivim_mix_cost_one"], [139, 2, 1, "", "nlls_cost"], [139, 2, 1, "", "phi"], [139, 2, 1, "", "stoc_search_cost"], [139, 2, 1, "", "x_and_f_to_x_f"], [139, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.ivim.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.ivim.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.mapmri": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "MapmriFit"], [139, 1, 1, "", "MapmriModel"], [139, 1, 1, "", "Optimizer"], [139, 1, 1, "", "PositiveDefiniteLeastSquares"], [139, 1, 1, "", "ReconstFit"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "b_mat"], [139, 4, 1, "", "b_mat_isotropic"], [139, 4, 1, "", "binomialfloat"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "create_rspace"], [139, 4, 1, "", "delta"], [139, 4, 1, "", "factorial2"], [139, 4, 1, "", "gcv_cost_function"], [139, 4, 1, "", "generalized_crossvalidation"], [139, 4, 1, "", "generalized_crossvalidation_array"], [139, 4, 1, "", "genlaguerre"], [139, 4, 1, "", "gradient_table"], [139, 4, 1, "", "hermite"], [139, 4, 1, "", "isotropic_scale_factor"], [139, 4, 1, "", "load_sdp_constraints"], [139, 4, 1, "", "map_laplace_s"], [139, 4, 1, "", "map_laplace_t"], [139, 4, 1, "", "map_laplace_u"], [139, 4, 1, "", "mapmri_STU_reg_matrices"], [139, 4, 1, "", "mapmri_index_matrix"], [139, 4, 1, "", "mapmri_isotropic_K_mu_dependent"], [139, 4, 1, "", "mapmri_isotropic_K_mu_independent"], [139, 4, 1, "", "mapmri_isotropic_M_mu_dependent"], [139, 4, 1, "", "mapmri_isotropic_M_mu_independent"], [139, 4, 1, "", "mapmri_isotropic_index_matrix"], [139, 4, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [139, 4, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [139, 4, 1, "", "mapmri_isotropic_odf_matrix"], [139, 4, 1, "", "mapmri_isotropic_odf_sh_matrix"], [139, 4, 1, "", "mapmri_isotropic_phi_matrix"], [139, 4, 1, "", "mapmri_isotropic_psi_matrix"], [139, 4, 1, "", "mapmri_isotropic_radial_pdf_basis"], [139, 4, 1, "", "mapmri_isotropic_radial_signal_basis"], [139, 4, 1, "", "mapmri_laplacian_reg_matrix"], [139, 4, 1, "", "mapmri_odf_matrix"], [139, 4, 1, "", "mapmri_phi_1d"], [139, 4, 1, "", "mapmri_phi_matrix"], [139, 4, 1, "", "mapmri_psi_1d"], [139, 4, 1, "", "mapmri_psi_matrix"], [139, 4, 1, "", "mfactorial"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "sfactorial"], [139, 4, 1, "", "sph_harm_ind_list"], [139, 4, 1, "", "warn"]], "dipy.reconst.mapmri.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.mapmri.MapmriFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fitted_signal"], [139, 5, 1, "", "mapmri_R"], [139, 5, 1, "", "mapmri_coeff"], [139, 5, 1, "", "mapmri_mu"], [139, 2, 1, "", "msd"], [139, 2, 1, "", "ng"], [139, 2, 1, "", "ng_parallel"], [139, 2, 1, "", "ng_perpendicular"], [139, 2, 1, "", "norm_of_laplacian_signal"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "odf_sh"], [139, 2, 1, "", "pdf"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "qiv"], [139, 2, 1, "", "rtap"], [139, 2, 1, "", "rtop"], [139, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.mapmri.Optimizer": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "evolution"], [139, 5, 1, "", "fopt"], [139, 5, 1, "", "message"], [139, 5, 1, "", "nfev"], [139, 5, 1, "", "nit"], [139, 2, 1, "", "print_summary"], [139, 5, 1, "", "xopt"]], "dipy.reconst.mapmri.PositiveDefiniteLeastSquares": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "solve"]], "dipy.reconst.mapmri.ReconstFit": [[139, 2, 1, "", "__init__"]], "dipy.reconst.mapmri.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.mapmri.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.mcsd": [[139, 1, 1, "", "GradientTable"], [139, 1, 1, "", "MSDeconvFit"], [139, 1, 1, "", "MultiShellDeconvModel"], [139, 1, 1, "", "MultiShellResponse"], [139, 1, 1, "", "QpFitter"], [139, 1, 1, "", "TensorModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "auto_response_msmt"], [139, 4, 1, "", "fractional_anisotropy"], [139, 4, 1, "", "get_bval_indices"], [139, 4, 1, "", "gradient_table"], [139, 4, 1, "", "mask_for_response_msmt"], [139, 4, 1, "", "mean_diffusivity"], [139, 4, 1, "", "multi_shell_fiber_response"], [139, 4, 1, "", "multi_tissue_basis"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "response_from_mask_msmt"], [139, 4, 1, "", "response_from_mask_ssst"], [139, 4, 1, "", "single_tensor"], [139, 4, 1, "", "solve_qp"], [139, 4, 1, "", "unique_bvals_tolerance"]], "dipy.reconst.mcsd.GradientTable": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "b0s_mask"], [139, 2, 1, "", "bvals"], [139, 2, 1, "", "bvecs"], [139, 2, 1, "", "gradient_strength"], [139, 5, 1, "", "info"], [139, 2, 1, "", "qvals"], [139, 2, 1, "", "tau"]], "dipy.reconst.mcsd.MSDeconvFit": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "all_shm_coeff"], [139, 5, 1, "", "shm_coeff"], [139, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[139, 2, 1, "", "__init__"]], "dipy.reconst.mcsd.TensorModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.mcsd.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.msdki": [[139, 1, 1, "", "MeanDiffusionKurtosisFit"], [139, 1, 1, "", "MeanDiffusionKurtosisModel"], [139, 1, 1, "", "ReconstModel"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "awf_from_msk"], [139, 4, 1, "", "check_multi_b"], [139, 4, 1, "", "design_matrix"], [139, 4, 1, "", "mean_signal_bvalue"], [139, 4, 1, "", "msdki_prediction"], [139, 4, 1, "", "msk_from_awf"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "round_bvals"], [139, 4, 1, "", "unique_bvals_magnitude"], [139, 4, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[139, 5, 1, "", "S0_hat"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "msd"], [139, 2, 1, "", "msk"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "smt2di"], [139, 2, 1, "", "smt2f"], [139, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.msdki.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.multi_voxel": [[139, 1, 1, "", "CallableArray"], [139, 1, 1, "", "MultiVoxelFit"], [139, 1, 1, "", "ReconstFit"], [139, 4, 1, "", "as_strided"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "ndindex"], [139, 1, 1, "", "tqdm"]], "dipy.reconst.multi_voxel.CallableArray": [[139, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "shape"]], "dipy.reconst.multi_voxel.ReconstFit": [[139, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.tqdm": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "clear"], [139, 2, 1, "", "close"], [139, 2, 1, "", "display"], [139, 2, 1, "", "external_write_mode"], [139, 5, 1, "", "format_dict"], [139, 2, 1, "", "format_interval"], [139, 2, 1, "", "format_meter"], [139, 2, 1, "", "format_num"], [139, 2, 1, "", "format_sizeof"], [139, 2, 1, "", "get_lock"], [139, 3, 1, "", "monitor"], [139, 3, 1, "", "monitor_interval"], [139, 2, 1, "", "moveto"], [139, 2, 1, "", "pandas"], [139, 2, 1, "", "refresh"], [139, 2, 1, "", "reset"], [139, 2, 1, "", "set_description"], [139, 2, 1, "", "set_description_str"], [139, 2, 1, "", "set_lock"], [139, 2, 1, "", "set_postfix"], [139, 2, 1, "", "set_postfix_str"], [139, 2, 1, "", "status_printer"], [139, 2, 1, "", "unpause"], [139, 2, 1, "", "update"], [139, 2, 1, "", "wrapattr"], [139, 2, 1, "", "write"]], "dipy.reconst.odf": [[139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 1, 1, "", "ReconstFit"], [139, 1, 1, "", "ReconstModel"], [139, 4, 1, "", "gfa"], [139, 4, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.odf.ReconstFit": [[139, 2, 1, "", "__init__"]], "dipy.reconst.odf.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[139, 1, 1, "", "Cache"], [139, 4, 1, "", "GCV_cost_function"], [139, 4, 1, "", "H"], [139, 1, 1, "", "QtdmriFit"], [139, 1, 1, "", "QtdmriModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "angular_basis_EAP_opt"], [139, 4, 1, "", "angular_basis_opt"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "create_rt_space_grid"], [139, 4, 1, "", "design_matrix_spatial"], [139, 4, 1, "", "elastic_crossvalidation"], [139, 4, 1, "", "factorial"], [139, 4, 1, "", "factorial2"], [139, 4, 1, "", "fmin_l_bfgs_b"], [139, 4, 1, "", "generalized_crossvalidation"], [139, 4, 1, "", "genlaguerre"], [139, 4, 1, "", "gradient_table_from_gradient_strength_bvecs"], [139, 4, 1, "", "l1_crossvalidation"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "part1_reg_matrix_tau"], [139, 4, 1, "", "part23_iso_reg_matrix_q"], [139, 4, 1, "", "part23_reg_matrix_q"], [139, 4, 1, "", "part23_reg_matrix_tau"], [139, 4, 1, "", "part4_iso_reg_matrix_q"], [139, 4, 1, "", "part4_reg_matrix_q"], [139, 4, 1, "", "part4_reg_matrix_tau"], [139, 4, 1, "", "qtdmri_anisotropic_scaling"], [139, 4, 1, "", "qtdmri_eap_matrix"], [139, 4, 1, "", "qtdmri_eap_matrix_"], [139, 4, 1, "", "qtdmri_index_matrix"], [139, 4, 1, "", "qtdmri_isotropic_eap_matrix"], [139, 4, 1, "", "qtdmri_isotropic_eap_matrix_"], [139, 4, 1, "", "qtdmri_isotropic_index_matrix"], [139, 4, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [139, 4, 1, "", "qtdmri_isotropic_scaling"], [139, 4, 1, "", "qtdmri_isotropic_signal_matrix"], [139, 4, 1, "", "qtdmri_isotropic_signal_matrix_"], [139, 4, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [139, 4, 1, "", "qtdmri_laplacian_reg_matrix"], [139, 4, 1, "", "qtdmri_mapmri_isotropic_normalization"], [139, 4, 1, "", "qtdmri_mapmri_normalization"], [139, 4, 1, "", "qtdmri_number_of_coefficients"], [139, 4, 1, "", "qtdmri_signal_matrix"], [139, 4, 1, "", "qtdmri_signal_matrix_"], [139, 4, 1, "", "qtdmri_temporal_normalization"], [139, 4, 1, "", "qtdmri_to_mapmri_matrix"], [139, 4, 1, "", "radial_basis_EAP_opt"], [139, 4, 1, "", "radial_basis_opt"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "temporal_basis"], [139, 4, 1, "", "visualise_gradient_table_G_Delta_rainbow"], [139, 4, 1, "", "warn"]], "dipy.reconst.qtdmri.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.qtdmri.QtdmriFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fitted_signal"], [139, 2, 1, "", "msd"], [139, 2, 1, "", "norm_of_laplacian_signal"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "odf_sh"], [139, 2, 1, "", "pdf"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "qiv"], [139, 2, 1, "", "qtdmri_to_mapmri_coef"], [139, 2, 1, "", "rtap"], [139, 2, 1, "", "rtop"], [139, 2, 1, "", "rtpp"], [139, 2, 1, "", "sparsity_abs"], [139, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.qtdmri.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.qti": [[139, 1, 1, "", "QtiFit"], [139, 1, 1, "", "QtiModel"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "cvxpy_1x21_to_6x6"], [139, 4, 1, "", "cvxpy_1x6_to_3x3"], [139, 4, 1, "", "design_matrix"], [139, 4, 1, "", "dtd_covariance"], [139, 4, 1, "", "from_21x1_to_6x6"], [139, 4, 1, "", "from_3x3_to_6x1"], [139, 4, 1, "", "from_6x1_to_3x3"], [139, 4, 1, "", "from_6x6_to_21x1"], [139, 4, 1, "", "ndindex"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "qti_signal"], [139, 4, 1, "", "warn"]], "dipy.reconst.qti.QtiFit": [[139, 2, 1, "", "S0_hat"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "c_c"], [139, 2, 1, "", "c_m"], [139, 2, 1, "", "c_md"], [139, 2, 1, "", "c_mu"], [139, 2, 1, "", "d_sq"], [139, 2, 1, "", "fa"], [139, 2, 1, "", "k_bulk"], [139, 2, 1, "", "k_mu"], [139, 2, 1, "", "k_shear"], [139, 2, 1, "", "md"], [139, 2, 1, "", "mean_d_sq"], [139, 2, 1, "", "mk"], [139, 2, 1, "", "predict"], [139, 2, 1, "", "ufa"], [139, 2, 1, "", "v_iso"], [139, 2, 1, "", "v_md"], [139, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"], [139, 2, 1, "", "predict"]], "dipy.reconst.qti.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.qti.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.quick_squash": [[139, 4, 1, "", "quick_squash"], [139, 4, 1, "", "reduce"]], "dipy.reconst.recspeed": [[139, 4, 1, "", "adj_to_countarrs"], [139, 4, 1, "", "argmax_from_adj"], [139, 4, 1, "", "argmax_from_countarrs"], [139, 4, 1, "", "le_to_odf"], [139, 4, 1, "", "local_maxima"], [139, 4, 1, "", "proc_reco_args"], [139, 4, 1, "", "remove_similar_vertices"], [139, 4, 1, "", "search_descending"], [139, 4, 1, "", "sum_on_blocks_1d"]], "dipy.reconst.rumba": [[139, 1, 1, "", "AxSymShResponse"], [139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 1, 1, "", "RumbaFit"], [139, 1, 1, "", "RumbaSDModel"], [139, 1, 1, "", "Sphere"], [139, 4, 1, "", "all_tensor_evecs"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "bounding_box"], [139, 4, 1, "", "crop"], [139, 4, 1, "", "generate_kernel"], [139, 4, 1, "", "get_bval_indices"], [139, 4, 1, "", "get_sphere"], [139, 4, 1, "", "gradient_table"], [139, 4, 1, "", "lazy_index"], [139, 4, 1, "", "mbessel_ratio"], [139, 4, 1, "", "normalize_data"], [139, 4, 1, "", "rumba_deconv"], [139, 4, 1, "", "rumba_deconv_global"], [139, 4, 1, "", "single_tensor"], [139, 4, 1, "", "unique_bvals_tolerance"], [139, 4, 1, "", "vec2vec_rotmat"]], "dipy.reconst.rumba.AxSymShResponse": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "basis"], [139, 2, 1, "", "on_sphere"]], "dipy.reconst.rumba.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.rumba.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.rumba.RumbaFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "combined_odf_iso"], [139, 2, 1, "", "f_csf"], [139, 2, 1, "", "f_gm"], [139, 2, 1, "", "f_iso"], [139, 2, 1, "", "f_wm"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[139, 2, 1, "", "__init__"]], "dipy.reconst.rumba.Sphere": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "edges"], [139, 2, 1, "", "faces"], [139, 2, 1, "", "find_closest"], [139, 2, 1, "", "subdivide"], [139, 2, 1, "", "vertices"], [139, 5, 1, "", "x"], [139, 5, 1, "", "y"], [139, 5, 1, "", "z"]], "dipy.reconst.sfm": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "ExponentialIsotropicFit"], [139, 1, 1, "", "ExponentialIsotropicModel"], [139, 1, 1, "", "IsotropicFit"], [139, 1, 1, "", "IsotropicModel"], [139, 1, 1, "", "OrderedDict"], [139, 1, 1, "", "ReconstFit"], [139, 1, 1, "", "ReconstModel"], [139, 1, 1, "", "SparseFascicleFit"], [139, 1, 1, "", "SparseFascicleModel"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "determine_num_processes"], [139, 4, 1, "", "nanmean"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.sfm.OrderedDict": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "clear"], [139, 2, 1, "", "copy"], [139, 2, 1, "", "fromkeys"], [139, 2, 1, "", "items"], [139, 2, 1, "", "keys"], [139, 2, 1, "", "move_to_end"], [139, 2, 1, "", "pop"], [139, 2, 1, "", "popitem"], [139, 2, 1, "", "setdefault"], [139, 2, 1, "", "update"], [139, 2, 1, "", "values"]], "dipy.reconst.sfm.ReconstFit": [[139, 2, 1, "", "__init__"]], "dipy.reconst.sfm.ReconstModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "design_matrix"], [139, 2, 1, "", "fit"]], "dipy.reconst.shm": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "CsaOdfModel"], [139, 1, 1, "", "OdfFit"], [139, 1, 1, "", "OdfModel"], [139, 1, 1, "", "OpdtModel"], [139, 1, 1, "", "QballBaseModel"], [139, 1, 1, "", "QballModel"], [139, 1, 1, "", "ResidualBootstrapWrapper"], [139, 1, 1, "", "SphHarmFit"], [139, 1, 1, "", "SphHarmModel"], [139, 4, 1, "", "anisotropic_power"], [139, 4, 1, "", "auto_attr"], [139, 4, 1, "", "bootstrap_data_array"], [139, 4, 1, "", "bootstrap_data_voxel"], [139, 4, 1, "", "calculate_max_order"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "convert_sh_from_legacy"], [139, 4, 1, "", "convert_sh_to_full_basis"], [139, 4, 1, "", "convert_sh_to_legacy"], [139, 4, 1, "", "deprecate_with_version"], [139, 4, 1, "", "forward_sdeconv_mat"], [139, 4, 1, "", "gen_dirac"], [139, 4, 1, "", "hat"], [139, 4, 1, "", "lazy_index"], [139, 4, 1, "", "lcr_matrix"], [139, 4, 1, "", "normalize_data"], [139, 4, 1, "", "order_from_ncoef"], [139, 4, 1, "", "randint"], [139, 4, 1, "", "real_sh_descoteaux"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "real_sh_tournier"], [139, 4, 1, "", "real_sh_tournier_from_index"], [139, 4, 1, "", "real_sph_harm"], [139, 4, 1, "", "real_sym_sh_basis"], [139, 4, 1, "", "real_sym_sh_mrtrix"], [139, 4, 1, "", "sf_to_sh"], [139, 4, 1, "", "sh_to_rh"], [139, 4, 1, "", "sh_to_sf"], [139, 4, 1, "", "sh_to_sf_matrix"], [139, 4, 1, "", "smooth_pinv"], [139, 4, 1, "", "sph_harm_ind_list"], [139, 4, 1, "", "spherical_harmonics"], [139, 4, 1, "", "warn"]], "dipy.reconst.shm.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.shm.CsaOdfModel": [[139, 2, 1, "", "__init__"], [139, 3, 1, "", "max"], [139, 3, 1, "", "min"]], "dipy.reconst.shm.OdfFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "odf"]], "dipy.reconst.shm.OdfModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.shm.OpdtModel": [[139, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[139, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[139, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "gfa"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "predict"], [139, 5, 1, "", "shape"], [139, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[139, 1, 1, "", "Cache"], [139, 1, 1, "", "ShoreFit"], [139, 1, 1, "", "ShoreModel"], [139, 1, 1, "", "Version"], [139, 4, 1, "", "cart2sphere"], [139, 4, 1, "", "create_rspace"], [139, 4, 1, "", "factorial"], [139, 4, 1, "", "genlaguerre"], [139, 4, 1, "", "l_shore"], [139, 4, 1, "", "multi_voxel_fit"], [139, 4, 1, "", "n_shore"], [139, 4, 1, "", "optional_package"], [139, 4, 1, "", "real_sh_descoteaux_from_index"], [139, 4, 1, "", "shore_indices"], [139, 4, 1, "", "shore_matrix"], [139, 4, 1, "", "shore_matrix_odf"], [139, 4, 1, "", "shore_matrix_pdf"], [139, 4, 1, "", "shore_order"], [139, 4, 1, "", "warn"]], "dipy.reconst.shore.Cache": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "cache_clear"], [139, 2, 1, "", "cache_get"], [139, 2, 1, "", "cache_set"]], "dipy.reconst.shore.ShoreFit": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fitted_signal"], [139, 2, 1, "", "msd"], [139, 2, 1, "", "odf"], [139, 2, 1, "", "odf_sh"], [139, 2, 1, "", "pdf"], [139, 2, 1, "", "pdf_grid"], [139, 2, 1, "", "rtop_pdf"], [139, 2, 1, "", "rtop_signal"], [139, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "fit"]], "dipy.reconst.shore.Version": [[139, 2, 1, "", "__init__"], [139, 5, 1, "", "base_version"], [139, 5, 1, "", "dev"], [139, 5, 1, "", "epoch"], [139, 5, 1, "", "is_devrelease"], [139, 5, 1, "", "is_postrelease"], [139, 5, 1, "", "is_prerelease"], [139, 5, 1, "", "local"], [139, 5, 1, "", "major"], [139, 5, 1, "", "micro"], [139, 5, 1, "", "minor"], [139, 5, 1, "", "post"], [139, 5, 1, "", "pre"], [139, 5, 1, "", "public"], [139, 5, 1, "", "release"]], "dipy.reconst.utils": [[139, 4, 1, "", "dki_design_matrix"]], "dipy.reconst.vec_val_sum": [[139, 4, 1, "", "vec_val_vect"]], "dipy.segment": [[140, 0, 0, "-", "benchmarks"], [140, 0, 0, "-", "bundles"], [140, 0, 0, "-", "clustering"], [140, 0, 0, "-", "clustering_algorithms"], [140, 0, 0, "-", "clusteringspeed"], [140, 0, 0, "-", "cythonutils"], [140, 0, 0, "-", "featurespeed"], [140, 0, 0, "-", "mask"], [140, 0, 0, "-", "metric"], [140, 0, 0, "-", "metricspeed"], [140, 0, 0, "-", "mrf"], [140, 0, 0, "-", "threshold"], [140, 0, 0, "-", "tissue"]], "dipy.segment.benchmarks": [[140, 0, 0, "-", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles": [[140, 1, 1, "", "MDFpy"], [140, 1, 1, "", "Metric"], [140, 3, 1, "", "QB_New"], [140, 3, 1, "", "Streamlines"], [140, 4, 1, "", "assert_array_equal"], [140, 4, 1, "", "assert_arrays_equal"], [140, 4, 1, "", "assert_equal"], [140, 4, 1, "", "bench_quickbundles"], [140, 4, 1, "", "get_fnames"], [140, 4, 1, "", "load_tractogram"], [140, 4, 1, "", "measure"], [140, 4, 1, "", "set_number_of_points"]], "dipy.segment.benchmarks.bench_quickbundles.MDFpy": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"]], "dipy.segment.benchmarks.bench_quickbundles.Metric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"], [140, 3, 1, "", "feature"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.bundles": [[140, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [140, 1, 1, "", "BundleMinDistanceMetric"], [140, 1, 1, "", "BundleSumDistanceMatrixMetric"], [140, 1, 1, "", "RecoBundles"], [140, 1, 1, "", "StreamlineLinearRegistration"], [140, 3, 1, "", "Streamlines"], [140, 4, 1, "", "apply_affine"], [140, 4, 1, "", "ba_analysis"], [140, 4, 1, "", "bundle_adjacency"], [140, 4, 1, "", "bundle_shape_similarity"], [140, 4, 1, "", "bundles_distances_mam"], [140, 4, 1, "", "bundles_distances_mdf"], [140, 1, 1, "", "chain"], [140, 4, 1, "", "check_range"], [140, 4, 1, "", "cluster_bundle"], [140, 4, 1, "", "deprecated_params"], [140, 4, 1, "", "length"], [140, 4, 1, "", "nbytes"], [140, 4, 1, "", "qbx_and_merge"], [140, 4, 1, "", "select_random_set_of_streamlines"], [140, 4, 1, "", "set_number_of_points"], [140, 4, 1, "", "time"]], "dipy.segment.bundles.BundleMinDistanceAsymmetricMetric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "distance"]], "dipy.segment.bundles.BundleMinDistanceMetric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "distance"], [140, 2, 1, "", "setup"]], "dipy.segment.bundles.BundleSumDistanceMatrixMetric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "distance"]], "dipy.segment.bundles.RecoBundles": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "evaluate_results"], [140, 2, 1, "", "recognize"], [140, 2, 1, "", "refine"]], "dipy.segment.bundles.StreamlineLinearRegistration": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "optimize"]], "dipy.segment.bundles.chain": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "from_iterable"]], "dipy.segment.clustering": [[140, 1, 1, "", "ABCMeta"], [140, 1, 1, "", "AveragePointwiseEuclideanMetric"], [140, 1, 1, "", "Cluster"], [140, 1, 1, "", "ClusterCentroid"], [140, 1, 1, "", "ClusterMap"], [140, 1, 1, "", "ClusterMapCentroid"], [140, 1, 1, "", "Clustering"], [140, 1, 1, "", "Identity"], [140, 1, 1, "", "Metric"], [140, 1, 1, "", "MinimumAverageDirectFlipMetric"], [140, 1, 1, "", "QuickBundles"], [140, 1, 1, "", "QuickBundlesX"], [140, 1, 1, "", "ResampleFeature"], [140, 1, 1, "", "TreeCluster"], [140, 1, 1, "", "TreeClusterMap"], [140, 4, 1, "", "abstractmethod"], [140, 4, 1, "", "nbytes"], [140, 4, 1, "", "qbx_and_merge"], [140, 4, 1, "", "set_number_of_points"], [140, 4, 1, "", "time"]], "dipy.segment.clustering.ABCMeta": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "register"]], "dipy.segment.clustering.AveragePointwiseEuclideanMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.clustering.Cluster": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "assign"], [140, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "add_cluster"], [140, 2, 1, "", "clear"], [140, 5, 1, "", "clusters"], [140, 2, 1, "", "clusters_sizes"], [140, 2, 1, "", "get_large_clusters"], [140, 2, 1, "", "get_small_clusters"], [140, 5, 1, "", "refdata"], [140, 2, 1, "", "remove_cluster"], [140, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[140, 2, 1, "", "__init__"], [140, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[140, 2, 1, "", "__init__"]], "dipy.segment.clustering.Metric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"], [140, 3, 1, "", "feature"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.clustering.MinimumAverageDirectFlipMetric": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.clustering.QuickBundles": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "cluster"]], "dipy.segment.clustering.ResampleFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.clustering.TreeCluster": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "add"], [140, 5, 1, "", "is_leaf"], [140, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "get_clusters"], [140, 2, 1, "", "iter_preorder"], [140, 5, 1, "", "refdata"], [140, 2, 1, "", "traverse_postorder"]], "dipy.segment.clustering_algorithms": [[140, 1, 1, "", "ClusterCentroid"], [140, 1, 1, "", "ClusterMapCentroid"], [140, 3, 1, "", "DTYPE"], [140, 4, 1, "", "clusters_centroid2clustermap_centroid"], [140, 4, 1, "", "peek"], [140, 4, 1, "", "quickbundles"], [140, 4, 1, "", "quickbundlesx"]], "dipy.segment.clustering_algorithms.ClusterCentroid": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "assign"], [140, 2, 1, "", "update"]], "dipy.segment.clustering_algorithms.ClusterMapCentroid": [[140, 2, 1, "", "__init__"], [140, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed": [[140, 1, 1, "", "ClusterCentroid"], [140, 1, 1, "", "ClusterMapCentroid"], [140, 1, 1, "", "Clusters"], [140, 1, 1, "", "ClustersCentroid"], [140, 3, 1, "", "DTYPE"], [140, 1, 1, "", "QuickBundles"], [140, 1, 1, "", "QuickBundlesX"], [140, 1, 1, "", "TreeCluster"], [140, 1, 1, "", "TreeClusterMap"], [140, 4, 1, "", "evaluate_aabb_checks"]], "dipy.segment.clusteringspeed.ClusterCentroid": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "assign"], [140, 2, 1, "", "update"]], "dipy.segment.clusteringspeed.ClusterMapCentroid": [[140, 2, 1, "", "__init__"], [140, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed.Clusters": [[140, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.ClustersCentroid": [[140, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.QuickBundles": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "get_cluster_map"], [140, 2, 1, "", "get_stats"]], "dipy.segment.clusteringspeed.QuickBundlesX": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "get_stats"], [140, 2, 1, "", "get_tree_cluster_map"], [140, 2, 1, "", "insert"]], "dipy.segment.clusteringspeed.TreeCluster": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "add"], [140, 5, 1, "", "is_leaf"], [140, 2, 1, "", "return_indices"]], "dipy.segment.clusteringspeed.TreeClusterMap": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "get_clusters"], [140, 2, 1, "", "iter_preorder"], [140, 5, 1, "", "refdata"], [140, 2, 1, "", "traverse_postorder"]], "dipy.segment.featurespeed": [[140, 1, 1, "", "ArcLengthFeature"], [140, 1, 1, "", "CenterOfMassFeature"], [140, 1, 1, "", "CythonFeature"], [140, 1, 1, "", "Feature"], [140, 1, 1, "", "IdentityFeature"], [140, 1, 1, "", "MidpointFeature"], [140, 1, 1, "", "ResampleFeature"], [140, 1, 1, "", "VectorOfEndpointsFeature"], [140, 4, 1, "", "extract"], [140, 4, 1, "", "infer_shape"]], "dipy.segment.featurespeed.ArcLengthFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CenterOfMassFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CythonFeature": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "extract"], [140, 2, 1, "", "infer_shape"]], "dipy.segment.featurespeed.Feature": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "extract"], [140, 2, 1, "", "infer_shape"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.featurespeed.IdentityFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.MidpointFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.ResampleFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.VectorOfEndpointsFeature": [[140, 2, 1, "", "__init__"]], "dipy.segment.mask": [[140, 4, 1, "", "applymask"], [140, 4, 1, "", "binary_dilation"], [140, 4, 1, "", "bounding_box"], [140, 4, 1, "", "clean_cc_mask"], [140, 4, 1, "", "color_fa"], [140, 4, 1, "", "crop"], [140, 4, 1, "", "fractional_anisotropy"], [140, 4, 1, "", "generate_binary_structure"], [140, 4, 1, "", "median_filter"], [140, 4, 1, "", "median_otsu"], [140, 4, 1, "", "multi_median"], [140, 4, 1, "", "otsu"], [140, 4, 1, "", "segment_from_cfa"], [140, 4, 1, "", "warn"]], "dipy.segment.metric": [[140, 1, 1, "", "AveragePointwiseEuclideanMetric"], [140, 1, 1, "", "CosineMetric"], [140, 3, 1, "", "EuclideanMetric"], [140, 1, 1, "", "Metric"], [140, 1, 1, "", "MinimumAverageDirectFlipMetric"], [140, 1, 1, "", "SumPointwiseEuclideanMetric"], [140, 4, 1, "", "dist"], [140, 4, 1, "", "mdf"]], "dipy.segment.metric.AveragePointwiseEuclideanMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.metric.CosineMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.metric.Metric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"], [140, 3, 1, "", "feature"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.metric.MinimumAverageDirectFlipMetric": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.metric.SumPointwiseEuclideanMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.metricspeed": [[140, 1, 1, "", "AveragePointwiseEuclideanMetric"], [140, 1, 1, "", "CosineMetric"], [140, 1, 1, "", "CythonMetric"], [140, 1, 1, "", "Metric"], [140, 1, 1, "", "MinimumAverageDirectFlipMetric"], [140, 1, 1, "", "SumPointwiseEuclideanMetric"], [140, 4, 1, "", "dist"], [140, 4, 1, "", "distance_matrix"]], "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CosineMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CythonMetric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"]], "dipy.segment.metricspeed.Metric": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "are_compatible"], [140, 2, 1, "", "dist"], [140, 3, 1, "", "feature"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.SumPointwiseEuclideanMetric": [[140, 2, 1, "", "__init__"]], "dipy.segment.mrf": [[140, 1, 1, "", "ConstantObservationModel"], [140, 1, 1, "", "IteratedConditionalModes"]], "dipy.segment.mrf.ConstantObservationModel": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "initialize_param_uniform"], [140, 2, 1, "", "negloglikelihood"], [140, 2, 1, "", "prob_image"], [140, 2, 1, "", "seg_stats"], [140, 2, 1, "", "update_param"]], "dipy.segment.mrf.IteratedConditionalModes": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "icm_ising"], [140, 2, 1, "", "initialize_maximum_likelihood"], [140, 2, 1, "", "prob_neighborhood"]], "dipy.segment.threshold": [[140, 4, 1, "", "otsu"], [140, 4, 1, "", "upper_bound_by_percent"], [140, 4, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[140, 1, 1, "", "ConstantObservationModel"], [140, 1, 1, "", "IteratedConditionalModes"], [140, 1, 1, "", "TissueClassifierHMRF"], [140, 4, 1, "", "add_noise"]], "dipy.segment.tissue.ConstantObservationModel": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "initialize_param_uniform"], [140, 2, 1, "", "negloglikelihood"], [140, 2, 1, "", "prob_image"], [140, 2, 1, "", "seg_stats"], [140, 2, 1, "", "update_param"]], "dipy.segment.tissue.IteratedConditionalModes": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "icm_ising"], [140, 2, 1, "", "initialize_maximum_likelihood"], [140, 2, 1, "", "prob_neighborhood"]], "dipy.segment.tissue.TissueClassifierHMRF": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "classify"]], "dipy.sims": [[141, 0, 0, "-", "phantom"], [141, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[141, 4, 1, "", "add_noise"], [141, 4, 1, "", "diff2eigenvectors"], [141, 4, 1, "", "get_fnames"], [141, 4, 1, "", "gradient_table"], [141, 4, 1, "", "orbital_phantom"], [141, 4, 1, "", "single_tensor"], [141, 4, 1, "", "vec2vec_rotmat"]], "dipy.sims.voxel": [[141, 1, 1, "", "GradientTable"], [141, 4, 1, "", "add_noise"], [141, 4, 1, "", "all_tensor_evecs"], [141, 4, 1, "", "callaghan_perpendicular"], [141, 4, 1, "", "cylinders_and_ball_soderman"], [141, 4, 1, "", "dki_design_matrix"], [141, 4, 1, "", "dki_signal"], [141, 4, 1, "", "dot"], [141, 4, 1, "", "gaussian_parallel"], [141, 4, 1, "", "kurtosis_element"], [141, 4, 1, "", "multi_tensor"], [141, 4, 1, "", "multi_tensor_dki"], [141, 4, 1, "", "multi_tensor_msd"], [141, 4, 1, "", "multi_tensor_odf"], [141, 4, 1, "", "multi_tensor_pdf"], [141, 4, 1, "", "multi_tensor_rtop"], [141, 4, 1, "", "single_tensor"], [141, 4, 1, "", "single_tensor_msd"], [141, 4, 1, "", "single_tensor_odf"], [141, 4, 1, "", "single_tensor_pdf"], [141, 4, 1, "", "single_tensor_rtop"], [141, 4, 1, "", "sphere2cart"], [141, 4, 1, "", "sticks_and_ball"], [141, 4, 1, "", "vec2vec_rotmat"]], "dipy.sims.voxel.GradientTable": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "b0s_mask"], [141, 2, 1, "", "bvals"], [141, 2, 1, "", "bvecs"], [141, 2, 1, "", "gradient_strength"], [141, 5, 1, "", "info"], [141, 2, 1, "", "qvals"], [141, 2, 1, "", "tau"]], "dipy.stats": [[142, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[142, 1, 1, "", "AveragePointwiseEuclideanMetric"], [142, 1, 1, "", "QuickBundles"], [142, 3, 1, "", "Streamlines"], [142, 4, 1, "", "afq_profile"], [142, 4, 1, "", "anatomical_measures"], [142, 4, 1, "", "assignment_map"], [142, 1, 1, "", "cKDTree"], [142, 4, 1, "", "gaussian_weights"], [142, 4, 1, "", "mahalanobis"], [142, 4, 1, "", "map_coordinates"], [142, 4, 1, "", "optional_package"], [142, 4, 1, "", "orient_by_streamline"], [142, 4, 1, "", "peak_values"], [142, 4, 1, "", "save_buan_profiles_hdf5"], [142, 4, 1, "", "set_number_of_points"], [142, 4, 1, "", "values_from_volume"]], "dipy.stats.analysis.AveragePointwiseEuclideanMetric": [[142, 2, 1, "", "__init__"]], "dipy.stats.analysis.QuickBundles": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "cluster"]], "dipy.stats.analysis.cKDTree": [[142, 2, 1, "", "__init__"], [142, 3, 1, "", "boxsize"], [142, 2, 1, "", "count_neighbors"], [142, 3, 1, "", "data"], [142, 3, 1, "", "indices"], [142, 3, 1, "", "leafsize"], [142, 3, 1, "", "m"], [142, 3, 1, "", "maxes"], [142, 3, 1, "", "mins"], [142, 3, 1, "", "n"], [142, 2, 1, "", "query"], [142, 2, 1, "", "query_ball_point"], [142, 2, 1, "", "query_ball_tree"], [142, 2, 1, "", "query_pairs"], [142, 3, 1, "", "size"], [142, 2, 1, "", "sparse_distance_matrix"], [142, 3, 1, "", "tree"]], "dipy.tracking": [[143, 3, 1, "", "Streamlines"], [143, 0, 0, "-", "_utils"], [143, 4, 1, "", "bench"], [143, 0, 0, "-", "benchmarks"], [143, 0, 0, "-", "direction_getter"], [143, 0, 0, "-", "distances"], [143, 0, 0, "-", "fbcmeasures"], [143, 0, 0, "-", "learning"], [143, 0, 0, "-", "life"], [143, 0, 0, "-", "local_tracking"], [143, 0, 0, "-", "localtrack"], [143, 0, 0, "-", "mesh"], [143, 0, 0, "-", "metrics"], [143, 0, 0, "-", "propspeed"], [143, 0, 0, "-", "stopping_criterion"], [143, 0, 0, "-", "streamline"], [143, 0, 0, "-", "streamlinespeed"], [143, 4, 1, "", "test"], [143, 0, 0, "-", "utils"], [143, 0, 0, "-", "vox2track"]], "dipy.tracking.benchmarks": [[143, 0, 0, "-", "bench_streamline"]], "dipy.tracking.benchmarks.bench_streamline": [[143, 3, 1, "", "Streamlines"], [143, 4, 1, "", "assert_array_almost_equal"], [143, 4, 1, "", "assert_array_equal"], [143, 4, 1, "", "bench_compress_streamlines"], [143, 4, 1, "", "bench_length"], [143, 4, 1, "", "bench_set_number_of_points"], [143, 4, 1, "", "generate_streamlines"], [143, 4, 1, "", "get_fnames"], [143, 4, 1, "", "length"], [143, 4, 1, "", "length_python"], [143, 4, 1, "", "load_tractogram"], [143, 4, 1, "", "measure"], [143, 4, 1, "", "set_number_of_points"], [143, 4, 1, "", "set_number_of_points_python"], [143, 4, 1, "", "setup"]], "dipy.tracking.direction_getter": [[143, 1, 1, "", "DirectionGetter"]], "dipy.tracking.direction_getter.DirectionGetter": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "generate_streamline"], [143, 2, 1, "", "get_direction"], [143, 2, 1, "", "initial_direction"]], "dipy.tracking.distances": [[143, 4, 1, "", "add_3vecs"], [143, 4, 1, "", "approx_polygon_track"], [143, 4, 1, "", "approximate_mdl_trajectory"], [143, 4, 1, "", "bundles_distances_mam"], [143, 4, 1, "", "bundles_distances_mdf"], [143, 4, 1, "", "cut_plane"], [143, 4, 1, "", "inner_3vecs"], [143, 4, 1, "", "intersect_segment_cylinder"], [143, 4, 1, "", "larch_3merge"], [143, 4, 1, "", "larch_3split"], [143, 4, 1, "", "lee_angle_distance"], [143, 4, 1, "", "lee_perpendicular_distance"], [143, 4, 1, "", "local_skeleton_clustering"], [143, 4, 1, "", "local_skeleton_clustering_3pts"], [143, 4, 1, "", "mam_distances"], [143, 4, 1, "", "minimum_closest_distance"], [143, 4, 1, "", "most_similar_track_mam"], [143, 4, 1, "", "mul_3vec"], [143, 4, 1, "", "mul_3vecs"], [143, 4, 1, "", "norm_3vec"], [143, 4, 1, "", "normalized_3vec"], [143, 4, 1, "", "point_segment_sq_distance"], [143, 4, 1, "", "point_track_sq_distance_check"], [143, 4, 1, "", "sub_3vecs"], [143, 4, 1, "", "track_dist_3pts"], [143, 4, 1, "", "track_roi_intersection_check"], [143, 4, 1, "", "warn"]], "dipy.tracking.fbcmeasures": [[143, 1, 1, "", "FBCMeasures"], [143, 1, 1, "", "KDTree"], [143, 4, 1, "", "compute_rfbc"], [143, 4, 1, "", "determine_num_threads"], [143, 1, 1, "", "interp1d"], [143, 4, 1, "", "min_moving_average"]], "dipy.tracking.fbcmeasures.FBCMeasures": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "get_points_rfbc_thresholded"]], "dipy.tracking.fbcmeasures.KDTree": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "count_neighbors"], [143, 1, 1, "", "innernode"], [143, 1, 1, "", "leafnode"], [143, 1, 1, "", "node"], [143, 2, 1, "", "query"], [143, 2, 1, "", "query_ball_point"], [143, 2, 1, "", "query_ball_tree"], [143, 2, 1, "", "query_pairs"], [143, 2, 1, "", "sparse_distance_matrix"], [143, 5, 1, "", "tree"]], "dipy.tracking.fbcmeasures.KDTree.innernode": [[143, 5, 1, "", "children"], [143, 5, 1, "", "split"], [143, 5, 1, "", "split_dim"]], "dipy.tracking.fbcmeasures.KDTree.leafnode": [[143, 5, 1, "", "children"], [143, 5, 1, "", "idx"]], "dipy.tracking.fbcmeasures.interp1d": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "dtype"], [143, 5, 1, "", "fill_value"]], "dipy.tracking.learning": [[143, 4, 1, "", "detect_corresponding_tracks"], [143, 4, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[143, 1, 1, "", "FiberFit"], [143, 1, 1, "", "FiberModel"], [143, 1, 1, "", "LifeSignalMaker"], [143, 1, 1, "", "ReconstFit"], [143, 1, 1, "", "ReconstModel"], [143, 4, 1, "", "grad_tensor"], [143, 4, 1, "", "gradient"], [143, 4, 1, "", "streamline_gradients"], [143, 4, 1, "", "streamline_signal"], [143, 4, 1, "", "streamline_tensors"], [143, 4, 1, "", "transform_streamlines"], [143, 4, 1, "", "unique_rows"], [143, 4, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "fit"], [143, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "calc_signal"], [143, 2, 1, "", "streamline_signal"]], "dipy.tracking.life.ReconstFit": [[143, 2, 1, "", "__init__"]], "dipy.tracking.life.ReconstModel": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "fit"]], "dipy.tracking.local_tracking": [[143, 1, 1, "", "AnatomicalStoppingCriterion"], [143, 1, 1, "", "Iterable"], [143, 1, 1, "", "LocalTracking"], [143, 1, 1, "", "ParticleFilteringTracking"], [143, 1, 1, "", "StreamlineStatus"], [143, 4, 1, "", "local_tracker"], [143, 4, 1, "", "pft_tracker"]], "dipy.tracking.local_tracking.AnatomicalStoppingCriterion": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "from_pve"], [143, 2, 1, "", "get_exclude"], [143, 2, 1, "", "get_include"]], "dipy.tracking.local_tracking.Iterable": [[143, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.LocalTracking": [[143, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[143, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.StreamlineStatus": [[143, 3, 1, "", "ENDPOINT"], [143, 3, 1, "", "INVALIDPOINT"], [143, 3, 1, "", "OUTSIDEIMAGE"], [143, 3, 1, "", "PYERROR"], [143, 3, 1, "", "TRACKPOINT"], [143, 2, 1, "", "__init__"]], "dipy.tracking.localtrack": [[143, 4, 1, "", "local_tracker"], [143, 4, 1, "", "pft_tracker"], [143, 4, 1, "", "random"]], "dipy.tracking.mesh": [[143, 4, 1, "", "random_coordinates_from_surface"], [143, 4, 1, "", "seeds_from_surface_coordinates"], [143, 4, 1, "", "triangles_area"], [143, 4, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[143, 4, 1, "", "arbitrarypoint"], [143, 4, 1, "", "bytes"], [143, 4, 1, "", "center_of_mass"], [143, 4, 1, "", "deprecate_with_version"], [143, 4, 1, "", "downsample"], [143, 4, 1, "", "endpoint"], [143, 4, 1, "", "frenet_serret"], [143, 4, 1, "", "generate_combinations"], [143, 4, 1, "", "inside_sphere"], [143, 4, 1, "", "inside_sphere_points"], [143, 4, 1, "", "intersect_sphere"], [143, 4, 1, "", "length"], [143, 4, 1, "", "longest_track_bundle"], [143, 4, 1, "", "magn"], [143, 4, 1, "", "mean_curvature"], [143, 4, 1, "", "mean_orientation"], [143, 4, 1, "", "midpoint"], [143, 4, 1, "", "midpoint2point"], [143, 4, 1, "", "principal_components"], [143, 4, 1, "", "set_number_of_points"], [143, 4, 1, "", "splev"], [143, 4, 1, "", "spline"], [143, 4, 1, "", "splprep"], [143, 4, 1, "", "startpoint"], [143, 4, 1, "", "winding"]], "dipy.tracking.propspeed": [[143, 4, 1, "", "eudx_both_directions"], [143, 4, 1, "", "ndarray_offset"]], "dipy.tracking.stopping_criterion": [[143, 1, 1, "", "ActStoppingCriterion"], [143, 1, 1, "", "AnatomicalStoppingCriterion"], [143, 1, 1, "", "BinaryStoppingCriterion"], [143, 1, 1, "", "CmcStoppingCriterion"], [143, 1, 1, "", "StoppingCriterion"], [143, 1, 1, "", "StreamlineStatus"], [143, 1, 1, "", "ThresholdStoppingCriterion"]], "dipy.tracking.stopping_criterion.ActStoppingCriterion": [[143, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "from_pve"], [143, 2, 1, "", "get_exclude"], [143, 2, 1, "", "get_include"]], "dipy.tracking.stopping_criterion.BinaryStoppingCriterion": [[143, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.CmcStoppingCriterion": [[143, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.StoppingCriterion": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "check_point"]], "dipy.tracking.stopping_criterion.StreamlineStatus": [[143, 3, 1, "", "ENDPOINT"], [143, 3, 1, "", "INVALIDPOINT"], [143, 3, 1, "", "OUTSIDEIMAGE"], [143, 3, 1, "", "PYERROR"], [143, 3, 1, "", "TRACKPOINT"], [143, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion": [[143, 2, 1, "", "__init__"]], "dipy.tracking.streamline": [[143, 3, 1, "", "Streamlines"], [143, 4, 1, "", "apply_affine"], [143, 4, 1, "", "bundles_distances_mdf"], [143, 4, 1, "", "cdist"], [143, 4, 1, "", "center_streamlines"], [143, 4, 1, "", "cluster_confidence"], [143, 4, 1, "", "deepcopy"], [143, 4, 1, "", "deform_streamlines"], [143, 4, 1, "", "dist_to_corner"], [143, 4, 1, "", "interpolate_scalar_3d"], [143, 4, 1, "", "interpolate_vector_3d"], [143, 4, 1, "", "length"], [143, 4, 1, "", "nbytes"], [143, 4, 1, "", "orient_by_rois"], [143, 4, 1, "", "orient_by_streamline"], [143, 4, 1, "", "relist_streamlines"], [143, 4, 1, "", "select_by_rois"], [143, 4, 1, "", "select_random_set_of_streamlines"], [143, 4, 1, "", "set_number_of_points"], [143, 4, 1, "", "transform_streamlines"], [143, 4, 1, "", "unlist_streamlines"], [143, 4, 1, "", "values_from_volume"], [143, 4, 1, "", "warn"]], "dipy.tracking.streamlinespeed": [[143, 3, 1, "", "Streamlines"], [143, 4, 1, "", "compress_streamlines"], [143, 4, 1, "", "length"], [143, 4, 1, "", "set_number_of_points"]], "dipy.tracking.utils": [[143, 1, 1, "", "OrderedDict"], [143, 4, 1, "", "apply_affine"], [143, 4, 1, "", "cdist"], [143, 1, 1, "", "combinations"], [143, 4, 1, "", "connectivity_matrix"], [143, 1, 1, "", "defaultdict"], [143, 4, 1, "", "density_map"], [143, 4, 1, "", "dist_to_corner"], [143, 1, 1, "", "groupby"], [143, 4, 1, "", "length"], [143, 4, 1, "", "max_angle_from_curvature"], [143, 4, 1, "", "min_radius_curvature_from_angle"], [143, 4, 1, "", "minimum_at"], [143, 4, 1, "", "ndbincount"], [143, 4, 1, "", "near_roi"], [143, 4, 1, "", "path_length"], [143, 4, 1, "", "random_seeds_from_mask"], [143, 4, 1, "", "reduce_labels"], [143, 4, 1, "", "reduce_rois"], [143, 4, 1, "", "seeds_from_mask"], [143, 4, 1, "", "streamline_near_roi"], [143, 4, 1, "", "subsegment"], [143, 4, 1, "", "target"], [143, 4, 1, "", "target_line_based"], [143, 4, 1, "", "transform_tracking_output"], [143, 4, 1, "", "unique_rows"], [143, 4, 1, "", "warn"], [143, 4, 1, "", "wraps"]], "dipy.tracking.utils.OrderedDict": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "clear"], [143, 2, 1, "", "copy"], [143, 2, 1, "", "fromkeys"], [143, 2, 1, "", "items"], [143, 2, 1, "", "keys"], [143, 2, 1, "", "move_to_end"], [143, 2, 1, "", "pop"], [143, 2, 1, "", "popitem"], [143, 2, 1, "", "setdefault"], [143, 2, 1, "", "update"], [143, 2, 1, "", "values"]], "dipy.tracking.utils.combinations": [[143, 2, 1, "", "__init__"]], "dipy.tracking.utils.defaultdict": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "copy"], [143, 3, 1, "", "default_factory"]], "dipy.tracking.utils.groupby": [[143, 2, 1, "", "__init__"]], "dipy.tracking.vox2track": [[143, 4, 1, "", "streamline_mapping"], [143, 4, 1, "", "track_counts"]], "dipy.viz": [[144, 0, 0, "-", "app"], [144, 4, 1, "", "fetch_viz_icons"], [144, 0, 0, "-", "gmem"], [144, 4, 1, "", "optional_package"], [144, 0, 0, "-", "panel"], [144, 0, 0, "-", "plotting"], [144, 0, 0, "-", "projections"], [144, 4, 1, "", "read_viz_icons"], [144, 0, 0, "-", "regtools"], [144, 0, 0, "-", "streamline"]], "dipy.viz.app": [[144, 1, 1, "", "GlobalHorizon"], [144, 1, 1, "", "Horizon"], [144, 1, 1, "", "Space"], [144, 1, 1, "", "StatefulTractogram"], [144, 3, 1, "", "Streamlines"], [144, 4, 1, "", "apply_shader"], [144, 4, 1, "", "build_label"], [144, 4, 1, "", "distinguishable_colormap"], [144, 4, 1, "", "horizon"], [144, 4, 1, "", "length"], [144, 4, 1, "", "optional_package"], [144, 4, 1, "", "qbx_and_merge"], [144, 4, 1, "", "save_tractogram"], [144, 4, 1, "", "setup_module"], [144, 4, 1, "", "slicer_panel"]], "dipy.viz.app.GlobalHorizon": [[144, 2, 1, "", "__init__"]], "dipy.viz.app.Horizon": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "add_cluster_actors"], [144, 2, 1, "", "build_scene"], [144, 2, 1, "", "build_show"], [144, 2, 1, "", "remove_cluster_actors"]], "dipy.viz.app.Space": [[144, 3, 1, "", "RASMM"], [144, 3, 1, "", "VOX"], [144, 3, 1, "", "VOXMM"], [144, 2, 1, "", "__init__"]], "dipy.viz.app.StatefulTractogram": [[144, 2, 1, "", "__init__"], [144, 5, 1, "", "affine"], [144, 2, 1, "", "are_compatible"], [144, 2, 1, "", "compute_bounding_box"], [144, 5, 1, "", "data_per_point"], [144, 5, 1, "", "data_per_streamline"], [144, 5, 1, "", "dimensions"], [144, 2, 1, "", "from_sft"], [144, 2, 1, "", "get_data_per_point_keys"], [144, 2, 1, "", "get_data_per_streamline_keys"], [144, 2, 1, "", "get_streamlines_copy"], [144, 2, 1, "", "is_bbox_in_vox_valid"], [144, 5, 1, "", "origin"], [144, 2, 1, "", "remove_invalid_streamlines"], [144, 5, 1, "", "space"], [144, 5, 1, "", "space_attributes"], [144, 5, 1, "", "streamlines"], [144, 2, 1, "", "to_center"], [144, 2, 1, "", "to_corner"], [144, 2, 1, "", "to_origin"], [144, 2, 1, "", "to_rasmm"], [144, 2, 1, "", "to_space"], [144, 2, 1, "", "to_vox"], [144, 2, 1, "", "to_voxmm"], [144, 5, 1, "", "voxel_order"], [144, 5, 1, "", "voxel_sizes"]], "dipy.viz.gmem": [[144, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[144, 2, 1, "", "__init__"]], "dipy.viz.panel": [[144, 1, 1, "", "GlobalHorizon"], [144, 4, 1, "", "build_label"], [144, 4, 1, "", "optional_package"], [144, 4, 1, "", "setup_module"], [144, 4, 1, "", "slicer_panel"]], "dipy.viz.panel.GlobalHorizon": [[144, 2, 1, "", "__init__"]], "dipy.viz.plotting": [[144, 4, 1, "", "compare_maps"], [144, 4, 1, "", "compare_qti_maps"], [144, 4, 1, "", "optional_package"], [144, 4, 1, "", "warn"]], "dipy.viz.projections": [[144, 4, 1, "", "doctest_skip_parser"], [144, 4, 1, "", "optional_package"], [144, 4, 1, "", "setup_module"], [144, 4, 1, "", "sph_project"]], "dipy.viz.regtools": [[144, 4, 1, "", "draw_lattice_2d"], [144, 4, 1, "", "optional_package"], [144, 4, 1, "", "overlay_images"], [144, 4, 1, "", "overlay_slices"], [144, 4, 1, "", "plot_2d_diffeomorphic_map"], [144, 4, 1, "", "plot_slices"], [144, 4, 1, "", "setup_module"], [144, 4, 1, "", "simple_plot"]], "dipy.viz.streamline": [[144, 4, 1, "", "optional_package"], [144, 4, 1, "", "show_bundles"]], "dipy.workflows": [[145, 0, 0, "-", "align"], [145, 0, 0, "-", "base"], [145, 0, 0, "-", "combined_workflow"], [145, 0, 0, "-", "denoise"], [145, 0, 0, "-", "docstring_parser"], [145, 0, 0, "-", "flow_runner"], [145, 0, 0, "-", "io"], [145, 0, 0, "-", "mask"], [145, 0, 0, "-", "multi_io"], [145, 0, 0, "-", "reconst"], [145, 0, 0, "-", "segment"], [145, 0, 0, "-", "stats"], [145, 0, 0, "-", "tracking"], [145, 0, 0, "-", "viz"], [145, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[145, 1, 1, "", "AffineMap"], [145, 1, 1, "", "ApplyTransformFlow"], [145, 1, 1, "", "CCMetric"], [145, 1, 1, "", "DiffeomorphicMap"], [145, 1, 1, "", "EMMetric"], [145, 1, 1, "", "ImageRegistrationFlow"], [145, 1, 1, "", "MotionCorrectionFlow"], [145, 1, 1, "", "ResliceFlow"], [145, 1, 1, "", "SSDMetric"], [145, 1, 1, "", "SlrWithQbxFlow"], [145, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [145, 1, 1, "", "SynRegistrationFlow"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "affine_registration"], [145, 4, 1, "", "check_dimensions"], [145, 4, 1, "", "gradient_table"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "read_bvals_bvecs"], [145, 4, 1, "", "reslice"], [145, 4, 1, "", "save_nifti"], [145, 4, 1, "", "save_qa_metric"], [145, 4, 1, "", "slr_with_qbx"], [145, 4, 1, "", "transform_streamlines"], [145, 4, 1, "", "warn"]], "dipy.workflows.align.AffineMap": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_affine"], [145, 2, 1, "", "set_affine"], [145, 2, 1, "", "transform"], [145, 2, 1, "", "transform_inverse"]], "dipy.workflows.align.ApplyTransformFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "run"]], "dipy.workflows.align.CCMetric": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "compute_backward"], [145, 2, 1, "", "compute_forward"], [145, 2, 1, "", "free_iteration"], [145, 2, 1, "", "get_energy"], [145, 2, 1, "", "initialize_iteration"]], "dipy.workflows.align.DiffeomorphicMap": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "allocate"], [145, 2, 1, "", "compute_inversion_error"], [145, 2, 1, "", "expand_fields"], [145, 2, 1, "", "get_backward_field"], [145, 2, 1, "", "get_forward_field"], [145, 2, 1, "", "get_simplified_transform"], [145, 2, 1, "", "interpret_matrix"], [145, 2, 1, "", "inverse"], [145, 2, 1, "", "shallow_copy"], [145, 2, 1, "", "transform"], [145, 2, 1, "", "transform_inverse"], [145, 2, 1, "", "transform_points"], [145, 2, 1, "", "transform_points_inverse"], [145, 2, 1, "", "warp_endomorphism"]], "dipy.workflows.align.EMMetric": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "compute_backward"], [145, 2, 1, "", "compute_demons_step"], [145, 2, 1, "", "compute_forward"], [145, 2, 1, "", "compute_gauss_newton_step"], [145, 2, 1, "", "free_iteration"], [145, 2, 1, "", "get_energy"], [145, 2, 1, "", "initialize_iteration"], [145, 2, 1, "", "use_moving_image_dynamics"], [145, 2, 1, "", "use_static_image_dynamics"]], "dipy.workflows.align.ImageRegistrationFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.align.SSDMetric": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "compute_backward"], [145, 2, 1, "", "compute_demons_step"], [145, 2, 1, "", "compute_forward"], [145, 2, 1, "", "compute_gauss_newton_step"], [145, 2, 1, "", "free_iteration"], [145, 2, 1, "", "get_energy"], [145, 2, 1, "", "initialize_iteration"]], "dipy.workflows.align.SlrWithQbxFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.align.SymmetricDiffeomorphicRegistration": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_map"], [145, 2, 1, "", "optimize"], [145, 2, 1, "", "update"]], "dipy.workflows.align.SynRegistrationFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "run"]], "dipy.workflows.align.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.base": [[145, 1, 1, "", "IntrospectiveArgumentParser"], [145, 1, 1, "", "NumpyDocString"], [145, 4, 1, "", "get_args_default"], [145, 4, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "add_description"], [145, 2, 1, "", "add_epilogue"], [145, 2, 1, "", "add_sub_flow_args"], [145, 2, 1, "", "add_workflow"], [145, 2, 1, "", "get_flow_args"], [145, 5, 1, "", "optional_parameters"], [145, 5, 1, "", "output_parameters"], [145, 5, 1, "", "positional_parameters"], [145, 2, 1, "", "show_argument"], [145, 2, 1, "", "update_argument"]], "dipy.workflows.base.NumpyDocString": [[145, 2, 1, "", "__init__"]], "dipy.workflows.combined_workflow": [[145, 1, 1, "", "CombinedWorkflow"], [145, 1, 1, "", "Workflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_optionals"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "run_sub_flow"], [145, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.combined_workflow.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise": [[145, 1, 1, "", "GibbsRingingFlow"], [145, 1, 1, "", "LPCAFlow"], [145, 1, 1, "", "MPPCAFlow"], [145, 1, 1, "", "NLMeansFlow"], [145, 1, 1, "", "Patch2SelfFlow"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "deprecated_params"], [145, 4, 1, "", "estimate_sigma"], [145, 4, 1, "", "gibbs_removal"], [145, 4, 1, "", "gradient_table"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "localpca"], [145, 4, 1, "", "mppca"], [145, 4, 1, "", "nlmeans"], [145, 4, 1, "", "patch2self"], [145, 4, 1, "", "pca_noise_estimate"], [145, 4, 1, "", "read_bvals_bvecs"], [145, 4, 1, "", "save_nifti"]], "dipy.workflows.denoise.GibbsRingingFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.denoise.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[145, 1, 1, "", "NumpyDocString"], [145, 1, 1, "", "Reader"], [145, 4, 1, "", "dedent_lines"], [145, 4, 1, "", "warn"]], "dipy.workflows.docstring_parser.NumpyDocString": [[145, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "eof"], [145, 2, 1, "", "is_empty"], [145, 2, 1, "", "peek"], [145, 2, 1, "", "read"], [145, 2, 1, "", "read_to_condition"], [145, 2, 1, "", "read_to_next_empty_line"], [145, 2, 1, "", "read_to_next_unindented_line"], [145, 2, 1, "", "reset"], [145, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[145, 1, 1, "", "IntrospectiveArgumentParser"], [145, 4, 1, "", "get_level"], [145, 4, 1, "", "run_flow"]], "dipy.workflows.flow_runner.IntrospectiveArgumentParser": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "add_description"], [145, 2, 1, "", "add_epilogue"], [145, 2, 1, "", "add_sub_flow_args"], [145, 2, 1, "", "add_workflow"], [145, 2, 1, "", "get_flow_args"], [145, 5, 1, "", "optional_parameters"], [145, 5, 1, "", "output_parameters"], [145, 5, 1, "", "positional_parameters"], [145, 2, 1, "", "show_argument"], [145, 2, 1, "", "update_argument"]], "dipy.workflows.io": [[145, 1, 1, "", "FetchFlow"], [145, 1, 1, "", "IoInfoFlow"], [145, 1, 1, "", "SplitFlow"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "getmembers"], [145, 4, 1, "", "isfunction"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "save_nifti"]], "dipy.workflows.io.FetchFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_fetcher_datanames"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "load_module"], [145, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.io.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.mask": [[145, 1, 1, "", "MaskFlow"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "save_nifti"]], "dipy.workflows.mask.MaskFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.mask.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[145, 1, 1, "", "IOIterator"], [145, 4, 1, "", "basename_without_extension"], [145, 4, 1, "", "common_start"], [145, 4, 1, "", "concatenate_inputs"], [145, 4, 1, "", "connect_output_paths"], [145, 4, 1, "", "get_args_default"], [145, 4, 1, "", "glob"], [145, 4, 1, "", "io_iterator"], [145, 4, 1, "", "io_iterator_"], [145, 4, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "create_directories"], [145, 2, 1, "", "create_outputs"], [145, 2, 1, "", "file_existence_check"], [145, 2, 1, "", "set_inputs"], [145, 2, 1, "", "set_out_dir"], [145, 2, 1, "", "set_out_fnames"], [145, 2, 1, "", "set_output_keys"]], "dipy.workflows.reconst": [[145, 1, 1, "", "ConstrainedSphericalDeconvModel"], [145, 1, 1, "", "CsaOdfModel"], [145, 1, 1, "", "DiffusionKurtosisModel"], [145, 4, 1, "", "IvimModel"], [145, 1, 1, "", "ReconstCSAFlow"], [145, 1, 1, "", "ReconstCSDFlow"], [145, 1, 1, "", "ReconstDkiFlow"], [145, 1, 1, "", "ReconstDtiFlow"], [145, 1, 1, "", "ReconstIvimFlow"], [145, 1, 1, "", "ReconstMAPMRIFlow"], [145, 1, 1, "", "ReconstRUMBAFlow"], [145, 1, 1, "", "RumbaSDModel"], [145, 1, 1, "", "TensorModel"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "auto_response_ssst"], [145, 4, 1, "", "axial_diffusivity"], [145, 4, 1, "", "color_fa"], [145, 4, 1, "", "deprecated_params"], [145, 4, 1, "", "fractional_anisotropy"], [145, 4, 1, "", "geodesic_anisotropy"], [145, 4, 1, "", "get_mode"], [145, 4, 1, "", "get_sphere"], [145, 4, 1, "", "gradient_table"], [145, 4, 1, "", "literal_eval"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "load_nifti_data"], [145, 4, 1, "", "lower_triangular"], [145, 4, 1, "", "mean_diffusivity"], [145, 4, 1, "", "nifti1_symmat"], [145, 4, 1, "", "peaks_from_model"], [145, 4, 1, "", "peaks_to_niftis"], [145, 4, 1, "", "radial_diffusivity"], [145, 4, 1, "", "read_bvals_bvecs"], [145, 4, 1, "", "save_nifti"], [145, 4, 1, "", "save_peaks"], [145, 4, 1, "", "split_dki_param"], [145, 4, 1, "", "warn"]], "dipy.workflows.reconst.ConstrainedSphericalDeconvModel": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "predict"]], "dipy.workflows.reconst.CsaOdfModel": [[145, 2, 1, "", "__init__"], [145, 3, 1, "", "max"], [145, 3, 1, "", "min"]], "dipy.workflows.reconst.DiffusionKurtosisModel": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "predict"]], "dipy.workflows.reconst.ReconstCSAFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_fitted_tensor"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_fitted_tensor"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_fitted_ivim"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.reconst.RumbaSDModel": [[145, 2, 1, "", "__init__"]], "dipy.workflows.reconst.TensorModel": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "predict"]], "dipy.workflows.reconst.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.segment": [[145, 1, 1, "", "LabelsBundlesFlow"], [145, 1, 1, "", "MedianOtsuFlow"], [145, 1, 1, "", "RecoBundles"], [145, 1, 1, "", "RecoBundlesFlow"], [145, 1, 1, "", "Space"], [145, 1, 1, "", "StatefulTractogram"], [145, 3, 1, "", "Streamlines"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "load_tractogram"], [145, 4, 1, "", "median_otsu"], [145, 4, 1, "", "save_nifti"], [145, 4, 1, "", "save_tractogram"], [145, 4, 1, "", "time"]], "dipy.workflows.segment.LabelsBundlesFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundles": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "evaluate_results"], [145, 2, 1, "", "recognize"], [145, 2, 1, "", "refine"]], "dipy.workflows.segment.RecoBundlesFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.segment.Space": [[145, 3, 1, "", "RASMM"], [145, 3, 1, "", "VOX"], [145, 3, 1, "", "VOXMM"], [145, 2, 1, "", "__init__"]], "dipy.workflows.segment.StatefulTractogram": [[145, 2, 1, "", "__init__"], [145, 5, 1, "", "affine"], [145, 2, 1, "", "are_compatible"], [145, 2, 1, "", "compute_bounding_box"], [145, 5, 1, "", "data_per_point"], [145, 5, 1, "", "data_per_streamline"], [145, 5, 1, "", "dimensions"], [145, 2, 1, "", "from_sft"], [145, 2, 1, "", "get_data_per_point_keys"], [145, 2, 1, "", "get_data_per_streamline_keys"], [145, 2, 1, "", "get_streamlines_copy"], [145, 2, 1, "", "is_bbox_in_vox_valid"], [145, 5, 1, "", "origin"], [145, 2, 1, "", "remove_invalid_streamlines"], [145, 5, 1, "", "space"], [145, 5, 1, "", "space_attributes"], [145, 5, 1, "", "streamlines"], [145, 2, 1, "", "to_center"], [145, 2, 1, "", "to_corner"], [145, 2, 1, "", "to_origin"], [145, 2, 1, "", "to_rasmm"], [145, 2, 1, "", "to_space"], [145, 2, 1, "", "to_vox"], [145, 2, 1, "", "to_voxmm"], [145, 5, 1, "", "voxel_order"], [145, 5, 1, "", "voxel_sizes"]], "dipy.workflows.segment.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.stats": [[145, 1, 1, "", "BundleAnalysisTractometryFlow"], [145, 1, 1, "", "BundleShapeAnalysis"], [145, 1, 1, "", "LinearMixedModelsFlow"], [145, 1, 1, "", "SNRinCCFlow"], [145, 1, 1, "", "TensorModel"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "anatomical_measures"], [145, 4, 1, "", "assignment_map"], [145, 4, 1, "", "binary_dilation"], [145, 4, 1, "", "bounding_box"], [145, 4, 1, "", "buan_bundle_profiles"], [145, 4, 1, "", "bundle_shape_similarity"], [145, 4, 1, "", "glob"], [145, 4, 1, "", "gradient_table"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "load_peaks"], [145, 4, 1, "", "load_tractogram"], [145, 4, 1, "", "optional_package"], [145, 4, 1, "", "peak_values"], [145, 4, 1, "", "read_bvals_bvecs"], [145, 4, 1, "", "save_nifti"], [145, 4, 1, "", "segment_from_cfa"], [145, 4, 1, "", "time"], [145, 4, 1, "", "transform_streamlines"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_metric_name"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"], [145, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.stats.TensorModel": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "predict"]], "dipy.workflows.stats.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.tracking": [[145, 1, 1, "", "BinaryStoppingCriterion"], [145, 1, 1, "", "ClosestPeakDirectionGetter"], [145, 1, 1, "", "CmcStoppingCriterion"], [145, 1, 1, "", "DeterministicMaximumDirectionGetter"], [145, 1, 1, "", "LocalFiberTrackingPAMFlow"], [145, 1, 1, "", "LocalTracking"], [145, 1, 1, "", "PFTrackingPAMFlow"], [145, 1, 1, "", "ParticleFilteringTracking"], [145, 1, 1, "", "ProbabilisticDirectionGetter"], [145, 1, 1, "", "Space"], [145, 1, 1, "", "StatefulTractogram"], [145, 1, 1, "", "ThresholdStoppingCriterion"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "load_peaks"], [145, 4, 1, "", "save_tractogram"]], "dipy.workflows.tracking.BinaryStoppingCriterion": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.ClosestPeakDirectionGetter": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.CmcStoppingCriterion": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.DeterministicMaximumDirectionGetter": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.tracking.LocalTracking": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.tracking.ParticleFilteringTracking": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.ProbabilisticDirectionGetter": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.Space": [[145, 3, 1, "", "RASMM"], [145, 3, 1, "", "VOX"], [145, 3, 1, "", "VOXMM"], [145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.StatefulTractogram": [[145, 2, 1, "", "__init__"], [145, 5, 1, "", "affine"], [145, 2, 1, "", "are_compatible"], [145, 2, 1, "", "compute_bounding_box"], [145, 5, 1, "", "data_per_point"], [145, 5, 1, "", "data_per_streamline"], [145, 5, 1, "", "dimensions"], [145, 2, 1, "", "from_sft"], [145, 2, 1, "", "get_data_per_point_keys"], [145, 2, 1, "", "get_data_per_streamline_keys"], [145, 2, 1, "", "get_streamlines_copy"], [145, 2, 1, "", "is_bbox_in_vox_valid"], [145, 5, 1, "", "origin"], [145, 2, 1, "", "remove_invalid_streamlines"], [145, 5, 1, "", "space"], [145, 5, 1, "", "space_attributes"], [145, 5, 1, "", "streamlines"], [145, 2, 1, "", "to_center"], [145, 2, 1, "", "to_corner"], [145, 2, 1, "", "to_origin"], [145, 2, 1, "", "to_rasmm"], [145, 2, 1, "", "to_space"], [145, 2, 1, "", "to_vox"], [145, 2, 1, "", "to_voxmm"], [145, 5, 1, "", "voxel_order"], [145, 5, 1, "", "voxel_sizes"]], "dipy.workflows.tracking.ThresholdStoppingCriterion": [[145, 2, 1, "", "__init__"]], "dipy.workflows.tracking.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.viz": [[145, 1, 1, "", "HorizonFlow"], [145, 1, 1, "", "Workflow"], [145, 4, 1, "", "assignment_map"], [145, 4, 1, "", "create_nifti_header"], [145, 4, 1, "", "horizon"], [145, 4, 1, "", "line_colors"], [145, 4, 1, "", "load_nifti"], [145, 4, 1, "", "load_peaks"], [145, 4, 1, "", "load_tractogram"], [145, 4, 1, "", "numpy_to_vtk_colors"], [145, 4, 1, "", "optional_package"], [145, 4, 1, "", "pjoin"], [145, 4, 1, "", "setup_module"]], "dipy.workflows.viz.HorizonFlow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "run"]], "dipy.workflows.viz.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]], "dipy.workflows.workflow": [[145, 1, 1, "", "Workflow"], [145, 4, 1, "", "io_iterator_"]], "dipy.workflows.workflow.Workflow": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "get_io_iterator"], [145, 2, 1, "", "get_short_name"], [145, 2, 1, "", "get_sub_runs"], [145, 2, 1, "", "manage_output_overwrite"], [145, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 146], "chang": [0, 8, 17], "dipi": [0, 5, 11, 16, 20, 22, 49, 115, 118, 123, 129, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "1": [0, 52, 70, 93, 189, 190, 191, 192, 193, 194, 195, 196], "6": [0, 185, 196], "0": [0, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "5": [0, 195], "4": [0, 193, 194], "3": [0, 23, 192], "2": [0, 23, 52, 70, 93, 191], "16": [0, 184], "15": [0, 183], "14": [0, 182], "13": [0, 181], "12": [0, 180], "10": [0, 178], "9": [0, 188], "8": [0, 187], "between": [0, 47, 66, 78, 119], "7": [0, 186], "public": 1, "A": [1, 17, 22, 125, 197], "note": [1, 100, 111, 125, 143, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "cite": 1, "our": 1, "work": [1, 16, 32], "data": [2, 66, 134], "content": [2, 106], "dataset": [2, 47, 76, 113, 115], "depend": [4, 67, 106], "code": [5, 6, 10, 16, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "style": 5, "guidelin": 5, "import": [5, 23, 143], "cython": 5, "variabl": 5, "declar": 5, "us": [5, 39, 40, 41, 51, 53, 61, 66, 67, 72, 77, 100, 106, 111, 116], "c": 5, "librari": 5, "error": 5, "return": 5, "valu": [5, 102, 104], "pointer": 5, "refer": [5, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 73, 74, 77, 79, 80, 81, 82, 84, 87, 89, 90, 91, 93, 95, 96, 98, 99, 100, 101, 112, 114, 116, 117, 119, 120, 121, 122, 131, 133, 137, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203], "cast": 5, "loop": 5, "document": [5, 25, 111], "commit": [6, 8, 17], "messag": 6, "configur": [7, 11], "git": [7, 12, 13, 15], "overview": [7, 8, 13, 18, 19, 47, 76, 85, 116, 122, 197], "In": [7, 8, 13, 18, 19, 110], "detail": [7, 8, 13, 18, 19], "user": 7, "name": 7, "email": 7, "alias": 7, "editor": 7, "merg": [7, 8], "fanci": 7, "log": 7, "output": [7, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "develop": [8, 12, 18, 20, 24], "workflow": [8, 15, 17, 36, 105, 106, 118, 145], "summari": [8, 15], "consid": 8, "delet": 8, "your": [8, 11, 19, 102, 104], "master": 8, "branch": 8, "updat": [8, 10], "mirror": 8, "trunk": [8, 17], "make": [8, 11, 18, 22], "new": [8, 36, 105], "featur": [8, 78, 80, 140, 197], "The": [8, 199, 200, 204], "edit": 8, "more": 8, "ask": [8, 107], "review": 8, "some": 8, "other": [8, 22], "thing": 8, "you": 8, "might": 8, "want": 8, "do": [8, 22], "github": [8, 11], "sever": 8, "peopl": 8, "share": 8, "singl": 8, "repositori": [8, 19], "explor": 8, "rebas": 8, "recov": 8, "from": [8, 18, 28, 102, 104, 111], "mess": 8, "up": [8, 11, 19], "rewrit": 8, "histori": [8, 17], "two": 9, "three": 9, "dot": [9, 141], "differ": [9, 80, 102], "spec": 9, "follow": 10, "latest": 10, "sourc": [10, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111], "get": [10, 49, 110, 111], "local": [10, 39, 41, 116, 122], "copi": [10, 11], "own": 11, "fork": [11, 19], "set": [11, 19], "account": 11, "creat": [11, 36, 104, 105], "instal": [13, 69, 111], "introduct": [14, 21, 94, 95, 97, 112], "resourc": 15, "tutori": 15, "advanc": [15, 101], "manual": 15, "page": 15, "onlin": 15, "maintain": 17, "integr": [17, 106], "few": 17, "long": 17, "seri": 17, "check": 17, "push": 17, "patch": 18, "move": [18, 23], "clone": 19, "link": 19, "upstream": 19, "repo": 19, "guid": 22, "releas": [22, 111, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "tool": 22, "checklist": 22, "upload": 22, "binari": [22, 75, 100], "build": [22, 111], "stuff": [22, 199], "need": 22, "keep": 23, "compat": 23, "python": [23, 110, 111, 129], "futur": 23, "print": 23, "divis": 23, "modul": [23, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rang": [23, 104], "xrang": 23, "reduc": [23, 139], "string": 23, "next": [23, 110], "function": [23, 39, 52, 60, 70], "except": 23, "dictionari": 23, "affin": [26, 27], "registr": [26, 27, 32, 33, 75, 90, 91, 106, 114, 121], "3d": [26, 73, 91], "exampl": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 125], "mask": [27, 140, 145], "extract": [28, 31, 106, 140], "afq": 28, "tract": [28, 106], "profil": [28, 113, 133], "segment": [28, 29, 106, 114, 140, 145], "bundl": [28, 30, 31, 32, 33, 34, 43, 102, 106, 113, 114, 140], "brain": [29, 106], "median_otsu": [29, 140, 145], "buan": [30, 34, 113], "assign": 30, "map": [30, 48, 57, 64, 74, 88, 106, 120], "creation": 30, "automat": 31, "fiber": [31, 43, 52, 60, 70, 106, 122], "recobundl": [31, 114, 140, 145], "groupwis": 32, "how": 32, "extend": [32, 80], "capabl": 32, "direct": [33, 93, 94, 97, 136], "shape": [34, 113], "similar": [34, 113], "score": 34, "calcul": [35, 48, 57, 74], "outlier": 35, "cluster": [35, 78, 79, 80, 81, 106, 140], "confid": 35, "index": 35, "combin": [36, 131, 143], "cross": [37, 45, 60], "preserv": 37, "contextu": [37, 106], "enhanc": [37, 80, 106], "suppress": [38, 117], "gibb": [38, 117, 135], "oscil": [38, 106, 117], "denois": [39, 40, 41, 42, 106, 116, 135, 145], "imag": [39, 40, 41, 56, 62, 66, 68, 69, 75, 84, 87, 92, 106, 110, 120, 121, 129, 137, 201], "pca": [39, 40, 116], "via": [39, 42], "empir": 39, "threshold": [39, 100, 140], "estim": [39, 40, 52, 67, 70, 84, 106], "nois": [39, 40], "standard": [39, 40], "deviat": [39, 40], "perform": 39, "localpca": [39, 135, 145], "marcenko": [40, 116], "pastur": [40, 116], "algorithm": [40, 77], "non": 41, "mean": [41, 54, 66, 106, 120], "nlmean": [41, 116, 135, 145], "patch2self": [42, 135, 145], "self": 42, "supervis": 42, "statist": [42, 106], "independ": 42, "coher": 43, "measur": [43, 139, 140, 143], "acknowledg": 43, "gradient": [44, 106, 131, 133, 137, 143], "sphere": [44, 106, 133, 134, 135, 136, 137, 139], "k": 45, "fold": 45, "valid": 45, "model": [45, 54, 55, 59, 60, 61, 64, 70, 71, 73, 93, 98, 99, 106, 138], "comparison": [45, 113], "linear": [46, 114, 139], "fascicl": [46, 71, 99, 106], "evalu": [46, 106], "life": [46, 143], "volum": [47, 102, 104, 119], "motion": [47, 63, 106, 119, 120], "correct": [47, 106, 119], "dwi": 47, "path": 48, "length": [48, 86, 131, 140, 143, 144], "start": [49, 106, 110], "reconstruct": [50, 51, 52, 53, 54, 55, 56, 59, 62, 65, 66, 68, 70, 71, 72, 106, 120], "constant": [50, 106, 120], "solid": [50, 106, 120], "angl": [50, 106, 120], "q": [50, 51, 62, 67, 68, 69, 106, 199, 201], "ball": [50, 51, 106], "parallel": [51, 53], "constrain": [52, 106, 120], "spheric": [52, 70, 72, 98, 106, 120, 139, 203, 204], "deconvolut": [52, 58, 70, 98, 106, 120], "step": [52, 70, 110], "respons": [52, 60, 70], "fodf": [52, 70], "csd": [53, 65, 93, 120], "diffus": [54, 55, 56, 59, 64, 66, 67, 73, 76, 84, 106, 110, 116, 120, 129], "signal": [54, 55, 59, 64, 66, 72, 73, 106], "kurtosi": [54, 66, 106, 120], "tensor": [54, 59, 77, 106, 120], "fraction": 54, "anisotropi": 54, "wmti": 55, "spectrum": [56, 106], "dsi": [57, 58, 106, 139], "base": [57, 70, 87, 98, 106, 114, 121, 139, 145, 203], "scalar": [57, 74], "v": 58, "invari": 60, "forecast": [60, 139], "free": [61, 106], "water": [61, 106], "elimin": 61, "remov": 61, "dti": [61, 120, 139], "contamin": 61, "gener": [62, 89, 106], "sampl": [62, 106, 201], "intravoxel": [63, 106, 120], "incoher": [63, 106, 120], "continu": [64, 73, 106], "analyt": [64, 73, 113], "mri": [64, 106, 120], "multi": 65, "shell": 65, "tissu": [65, 92, 106, 140], "msdki": [66, 139], "test": [66, 111, 129, 133, 135, 138, 139, 143], "synthet": 66, "relationship": 66, "smt2": 66, "time": [67, 106, 131, 140, 145], "space": [67, 68, 69, 106, 137, 144, 145], "indic": 67, "qt": [67, 106], "dmri": [67, 106], "trajectori": [68, 69, 106], "qti": [68, 69, 139], "theori": [68, 69, 202], "usag": [68, 69, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "appli": [69, 87, 121], "posit": [69, 89, 106, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "constraint": [69, 106], "robust": [70, 77, 98, 106], "unbias": [70, 98, 106], "spars": [71, 99, 106], "harmon": [72, 106, 203], "shore": [73, 74, 139], "diffeomorph": [75, 90, 91, 121], "fuzzi": 75, "reslic": [76, 106, 131, 145], "restor": 77, "fit": 77, "tractographi": [78, 79, 81, 89, 96, 100], "avail": [78, 79], "ident": [78, 140], "resampl": [78, 131], "center": 78, "mass": 78, "midpoint": [78, 143], "arclength": 78, "vector": 78, "endpoint": [78, 143], "metric": [79, 80, 102, 131, 140, 143], "averag": 79, "pointwis": 79, "euclidean": 79, "sum": 79, "cosin": 79, "quickbundl": [80, 81, 140, 142], "framework": [80, 113], "dki": [82, 120, 139], "multitensor": [82, 83], "simul": [82, 83, 106], "snr": [84, 106], "weight": [84, 92], "read": 85, "write": 85, "streamlin": [85, 86, 87, 102, 103, 106, 114, 121, 131, 137, 140, 142, 143, 144, 145], "file": [85, 106], "size": 86, "reduct": 86, "deform": 87, "connect": [88, 106], "matric": 88, "roi": [88, 103], "intersect": 88, "densiti": 88, "surfac": [89, 103], "seed": 89, "displai": 89, "list": 89, "symmetr": [90, 91, 106, 121], "2d": 90, "classif": [92, 106], "t1": [92, 104], "structur": [92, 116], "bootstrap": 93, "closest": [93, 122], "peak": [93, 122, 136, 137], "getter": [93, 94, 97], "an": [94, 97, 102], "determinist": [94, 122], "maximum": 94, "basic": [95, 106], "track": [95, 98, 99, 106, 122, 143, 145], "particl": [96, 122], "filter": [96, 122], "cmc": 96, "act": [96, 100], "stop": [96, 100], "criterion": [96, 100], "probabilist": [97, 122], "rumba": [98, 106, 139], "sd": [98, 106], "variou": 100, "interact": 101, "visual": [101, 102, 103, 106], "show": 102, "everi": 102, "orient": [102, 106], "color": 102, "point": 102, "default": 102, "colormap": [102, 104], "specif": [102, 104, 113], "render": [103, 104], "simpl": [104, 106], "slice": 104, "fa": 104, "mosaic": 104, "quick": [106, 197], "preprocess": 106, "axial": 106, "appar": [106, 120], "propag": [106, 120], "studi": 106, "white": [106, 114], "matter": [106, 114], "ivim": [106, 120, 139], "intra": 106, "voxel": [106, 141], "analysi": [106, 142], "multiprocess": 106, "format": 106, "frequent": 107, "question": 107, "theoret": 107, "practic": 107, "gimbal": 108, "lock": 108, "mathemat": [108, 204], "glossari": 109, "highlight": [110, 126], "announc": [110, 127], "support": [110, 111, 197], "anaconda": 111, "packag": 111, "window": 111, "osx": 111, "linux": 111, "pip": 111, "contact": 111, "u": 111, "common": 111, "problem": 111, "multipl": 111, "altern": 111, "memori": 111, "issu": 111, "version": [111, 133, 135, 137, 138, 139, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "all": 111, "oper": 111, "system": [111, 197], "unix": 111, "e": 111, "g": 111, "ubuntu": 111, "debian": 111, "fedora": 111, "mandriva": 111, "mayb": 111, "redhat": 111, "openmp": 111, "under": 111, "homebrew": 111, "org": 111, "onli": 111, "tip": 111, "troubleshoot": 111, "command": [112, 177], "line": [112, 177], "interfac": [112, 118], "group": 113, "across": 113, "popul": 113, "reproduc": 113, "result": 113, "larger": 113, "download": 115, "overcomplet": 116, "method": [116, 122], "unring": 117, "csa": 120, "transform": [121, 131], "eudx": 122, "pft": 122, "what": [123, 199], "i": 123, "mission": 124, "statement": 124, "about": [125, 199], "older": 126, "past": 127, "subpackag": 129, "util": [129, 137, 139, 143, 177], "bench": [129, 135, 138, 139, 143], "get_info": 129, "setup_test": 129, "__config__": 130, "align": [131, 145], "_public": 131, "bundlemin": 131, "crosscorr": 131, "expectmax": 131, "imaffin": 131, "imwarp": 131, "parzenhist": 131, "scalespac": 131, "streamlinear": 131, "sumsqdiff": 131, "vector_field": 131, "bunch": 131, "float": 131, "affine_registr": [131, 145], "read_map": 131, "register_dwi_seri": 131, "register_dwi_to_templ": 131, "register_seri": 131, "streamline_registr": 131, "syn_registr": 131, "write_map": 131, "affinemap": [131, 145], "affineregistr": 131, "affinetransform3d": 131, "ccmetric": [131, 145], "diffeomorphicmap": [131, 145], "emmetr": [131, 145], "mutualinformationmetr": 131, "rigidisoscalingtransform3d": 131, "rigidscalingtransform3d": 131, "rigidtransform3d": 131, "ssdmetric": [131, 145], "streamlinelinearregistr": [131, 140], "symmetricdiffeomorphicregistr": [131, 145], "translationtransform3d": 131, "partial": [131, 135], "load_nifti": [131, 134, 137, 145], "load_trk": [131, 134, 137], "read_img_arr_or_path": [131, 137], "save_nifti": [131, 134, 137, 145], "set_number_of_point": [131, 140, 142, 143], "transform_centers_of_mass": 131, "transform_tracking_output": [131, 143], "warn": [131, 133, 135, 139, 140, 143, 144, 145], "determine_num_thread": [131, 135, 143], "distance_matrix_mdf": 131, "compute_cc_backward_step_2d": 131, "compute_cc_backward_step_3d": 131, "compute_cc_forward_step_2d": 131, "compute_cc_forward_step_3d": 131, "precompute_cc_factors_2d": 131, "precompute_cc_factors_2d_test": 131, "precompute_cc_factors_3d": 131, "precompute_cc_factors_3d_test": 131, "compute_em_demons_step_2d": 131, "compute_em_demons_step_3d": 131, "compute_masked_class_stats_2d": 131, "compute_masked_class_stats_3d": 131, "quantize_positive_2d": 131, "quantize_positive_3d": 131, "affineinvalidvalueserror": 131, "affineinversionerror": 131, "isotropicscalespac": 131, "optim": [131, 133, 139], "parzenjointhistogram": 131, "compute_parzen_mi": 131, "deprecated_param": [131, 135, 136, 139, 140, 145], "get_direction_and_spac": 131, "interpolate_scalar_2d": [131, 133], "interpolate_scalar_3d": [131, 133, 143], "sample_domain_regular": 131, "transform_geometric_cent": 131, "transform_origin": 131, "diffeomorphicregistr": 131, "mult_aff": 131, "similaritymetr": 131, "v_cycle_2d": 131, "v_cycle_3d": 131, "cubic_splin": 131, "cubic_spline_deriv": 131, "pool": [131, 135, 136], "affine_transform": 131, "determine_num_process": [131, 135, 136, 139], "gaussian_filt": 131, "bundlemindistanceasymmetricmetr": [131, 140], "bundlemindistancematrixmetr": 131, "bundlemindistancemetr": [131, 140], "bundlesumdistancematrixmetr": [131, 140], "jointbundlemindistancemetr": 131, "jointstreamlineregistrationmap": 131, "streamlinedistancemetr": 131, "streamlineregistrationmap": 131, "bundle_min_dist": 131, "bundle_min_distance_asymmetric_fast": 131, "bundle_min_distance_fast": 131, "bundle_sum_dist": 131, "center_streamlin": [131, 143], "compose_matrix": [131, 133], "compose_matrix44": 131, "compose_transform": [131, 133], "decompose_matrix": [131, 133], "decompose_matrix44": 131, "get_unique_pair": 131, "groupwise_slr": 131, "progressive_slr": 131, "qbx_and_merg": [131, 140, 144], "remove_clusters_by_s": 131, "select_random_set_of_streamlin": [131, 140, 143], "slr_with_qbx": [131, 145], "transform_streamlin": [131, 137, 143, 145], "unlist_streamlin": [131, 143], "whole_brain_slr": 131, "compute_energy_ssd_2d": 131, "compute_energy_ssd_3d": 131, "compute_residual_displacement_field_ssd_2d": 131, "compute_residual_displacement_field_ssd_3d": 131, "compute_ssd_demons_step_2d": 131, "compute_ssd_demons_step_3d": 131, "iterate_residual_displacement_field_ssd_2d": 131, "iterate_residual_displacement_field_ssd_3d": 131, "solve_2d_symmetric_positive_definit": 131, "solve_3d_symmetric_positive_definit": 131, "affinetransform2d": 131, "rigidisoscalingtransform2d": 131, "rigidscalingtransform2d": 131, "rigidtransform2d": 131, "rotationtransform2d": 131, "rotationtransform3d": 131, "scalingtransform2d": 131, "scalingtransform3d": 131, "translationtransform2d": 131, "compose_vector_fields_2d": 131, "compose_vector_fields_3d": 131, "create_circl": 131, "create_harmonic_fields_2d": 131, "create_harmonic_fields_3d": 131, "create_random_displacement_2d": 131, "create_random_displacement_3d": 131, "create_spher": 131, "downsample_displacement_field_2d": 131, "downsample_displacement_field_3d": 131, "downsample_scalar_field_2d": 131, "downsample_scalar_field_3d": 131, "invert_vector_field_fixed_point_2d": 131, "invert_vector_field_fixed_point_3d": 131, "is_valid_affin": 131, "reorient_vector_field_2d": 131, "reorient_vector_field_3d": 131, "resample_displacement_field_2d": 131, "resample_displacement_field_3d": 131, "simplify_warp_function_2d": 131, "simplify_warp_function_3d": 131, "sparse_gradi": 131, "transform_2d_affin": 131, "transform_2d_affine_nn": 131, "transform_3d_affin": 131, "transform_3d_affine_nn": 131, "warp_2d": 131, "warp_2d_nn": 131, "warp_3d": 131, "warp_3d_nn": 131, "warp_coordinates_2d": 131, "warp_coordinates_3d": 131, "boot": 132, "core": 133, "benchmark": [133, 139, 140, 143], "bench_spher": 133, "geometri": 133, "graph": 133, "histeq": 133, "interpol": 133, "ndindex": [133, 136, 139], "onetim": 133, "rng": 133, "sphere_stat": 133, "subdivide_octahedron": 133, "wavelet": 133, "timer": 133, "bench_disperse_charges_alt": 133, "func_minimize_adhoc": 133, "func_minimize_scipi": 133, "cart2spher": [133, 139], "cart_dist": 133, "circumradiu": 133, "dist_to_corn": [133, 143], "euler_matrix": 133, "is_hemispher": 133, "lambert_equal_area_projection_cart": 133, "lambert_equal_area_projection_polar": 133, "nearest_pos_semi_def": 133, "normalized_vector": 133, "perpendicular_direct": [133, 139], "rodrigues_axis_rot": 133, "sph2latlon": 133, "sphere2cart": [133, 139, 141], "sphere_dist": 133, "vec2vec_rotmat": [133, 139, 141], "vector_cosin": 133, "vector_norm": [133, 139], "gradientt": [133, 134, 139, 141], "hemispher": [133, 134, 135, 138], "auto_attr": [133, 139], "btens_to_param": 133, "check_multi_b": [133, 139], "deprecate_with_vers": [133, 137, 139, 143], "disperse_charg": [133, 135], "generate_bvec": 133, "get_bval_indic": [133, 138, 139], "gradient_t": [133, 134, 139, 141, 145], "gradient_table_from_bvals_bvec": 133, "gradient_table_from_gradient_strength_bvec": [133, 134, 139], "gradient_table_from_qvals_bvec": 133, "inv": 133, "orientation_from_str": [133, 137], "orientation_to_str": [133, 137], "ornt_map": [133, 137], "params_to_bten": 133, "polar": 133, "reorient_bvec": 133, "reorient_on_axi": [133, 137], "reorient_vector": [133, 137], "round_bval": [133, 139], "unique_bv": 133, "unique_bvals_magnitud": [133, 138, 139], "unique_bvals_toler": [133, 139], "nearestneighborinterpol": 133, "outsideimag": 133, "trilinearinterpol": 133, "interp_rbf": 133, "interpolate_scalar_nn_2d": 133, "interpolate_scalar_nn_3d": 133, "interpolate_vector_2d": 133, "interpolate_vector_3d": [133, 143], "map_coordinates_trilinear_iso": 133, "nearestneighbor_interpol": 133, "trilinear_interp": 133, "trilinear_interpolate4d": 133, "as_strid": [133, 139], "onetimeproperti": 133, "resetmixin": 133, "nonnegativeleastsquar": 133, "positivedefiniteleastsquar": [133, 139], "sklearnlinearsolv": 133, "minim": 133, "optional_packag": [133, 134, 135, 137, 138, 139, 142, 144, 145], "sparse_nnl": 133, "spdot": 133, "lecuy": 133, "wichmannhill1982": 133, "wichmannhill2006": 133, "architectur": 133, "floor": 133, "disperse_charges_alt": 133, "euler_characteristic_check": 133, "faces_from_sphere_vertic": 133, "remove_similar_vertic": [133, 136, 139], "unique_edg": 133, "unique_set": 133, "permut": 133, "angular_similar": 133, "compare_orientation_set": 133, "eigenstat": 133, "random_uniform_on_spher": 133, "create_unit_hemispher": 133, "create_unit_spher": 133, "afb3d": 133, "afb3d_a": 133, "cshift3d": 133, "dwt3d": 133, "idwt3d": 133, "permutationinvers": 133, "sfb3d": 133, "sfb3d_a": 133, "fetcher": 134, "dataerror": 134, "as_native_arrai": 134, "dirnam": 134, "dsi_deconv_voxel": 134, "dsi_voxel": 134, "exist": 134, "fetch_bundle_atlas_hcp842": 134, "fetch_bundle_fa_hcp": 134, "fetch_bundles_2_subject": 134, "fetch_cenir_multib": 134, "fetch_cfin_multib": 134, "fetch_gold_standard_io": 134, "fetch_hbn": 134, "fetch_isbi2013_2shel": 134, "fetch_ivim": 134, "fetch_mni_templ": 134, "fetch_resdnn_weight": 134, "fetch_scil_b0": 134, "fetch_sherbrooke_3shel": 134, "fetch_stanford_hardi": 134, "fetch_stanford_label": 134, "fetch_stanford_pve_map": 134, "fetch_stanford_t1": 134, "fetch_syn_data": 134, "fetch_taiwan_ntu_dsi": 134, "fetch_target_tractogram_hcp": 134, "fetch_tissue_data": 134, "get_3shell_gtab": 134, "get_bundle_atlas_hcp842": 134, "get_cmap": 134, "get_fnam": [134, 138, 139, 140, 141, 143], "get_gtab_taiwan_dsi": 134, "get_isbi2013_2shell_gtab": 134, "get_sim_voxel": 134, "get_skeleton": 134, "get_spher": [134, 135, 138, 139, 145], "get_target_tractogram_hcp": 134, "get_two_hcp842_bundl": 134, "load_npz": 134, "load_sdp_constraint": [134, 139], "loads_compat": 134, "matlab_life_result": 134, "mrtrix_spherical_funct": 134, "pjoin": [134, 145], "read_dib_217_lte_pte_st": 134, "read_dib_70_lte_pte_st": 134, "read_bundles_2_subject": 134, "read_cenir_multib": 134, "read_cfin_dwi": 134, "read_cfin_t1": 134, "read_five_af_bundl": 134, "read_isbi2013_2shel": 134, "read_ivim": 134, "read_mni_templ": 134, "read_qte_lte_pt": 134, "read_scil_b0": 134, "read_sherbrooke_3shel": 134, "read_stanford_hardi": 134, "read_stanford_label": [134, 139], "read_stanford_pve_map": 134, "read_stanford_t1": 134, "read_syn_data": 134, "read_taiwan_ntu_dsi": 134, "read_tissue_data": 134, "relist_streamlin": [134, 143], "two_cingulum_bundl": 134, "fetchererror": 134, "tripwir": 134, "tqdm": [134, 139], "check_md5": 134, "copyfileobj": 134, "copyfileobj_withprogress": 134, "extract_example_tract": 134, "fetch_dib_217_lte_pte_st": 134, "fetch_dib_70_lte_pte_st": 134, "fetch_data": 134, "fetch_file_format": 134, "fetch_fury_surfac": 134, "fetch_hcp": 134, "fetch_qtdmri_test_retest_2subject": 134, "fetch_qte_lte_pt": 134, "get_file_format": 134, "load_nifti_data": [134, 137, 139, 145], "md5": 134, "read_bvals_bvec": [134, 137, 145], "read_qtdmri_test_retest_2subject": 134, "read_siemens_scil_b0": 134, "to_bids_descript": 134, "urlopen": 134, "adaptive_soft_match": 135, "denspe": 135, "enhancement_kernel": 135, "nlmeans_block": 135, "noise_estim": 135, "non_local_mean": 135, "pca_noise_estim": [135, 145], "shift_twist_convolut": 135, "add_padding_reflect": 135, "correspond_indic": 135, "nlmeans_3d": 135, "remove_pad": 135, "enhancementkernel": 135, "ceil": 135, "gettempdir": 135, "gibbs_remov": [135, 145], "eigh": 135, "genpca": 135, "mppca": [135, 145], "firdn": 135, "upfir": 135, "convolv": 135, "estimate_sigma": [135, 145], "piesno": 135, "convolve_sf": 135, "sf_to_sh": [135, 138, 139], "sh_to_sf": [135, 138, 139], "bootstrap_direction_gett": 136, "closest_peak_direction_gett": 136, "pmf": 136, "probabilistic_direction_gett": 136, "bootdirectiongett": 136, "closestpeakdirectiongett": [136, 145], "deterministicmaximumdirectiongett": [136, 145], "eudxdirectiongett": [136, 139], "peaksandmetr": [136, 137], "probabilisticdirectiongett": [136, 145], "repeat": 136, "gfa": [136, 139], "local_maxima": [136, 139], "peak_direct": 136, "peak_directions_nl": 136, "peaks_from_model": [136, 139, 145], "reshape_peaks_for_visu": [136, 137], "search_descend": [136, 139], "sh_to_sf_matrix": [136, 139], "bootpmfgen": 136, "basedirectiongett": 136, "basepmfdirectiongett": 136, "pmfgendirectiongett": 136, "pmfgen": 136, "shcoeffpmfgen": 136, "simplepmfgen": 136, "random": [136, 143], "io": [137, 145], "bvectxt": 137, "dpy": 137, "pickl": 137, "stateful_tractogram": 137, "vtk": 137, "load_pickl": 137, "read_bvec_fil": 137, "save_pickl": 137, "splitext": 137, "save_qa_metr": [137, 145], "load_peak": [137, 145], "peaks_to_nifti": [137, 145], "save_peak": [137, 145], "origin": 137, "perarraydict": 137, "perarraysequencedict": 137, "statefultractogram": [137, 144, 145], "tractogram": 137, "product": 137, "apply_affin": [137, 140, 143], "bisect": 137, "deepcopi": [137, 143], "get_reference_info": 137, "is_header_compat": 137, "is_reference_info_valid": 137, "set_sft_logger_level": 137, "create_tractogram_head": 137, "detect_format": 137, "load_dpi": 137, "load_fib": 137, "load_gener": 137, "load_tck": 137, "load_tractogram": [137, 140, 143, 145], "load_vtk": 137, "load_vtk_streamlin": 137, "load_vtp": 137, "save_dpi": 137, "save_fib": 137, "save_gener": 137, "save_tck": 137, "save_tractogram": [137, 144, 145], "save_trk": 137, "save_vtk": 137, "save_vtk_streamlin": 137, "save_vtp": 137, "nifti1imag": 137, "create_nifti_head": [137, 145], "decfa": 137, "decfa_to_float": 137, "make5d": 137, "nifti1_symmat": [137, 145], "save_buan_profiles_hdf5": [137, 142], "load_polydata": 137, "save_polydata": 137, "setup_modul": [137, 144, 145], "nn": 138, "histo_resdnn": 138, "historesdnn": 138, "doctest_skip_pars": [138, 144], "set_logger_level": 138, "sph_harm_ind_list": [138, 139], "multiplelayerpercepton": 138, "singlelayerperceptron": 138, "reconst": [139, 145], "bench_bounding_box": 139, "bench_csd": 139, "bench_peak": 139, "bench_squash": 139, "bench_vec_val_sum": 139, "cach": 139, "cross_valid": 139, "csdeconv": 139, "dki_micro": 139, "eudx_direction_gett": 139, "fwdti": 139, "gqi": 139, "mapmri": 139, "mcsd": 139, "multi_voxel": 139, "odf": 139, "qtdmri": 139, "quick_squash": 139, "recspe": 139, "sfm": 139, "shm": 139, "vec_val_sum": 139, "reconstfit": [139, 143], "reconstmodel": [139, 143], "constrainedsphericaldeconvmodel": [139, 145], "bench_csdeconv": 139, "num_grad": 139, "bench_local_maxima": 139, "bench_quick_squash": 139, "old_squash": 139, "bench_vec_val_vect": 139, "coeff_of_determin": 139, "kfold_xval": 139, "axsymshrespons": 139, "constrainedsdtmodel": 139, "sphharmfit": 139, "sphharmmodel": 139, "tensormodel": [139, 145], "auto_respons": 139, "auto_response_ssst": [139, 145], "estimate_respons": 139, "fa_trace_to_lambda": 139, "forward_sdeconv_mat": 139, "forward_sdt_deconv_mat": 139, "fractional_anisotropi": [139, 140, 145], "lazy_index": 139, "lpn": 139, "mask_for_response_ssst": 139, "multi_voxel_fit": 139, "odf_deconv": 139, "odf_sh_to_sharp": 139, "quad": 139, "real_sh_descoteaux": 139, "real_sh_descoteaux_from_index": 139, "recursive_respons": 139, "response_from_mask": 139, "response_from_mask_ssst": 139, "sh_to_rh": 139, "single_tensor": [139, 141], "diffusionkurtosisfit": 139, "diffusionkurtosismodel": [139, 145], "tensorfit": 139, "wcon": 139, "wrotat": 139, "wrotate_el": 139, "apparent_kurtosis_coef": 139, "axial_kurtosi": 139, "carlson_rd": 139, "carlson_rf": 139, "decompose_tensor": 139, "design_matrix": 139, "directional_diffus": 139, "directional_diffusion_vari": 139, "directional_kurtosi": 139, "dki_predict": 139, "from_lower_triangular": 139, "kurtosis_fractional_anisotropi": 139, "kurtosis_maximum": 139, "lower_triangular": [139, 145], "mean_diffus": [139, 145], "mean_kurtosi": 139, "mean_kurtosis_tensor": 139, "nlls_fit_tensor": 139, "ols_fit_dki": 139, "radial_kurtosi": 139, "restore_fit_tensor": 139, "split_dki_param": [139, 145], "vec_val_vect": 139, "wls_fit_dki": 139, "kurtosismicrostructuralfit": 139, "kurtosismicrostructuremodel": 139, "axial_diffus": [139, 145], "axonal_water_fract": 139, "diffusion_compon": 139, "dkimicro_predict": 139, "dti_design_matrix": 139, "radial_diffus": [139, 145], "tortuos": 139, "trace": 139, "diffusionspectrumdeconvfit": 139, "diffusionspectrumdeconvmodel": 139, "diffusionspectrumfit": 139, "diffusionspectrummodel": 139, "odffit": 139, "odfmodel": 139, "lr_deconv": 139, "create_qspac": 139, "create_qt": 139, "fftn": 139, "fftshift": 139, "gen_psf": 139, "half_to_full_qspac": 139, "hanning_filt": 139, "ifftshift": 139, "map_coordin": [139, 142], "pdf_interp_coord": 139, "pdf_odf": 139, "project_hemisph_bvec": 139, "threshold_propag": 139, "apparent_diffusion_coef": 139, "color_fa": [139, 140, 145], "determin": 139, "deviator": 139, "eig_from_lo_tri": 139, "geodesic_anisotropi": [139, 145], "isotrop": 139, "iter_fit_tensor": 139, "mode": 139, "norm": 139, "ols_fit_tensor": 139, "pinv": 139, "planar": 139, "quantize_evec": 139, "tensor_predict": 139, "wls_fit_tensor": 139, "forecastfit": 139, "forecastmodel": 139, "find_signal_mean": 139, "forecast_error_func": 139, "forecast_matrix": 139, "lb_forecast": 139, "leastsq": 139, "psi_l": 139, "rho_matrix": 139, "freewatertensorfit": 139, "freewatertensormodel": 139, "cholesky_to_lower_triangular": 139, "fwdti_predict": 139, "lower_triangular_to_choleski": 139, "nls_fit_tensor": 139, "nls_iter": 139, "wls_iter": 139, "generalizedqsamplingfit": 139, "generalizedqsamplingmodel": 139, "equatorial_maximum": 139, "equatorial_zone_vertic": 139, "normalize_qa": 139, "npa": 139, "odf_sum": 139, "patch_maximum": 139, "patch_sum": 139, "patch_vertic": 139, "polar_zone_vertic": 139, "squared_radial_compon": 139, "triple_odf_maxima": 139, "upper_hemi_map": 139, "ivimfit": 139, "ivimmodeltrr": 139, "ivimmodelvp": 139, "ivimmodel": [139, 145], "differential_evolut": 139, "f_d_star_error": 139, "f_d_star_predict": 139, "ivim_model_selector": 139, "ivim_predict": 139, "least_squar": 139, "mapmrifit": 139, "mapmrimodel": 139, "b_mat": 139, "b_mat_isotrop": 139, "binomialfloat": 139, "create_rspac": 139, "delta": 139, "factorial2": 139, "gcv_cost_funct": 139, "generalized_crossvalid": 139, "generalized_crossvalidation_arrai": 139, "genlaguerr": 139, "hermit": 139, "isotropic_scale_factor": 139, "map_laplace_": 139, "map_laplace_t": 139, "map_laplace_u": 139, "mapmri_stu_reg_matric": 139, "mapmri_index_matrix": 139, "mapmri_isotropic_k_mu_depend": 139, "mapmri_isotropic_k_mu_independ": 139, "mapmri_isotropic_m_mu_depend": 139, "mapmri_isotropic_m_mu_independ": 139, "mapmri_isotropic_index_matrix": 139, "mapmri_isotropic_laplacian_reg_matrix": 139, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 139, "mapmri_isotropic_odf_matrix": 139, "mapmri_isotropic_odf_sh_matrix": 139, "mapmri_isotropic_phi_matrix": 139, "mapmri_isotropic_psi_matrix": 139, "mapmri_isotropic_radial_pdf_basi": 139, "mapmri_isotropic_radial_signal_basi": 139, "mapmri_laplacian_reg_matrix": 139, "mapmri_odf_matrix": 139, "mapmri_phi_1d": 139, "mapmri_phi_matrix": 139, "mapmri_psi_1d": 139, "mapmri_psi_matrix": 139, "mfactori": 139, "sfactori": 139, "msdeconvfit": 139, "multishelldeconvmodel": 139, "multishellrespons": 139, "qpfitter": 139, "auto_response_msmt": 139, "mask_for_response_msmt": 139, "multi_shell_fiber_respons": 139, "multi_tissue_basi": 139, "response_from_mask_msmt": 139, "solve_qp": 139, "meandiffusionkurtosisfit": 139, "meandiffusionkurtosismodel": 139, "awf_from_msk": 139, "mean_signal_bvalu": 139, "msdki_predict": 139, "msk_from_awf": 139, "wls_fit_msdki": 139, "callablearrai": 139, "multivoxelfit": 139, "minmax_norm": 139, "qtdmrifit": 139, "qtdmrimodel": 139, "h": 139, "angular_basis_eap_opt": 139, "angular_basis_opt": 139, "create_rt_space_grid": 139, "design_matrix_spati": 139, "elastic_crossvalid": 139, "factori": 139, "fmin_l_bfgs_b": 139, "l1_crossvalid": 139, "part1_reg_matrix_tau": 139, "part23_iso_reg_matrix_q": 139, "part23_reg_matrix_q": 139, "part23_reg_matrix_tau": 139, "part4_iso_reg_matrix_q": 139, "part4_reg_matrix_q": 139, "part4_reg_matrix_tau": 139, "qtdmri_anisotropic_sc": 139, "qtdmri_eap_matrix": 139, "qtdmri_eap_matrix_": 139, "qtdmri_index_matrix": 139, "qtdmri_isotropic_eap_matrix": 139, "qtdmri_isotropic_eap_matrix_": 139, "qtdmri_isotropic_index_matrix": 139, "qtdmri_isotropic_laplacian_reg_matrix": 139, "qtdmri_isotropic_sc": 139, "qtdmri_isotropic_signal_matrix": 139, "qtdmri_isotropic_signal_matrix_": 139, "qtdmri_isotropic_to_mapmri_matrix": 139, "qtdmri_laplacian_reg_matrix": 139, "qtdmri_mapmri_isotropic_norm": 139, "qtdmri_mapmri_norm": 139, "qtdmri_number_of_coeffici": 139, "qtdmri_signal_matrix": 139, "qtdmri_signal_matrix_": 139, "qtdmri_temporal_norm": 139, "qtdmri_to_mapmri_matrix": 139, "radial_basis_eap_opt": 139, "radial_basis_opt": 139, "temporal_basi": 139, "visualise_gradient_table_g_delta_rainbow": 139, "qtifit": 139, "qtimodel": 139, "cvxpy_1x21_to_6x6": 139, "cvxpy_1x6_to_3x3": 139, "dtd_covari": 139, "from_21x1_to_6x6": 139, "from_3x3_to_6x1": 139, "from_6x1_to_3x3": 139, "from_6x6_to_21x1": 139, "qti_sign": 139, "adj_to_countarr": 139, "argmax_from_adj": 139, "argmax_from_countarr": 139, "le_to_odf": 139, "proc_reco_arg": 139, "sum_on_blocks_1d": 139, "rumbafit": 139, "rumbasdmodel": [139, 145], "all_tensor_evec": [139, 141], "bounding_box": [139, 140, 145], "crop": [139, 140], "generate_kernel": 139, "mbessel_ratio": 139, "normalize_data": 139, "rumba_deconv": 139, "rumba_deconv_glob": 139, "exponentialisotropicfit": 139, "exponentialisotropicmodel": 139, "isotropicfit": 139, "isotropicmodel": 139, "ordereddict": [139, 143], "sparsefasciclefit": 139, "sparsefasciclemodel": 139, "nanmean": 139, "sfm_design_matrix": 139, "csaodfmodel": [139, 145], "opdtmodel": 139, "qballbasemodel": 139, "qballmodel": 139, "residualbootstrapwrapp": 139, "anisotropic_pow": 139, "bootstrap_data_arrai": 139, "bootstrap_data_voxel": 139, "calculate_max_ord": 139, "convert_sh_from_legaci": 139, "convert_sh_to_full_basi": 139, "convert_sh_to_legaci": 139, "gen_dirac": 139, "hat": 139, "lcr_matrix": 139, "order_from_ncoef": 139, "randint": 139, "real_sh_tourni": 139, "real_sh_tournier_from_index": 139, "real_sph_harm": 139, "real_sym_sh_basi": 139, "real_sym_sh_mrtrix": 139, "smooth_pinv": 139, "spherical_harmon": 139, "shorefit": 139, "shoremodel": 139, "l_shore": 139, "n_shore": 139, "shore_indic": 139, "shore_matrix": 139, "shore_matrix_odf": 139, "shore_matrix_pdf": 139, "shore_ord": 139, "dki_design_matrix": [139, 141], "bench_quickbundl": 140, "clustering_algorithm": 140, "clusteringspe": 140, "cythonutil": 140, "featurespe": 140, "metricspe": 140, "mrf": 140, "mdfpy": 140, "qb_new": 140, "assert_array_equ": [140, 143], "assert_arrays_equ": 140, "assert_equ": 140, "chain": 140, "ba_analysi": 140, "bundle_adjac": 140, "bundle_shape_similar": [140, 145], "bundles_distances_mam": [140, 143], "bundles_distances_mdf": [140, 143], "check_rang": 140, "cluster_bundl": 140, "nbyte": [140, 143], "abcmeta": 140, "averagepointwiseeuclideanmetr": [140, 142], "clustercentroid": 140, "clustermap": 140, "clustermapcentroid": 140, "minimumaveragedirectflipmetr": 140, "quickbundlesx": 140, "resamplefeatur": 140, "treeclust": 140, "treeclustermap": 140, "abstractmethod": 140, "dtype": 140, "clusters_centroid2clustermap_centroid": 140, "peek": 140, "clusterscentroid": 140, "evaluate_aabb_check": 140, "arclengthfeatur": 140, "centerofmassfeatur": 140, "cythonfeatur": 140, "identityfeatur": 140, "midpointfeatur": 140, "vectorofendpointsfeatur": 140, "infer_shap": 140, "applymask": 140, "binary_dil": [140, 145], "clean_cc_mask": 140, "generate_binary_structur": 140, "median_filt": 140, "multi_median": 140, "otsu": 140, "segment_from_cfa": [140, 145], "cosinemetr": 140, "euclideanmetr": 140, "sumpointwiseeuclideanmetr": 140, "dist": 140, "mdf": 140, "cythonmetr": 140, "distance_matrix": 140, "constantobservationmodel": 140, "iteratedconditionalmod": 140, "upper_bound_by_perc": 140, "upper_bound_by_r": 140, "tissueclassifierhmrf": 140, "add_nois": [140, 141], "sim": 141, "phantom": 141, "diff2eigenvector": 141, "orbital_phantom": 141, "callaghan_perpendicular": 141, "cylinders_and_ball_soderman": 141, "dki_sign": 141, "gaussian_parallel": 141, "kurtosis_el": 141, "multi_tensor": 141, "multi_tensor_dki": 141, "multi_tensor_msd": 141, "multi_tensor_odf": 141, "multi_tensor_pdf": 141, "multi_tensor_rtop": 141, "single_tensor_msd": 141, "single_tensor_odf": 141, "single_tensor_pdf": 141, "single_tensor_rtop": 141, "sticks_and_bal": 141, "stat": [142, 145], "ckdtree": 142, "afq_profil": 142, "anatomical_measur": [142, 145], "assignment_map": [142, 145], "gaussian_weight": 142, "mahalanobi": 142, "orient_by_streamlin": [142, 143], "peak_valu": [142, 145], "values_from_volum": [142, 143], "_util": 143, "bench_streamlin": 143, "direction_gett": 143, "distanc": 143, "fbcmeasur": 143, "learn": 143, "local_track": 143, "localtrack": [143, 145], "mesh": 143, "propspe": 143, "stopping_criterion": 143, "streamlinespe": 143, "vox2track": 143, "assert_array_almost_equ": 143, "bench_compress_streamlin": 143, "bench_length": 143, "bench_set_number_of_point": 143, "generate_streamlin": 143, "length_python": 143, "set_number_of_points_python": 143, "setup": 143, "directiongett": 143, "add_3vec": 143, "approx_polygon_track": 143, "approximate_mdl_trajectori": 143, "cut_plan": 143, "inner_3vec": 143, "intersect_segment_cylind": 143, "larch_3merg": 143, "larch_3split": 143, "lee_angle_dist": 143, "lee_perpendicular_dist": 143, "local_skeleton_clust": 143, "local_skeleton_clustering_3pt": 143, "mam_dist": 143, "minimum_closest_dist": 143, "most_similar_track_mam": 143, "mul_3vec": 143, "norm_3vec": 143, "normalized_3vec": 143, "point_segment_sq_dist": 143, "point_track_sq_distance_check": 143, "sub_3vec": 143, "track_dist_3pt": 143, "track_roi_intersection_check": 143, "kdtree": 143, "interp1d": 143, "compute_rfbc": 143, "min_moving_averag": 143, "detect_corresponding_track": 143, "detect_corresponding_tracks_plu": 143, "fiberfit": 143, "fibermodel": 143, "lifesignalmak": 143, "grad_tensor": 143, "streamline_gradi": 143, "streamline_sign": 143, "streamline_tensor": 143, "unique_row": 143, "voxel2streamlin": 143, "anatomicalstoppingcriterion": 143, "iter": 143, "particlefilteringtrack": [143, 145], "streamlinestatu": 143, "pft_tracker": 143, "random_coordinates_from_surfac": 143, "seeds_from_surface_coordin": 143, "triangles_area": 143, "vertices_to_triangles_valu": 143, "arbitrarypoint": 143, "byte": 143, "center_of_mass": 143, "downsampl": 143, "frenet_serret": 143, "generate_combin": 143, "inside_spher": 143, "inside_sphere_point": 143, "intersect_spher": 143, "longest_track_bundl": 143, "magn": 143, "mean_curvatur": 143, "mean_orient": 143, "midpoint2point": 143, "principal_compon": 143, "splev": 143, "spline": 143, "splprep": 143, "startpoint": 143, "wind": 143, "eudx_both_direct": 143, "ndarray_offset": 143, "actstoppingcriterion": 143, "binarystoppingcriterion": [143, 145], "cmcstoppingcriterion": [143, 145], "stoppingcriterion": 143, "thresholdstoppingcriterion": [143, 145], "cdist": 143, "cluster_confid": 143, "deform_streamlin": 143, "orient_by_roi": 143, "select_by_roi": 143, "compress_streamlin": 143, "defaultdict": 143, "groupbi": 143, "connectivity_matrix": 143, "density_map": 143, "max_angle_from_curvatur": 143, "min_radius_curvature_from_angl": 143, "minimum_at": 143, "ndbincount": 143, "near_roi": 143, "path_length": 143, "random_seeds_from_mask": 143, "reduce_label": 143, "reduce_roi": 143, "seeds_from_mask": 143, "streamline_near_roi": 143, "subseg": 143, "target": 143, "target_line_bas": 143, "wrap": 143, "streamline_map": 143, "track_count": 143, "viz": [144, 145], "app": 144, "gmem": 144, "panel": 144, "plot": 144, "project": 144, "regtool": 144, "fetch_viz_icon": 144, "read_viz_icon": 144, "globalhorizon": 144, "horizon": [144, 145], "apply_shad": 144, "build_label": 144, "distinguishable_colormap": 144, "slicer_panel": 144, "compare_map": 144, "compare_qti_map": 144, "sph_project": 144, "draw_lattice_2d": 144, "overlay_imag": 144, "overlay_slic": 144, "plot_2d_diffeomorphic_map": 144, "plot_slic": 144, "simple_plot": 144, "show_bundl": 144, "combined_workflow": 145, "docstring_pars": 145, "flow_runn": 145, "multi_io": 145, "applytransformflow": 145, "imageregistrationflow": 145, "motioncorrectionflow": 145, "resliceflow": 145, "slrwithqbxflow": 145, "synregistrationflow": 145, "check_dimens": 145, "introspectiveargumentpars": 145, "numpydocstr": 145, "get_args_default": 145, "none_or_dtyp": 145, "combinedworkflow": 145, "gibbsringingflow": 145, "lpcaflow": 145, "mppcaflow": 145, "nlmeansflow": 145, "patch2selfflow": 145, "reader": 145, "dedent_lin": 145, "get_level": 145, "run_flow": 145, "fetchflow": 145, "ioinfoflow": 145, "splitflow": 145, "getmemb": 145, "isfunct": 145, "maskflow": 145, "ioiter": 145, "basename_without_extens": 145, "common_start": 145, "concatenate_input": 145, "connect_output_path": 145, "glob": 145, "io_iter": 145, "io_iterator_": 145, "slash_to_und": 145, "reconstcsaflow": 145, "reconstcsdflow": 145, "reconstdkiflow": 145, "reconstdtiflow": 145, "reconstivimflow": 145, "reconstmapmriflow": 145, "reconstrumbaflow": 145, "get_mod": 145, "literal_ev": 145, "labelsbundlesflow": 145, "medianotsuflow": 145, "recobundlesflow": 145, "bundleanalysistractometryflow": 145, "bundleshapeanalysi": 145, "linearmixedmodelsflow": 145, "snrinccflow": 145, "buan_bundle_profil": 145, "localfibertrackingpamflow": 145, "pftrackingpamflow": 145, "horizonflow": 145, "line_color": 145, "numpy_to_vtk_color": 145, "dipy_align_affin": 147, "argument": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "option": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "dipy_align_syn": 148, "dipy_apply_transform": 149, "dipy_buan_lmm": 150, "dipy_buan_profil": 151, "dipy_correct_mot": 152, "dipy_denoise_lpca": 153, "dipy_denoise_mppca": 154, "dipy_denoise_nlmean": 155, "dipy_denoise_patch2self": 156, "dipy_fetch": 157, "dipy_fit_csa": 158, "dipy_fit_csd": 159, "dipy_fit_dki": 160, "dipy_fit_dti": 161, "dipy_fit_ivim": 162, "dipy_fit_mapmri": 163, "dipy_gibbs_ring": 164, "dipy_horizon": 165, "dipy_info": 166, "dipy_labelsbundl": 167, "dipy_mask": 168, "dipy_median_otsu": 169, "dipy_recobundl": 170, "dipy_reslic": 171, "dipy_slr": 172, "dipy_snr_in_cc": 173, "dipy_split": 174, "dipy_track": 175, "dipy_track_pft": 176, "11": 179, "subscrib": 198, "dii": 199, "b": [199, 200], "matrix": [199, 200], "siemen": [199, 200], "dicom": [199, 200], "generalis": 201, "concept": 202, "coordin": 204, "term": 204, "physic": 204, "convent": 204, "matlab": 204}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "Data": [[2, "data"]], "Contents": [[2, "contents"], [106, "contents"]], "Datasets": [[2, "datasets"]], "Dependencies": [[4, "dependencies"]], "DIPY Coding Style Guideline": [[5, "dipy-coding-style-guideline"]], "Coding style": [[5, "coding-style"]], "Imports": [[5, "imports"], [5, "id1"]], "Cython coding style": [[5, "cython-coding-style"]], "Variable declaration": [[5, "variable-declaration"]], "Using C libraries": [[5, "using-c-libraries"]], "Error return values": [[5, "error-return-values"]], "Pointers and references": [[5, "pointers-and-references"]], "Casting": [[5, "casting"]], "Loops": [[5, "loops"]], "Documentation": [[5, "documentation"], [25, "documentation"]], "References": [[5, "references"], [28, "references"], [30, "references"], [31, "references"], [32, "references"], [34, "references"], [35, "references"], [37, "references"], [38, "references"], [40, "references"], [41, "references"], [42, "references"], [43, "references"], [44, "references"], [45, "references"], [46, "references"], [47, "references"], [48, "references"], [50, "references"], [52, "references"], [54, "references"], [55, "references"], [59, "references"], [60, "references"], [61, "references"], [64, "references"], [65, "references"], [66, "references"], [68, "references"], [69, "references"], [70, "references"], [71, "references"], [73, "references"], [74, "references"], [77, "references"], [79, "references"], [80, "references"], [81, "references"], [82, "references"], [84, "references"], [87, "references"], [89, "references"], [90, "references"], [91, "references"], [93, "references"], [95, "references"], [96, "references"], [98, "references"], [99, "references"], [100, "references"], [101, "references"], [112, "references"], [114, "references"], [116, "references"], [117, "references"], [119, "references"], [120, "references"], [121, "references"], [122, "references"], [131, "references"], [133, "references"], [137, "references"], [139, "references"], [147, "references"], [148, "references"], [149, "references"], [150, "references"], [151, "references"], [152, "references"], [153, "references"], [154, "references"], [155, "references"], [156, "references"], [157, "references"], [158, "references"], [159, "references"], [160, "references"], [161, "references"], [162, "references"], [163, "references"], [164, "references"], [165, "references"], [166, "references"], [167, "references"], [168, "references"], [169, "references"], [170, "references"], [171, "references"], [172, "references"], [173, "references"], [174, "references"], [175, "references"], [176, "references"], [203, "references"]], "Commit message codes": [[6, "commit-message-codes"]], "Configure git": [[7, "configure-git"]], "Overview": [[7, "overview"], [8, "overview"], [13, "overview"], [18, "overview"], [19, "overview"], [47, "overview"], [76, "overview"], [85, "overview"]], "In detail": [[7, "in-detail"], [13, "in-detail"], [18, "in-detail"], [19, "in-detail"]], "user.name and user.email": [[7, "user-name-and-user-email"]], "Aliases": [[7, "aliases"]], "Editor": [[7, "editor"]], "Merging": [[7, "merging"]], "Fancy log output": [[7, "fancy-log-output"]], "Development workflow": [[8, "development-workflow"]], "Workflow summary": [[8, "workflow-summary"]], "Consider deleting your master branch": [[8, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[8, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[8, "make-a-new-feature-branch"]], "The editing workflow": [[8, "the-editing-workflow"]], "In more detail": [[8, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[8, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[8, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[8, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[8, "several-people-sharing-a-single-repository"]], "Explore your repository": [[8, "explore-your-repository"]], "Rebasing on trunk": [[8, "rebasing-on-trunk"]], "Recovering from mess-ups": [[8, "recovering-from-mess-ups"]], "Rewriting commit history": [[8, "rewriting-commit-history"]], "Two and three dots in difference specs": [[9, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[10, "following-the-latest-source"]], "Get the local copy of the code": [[10, "get-the-local-copy-of-the-code"]], "Updating the code": [[10, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[11, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[11, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[11, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[12, "git-for-development"]], "Install git": [[13, "install-git"]], "Introduction": [[14, "introduction"], [21, "introduction"]], "git resources": [[15, "git-resources"]], "Tutorials and summaries": [[15, "tutorials-and-summaries"]], "Advanced git workflow": [[15, "advanced-git-workflow"]], "Manual pages online": [[15, "manual-pages-online"]], "Working with DIPY source code": [[16, "working-with-dipy-source-code"]], "Maintainer workflow": [[17, "maintainer-workflow"]], "Integrating changes": [[17, "integrating-changes"]], "A few commits": [[17, "a-few-commits"]], "A long series of commits": [[17, "a-long-series-of-commits"]], "Check the history": [[17, "check-the-history"]], "Push to trunk": [[17, "push-to-trunk"]], "Making a patch": [[18, "making-a-patch"]], "Making patches": [[18, "making-patches"]], "Moving from patching to development": [[18, "moving-from-patching-to-development"]], "Set up your fork": [[19, "set-up-your-fork"]], "Clone your fork": [[19, "clone-your-fork"]], "Linking your repository to the upstream repo": [[19, "linking-your-repository-to-the-upstream-repo"]], "DIPY development": [[20, "dipy-development"]], "A guide to making a DIPY release": [[22, "a-guide-to-making-a-dipy-release"]], "Release tools": [[22, "release-tools"]], "Release checklist": [[22, "release-checklist"]], "Doing the release": [[22, "doing-the-release"]], "Uploading binary builds for the release": [[22, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[22, "other-stuff-that-needs-doing-for-the-release"]], "Keeping code compatible with Pythons 2 and 3": [[23, "keeping-code-compatible-with-pythons-2-and-3"]], "Future imports": [[23, "future-imports"]], "Print": [[23, "print"]], "Division": [[23, "division"]], "Moved modules": [[23, "moved-modules"]], "Range, xrange": [[23, "range-xrange"]], "Reduce": [[23, "reduce"]], "Strings": [[23, "strings"]], "Next function": [[23, "next-function"]], "Except": [[23, "except"]], "Dictionaries": [[23, "dictionaries"]], "Developers": [[24, "developers"]], "Affine Registration in 3D": [[26, "affine-registration-in-3d"]], "Example source code": [[26, null], [27, null], [28, null], [29, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, null], [57, null], [58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [66, null], [67, null], [68, null], [69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [105, null]], "Affine Registration with Masks": [[27, "affine-registration-with-masks"]], "Extracting AFQ tract profiles from segmented bundles": [[28, "extracting-afq-tract-profiles-from-segmented-bundles"]], "Brain segmentation with median_otsu": [[29, "brain-segmentation-with-median-otsu"]], "BUAN Bundle Assignment Maps Creation": [[30, "buan-bundle-assignment-maps-creation"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[31, "automatic-fiber-bundle-extraction-with-recobundles"]], "Groupwise Bundle Registration": [[32, "groupwise-bundle-registration"]], "How it works": [[32, "how-it-works"]], "Example": [[32, "example"]], "Extended capabilities": [[32, "extended-capabilities"]], "Direct Bundle Registration": [[33, "direct-bundle-registration"]], "BUAN Bundle Shape Similarity Score": [[34, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[35, "calculation-of-outliers-with-cluster-confidence-index"]], "Creating a new combined workflow": [[36, "creating-a-new-combined-workflow"]], "Crossing-preserving contextual enhancement": [[37, "crossing-preserving-contextual-enhancement"]], "Suppress Gibbs oscillations": [[38, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[39, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[39, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[39, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[40, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marcenko-Pastur PCA algorithm": [[40, "noise-standard-deviation-estimation-using-the-marcenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[41, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[42, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Fiber to bundle coherence measures": [[43, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[43, "acknowledgments"]], "Gradients and Spheres": [[44, "gradients-and-spheres"]], "K-fold cross-validation for model comparison": [[45, "k-fold-cross-validation-for-model-comparison"]], "Linear fascicle evaluation (LiFE)": [[46, "linear-fascicle-evaluation-life"]], "Between-volumes Motion Correction on DWI datasets": [[47, "between-volumes-motion-correction-on-dwi-datasets"]], "Calculate Path Length Map": [[48, "calculate-path-length-map"]], "Getting started with DIPY": [[49, "getting-started-with-dipy"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[50, "reconstruct-with-constant-solid-angle-q-ball"]], "Parallel reconstruction using Q-Ball": [[51, "parallel-reconstruction-using-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[52, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[52, "step-1-estimation-of-the-fiber-response-function"], [70, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[52, "step-2-fodf-reconstruction"]], "Parallel reconstruction using CSD": [[53, "parallel-reconstruction-using-csd"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[54, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[54, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[55, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[56, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[57, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[58, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[59, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[60, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[61, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Reconstruct with Generalized Q-Sampling Imaging": [[62, "reconstruct-with-generalized-q-sampling-imaging"]], "Intravoxel incoherent motion": [[63, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[64, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[65, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[66, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[66, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[66, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[66, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[67, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[68, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[68, "theory"], [69, "theory"]], "Usage example": [[68, "usage-example"], [69, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[69, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[69, "installation"], [111, "installation"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[70, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[70, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[71, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[72, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[73, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[74, "calculate-shore-scalar-maps"]], "Diffeomorphic Registration with binary and fuzzy images": [[75, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Reslice diffusion datasets": [[76, "reslice-diffusion-datasets"]], "Using the RESTORE algorithm for robust tensor fitting": [[77, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Tractography Clustering - Available Features": [[78, "tractography-clustering-available-features"]], "Available Features": [[78, "available-features"]], "Identity Feature": [[78, "clustering-examples-identityfeature"]], "Resample Feature": [[78, "resample-feature"]], "Center of Mass Feature": [[78, "center-of-mass-feature"]], "Midpoint Feature": [[78, "midpoint-feature"]], "ArcLength Feature": [[78, "arclength-feature"]], "Vector Between Endpoints Feature": [[78, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[79, "tractography-clustering-available-metrics"]], "Available Metrics": [[79, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[79, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[79, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[79, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[80, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[80, "clustering-framework"]], "Extending Feature": [[80, "extending-feature"]], "Extending Metric": [[80, "extending-metric"]], "Tractography Clustering with QuickBundles": [[81, "tractography-clustering-with-quickbundles"]], "DKI MultiTensor Simulation": [[82, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[83, "multitensor-simulation"]], "SNR estimation for Diffusion-Weighted Images": [[84, "snr-estimation-for-diffusion-weighted-images"]], "Read/Write streamline files": [[85, "read-write-streamline-files"]], "Streamline length and size reduction": [[86, "streamline-length-and-size-reduction"]], "Applying image-based deformations to streamlines": [[87, "applying-image-based-deformations-to-streamlines"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[88, "connectivity-matrices-roi-intersections-and-density-maps"]], "Surface seeding for tractography": [[89, "surface-seeding-for-tractography"]], "Display the surface": [[89, "display-the-surface"]], "Generate a list of seeding positions": [[89, "generate-a-list-of-seeding-positions"]], "Symmetric Diffeomorphic Registration in 2D": [[90, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[91, "symmetric-diffeomorphic-registration-in-3d"]], "Tissue Classification of a T1-weighted Structural Image": [[92, "tissue-classification-of-a-t1-weighted-structural-image"]], "Bootstrap and Closest Peak Direction Getters Example": [[93, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[93, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[93, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[94, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Introduction to Basic Tracking": [[95, "introduction-to-basic-tracking"]], "Particle Filtering Tractography": [[96, "particle-filtering-tractography"]], "CMC/ACT Stopping Criterion": [[96, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[97, "an-introduction-to-the-probabilistic-direction-getter"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[98, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[99, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[100, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[100, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[100, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[100, "act-stopping-criterion"]], "Notes": [[100, "notes"]], "Advanced interactive visualization": [[101, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[102, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[102, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[102, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[102, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[102, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[102, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[102, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[103, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[104, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[104, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[104, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[104, "create-a-mosaic"]], "Creating a new workflow.": [[105, "creating-a-new-workflow"]], "Examples": [[106, "examples"]], "Quick Start": [[106, "quick-start"]], "Preprocessing": [[106, "preprocessing"]], "Gradients & Spheres": [[106, "gradients-spheres"]], "Brain Extraction": [[106, "brain-extraction"]], "Basic SNR estimation": [[106, "basic-snr-estimation"]], "Reslice & Motion Correction": [[106, "reslice-motion-correction"]], "Denoising": [[106, "denoising"], [116, "denoising"]], "Reconstruction": [[106, "reconstruction"], [120, "reconstruction"]], "Constrained Spherical Deconvolution": [[106, "constrained-spherical-deconvolution"]], "Fiber Orientation Estimated using Continuous Axially Symmetric Tensors": [[106, "fiber-orientation-estimated-using-continuous-axially-symmetric-tensors"]], "Simple Harmonic Oscillator based Reconstruction and Estimation": [[106, "simple-harmonic-oscillator-based-reconstruction-and-estimation"]], "Mean Apparent Propagator (MAP)-MRI": [[106, "mean-apparent-propagator-map-mri"], [120, "mean-apparent-propagator-map-mri"]], "Studying diffusion time-dependence using qt-dMRI": [[106, "studying-diffusion-time-dependence-using-qt-dmri"]], "Diffusion Tensor Imaging": [[106, "diffusion-tensor-imaging"]], "Free-water Diffusion Tensor Imaging": [[106, "free-water-diffusion-tensor-imaging"]], "Diffusion Kurtosis Imaging": [[106, "diffusion-kurtosis-imaging"]], "White Matter Tract Integrity Model": [[106, "white-matter-tract-integrity-model"]], "Q-Ball Constant Solid Angle": [[106, "q-ball-constant-solid-angle"]], "Diffusion Spectrum Imaging": [[106, "diffusion-spectrum-imaging"]], "Generalized Q-Sampling Imaging": [[106, "generalized-q-sampling-imaging"]], "DSI with Deconvolution": [[106, "dsi-with-deconvolution"]], "Sparse Fascicle Model": [[106, "sparse-fascicle-model"]], "Intravoxel incoherent motion (IVIM)": [[106, "intravoxel-incoherent-motion-ivim"]], "Statistical evaluation": [[106, "statistical-evaluation"]], "Intra-Voxel Signal Reconstruction": [[106, "intra-voxel-signal-reconstruction"]], "Q-space Trajectory Imaging": [[106, "q-space-trajectory-imaging"]], "Q-space Trajectory Imaging with positivity constraints": [[106, "q-space-trajectory-imaging-with-positivity-constraints"]], "Robust and Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[106, "robust-and-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Contextual enhancement": [[106, "contextual-enhancement"]], "Fiber tracking": [[106, "fiber-tracking"]], "Streamline analysis and connectivity": [[106, "streamline-analysis-and-connectivity"]], "Registration": [[106, "registration"], [121, "registration"]], "Image-based Registration": [[106, "image-based-registration"]], "Streamline-based Registration": [[106, "streamline-based-registration"], [121, "streamline-based-registration"]], "Segmentation": [[106, "segmentation"]], "Streamline Clustering": [[106, "streamline-clustering"]], "Brain Segmentation": [[106, "brain-segmentation"]], "Tissue Classification": [[106, "tissue-classification"]], "Bundle Extraction": [[106, "bundle-extraction"]], "Simulations": [[106, "simulations"]], "Multiprocessing": [[106, "multiprocessing"]], "File Formats": [[106, "file-formats"]], "Visualization": [[106, "visualization"]], "Workflows": [[106, "workflows"]], "Frequently Asked Questions": [[107, "frequently-asked-questions"]], "Theoretical": [[107, "theoretical"]], "Practical": [[107, "practical"]], "Gimbal lock": [[108, "gimbal-lock"]], "Mathematics of gimbal lock": [[108, "mathematics-of-gimbal-lock"]], "Glossary": [[109, "glossary"]], "Diffusion Imaging In Python": [[110, "diffusion-imaging-in-python"]], "Highlights": [[110, "highlights"]], "Announcements": [[110, "announcements"]], "Getting Started": [[110, "getting-started"]], "Next Steps": [[110, "next-steps"]], "Support": [[110, "support"], [111, "support"]], "Installing a release": [[111, "installing-a-release"]], "Using Anaconda:": [[111, "using-anaconda"]], "Using packages:": [[111, "using-packages"]], "Windows": [[111, "windows"], [111, "id2"]], "OSX": [[111, "osx"], [111, "id3"]], "Linux": [[111, "linux"]], "Using pip:": [[111, "using-pip"]], "Contact us:": [[111, "contact-us"]], "Common problems:": [[111, "common-problems"]], "Multiple installations": [[111, "multiple-installations"]], "Alternatives to Anaconda": [[111, "alternatives-to-anaconda"]], "Memory issues": [[111, "memory-issues"]], "Note on python versions": [[111, "note-on-python-versions"]], "Installing from source": [[111, "installing-from-source"]], "Getting the source": [[111, "getting-the-source"]], "Building and installing": [[111, "building-and-installing"], [111, "id4"]], "Install from source (all operating systems)": [[111, "install-from-source-all-operating-systems"]], "Install from source for Unix (e.g Linux, OSX)": [[111, "install-from-source-for-unix-e-g-linux-osx"]], "Ubuntu/Debian": [[111, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[111, "fedora-mandriva-maybe-redhat"]], "OpenMP with OSX": [[111, "openmp-with-osx"]], "Under Anaconda": [[111, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[111, "under-homebrew-python-or-python-org-python"]], "Testing": [[111, "testing"]], "Documentation (Unix only)": [[111, "documentation-unix-only"]], "Tip": [[111, "tip"]], "Troubleshooting": [[111, "troubleshooting"]], "Introduction to command line interfaces": [[112, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[113, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[113, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[113, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[113, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[114, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[114, "streamline-based-linear-registration"]], "RecoBundles": [[114, "recobundles"], [140, "recobundles"], [145, "recobundles"]], "Downloading DIPY datasets": [[115, "downloading-dipy-datasets"]], "Denoising using Overcomplete Local PCA": [[116, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[116, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[116, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[116, "overview-of-denoising-methods"]], "Diffusion": [[116, "diffusion"]], "Structural": [[116, "structural"]], "Gibbs Unringing": [[117, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[117, "suppress-gibbs-oscillations"]], "DIPY Workflows Interfaces": [[118, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[119, "between-volumes-motion-correction"]], "Motion Correction": [[119, "motion-correction"]], "Constrained Spherical Deconvolution (CSD)": [[120, "constrained-spherical-deconvolution-csd"]], "Diffusion Tensor Imaging (DTI)": [[120, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[120, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[120, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[120, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[121, "image-registration"]], "Symmetric Diffeomorphic Registration": [[121, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[121, "apply-a-transformation"]], "Tracking": [[122, "tracking"]], "Local Fiber Tracking": [[122, "local-fiber-tracking"]], "EuDX Tracking": [[122, "eudx-tracking"]], "Deterministic Tracking": [[122, "deterministic-tracking"]], "Probabilistic Tracking": [[122, "probabilistic-tracking"]], "Closest Peaks Tracking": [[122, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[122, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[122, "overview-of-fiber-tracking-methods"]], "What is DIPY?": [[123, "what-is-dipy"]], "Mission statement": [[124, "mission-statement"]], "A note about the examples": [[125, "a-note-about-the-examples"]], "Older Highlights": [[126, "older-highlights"]], "Past Announcements": [[127, "past-announcements"]], "dipy": [[129, "module-dipy"]], "Diffusion Imaging in Python": [[129, "diffusion-imaging-in-python"]], "Subpackages": [[129, "subpackages"]], "Utilities": [[129, "utilities"]], "bench": [[129, "bench"], [135, "bench"], [138, "bench"], [139, "bench"], [143, "bench"]], "get_info": [[129, "get-info"]], "setup_test": [[129, "setup-test"]], "test": [[129, "test"], [133, "test"], [135, "test"], [138, "test"], [139, "test"], [143, "test"]], "__config__": [[130, "module-dipy.__config__"]], "align": [[131, "module-dipy.align"]], "Module: align._public": [[131, "module-dipy.align._public"]], "Module: align.bundlemin": [[131, "module-dipy.align.bundlemin"]], "Module: align.crosscorr": [[131, "module-dipy.align.crosscorr"]], "Module: align.expectmax": [[131, "module-dipy.align.expectmax"]], "Module: align.imaffine": [[131, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[131, "module-dipy.align.imwarp"]], "Module: align.metrics": [[131, "module-dipy.align.metrics"]], "Module: align.parzenhist": [[131, "module-dipy.align.parzenhist"]], "Module: align.reslice": [[131, "module-dipy.align.reslice"]], "Module: align.scalespace": [[131, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[131, "module-dipy.align.streamlinear"]], "Module: align.sumsqdiff": [[131, "module-dipy.align.sumsqdiff"]], "Module: align.transforms": [[131, "module-dipy.align.transforms"]], "Module: align.vector_fields": [[131, "module-dipy.align.vector_fields"]], "Bunch": [[131, "bunch"], [131, "id53"]], "floating": [[131, "floating"], [131, "id57"], [131, "id62"], [131, "id73"]], "affine_registration": [[131, "affine-registration"], [131, "id13"], [145, "affine-registration"]], "read_mapping": [[131, "read-mapping"], [131, "id14"]], "register_dwi_series": [[131, "register-dwi-series"], [131, "id15"]], "register_dwi_to_template": [[131, "register-dwi-to-template"], [131, "id16"]], "register_series": [[131, "register-series"], [131, "id17"]], "resample": [[131, "resample"], [131, "id18"]], "streamline_registration": [[131, "streamline-registration"], [131, "id19"]], "syn_registration": [[131, "syn-registration"], [131, "id20"]], "write_mapping": [[131, "write-mapping"], [131, "id21"]], "AffineMap": [[131, "affinemap"], [131, "id48"], [145, "affinemap"]], "AffineRegistration": [[131, "affineregistration"], [131, "id49"]], "AffineTransform3D": [[131, "affinetransform3d"], [131, "id99"]], "CCMetric": [[131, "ccmetric"], [131, "id59"], [145, "ccmetric"]], "DiffeomorphicMap": [[131, "diffeomorphicmap"], [131, "id54"], [145, "diffeomorphicmap"]], "EMMetric": [[131, "emmetric"], [131, "id60"], [145, "emmetric"]], "MutualInformationMetric": [[131, "mutualinformationmetric"], [131, "id50"]], "RigidIsoScalingTransform3D": [[131, "rigidisoscalingtransform3d"], [131, "id100"]], "RigidScalingTransform3D": [[131, "rigidscalingtransform3d"], [131, "id101"]], "RigidTransform3D": [[131, "rigidtransform3d"], [131, "id102"]], "SSDMetric": [[131, "ssdmetric"], [131, "id61"], [145, "ssdmetric"]], "StreamlineLinearRegistration": [[131, "streamlinelinearregistration"], [131, "id76"], [140, "streamlinelinearregistration"]], "SymmetricDiffeomorphicRegistration": [[131, "symmetricdiffeomorphicregistration"], [131, "id56"], [145, "symmetricdiffeomorphicregistration"]], "TranslationTransform3D": [[131, "translationtransform3d"], [131, "id103"]], "partial": [[131, "partial"], [135, "partial"]], "load_nifti": [[131, "load-nifti"], [134, "load-nifti"], [134, "id38"], [137, "load-nifti"], [145, "load-nifti"], [145, "id38"], [145, "id57"], [145, "id60"], [145, "id130"], [145, "id151"], [145, "id179"], [145, "id192"], [145, "id200"]], "load_trk": [[131, "load-trk"], [134, "load-trk"], [137, "load-trk"]], "read_img_arr_or_path": [[131, "read-img-arr-or-path"], [137, "read-img-arr-or-path"]], "save_nifti": [[131, "save-nifti"], [134, "save-nifti"], [137, "save-nifti"], [137, "id13"], [145, "save-nifti"], [145, "id52"], [145, "id58"], [145, "id61"], [145, "id136"], [145, "id154"], [145, "id182"]], "set_number_of_points": [[131, "set-number-of-points"], [131, "id90"], [140, "set-number-of-points"], [140, "id29"], [140, "id41"], [142, "set-number-of-points"], [143, "set-number-of-points"], [143, "id19"], [143, "id36"], [143, "id52"]], "transform_centers_of_mass": [[131, "transform-centers-of-mass"], [131, "id51"]], "transform_tracking_output": [[131, "transform-tracking-output"], [143, "transform-tracking-output"]], "warn": [[131, "warn"], [131, "id52"], [133, "warn"], [135, "warn"], [135, "id40"], [139, "warn"], [139, "id736"], [139, "id899"], [139, "id910"], [139, "id1016"], [139, "id1055"], [140, "warn"], [143, "warn"], [143, "id38"], [143, "id58"], [144, "warn"], [145, "warn"], [145, "id54"], [145, "id137"]], "determine_num_threads": [[131, "determine-num-threads"], [135, "determine-num-threads"], [135, "id44"], [143, "determine-num-threads"]], "distance_matrix_mdf": [[131, "distance-matrix-mdf"], [131, "id82"]], "compute_cc_backward_step_2d": [[131, "compute-cc-backward-step-2d"]], "compute_cc_backward_step_3d": [[131, "compute-cc-backward-step-3d"]], "compute_cc_forward_step_2d": [[131, "compute-cc-forward-step-2d"]], "compute_cc_forward_step_3d": [[131, "compute-cc-forward-step-3d"]], "precompute_cc_factors_2d": [[131, "precompute-cc-factors-2d"]], "precompute_cc_factors_2d_test": [[131, "precompute-cc-factors-2d-test"]], "precompute_cc_factors_3d": [[131, "precompute-cc-factors-3d"]], "precompute_cc_factors_3d_test": [[131, "precompute-cc-factors-3d-test"]], "compute_em_demons_step_2d": [[131, "compute-em-demons-step-2d"]], "compute_em_demons_step_3d": [[131, "compute-em-demons-step-3d"]], "compute_masked_class_stats_2d": [[131, "compute-masked-class-stats-2d"]], "compute_masked_class_stats_3d": [[131, "compute-masked-class-stats-3d"]], "quantize_positive_2d": [[131, "quantize-positive-2d"]], "quantize_positive_3d": [[131, "quantize-positive-3d"]], "AffineInvalidValuesError": [[131, "affineinvalidvalueserror"]], "AffineInversionError": [[131, "affineinversionerror"]], "IsotropicScaleSpace": [[131, "isotropicscalespace"], [131, "id71"]], "Optimizer": [[131, "optimizer"], [131, "id75"], [133, "optimizer"], [139, "optimizer"]], "ParzenJointHistogram": [[131, "parzenjointhistogram"], [131, "id66"]], "ScaleSpace": [[131, "scalespace"], [131, "id55"], [131, "id72"]], "compute_parzen_mi": [[131, "compute-parzen-mi"], [131, "id67"]], "deprecated_params": [[131, "deprecated-params"], [135, "deprecated-params"], [136, "deprecated-params"], [136, "id18"], [139, "deprecated-params"], [140, "deprecated-params"], [145, "deprecated-params"], [145, "id113"]], "get_direction_and_spacings": [[131, "get-direction-and-spacings"], [131, "id58"]], "interpolate_scalar_2d": [[131, "interpolate-scalar-2d"], [133, "interpolate-scalar-2d"]], "interpolate_scalar_3d": [[131, "interpolate-scalar-3d"], [133, "interpolate-scalar-3d"], [143, "interpolate-scalar-3d"]], "sample_domain_regular": [[131, "sample-domain-regular"], [131, "id68"]], "transform_geometric_centers": [[131, "transform-geometric-centers"]], "transform_origins": [[131, "transform-origins"]], "DiffeomorphicRegistration": [[131, "diffeomorphicregistration"]], "Streamlines": [[131, "streamlines"], [131, "id81"], [137, "streamlines"], [137, "id16"], [140, "streamlines"], [140, "id19"], [142, "streamlines"], [143, "streamlines"], [143, "id6"], [143, "id33"], [143, "id39"], [144, "streamlines"], [145, "streamlines"]], "mult_aff": [[131, "mult-aff"]], "SimilarityMetric": [[131, "similaritymetric"]], "gradient": [[131, "gradient"], [131, "id104"], [143, "gradient"]], "v_cycle_2d": [[131, "v-cycle-2d"]], "v_cycle_3d": [[131, "v-cycle-3d"]], "cubic_spline": [[131, "cubic-spline"]], "cubic_spline_derivative": [[131, "cubic-spline-derivative"]], "Pool": [[131, "pool"], [135, "pool"], [136, "pool"], [136, "id17"]], "affine_transform": [[131, "affine-transform"]], "determine_num_processes": [[131, "determine-num-processes"], [135, "determine-num-processes"], [136, "determine-num-processes"], [136, "id19"], [139, "determine-num-processes"]], "reslice": [[131, "reslice"], [145, "reslice"]], "gaussian_filter": [[131, "gaussian-filter"]], "BundleMinDistanceAsymmetricMetric": [[131, "bundlemindistanceasymmetricmetric"], [140, "bundlemindistanceasymmetricmetric"]], "BundleMinDistanceMatrixMetric": [[131, "bundlemindistancematrixmetric"]], "BundleMinDistanceMetric": [[131, "bundlemindistancemetric"], [140, "bundlemindistancemetric"]], "BundleSumDistanceMatrixMetric": [[131, "bundlesumdistancematrixmetric"], [140, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[131, "jointbundlemindistancemetric"]], "JointStreamlineRegistrationMap": [[131, "jointstreamlineregistrationmap"]], "StreamlineDistanceMetric": [[131, "streamlinedistancemetric"]], "StreamlineRegistrationMap": [[131, "streamlineregistrationmap"]], "combinations": [[131, "combinations"], [143, "combinations"]], "bundle_min_distance": [[131, "bundle-min-distance"]], "bundle_min_distance_asymmetric_fast": [[131, "bundle-min-distance-asymmetric-fast"]], "bundle_min_distance_fast": [[131, "bundle-min-distance-fast"]], "bundle_sum_distance": [[131, "bundle-sum-distance"]], "center_streamlines": [[131, "center-streamlines"], [143, "center-streamlines"]], "compose_matrix": [[131, "compose-matrix"], [133, "compose-matrix"]], "compose_matrix44": [[131, "compose-matrix44"]], "compose_transformations": [[131, "compose-transformations"], [133, "compose-transformations"]], "decompose_matrix": [[131, "decompose-matrix"], [133, "decompose-matrix"]], "decompose_matrix44": [[131, "decompose-matrix44"]], "get_unique_pairs": [[131, "get-unique-pairs"]], "groupwise_slr": [[131, "groupwise-slr"]], "length": [[131, "length"], [140, "length"], [143, "length"], [143, "id18"], [143, "id35"], [143, "id51"], [143, "id56"], [144, "length"]], "progressive_slr": [[131, "progressive-slr"]], "qbx_and_merge": [[131, "qbx-and-merge"], [140, "qbx-and-merge"], [140, "id38"], [144, "qbx-and-merge"]], "remove_clusters_by_size": [[131, "remove-clusters-by-size"]], "select_random_set_of_streamlines": [[131, "select-random-set-of-streamlines"], [140, "select-random-set-of-streamlines"], [143, "select-random-set-of-streamlines"]], "slr_with_qbx": [[131, "slr-with-qbx"], [145, "slr-with-qbx"]], "time": [[131, "time"], [140, "time"], [140, "id42"], [145, "time"], [145, "id183"]], "transform_streamlines": [[131, "transform-streamlines"], [137, "transform-streamlines"], [143, "transform-streamlines"], [143, "id37"], [145, "transform-streamlines"], [145, "id184"]], "unlist_streamlines": [[131, "unlist-streamlines"], [143, "unlist-streamlines"]], "whole_brain_slr": [[131, "whole-brain-slr"]], "compute_energy_ssd_2d": [[131, "compute-energy-ssd-2d"]], "compute_energy_ssd_3d": [[131, "compute-energy-ssd-3d"]], "compute_residual_displacement_field_ssd_2d": [[131, "compute-residual-displacement-field-ssd-2d"]], "compute_residual_displacement_field_ssd_3d": [[131, "compute-residual-displacement-field-ssd-3d"]], "compute_ssd_demons_step_2d": [[131, "compute-ssd-demons-step-2d"]], "compute_ssd_demons_step_3d": [[131, "compute-ssd-demons-step-3d"]], "iterate_residual_displacement_field_ssd_2d": [[131, "iterate-residual-displacement-field-ssd-2d"]], "iterate_residual_displacement_field_ssd_3d": [[131, "iterate-residual-displacement-field-ssd-3d"]], "solve_2d_symmetric_positive_definite": [[131, "solve-2d-symmetric-positive-definite"]], "solve_3d_symmetric_positive_definite": [[131, "solve-3d-symmetric-positive-definite"]], "AffineTransform2D": [[131, "affinetransform2d"]], "RigidIsoScalingTransform2D": [[131, "rigidisoscalingtransform2d"]], "RigidScalingTransform2D": [[131, "rigidscalingtransform2d"]], "RigidTransform2D": [[131, "rigidtransform2d"]], "RotationTransform2D": [[131, "rotationtransform2d"]], "RotationTransform3D": [[131, "rotationtransform3d"]], "ScalingTransform2D": [[131, "scalingtransform2d"]], "ScalingTransform3D": [[131, "scalingtransform3d"]], "Transform": [[131, "transform"]], "TranslationTransform2D": [[131, "translationtransform2d"]], "compose_vector_fields_2d": [[131, "compose-vector-fields-2d"]], "compose_vector_fields_3d": [[131, "compose-vector-fields-3d"]], "create_circle": [[131, "create-circle"]], "create_harmonic_fields_2d": [[131, "create-harmonic-fields-2d"]], "create_harmonic_fields_3d": [[131, "create-harmonic-fields-3d"]], "create_random_displacement_2d": [[131, "create-random-displacement-2d"]], "create_random_displacement_3d": [[131, "create-random-displacement-3d"]], "create_sphere": [[131, "create-sphere"]], "downsample_displacement_field_2d": [[131, "downsample-displacement-field-2d"]], "downsample_displacement_field_3d": [[131, "downsample-displacement-field-3d"]], "downsample_scalar_field_2d": [[131, "downsample-scalar-field-2d"]], "downsample_scalar_field_3d": [[131, "downsample-scalar-field-3d"]], "invert_vector_field_fixed_point_2d": [[131, "invert-vector-field-fixed-point-2d"]], "invert_vector_field_fixed_point_3d": [[131, "invert-vector-field-fixed-point-3d"]], "is_valid_affine": [[131, "is-valid-affine"]], "reorient_vector_field_2d": [[131, "reorient-vector-field-2d"]], "reorient_vector_field_3d": [[131, "reorient-vector-field-3d"]], "resample_displacement_field_2d": [[131, "resample-displacement-field-2d"]], "resample_displacement_field_3d": [[131, "resample-displacement-field-3d"]], "simplify_warp_function_2d": [[131, "simplify-warp-function-2d"]], "simplify_warp_function_3d": [[131, "simplify-warp-function-3d"]], "sparse_gradient": [[131, "sparse-gradient"]], "transform_2d_affine": [[131, "transform-2d-affine"]], "transform_2d_affine_nn": [[131, "transform-2d-affine-nn"]], "transform_3d_affine": [[131, "transform-3d-affine"]], "transform_3d_affine_nn": [[131, "transform-3d-affine-nn"]], "warp_2d": [[131, "warp-2d"]], "warp_2d_nn": [[131, "warp-2d-nn"]], "warp_3d": [[131, "warp-3d"]], "warp_3d_nn": [[131, "warp-3d-nn"]], "warp_coordinates_2d": [[131, "warp-coordinates-2d"]], "warp_coordinates_3d": [[131, "warp-coordinates-3d"]], "boots": [[132, "module-dipy.boots"]], "core": [[133, "module-dipy.core"]], "Module: core.benchmarks": [[133, "module-dipy.core.benchmarks"]], "Module: core.benchmarks.bench_sphere": [[133, "module-dipy.core.benchmarks.bench_sphere"]], "Module: core.geometry": [[133, "module-dipy.core.geometry"]], "Module: core.gradients": [[133, "module-dipy.core.gradients"]], "Module: core.graph": [[133, "module-dipy.core.graph"]], "Module: core.histeq": [[133, "module-dipy.core.histeq"]], "Module: core.interpolation": [[133, "module-dipy.core.interpolation"]], "Module: core.ndindex": [[133, "module-dipy.core.ndindex"]], "Module: core.onetime": [[133, "module-dipy.core.onetime"]], "Module: core.optimize": [[133, "module-dipy.core.optimize"]], "Module: core.profile": [[133, "module-dipy.core.profile"]], "Module: core.rng": [[133, "module-dipy.core.rng"]], "Module: core.sphere": [[133, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[133, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[133, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[133, "module-dipy.core.wavelet"]], "Timer": [[133, "timer"]], "bench_disperse_charges_alt": [[133, "bench-disperse-charges-alt"]], "func_minimize_adhoc": [[133, "func-minimize-adhoc"]], "func_minimize_scipy": [[133, "func-minimize-scipy"]], "cart2sphere": [[133, "cart2sphere"], [133, "id60"], [139, "cart2sphere"], [139, "id236"], [139, "id482"], [139, "id676"], [139, "id873"], [139, "id967"], [139, "id1040"]], "cart_distance": [[133, "cart-distance"]], "circumradius": [[133, "circumradius"]], "dist_to_corner": [[133, "dist-to-corner"], [143, "dist-to-corner"], [143, "id55"]], "euler_matrix": [[133, "euler-matrix"]], "is_hemispherical": [[133, "is-hemispherical"]], "lambert_equal_area_projection_cart": [[133, "lambert-equal-area-projection-cart"]], "lambert_equal_area_projection_polar": [[133, "lambert-equal-area-projection-polar"]], "nearest_pos_semi_def": [[133, "nearest-pos-semi-def"]], "normalized_vector": [[133, "normalized-vector"]], "perpendicular_directions": [[133, "perpendicular-directions"], [139, "perpendicular-directions"]], "rodrigues_axis_rotation": [[133, "rodrigues-axis-rotation"]], "sph2latlon": [[133, "sph2latlon"]], "sphere2cart": [[133, "sphere2cart"], [133, "id62"], [139, "sphere2cart"], [141, "sphere2cart"]], "sphere_distance": [[133, "sphere-distance"]], "vec2vec_rotmat": [[133, "vec2vec-rotmat"], [133, "id9"], [139, "vec2vec-rotmat"], [139, "id942"], [141, "vec2vec-rotmat"], [141, "id35"]], "vector_cosine": [[133, "vector-cosine"]], "vector_norm": [[133, "vector-norm"], [133, "id10"], [133, "id63"], [139, "vector-norm"]], "GradientTable": [[133, "gradienttable"], [134, "gradienttable"], [139, "gradienttable"], [139, "id737"], [141, "gradienttable"]], "HemiSphere": [[133, "hemisphere"], [133, "id58"], [133, "id65"], [134, "hemisphere"], [135, "hemisphere"], [138, "hemisphere"]], "auto_attr": [[133, "auto-attr"], [133, "id11"], [133, "id59"], [139, "auto-attr"], [139, "id421"], [139, "id795"], [139, "id906"], [139, "id920"], [139, "id949"], [139, "id963"]], "btens_to_params": [[133, "btens-to-params"]], "check_multi_b": [[133, "check-multi-b"], [139, "check-multi-b"], [139, "id510"], [139, "id801"]], "deprecate_with_version": [[133, "deprecate-with-version"], [137, "deprecate-with-version"], [139, "deprecate-with-version"], [139, "id978"], [143, "deprecate-with-version"]], "disperse_charges": [[133, "disperse-charges"], [133, "id61"], [135, "disperse-charges"]], "generate_bvecs": [[133, "generate-bvecs"]], "get_bval_indices": [[133, "get-bval-indices"], [138, "get-bval-indices"], [139, "get-bval-indices"], [139, "id921"]], "gradient_table": [[133, "gradient-table"], [134, "gradient-table"], [134, "id37"], [139, "gradient-table"], [139, "id681"], [139, "id758"], [139, "id923"], [141, "gradient-table"], [145, "gradient-table"], [145, "id37"], [145, "id129"], [145, "id178"]], "gradient_table_from_bvals_bvecs": [[133, "gradient-table-from-bvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[133, "gradient-table-from-gradient-strength-bvecs"], [134, "gradient-table-from-gradient-strength-bvecs"], [139, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table_from_qvals_bvecs": [[133, "gradient-table-from-qvals-bvecs"]], "inv": [[133, "inv"]], "orientation_from_string": [[133, "orientation-from-string"], [137, "orientation-from-string"], [137, "id4"]], "orientation_to_string": [[133, "orientation-to-string"], [137, "orientation-to-string"], [137, "id5"]], "ornt_mapping": [[133, "ornt-mapping"], [137, "ornt-mapping"], [137, "id6"]], "params_to_btens": [[133, "params-to-btens"]], "polar": [[133, "polar"]], "reorient_bvecs": [[133, "reorient-bvecs"]], "reorient_on_axis": [[133, "reorient-on-axis"], [137, "reorient-on-axis"], [137, "id8"]], "reorient_vectors": [[133, "reorient-vectors"], [137, "reorient-vectors"], [137, "id9"]], "round_bvals": [[133, "round-bvals"], [139, "round-bvals"]], "unique_bvals": [[133, "unique-bvals"]], "unique_bvals_magnitude": [[133, "unique-bvals-magnitude"], [138, "unique-bvals-magnitude"], [139, "unique-bvals-magnitude"]], "unique_bvals_tolerance": [[133, "unique-bvals-tolerance"], [139, "unique-bvals-tolerance"], [139, "id941"]], "Graph": [[133, "graph"]], "histeq": [[133, "histeq"]], "Interpolator": [[133, "interpolator"]], "NearestNeighborInterpolator": [[133, "nearestneighborinterpolator"]], "OutsideImage": [[133, "outsideimage"]], "TriLinearInterpolator": [[133, "trilinearinterpolator"]], "interp_rbf": [[133, "interp-rbf"]], "interpolate_scalar_nn_2d": [[133, "interpolate-scalar-nn-2d"]], "interpolate_scalar_nn_3d": [[133, "interpolate-scalar-nn-3d"]], "interpolate_vector_2d": [[133, "interpolate-vector-2d"]], "interpolate_vector_3d": [[133, "interpolate-vector-3d"], [143, "interpolate-vector-3d"]], "map_coordinates_trilinear_iso": [[133, "map-coordinates-trilinear-iso"]], "nearestneighbor_interpolate": [[133, "nearestneighbor-interpolate"]], "trilinear_interp": [[133, "trilinear-interp"]], "trilinear_interpolate4d": [[133, "trilinear-interpolate4d"]], "as_strided": [[133, "as-strided"], [139, "as-strided"]], "ndindex": [[133, "ndindex"], [136, "ndindex"], [136, "id23"], [139, "ndindex"], [139, "id132"], [139, "id263"], [139, "id375"], [139, "id522"], [139, "id806"], [139, "id815"], [139, "id908"]], "OneTimeProperty": [[133, "onetimeproperty"]], "ResetMixin": [[133, "resetmixin"]], "NonNegativeLeastSquares": [[133, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[133, "positivedefiniteleastsquares"], [139, "positivedefiniteleastsquares"]], "SKLearnLinearSolver": [[133, "sklearnlinearsolver"]], "Version": [[133, "version"], [135, "version"], [135, "id14"], [137, "version"], [138, "version"], [138, "id11"], [139, "version"], [139, "id481"], [139, "id550"], [139, "id671"], [139, "id756"], [139, "id870"], [139, "id905"], [139, "id1039"]], "minimize": [[133, "minimize"]], "optional_package": [[133, "optional-package"], [133, "id57"], [134, "optional-package"], [135, "optional-package"], [137, "optional-package"], [137, "id40"], [138, "optional-package"], [138, "id12"], [139, "optional-package"], [139, "id588"], [139, "id732"], [139, "id761"], [139, "id880"], [139, "id909"], [139, "id950"], [139, "id1046"], [142, "optional-package"], [144, "optional-package"], [144, "id4"], [144, "id10"], [144, "id13"], [144, "id14"], [144, "id16"], [144, "id18"], [145, "optional-package"], [145, "id203"]], "sparse_nnls": [[133, "sparse-nnls"]], "spdot": [[133, "spdot"]], "Profiler": [[133, "profiler"]], "LEcuyer": [[133, "lecuyer"]], "WichmannHill1982": [[133, "wichmannhill1982"]], "WichmannHill2006": [[133, "wichmannhill2006"]], "architecture": [[133, "architecture"]], "floor": [[133, "floor"]], "Sphere": [[133, "sphere"], [134, "sphere"], [135, "sphere"], [136, "sphere"], [136, "id15"], [137, "sphere"], [139, "sphere"]], "disperse_charges_alt": [[133, "disperse-charges-alt"]], "euler_characteristic_check": [[133, "euler-characteristic-check"]], "faces_from_sphere_vertices": [[133, "faces-from-sphere-vertices"]], "remove_similar_vertices": [[133, "remove-similar-vertices"], [136, "remove-similar-vertices"], [136, "id31"], [139, "remove-similar-vertices"]], "unique_edges": [[133, "unique-edges"]], "unique_sets": [[133, "unique-sets"]], "permutations": [[133, "permutations"]], "angular_similarity": [[133, "angular-similarity"]], "compare_orientation_sets": [[133, "compare-orientation-sets"]], "eigenstats": [[133, "eigenstats"]], "random_uniform_on_sphere": [[133, "random-uniform-on-sphere"]], "create_unit_hemisphere": [[133, "create-unit-hemisphere"]], "create_unit_sphere": [[133, "create-unit-sphere"]], "afb3D": [[133, "afb3d"]], "afb3D_A": [[133, "afb3d-a"]], "cshift3D": [[133, "cshift3d"]], "dwt3D": [[133, "dwt3d"]], "idwt3D": [[133, "idwt3d"]], "permutationinverse": [[133, "permutationinverse"]], "sfb3D": [[133, "sfb3d"]], "sfb3D_A": [[133, "sfb3d-a"]], "data": [[134, "module-dipy.data"]], "Module: data.fetcher": [[134, "module-dipy.data.fetcher"]], "DataError": [[134, "dataerror"]], "as_native_array": [[134, "as-native-array"]], "dirname": [[134, "dirname"]], "dsi_deconv_voxels": [[134, "dsi-deconv-voxels"]], "dsi_voxels": [[134, "dsi-voxels"]], "exists": [[134, "exists"]], "fetch_bundle_atlas_hcp842": [[134, "fetch-bundle-atlas-hcp842"], [134, "id10"]], "fetch_bundle_fa_hcp": [[134, "fetch-bundle-fa-hcp"], [134, "id11"]], "fetch_bundles_2_subjects": [[134, "fetch-bundles-2-subjects"], [134, "id12"]], "fetch_cenir_multib": [[134, "fetch-cenir-multib"], [134, "id13"]], "fetch_cfin_multib": [[134, "fetch-cfin-multib"], [134, "id14"]], "fetch_gold_standard_io": [[134, "fetch-gold-standard-io"], [134, "id15"]], "fetch_hbn": [[134, "fetch-hbn"], [134, "id16"]], "fetch_isbi2013_2shell": [[134, "fetch-isbi2013-2shell"], [134, "id18"]], "fetch_ivim": [[134, "fetch-ivim"], [134, "id19"]], "fetch_mni_template": [[134, "fetch-mni-template"], [134, "id20"]], "fetch_resdnn_weights": [[134, "fetch-resdnn-weights"], [134, "id22"]], "fetch_scil_b0": [[134, "fetch-scil-b0"], [134, "id23"]], "fetch_sherbrooke_3shell": [[134, "fetch-sherbrooke-3shell"], [134, "id24"]], "fetch_stanford_hardi": [[134, "fetch-stanford-hardi"], [134, "id25"]], "fetch_stanford_labels": [[134, "fetch-stanford-labels"], [134, "id26"]], "fetch_stanford_pve_maps": [[134, "fetch-stanford-pve-maps"], [134, "id27"]], "fetch_stanford_t1": [[134, "fetch-stanford-t1"], [134, "id28"]], "fetch_syn_data": [[134, "fetch-syn-data"], [134, "id29"]], "fetch_taiwan_ntu_dsi": [[134, "fetch-taiwan-ntu-dsi"], [134, "id30"]], "fetch_target_tractogram_hcp": [[134, "fetch-target-tractogram-hcp"], [134, "id31"]], "fetch_tissue_data": [[134, "fetch-tissue-data"], [134, "id32"]], "get_3shell_gtab": [[134, "get-3shell-gtab"]], "get_bundle_atlas_hcp842": [[134, "get-bundle-atlas-hcp842"], [134, "id33"]], "get_cmap": [[134, "get-cmap"]], "get_fnames": [[134, "get-fnames"], [134, "id34"], [138, "get-fnames"], [139, "get-fnames"], [140, "get-fnames"], [141, "get-fnames"], [143, "get-fnames"]], "get_gtab_taiwan_dsi": [[134, "get-gtab-taiwan-dsi"]], "get_isbi2013_2shell_gtab": [[134, "get-isbi2013-2shell-gtab"]], "get_sim_voxels": [[134, "get-sim-voxels"]], "get_skeleton": [[134, "get-skeleton"]], "get_sphere": [[134, "get-sphere"], [135, "get-sphere"], [138, "get-sphere"], [139, "get-sphere"], [139, "id246"], [139, "id371"], [139, "id442"], [139, "id922"], [145, "get-sphere"]], "get_target_tractogram_hcp": [[134, "get-target-tractogram-hcp"], [134, "id35"]], "get_two_hcp842_bundles": [[134, "get-two-hcp842-bundles"], [134, "id36"]], "load_npz": [[134, "load-npz"]], "load_sdp_constraints": [[134, "load-sdp-constraints"], [139, "load-sdp-constraints"]], "loads_compat": [[134, "loads-compat"]], "matlab_life_results": [[134, "matlab-life-results"]], "mrtrix_spherical_functions": [[134, "mrtrix-spherical-functions"]], "pjoin": [[134, "pjoin"], [134, "id39"], [145, "pjoin"]], "read_DiB_217_lte_pte_ste": [[134, "read-dib-217-lte-pte-ste"], [134, "id40"]], "read_DiB_70_lte_pte_ste": [[134, "read-dib-70-lte-pte-ste"], [134, "id41"]], "read_bundles_2_subjects": [[134, "read-bundles-2-subjects"], [134, "id42"]], "read_cenir_multib": [[134, "read-cenir-multib"], [134, "id45"]], "read_cfin_dwi": [[134, "read-cfin-dwi"], [134, "id46"]], "read_cfin_t1": [[134, "read-cfin-t1"], [134, "id47"]], "read_five_af_bundles": [[134, "read-five-af-bundles"], [134, "id48"]], "read_isbi2013_2shell": [[134, "read-isbi2013-2shell"], [134, "id49"]], "read_ivim": [[134, "read-ivim"], [134, "id50"]], "read_mni_template": [[134, "read-mni-template"], [134, "id51"]], "read_qte_lte_pte": [[134, "read-qte-lte-pte"], [134, "id57"]], "read_scil_b0": [[134, "read-scil-b0"], [134, "id58"]], "read_sherbrooke_3shell": [[134, "read-sherbrooke-3shell"], [134, "id59"]], "read_stanford_hardi": [[134, "read-stanford-hardi"], [134, "id60"]], "read_stanford_labels": [[134, "read-stanford-labels"], [134, "id61"], [139, "read-stanford-labels"]], "read_stanford_pve_maps": [[134, "read-stanford-pve-maps"], [134, "id62"]], "read_stanford_t1": [[134, "read-stanford-t1"], [134, "id63"]], "read_syn_data": [[134, "read-syn-data"], [134, "id64"]], "read_taiwan_ntu_dsi": [[134, "read-taiwan-ntu-dsi"], [134, "id65"]], "read_tissue_data": [[134, "read-tissue-data"], [134, "id66"]], "relist_streamlines": [[134, "relist-streamlines"], [143, "relist-streamlines"]], "two_cingulum_bundles": [[134, "two-cingulum-bundles"]], "FetcherError": [[134, "fetchererror"]], "TripWire": [[134, "tripwire"]], "tqdm": [[134, "tqdm"], [139, "tqdm"]], "check_md5": [[134, "check-md5"]], "copyfileobj": [[134, "copyfileobj"]], "copyfileobj_withprogress": [[134, "copyfileobj-withprogress"]], "extract_example_tracts": [[134, "extract-example-tracts"]], "fetch_DiB_217_lte_pte_ste": [[134, "fetch-dib-217-lte-pte-ste"]], "fetch_DiB_70_lte_pte_ste": [[134, "fetch-dib-70-lte-pte-ste"]], "fetch_data": [[134, "fetch-data"]], "fetch_file_formats": [[134, "fetch-file-formats"]], "fetch_fury_surface": [[134, "fetch-fury-surface"]], "fetch_hcp": [[134, "fetch-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[134, "fetch-qtdmri-test-retest-2subjects"]], "fetch_qte_lte_pte": [[134, "fetch-qte-lte-pte"]], "get_file_formats": [[134, "get-file-formats"]], "load_nifti_data": [[134, "load-nifti-data"], [137, "load-nifti-data"], [139, "load-nifti-data"], [145, "load-nifti-data"]], "md5": [[134, "md5"]], "read_bvals_bvecs": [[134, "read-bvals-bvecs"], [137, "read-bvals-bvecs"], [137, "id11"], [145, "read-bvals-bvecs"], [145, "id51"], [145, "id135"], [145, "id181"]], "read_qtdMRI_test_retest_2subjects": [[134, "read-qtdmri-test-retest-2subjects"]], "read_siemens_scil_b0": [[134, "read-siemens-scil-b0"]], "to_bids_description": [[134, "to-bids-description"]], "urlopen": [[134, "urlopen"]], "denoise": [[135, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[135, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.denspeed": [[135, "module-dipy.denoise.denspeed"]], "Module: denoise.enhancement_kernel": [[135, "module-dipy.denoise.enhancement_kernel"]], "Module: denoise.gibbs": [[135, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[135, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[135, "module-dipy.denoise.nlmeans"]], "Module: denoise.nlmeans_block": [[135, "module-dipy.denoise.nlmeans_block"]], "Module: denoise.noise_estimate": [[135, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[135, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[135, "module-dipy.denoise.patch2self"]], "Module: denoise.pca_noise_estimate": [[135, "module-dipy.denoise.pca_noise_estimate"]], "Module: denoise.shift_twist_convolution": [[135, "module-dipy.denoise.shift_twist_convolution"]], "adaptive_soft_matching": [[135, "adaptive-soft-matching"]], "add_padding_reflection": [[135, "add-padding-reflection"]], "correspond_indices": [[135, "correspond-indices"]], "nlmeans_3d": [[135, "nlmeans-3d"], [135, "id30"]], "remove_padding": [[135, "remove-padding"]], "EnhancementKernel": [[135, "enhancementkernel"]], "ceil": [[135, "ceil"]], "gettempdir": [[135, "gettempdir"]], "gibbs_removal": [[135, "gibbs-removal"], [145, "gibbs-removal"]], "eigh": [[135, "eigh"]], "genpca": [[135, "genpca"]], "localpca": [[135, "localpca"], [145, "localpca"]], "mppca": [[135, "mppca"], [145, "mppca"]], "nlmeans": [[135, "nlmeans"], [145, "nlmeans"]], "firdn": [[135, "firdn"]], "nlmeans_block": [[135, "nlmeans-block"], [135, "id37"]], "upfir": [[135, "upfir"]], "convolve": [[135, "convolve"], [135, "id43"]], "estimate_sigma": [[135, "estimate-sigma"], [145, "estimate-sigma"]], "piesno": [[135, "piesno"]], "non_local_means": [[135, "non-local-means"]], "patch2self": [[135, "patch2self"], [145, "patch2self"]], "pca_noise_estimate": [[135, "pca-noise-estimate"], [145, "pca-noise-estimate"]], "convolve_sf": [[135, "convolve-sf"]], "sf_to_sh": [[135, "sf-to-sh"], [138, "sf-to-sh"], [139, "sf-to-sh"]], "sh_to_sf": [[135, "sh-to-sf"], [138, "sh-to-sf"], [139, "sh-to-sf"]], "direction": [[136, "module-dipy.direction"]], "Module: direction.bootstrap_direction_getter": [[136, "module-dipy.direction.bootstrap_direction_getter"]], "Module: direction.closest_peak_direction_getter": [[136, "module-dipy.direction.closest_peak_direction_getter"]], "Module: direction.peaks": [[136, "module-dipy.direction.peaks"]], "Module: direction.pmf": [[136, "module-dipy.direction.pmf"]], "Module: direction.probabilistic_direction_getter": [[136, "module-dipy.direction.probabilistic_direction_getter"]], "BootDirectionGetter": [[136, "bootdirectiongetter"], [136, "id10"]], "ClosestPeakDirectionGetter": [[136, "closestpeakdirectiongetter"], [136, "id11"], [145, "closestpeakdirectiongetter"]], "DeterministicMaximumDirectionGetter": [[136, "deterministicmaximumdirectiongetter"], [136, "id40"], [145, "deterministicmaximumdirectiongetter"]], "EuDXDirectionGetter": [[136, "eudxdirectiongetter"], [136, "id13"], [139, "eudxdirectiongetter"]], "PeaksAndMetrics": [[136, "peaksandmetrics"], [136, "id14"], [137, "peaksandmetrics"]], "ProbabilisticDirectionGetter": [[136, "probabilisticdirectiongetter"], [136, "id41"], [145, "probabilisticdirectiongetter"]], "repeat": [[136, "repeat"], [136, "id16"]], "gfa": [[136, "gfa"], [136, "id20"], [139, "gfa"]], "local_maxima": [[136, "local-maxima"], [136, "id22"], [139, "local-maxima"], [139, "id912"]], "peak_directions": [[136, "peak-directions"], [136, "id12"], [136, "id24"]], "peak_directions_nl": [[136, "peak-directions-nl"], [136, "id25"]], "peaks_from_model": [[136, "peaks-from-model"], [136, "id26"], [139, "peaks-from-model"], [145, "peaks-from-model"]], "reshape_peaks_for_visualization": [[136, "reshape-peaks-for-visualization"], [136, "id32"], [137, "reshape-peaks-for-visualization"]], "search_descending": [[136, "search-descending"], [136, "id33"], [139, "search-descending"]], "sh_to_sf_matrix": [[136, "sh-to-sf-matrix"], [136, "id34"], [139, "sh-to-sf-matrix"]], "BootPmfGen": [[136, "bootpmfgen"], [136, "id39"]], "BaseDirectionGetter": [[136, "basedirectiongetter"]], "BasePmfDirectionGetter": [[136, "basepmfdirectiongetter"]], "PmfGenDirectionGetter": [[136, "pmfgendirectiongetter"]], "PmfGen": [[136, "pmfgen"]], "SHCoeffPmfGen": [[136, "shcoeffpmfgen"]], "SimplePmfGen": [[136, "simplepmfgen"]], "random": [[136, "random"], [143, "random"]], "io": [[137, "module-dipy.io"]], "Module: io.bvectxt": [[137, "module-dipy.io.bvectxt"]], "Module: io.dpy": [[137, "module-dipy.io.dpy"]], "Module: io.gradients": [[137, "module-dipy.io.gradients"]], "Module: io.image": [[137, "module-dipy.io.image"]], "Module: io.peaks": [[137, "module-dipy.io.peaks"]], "Module: io.pickles": [[137, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[137, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[137, "module-dipy.io.streamline"]], "Module: io.utils": [[137, "module-dipy.io.utils"]], "Module: io.vtk": [[137, "module-dipy.io.vtk"]], "Dpy": [[137, "dpy"], [137, "id10"], [137, "id23"]], "load_pickle": [[137, "load-pickle"], [137, "id14"]], "read_bvec_file": [[137, "read-bvec-file"], [137, "id7"]], "save_pickle": [[137, "save-pickle"], [137, "id15"]], "splitext": [[137, "splitext"], [137, "id12"]], "save_qa_metric": [[137, "save-qa-metric"], [145, "save-qa-metric"]], "load_peaks": [[137, "load-peaks"], [145, "load-peaks"], [145, "id193"], [145, "id201"]], "peaks_to_niftis": [[137, "peaks-to-niftis"], [145, "peaks-to-niftis"]], "save_peaks": [[137, "save-peaks"], [145, "save-peaks"]], "Origin": [[137, "origin"], [137, "id24"]], "PerArrayDict": [[137, "perarraydict"]], "PerArraySequenceDict": [[137, "perarraysequencedict"]], "Space": [[137, "space"], [137, "id25"], [144, "space"], [145, "space"], [145, "id189"]], "StatefulTractogram": [[137, "statefultractogram"], [137, "id26"], [144, "statefultractogram"], [145, "statefultractogram"], [145, "id190"]], "Tractogram": [[137, "tractogram"], [137, "id27"]], "product": [[137, "product"]], "apply_affine": [[137, "apply-affine"], [140, "apply-affine"], [143, "apply-affine"], [143, "id53"]], "bisect": [[137, "bisect"]], "deepcopy": [[137, "deepcopy"], [137, "id32"], [143, "deepcopy"]], "get_reference_info": [[137, "get-reference-info"], [137, "id36"]], "is_header_compatible": [[137, "is-header-compatible"], [137, "id33"], [137, "id37"]], "is_reference_info_valid": [[137, "is-reference-info-valid"], [137, "id38"]], "set_sft_logger_level": [[137, "set-sft-logger-level"]], "create_tractogram_header": [[137, "create-tractogram-header"], [137, "id34"]], "detect_format": [[137, "detect-format"], [137, "id35"]], "load_dpy": [[137, "load-dpy"]], "load_fib": [[137, "load-fib"]], "load_generator": [[137, "load-generator"]], "load_tck": [[137, "load-tck"]], "load_tractogram": [[137, "load-tractogram"], [140, "load-tractogram"], [143, "load-tractogram"], [145, "load-tractogram"], [145, "id180"], [145, "id202"]], "load_vtk": [[137, "load-vtk"]], "load_vtk_streamlines": [[137, "load-vtk-streamlines"], [137, "id39"]], "load_vtp": [[137, "load-vtp"]], "save_dpy": [[137, "save-dpy"]], "save_fib": [[137, "save-fib"]], "save_generator": [[137, "save-generator"]], "save_tck": [[137, "save-tck"]], "save_tractogram": [[137, "save-tractogram"], [144, "save-tractogram"], [145, "save-tractogram"], [145, "id194"]], "save_trk": [[137, "save-trk"]], "save_vtk": [[137, "save-vtk"]], "save_vtk_streamlines": [[137, "save-vtk-streamlines"], [137, "id41"]], "save_vtp": [[137, "save-vtp"]], "Nifti1Image": [[137, "nifti1image"]], "create_nifti_header": [[137, "create-nifti-header"], [145, "create-nifti-header"]], "decfa": [[137, "decfa"]], "decfa_to_float": [[137, "decfa-to-float"]], "make5d": [[137, "make5d"]], "nifti1_symmat": [[137, "nifti1-symmat"], [145, "nifti1-symmat"]], "save_buan_profiles_hdf5": [[137, "save-buan-profiles-hdf5"], [142, "save-buan-profiles-hdf5"]], "load_polydata": [[137, "load-polydata"]], "save_polydata": [[137, "save-polydata"]], "setup_module": [[137, "setup-module"], [144, "setup-module"], [144, "id11"], [144, "id15"], [144, "id17"], [145, "setup-module"]], "nn": [[138, "module-dipy.nn"]], "Module: nn.histo_resdnn": [[138, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[138, "module-dipy.nn.model"]], "HistoResDNN": [[138, "historesdnn"]], "doctest_skip_parser": [[138, "doctest-skip-parser"], [144, "doctest-skip-parser"]], "set_logger_level": [[138, "set-logger-level"]], "sph_harm_ind_list": [[138, "sph-harm-ind-list"], [139, "sph-harm-ind-list"], [139, "id735"], [139, "id1015"]], "MultipleLayerPercepton": [[138, "multiplelayerpercepton"]], "SingleLayerPerceptron": [[138, "singlelayerperceptron"]], "reconst": [[139, "module-dipy.reconst"]], "Module: reconst.base": [[139, "module-dipy.reconst.base"]], "Module: reconst.benchmarks": [[139, "module-dipy.reconst.benchmarks"]], "Module: reconst.benchmarks.bench_bounding_box": [[139, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "Module: reconst.benchmarks.bench_csd": [[139, "module-dipy.reconst.benchmarks.bench_csd"]], "Module: reconst.benchmarks.bench_peaks": [[139, "module-dipy.reconst.benchmarks.bench_peaks"]], "Module: reconst.benchmarks.bench_squash": [[139, "module-dipy.reconst.benchmarks.bench_squash"]], "Module: reconst.benchmarks.bench_vec_val_sum": [[139, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "Module: reconst.cache": [[139, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[139, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[139, "module-dipy.reconst.csdeconv"]], "Module: reconst.dki": [[139, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[139, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[139, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[139, "module-dipy.reconst.dti"]], "Module: reconst.eudx_direction_getter": [[139, "module-dipy.reconst.eudx_direction_getter"]], "Module: reconst.forecast": [[139, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[139, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[139, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[139, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[139, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[139, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[139, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[139, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[139, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[139, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[139, "module-dipy.reconst.qti"]], "Module: reconst.quick_squash": [[139, "module-dipy.reconst.quick_squash"]], "Module: reconst.recspeed": [[139, "module-dipy.reconst.recspeed"]], "Module: reconst.rumba": [[139, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[139, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[139, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[139, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[139, "module-dipy.reconst.utils"]], "Module: reconst.vec_val_sum": [[139, "module-dipy.reconst.vec_val_sum"]], "ReconstFit": [[139, "reconstfit"], [139, "id669"], [139, "id809"], [139, "id818"], [139, "id944"], [143, "reconstfit"]], "ReconstModel": [[139, "reconstmodel"], [139, "id210"], [139, "id398"], [139, "id498"], [139, "id549"], [139, "id670"], [139, "id794"], [139, "id819"], [139, "id904"], [139, "id945"], [143, "reconstmodel"]], "bench_bounding_box": [[139, "bench-bounding-box"]], "measure": [[139, "measure"], [139, "id94"], [139, "id95"], [139, "id96"], [140, "measure"], [143, "measure"]], "ConstrainedSphericalDeconvModel": [[139, "constrainedsphericaldeconvmodel"], [139, "id103"], [145, "constrainedsphericaldeconvmodel"]], "bench_csdeconv": [[139, "bench-csdeconv"]], "num_grad": [[139, "num-grad"]], "bench_local_maxima": [[139, "bench-local-maxima"]], "bench_quick_squash": [[139, "bench-quick-squash"]], "old_squash": [[139, "old-squash"]], "reduce": [[139, "reduce"], [139, "id911"]], "bench_vec_val_vect": [[139, "bench-vec-val-vect"]], "Cache": [[139, "cache"], [139, "id378"], [139, "id470"], [139, "id529"], [139, "id589"], [139, "id821"], [139, "id943"], [139, "id953"], [139, "id1017"]], "coeff_of_determination": [[139, "coeff-of-determination"]], "kfold_xval": [[139, "kfold-xval"]], "AxSymShResponse": [[139, "axsymshresponse"], [139, "id913"]], "ConstrainedSDTModel": [[139, "constrainedsdtmodel"]], "SphHarmFit": [[139, "sphharmfit"], [139, "id960"]], "SphHarmModel": [[139, "sphharmmodel"], [139, "id961"]], "TensorModel": [[139, "tensormodel"], [139, "id410"], [139, "id745"], [145, "tensormodel"], [145, "id157"]], "auto_response": [[139, "auto-response"]], "auto_response_ssst": [[139, "auto-response-ssst"], [145, "auto-response-ssst"]], "csdeconv": [[139, "csdeconv"], [139, "id483"]], "estimate_response": [[139, "estimate-response"]], "fa_trace_to_lambdas": [[139, "fa-trace-to-lambdas"]], "forward_sdeconv_mat": [[139, "forward-sdeconv-mat"], [139, "id979"]], "forward_sdt_deconv_mat": [[139, "forward-sdt-deconv-mat"]], "fractional_anisotropy": [[139, "fractional-anisotropy"], [139, "id428"], [139, "id757"], [140, "fractional-anisotropy"], [145, "fractional-anisotropy"]], "lazy_index": [[139, "lazy-index"], [139, "id924"], [139, "id980"]], "lpn": [[139, "lpn"]], "mask_for_response_ssst": [[139, "mask-for-response-ssst"]], "multi_voxel_fit": [[139, "multi-voxel-fit"], [139, "id397"], [139, "id486"], [139, "id521"], [139, "id539"], [139, "id587"], [139, "id731"], [139, "id760"], [139, "id814"], [139, "id879"], [139, "id1045"]], "odf_deconv": [[139, "odf-deconv"]], "odf_sh_to_sharp": [[139, "odf-sh-to-sharp"]], "quad": [[139, "quad"]], "real_sh_descoteaux": [[139, "real-sh-descoteaux"], [139, "id982"]], "real_sh_descoteaux_from_index": [[139, "real-sh-descoteaux-from-index"], [139, "id487"], [139, "id733"], [139, "id897"], [139, "id984"], [139, "id1047"]], "recursive_response": [[139, "recursive-response"]], "response_from_mask": [[139, "response-from-mask"]], "response_from_mask_ssst": [[139, "response-from-mask-ssst"], [139, "id762"]], "sh_to_rh": [[139, "sh-to-rh"], [139, "id1005"]], "single_tensor": [[139, "single-tensor"], [139, "id764"], [139, "id938"], [141, "single-tensor"], [141, "id27"]], "DiffusionKurtosisFit": [[139, "diffusionkurtosisfit"], [139, "id279"]], "DiffusionKurtosisModel": [[139, "diffusionkurtosismodel"], [139, "id316"], [145, "diffusionkurtosismodel"]], "TensorFit": [[139, "tensorfit"], [139, "id399"], [139, "id499"]], "Wcons": [[139, "wcons"]], "Wrotate": [[139, "wrotate"]], "Wrotate_element": [[139, "wrotate-element"]], "apparent_kurtosis_coef": [[139, "apparent-kurtosis-coef"]], "axial_kurtosis": [[139, "axial-kurtosis"]], "carlson_rd": [[139, "carlson-rd"]], "carlson_rf": [[139, "carlson-rf"]], "decompose_tensor": [[139, "decompose-tensor"], [139, "id355"], [139, "id423"], [139, "id513"]], "design_matrix": [[139, "design-matrix"], [139, "id424"], [139, "id514"], [139, "id802"], [139, "id907"]], "directional_diffusion": [[139, "directional-diffusion"], [139, "id359"]], "directional_diffusion_variance": [[139, "directional-diffusion-variance"]], "directional_kurtosis": [[139, "directional-kurtosis"], [139, "id362"]], "dki_prediction": [[139, "dki-prediction"]], "from_lower_triangular": [[139, "from-lower-triangular"], [139, "id370"], [139, "id429"], [139, "id515"]], "kurtosis_fractional_anisotropy": [[139, "kurtosis-fractional-anisotropy"]], "kurtosis_maximum": [[139, "kurtosis-maximum"], [139, "id372"]], "lower_triangular": [[139, "lower-triangular"], [139, "id373"], [139, "id448"], [139, "id518"], [145, "lower-triangular"]], "mean_diffusivity": [[139, "mean-diffusivity"], [139, "id374"], [139, "id449"], [139, "id759"], [145, "mean-diffusivity"]], "mean_kurtosis": [[139, "mean-kurtosis"]], "mean_kurtosis_tensor": [[139, "mean-kurtosis-tensor"]], "nlls_fit_tensor": [[139, "nlls-fit-tensor"], [139, "id453"]], "ols_fit_dki": [[139, "ols-fit-dki"]], "radial_kurtosis": [[139, "radial-kurtosis"]], "restore_fit_tensor": [[139, "restore-fit-tensor"], [139, "id460"]], "split_dki_param": [[139, "split-dki-param"], [139, "id376"], [145, "split-dki-param"]], "vec_val_vect": [[139, "vec-val-vect"], [139, "id377"], [139, "id467"], [139, "id525"], [139, "id1056"]], "wls_fit_dki": [[139, "wls-fit-dki"]], "KurtosisMicrostructuralFit": [[139, "kurtosismicrostructuralfit"]], "KurtosisMicrostructureModel": [[139, "kurtosismicrostructuremodel"]], "axial_diffusivity": [[139, "axial-diffusivity"], [139, "id422"], [145, "axial-diffusivity"]], "axonal_water_fraction": [[139, "axonal-water-fraction"]], "diffusion_components": [[139, "diffusion-components"]], "dkimicro_prediction": [[139, "dkimicro-prediction"]], "dti_design_matrix": [[139, "dti-design-matrix"]], "radial_diffusivity": [[139, "radial-diffusivity"], [139, "id459"], [145, "radial-diffusivity"]], "tortuosity": [[139, "tortuosity"]], "trace": [[139, "trace"], [139, "id466"]], "DiffusionSpectrumDeconvFit": [[139, "diffusionspectrumdeconvfit"]], "DiffusionSpectrumDeconvModel": [[139, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumFit": [[139, "diffusionspectrumfit"]], "DiffusionSpectrumModel": [[139, "diffusionspectrummodel"]], "OdfFit": [[139, "odffit"], [139, "id479"], [139, "id537"], [139, "id816"], [139, "id914"], [139, "id955"]], "OdfModel": [[139, "odfmodel"], [139, "id480"], [139, "id538"], [139, "id817"], [139, "id915"], [139, "id956"]], "LR_deconv": [[139, "lr-deconv"]], "create_qspace": [[139, "create-qspace"]], "create_qtable": [[139, "create-qtable"]], "fftn": [[139, "fftn"]], "fftshift": [[139, "fftshift"]], "gen_PSF": [[139, "gen-psf"]], "half_to_full_qspace": [[139, "half-to-full-qspace"]], "hanning_filter": [[139, "hanning-filter"]], "ifftshift": [[139, "ifftshift"]], "map_coordinates": [[139, "map-coordinates"], [142, "map-coordinates"]], "pdf_interp_coords": [[139, "pdf-interp-coords"]], "pdf_odf": [[139, "pdf-odf"]], "project_hemisph_bvecs": [[139, "project-hemisph-bvecs"]], "threshold_propagator": [[139, "threshold-propagator"]], "apparent_diffusion_coef": [[139, "apparent-diffusion-coef"]], "color_fa": [[139, "color-fa"], [140, "color-fa"], [145, "color-fa"]], "determinant": [[139, "determinant"]], "deviatoric": [[139, "deviatoric"]], "eig_from_lo_tri": [[139, "eig-from-lo-tri"]], "geodesic_anisotropy": [[139, "geodesic-anisotropy"], [145, "geodesic-anisotropy"]], "isotropic": [[139, "isotropic"]], "iter_fit_tensor": [[139, "iter-fit-tensor"]], "linearity": [[139, "linearity"]], "mode": [[139, "mode"]], "norm": [[139, "norm"]], "ols_fit_tensor": [[139, "ols-fit-tensor"]], "pinv": [[139, "pinv"]], "planarity": [[139, "planarity"]], "quantize_evecs": [[139, "quantize-evecs"]], "sphericity": [[139, "sphericity"]], "tensor_prediction": [[139, "tensor-prediction"]], "wls_fit_tensor": [[139, "wls-fit-tensor"], [139, "id526"]], "ForecastFit": [[139, "forecastfit"]], "ForecastModel": [[139, "forecastmodel"]], "find_signal_means": [[139, "find-signal-means"]], "forecast_error_func": [[139, "forecast-error-func"]], "forecast_matrix": [[139, "forecast-matrix"]], "lb_forecast": [[139, "lb-forecast"]], "leastsq": [[139, "leastsq"]], "psi_l": [[139, "psi-l"]], "rho_matrix": [[139, "rho-matrix"]], "FreeWaterTensorFit": [[139, "freewatertensorfit"]], "FreeWaterTensorModel": [[139, "freewatertensormodel"]], "cholesky_to_lower_triangular": [[139, "cholesky-to-lower-triangular"]], "fwdti_prediction": [[139, "fwdti-prediction"]], "lower_triangular_to_cholesky": [[139, "lower-triangular-to-cholesky"]], "nls_fit_tensor": [[139, "nls-fit-tensor"]], "nls_iter": [[139, "nls-iter"]], "wls_iter": [[139, "wls-iter"]], "GeneralizedQSamplingFit": [[139, "generalizedqsamplingfit"]], "GeneralizedQSamplingModel": [[139, "generalizedqsamplingmodel"]], "equatorial_maximum": [[139, "equatorial-maximum"]], "equatorial_zone_vertices": [[139, "equatorial-zone-vertices"]], "normalize_qa": [[139, "normalize-qa"]], "npa": [[139, "npa"]], "odf_sum": [[139, "odf-sum"]], "patch_maximum": [[139, "patch-maximum"]], "patch_sum": [[139, "patch-sum"]], "patch_vertices": [[139, "patch-vertices"]], "polar_zone_vertices": [[139, "polar-zone-vertices"]], "squared_radial_component": [[139, "squared-radial-component"]], "triple_odf_maxima": [[139, "triple-odf-maxima"]], "upper_hemi_map": [[139, "upper-hemi-map"]], "IvimFit": [[139, "ivimfit"]], "IvimModelTRR": [[139, "ivimmodeltrr"]], "IvimModelVP": [[139, "ivimmodelvp"]], "IvimModel": [[139, "ivimmodel"], [145, "ivimmodel"]], "differential_evolution": [[139, "differential-evolution"]], "f_D_star_error": [[139, "f-d-star-error"]], "f_D_star_prediction": [[139, "f-d-star-prediction"]], "ivim_model_selector": [[139, "ivim-model-selector"]], "ivim_prediction": [[139, "ivim-prediction"]], "least_squares": [[139, "least-squares"]], "MapmriFit": [[139, "mapmrifit"]], "MapmriModel": [[139, "mapmrimodel"]], "b_mat": [[139, "b-mat"]], "b_mat_isotropic": [[139, "b-mat-isotropic"]], "binomialfloat": [[139, "binomialfloat"]], "create_rspace": [[139, "create-rspace"], [139, "id1041"]], "delta": [[139, "delta"]], "factorial2": [[139, "factorial2"], [139, "id874"]], "gcv_cost_function": [[139, "gcv-cost-function"]], "generalized_crossvalidation": [[139, "generalized-crossvalidation"], [139, "id875"]], "generalized_crossvalidation_array": [[139, "generalized-crossvalidation-array"]], "genlaguerre": [[139, "genlaguerre"], [139, "id877"], [139, "id1043"]], "hermite": [[139, "hermite"]], "isotropic_scale_factor": [[139, "isotropic-scale-factor"]], "map_laplace_s": [[139, "map-laplace-s"]], "map_laplace_t": [[139, "map-laplace-t"]], "map_laplace_u": [[139, "map-laplace-u"]], "mapmri_STU_reg_matrices": [[139, "mapmri-stu-reg-matrices"]], "mapmri_index_matrix": [[139, "mapmri-index-matrix"]], "mapmri_isotropic_K_mu_dependent": [[139, "mapmri-isotropic-k-mu-dependent"]], "mapmri_isotropic_K_mu_independent": [[139, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[139, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_M_mu_independent": [[139, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_index_matrix": [[139, "mapmri-isotropic-index-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[139, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[139, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_odf_matrix": [[139, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[139, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_phi_matrix": [[139, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_psi_matrix": [[139, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[139, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_radial_signal_basis": [[139, "mapmri-isotropic-radial-signal-basis"]], "mapmri_laplacian_reg_matrix": [[139, "mapmri-laplacian-reg-matrix"]], "mapmri_odf_matrix": [[139, "mapmri-odf-matrix"]], "mapmri_phi_1d": [[139, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[139, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[139, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[139, "mapmri-psi-matrix"]], "mfactorial": [[139, "mfactorial"]], "sfactorial": [[139, "sfactorial"]], "MSDeconvFit": [[139, "msdeconvfit"]], "MultiShellDeconvModel": [[139, "multishelldeconvmodel"]], "MultiShellResponse": [[139, "multishellresponse"]], "QpFitter": [[139, "qpfitter"]], "auto_response_msmt": [[139, "auto-response-msmt"]], "mask_for_response_msmt": [[139, "mask-for-response-msmt"]], "multi_shell_fiber_response": [[139, "multi-shell-fiber-response"]], "multi_tissue_basis": [[139, "multi-tissue-basis"]], "response_from_mask_msmt": [[139, "response-from-mask-msmt"]], "solve_qp": [[139, "solve-qp"]], "MeanDiffusionKurtosisFit": [[139, "meandiffusionkurtosisfit"]], "MeanDiffusionKurtosisModel": [[139, "meandiffusionkurtosismodel"]], "awf_from_msk": [[139, "awf-from-msk"]], "mean_signal_bvalue": [[139, "mean-signal-bvalue"]], "msdki_prediction": [[139, "msdki-prediction"]], "msk_from_awf": [[139, "msk-from-awf"]], "wls_fit_msdki": [[139, "wls-fit-msdki"]], "CallableArray": [[139, "callablearray"]], "MultiVoxelFit": [[139, "multivoxelfit"]], "minmax_normalize": [[139, "minmax-normalize"]], "QtdmriFit": [[139, "qtdmrifit"]], "QtdmriModel": [[139, "qtdmrimodel"]], "GCV_cost_function": [[139, "id871"]], "H": [[139, "h"]], "angular_basis_EAP_opt": [[139, "angular-basis-eap-opt"]], "angular_basis_opt": [[139, "angular-basis-opt"]], "create_rt_space_grid": [[139, "create-rt-space-grid"]], "design_matrix_spatial": [[139, "design-matrix-spatial"]], "elastic_crossvalidation": [[139, "elastic-crossvalidation"]], "factorial": [[139, "factorial"], [139, "id1042"]], "fmin_l_bfgs_b": [[139, "fmin-l-bfgs-b"]], "l1_crossvalidation": [[139, "l1-crossvalidation"]], "part1_reg_matrix_tau": [[139, "part1-reg-matrix-tau"]], "part23_iso_reg_matrix_q": [[139, "part23-iso-reg-matrix-q"]], "part23_reg_matrix_q": [[139, "part23-reg-matrix-q"]], "part23_reg_matrix_tau": [[139, "part23-reg-matrix-tau"]], "part4_iso_reg_matrix_q": [[139, "part4-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[139, "part4-reg-matrix-q"]], "part4_reg_matrix_tau": [[139, "part4-reg-matrix-tau"]], "qtdmri_anisotropic_scaling": [[139, "qtdmri-anisotropic-scaling"]], "qtdmri_eap_matrix": [[139, "qtdmri-eap-matrix"]], "qtdmri_eap_matrix_": [[139, "id888"]], "qtdmri_index_matrix": [[139, "qtdmri-index-matrix"]], "qtdmri_isotropic_eap_matrix": [[139, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix_": [[139, "id889"]], "qtdmri_isotropic_index_matrix": [[139, "qtdmri-isotropic-index-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[139, "qtdmri-isotropic-laplacian-reg-matrix"]], "qtdmri_isotropic_scaling": [[139, "qtdmri-isotropic-scaling"]], "qtdmri_isotropic_signal_matrix": [[139, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix_": [[139, "id891"]], "qtdmri_isotropic_to_mapmri_matrix": [[139, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_laplacian_reg_matrix": [[139, "qtdmri-laplacian-reg-matrix"]], "qtdmri_mapmri_isotropic_normalization": [[139, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_mapmri_normalization": [[139, "qtdmri-mapmri-normalization"]], "qtdmri_number_of_coefficients": [[139, "qtdmri-number-of-coefficients"]], "qtdmri_signal_matrix": [[139, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix_": [[139, "id895"]], "qtdmri_temporal_normalization": [[139, "qtdmri-temporal-normalization"]], "qtdmri_to_mapmri_matrix": [[139, "qtdmri-to-mapmri-matrix"]], "radial_basis_EAP_opt": [[139, "radial-basis-eap-opt"]], "radial_basis_opt": [[139, "radial-basis-opt"]], "temporal_basis": [[139, "temporal-basis"]], "visualise_gradient_table_G_Delta_rainbow": [[139, "visualise-gradient-table-g-delta-rainbow"]], "QtiFit": [[139, "qtifit"]], "QtiModel": [[139, "qtimodel"]], "cvxpy_1x21_to_6x6": [[139, "cvxpy-1x21-to-6x6"]], "cvxpy_1x6_to_3x3": [[139, "cvxpy-1x6-to-3x3"]], "dtd_covariance": [[139, "dtd-covariance"]], "from_21x1_to_6x6": [[139, "from-21x1-to-6x6"]], "from_3x3_to_6x1": [[139, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[139, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[139, "from-6x6-to-21x1"]], "qti_signal": [[139, "qti-signal"]], "quick_squash": [[139, "quick-squash"]], "adj_to_countarrs": [[139, "adj-to-countarrs"]], "argmax_from_adj": [[139, "argmax-from-adj"]], "argmax_from_countarrs": [[139, "argmax-from-countarrs"]], "le_to_odf": [[139, "le-to-odf"]], "proc_reco_args": [[139, "proc-reco-args"]], "sum_on_blocks_1d": [[139, "sum-on-blocks-1d"]], "RumbaFit": [[139, "rumbafit"]], "RumbaSDModel": [[139, "rumbasdmodel"], [145, "rumbasdmodel"]], "all_tensor_evecs": [[139, "all-tensor-evecs"], [141, "all-tensor-evecs"]], "bounding_box": [[139, "bounding-box"], [140, "bounding-box"], [145, "bounding-box"]], "crop": [[139, "crop"], [140, "crop"]], "generate_kernel": [[139, "generate-kernel"]], "mbessel_ratio": [[139, "mbessel-ratio"]], "normalize_data": [[139, "normalize-data"], [139, "id981"]], "rumba_deconv": [[139, "rumba-deconv"]], "rumba_deconv_global": [[139, "rumba-deconv-global"]], "ExponentialIsotropicFit": [[139, "exponentialisotropicfit"]], "ExponentialIsotropicModel": [[139, "exponentialisotropicmodel"]], "IsotropicFit": [[139, "isotropicfit"]], "IsotropicModel": [[139, "isotropicmodel"]], "OrderedDict": [[139, "ordereddict"], [143, "ordereddict"]], "SparseFascicleFit": [[139, "sparsefasciclefit"]], "SparseFascicleModel": [[139, "sparsefasciclemodel"]], "nanmean": [[139, "nanmean"]], "sfm_design_matrix": [[139, "sfm-design-matrix"]], "CsaOdfModel": [[139, "csaodfmodel"], [145, "csaodfmodel"]], "OpdtModel": [[139, "opdtmodel"]], "QballBaseModel": [[139, "qballbasemodel"]], "QballModel": [[139, "qballmodel"]], "ResidualBootstrapWrapper": [[139, "residualbootstrapwrapper"]], "anisotropic_power": [[139, "anisotropic-power"]], "bootstrap_data_array": [[139, "bootstrap-data-array"]], "bootstrap_data_voxel": [[139, "bootstrap-data-voxel"]], "calculate_max_order": [[139, "calculate-max-order"]], "convert_sh_from_legacy": [[139, "convert-sh-from-legacy"]], "convert_sh_to_full_basis": [[139, "convert-sh-to-full-basis"]], "convert_sh_to_legacy": [[139, "convert-sh-to-legacy"]], "gen_dirac": [[139, "gen-dirac"]], "hat": [[139, "hat"]], "lcr_matrix": [[139, "lcr-matrix"]], "order_from_ncoef": [[139, "order-from-ncoef"]], "randint": [[139, "randint"]], "real_sh_tournier": [[139, "real-sh-tournier"]], "real_sh_tournier_from_index": [[139, "real-sh-tournier-from-index"]], "real_sph_harm": [[139, "real-sph-harm"]], "real_sym_sh_basis": [[139, "real-sym-sh-basis"]], "real_sym_sh_mrtrix": [[139, "real-sym-sh-mrtrix"]], "smooth_pinv": [[139, "smooth-pinv"]], "spherical_harmonics": [[139, "spherical-harmonics"]], "ShoreFit": [[139, "shorefit"]], "ShoreModel": [[139, "shoremodel"]], "l_shore": [[139, "l-shore"]], "n_shore": [[139, "n-shore"]], "shore_indices": [[139, "shore-indices"]], "shore_matrix": [[139, "shore-matrix"]], "shore_matrix_odf": [[139, "shore-matrix-odf"]], "shore_matrix_pdf": [[139, "shore-matrix-pdf"]], "shore_order": [[139, "shore-order"]], "dki_design_matrix": [[139, "dki-design-matrix"], [141, "dki-design-matrix"]], "segment": [[140, "module-dipy.segment"]], "Module: segment.benchmarks": [[140, "module-dipy.segment.benchmarks"]], "Module: segment.benchmarks.bench_quickbundles": [[140, "module-dipy.segment.benchmarks.bench_quickbundles"]], "Module: segment.bundles": [[140, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[140, "module-dipy.segment.clustering"]], "Module: segment.clustering_algorithms": [[140, "module-dipy.segment.clustering_algorithms"]], "Module: segment.clusteringspeed": [[140, "module-dipy.segment.clusteringspeed"]], "Module: segment.cythonutils": [[140, "module-dipy.segment.cythonutils"]], "Module: segment.featurespeed": [[140, "module-dipy.segment.featurespeed"]], "Module: segment.mask": [[140, "module-dipy.segment.mask"]], "Module: segment.metric": [[140, "module-dipy.segment.metric"]], "Module: segment.metricspeed": [[140, "module-dipy.segment.metricspeed"]], "Module: segment.mrf": [[140, "module-dipy.segment.mrf"]], "Module: segment.threshold": [[140, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[140, "module-dipy.segment.tissue"]], "MDFpy": [[140, "mdfpy"]], "Metric": [[140, "metric"], [140, "id30"], [140, "id67"], [140, "id73"]], "QB_New": [[140, "qb-new"]], "assert_array_equal": [[140, "assert-array-equal"], [143, "assert-array-equal"]], "assert_arrays_equal": [[140, "assert-arrays-equal"]], "assert_equal": [[140, "assert-equal"]], "bench_quickbundles": [[140, "bench-quickbundles"]], "chain": [[140, "chain"]], "ba_analysis": [[140, "ba-analysis"]], "bundle_adjacency": [[140, "bundle-adjacency"]], "bundle_shape_similarity": [[140, "bundle-shape-similarity"], [145, "bundle-shape-similarity"]], "bundles_distances_mam": [[140, "bundles-distances-mam"], [143, "bundles-distances-mam"]], "bundles_distances_mdf": [[140, "bundles-distances-mdf"], [143, "bundles-distances-mdf"], [143, "id34"]], "check_range": [[140, "check-range"]], "cluster_bundle": [[140, "cluster-bundle"]], "nbytes": [[140, "nbytes"], [140, "id37"], [143, "nbytes"]], "ABCMeta": [[140, "abcmeta"]], "AveragePointwiseEuclideanMetric": [[140, "averagepointwiseeuclideanmetric"], [140, "id66"], [140, "id71"], [142, "averagepointwiseeuclideanmetric"]], "Cluster": [[140, "cluster"]], "ClusterCentroid": [[140, "clustercentroid"], [140, "id43"], [140, "id49"]], "ClusterMap": [[140, "clustermap"]], "ClusterMapCentroid": [[140, "clustermapcentroid"], [140, "id44"], [140, "id50"]], "Clustering": [[140, "clustering"]], "Identity": [[140, "identity"]], "MinimumAverageDirectFlipMetric": [[140, "minimumaveragedirectflipmetric"], [140, "id68"], [140, "id74"]], "QuickBundles": [[140, "quickbundles"], [140, "id52"], [142, "quickbundles"]], "QuickBundlesX": [[140, "quickbundlesx"], [140, "id53"]], "ResampleFeature": [[140, "resamplefeature"], [140, "id58"]], "TreeCluster": [[140, "treecluster"], [140, "id54"]], "TreeClusterMap": [[140, "treeclustermap"], [140, "id55"]], "abstractmethod": [[140, "abstractmethod"]], "DTYPE": [[140, "dtype"], [140, "id51"]], "clusters_centroid2clustermap_centroid": [[140, "clusters-centroid2clustermap-centroid"]], "peek": [[140, "peek"]], "quickbundles": [[140, "id45"]], "quickbundlesx": [[140, "id47"]], "Clusters": [[140, "clusters"]], "ClustersCentroid": [[140, "clusterscentroid"]], "evaluate_aabb_checks": [[140, "evaluate-aabb-checks"]], "ArcLengthFeature": [[140, "arclengthfeature"]], "CenterOfMassFeature": [[140, "centerofmassfeature"]], "CythonFeature": [[140, "cythonfeature"]], "Feature": [[140, "feature"]], "IdentityFeature": [[140, "identityfeature"]], "MidpointFeature": [[140, "midpointfeature"]], "VectorOfEndpointsFeature": [[140, "vectorofendpointsfeature"]], "extract": [[140, "extract"]], "infer_shape": [[140, "infer-shape"]], "applymask": [[140, "applymask"]], "binary_dilation": [[140, "binary-dilation"], [145, "binary-dilation"]], "clean_cc_mask": [[140, "clean-cc-mask"]], "generate_binary_structure": [[140, "generate-binary-structure"]], "median_filter": [[140, "median-filter"]], "median_otsu": [[140, "median-otsu"], [145, "median-otsu"]], "multi_median": [[140, "multi-median"]], "otsu": [[140, "otsu"], [140, "id77"]], "segment_from_cfa": [[140, "segment-from-cfa"], [145, "segment-from-cfa"]], "CosineMetric": [[140, "cosinemetric"], [140, "id72"]], "EuclideanMetric": [[140, "euclideanmetric"]], "SumPointwiseEuclideanMetric": [[140, "sumpointwiseeuclideanmetric"], [140, "id75"]], "dist": [[140, "dist"], [140, "id76"]], "mdf": [[140, "mdf"]], "CythonMetric": [[140, "cythonmetric"]], "distance_matrix": [[140, "distance-matrix"]], "ConstantObservationModel": [[140, "constantobservationmodel"], [140, "id78"]], "IteratedConditionalModes": [[140, "iteratedconditionalmodes"], [140, "id79"]], "upper_bound_by_percent": [[140, "upper-bound-by-percent"]], "upper_bound_by_rate": [[140, "upper-bound-by-rate"]], "TissueClassifierHMRF": [[140, "tissueclassifierhmrf"]], "add_noise": [[140, "add-noise"], [141, "add-noise"], [141, "id9"]], "sims": [[141, "module-dipy.sims"]], "Module: sims.phantom": [[141, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[141, "module-dipy.sims.voxel"]], "diff2eigenvectors": [[141, "diff2eigenvectors"]], "orbital_phantom": [[141, "orbital-phantom"]], "callaghan_perpendicular": [[141, "callaghan-perpendicular"]], "cylinders_and_ball_soderman": [[141, "cylinders-and-ball-soderman"]], "dki_signal": [[141, "dki-signal"]], "dot": [[141, "dot"]], "gaussian_parallel": [[141, "gaussian-parallel"]], "kurtosis_element": [[141, "kurtosis-element"]], "multi_tensor": [[141, "multi-tensor"]], "multi_tensor_dki": [[141, "multi-tensor-dki"]], "multi_tensor_msd": [[141, "multi-tensor-msd"]], "multi_tensor_odf": [[141, "multi-tensor-odf"]], "multi_tensor_pdf": [[141, "multi-tensor-pdf"]], "multi_tensor_rtop": [[141, "multi-tensor-rtop"]], "single_tensor_msd": [[141, "single-tensor-msd"]], "single_tensor_odf": [[141, "single-tensor-odf"]], "single_tensor_pdf": [[141, "single-tensor-pdf"]], "single_tensor_rtop": [[141, "single-tensor-rtop"]], "sticks_and_ball": [[141, "sticks-and-ball"]], "stats": [[142, "module-dipy.stats"]], "Module: stats.analysis": [[142, "module-dipy.stats.analysis"]], "cKDTree": [[142, "ckdtree"]], "afq_profile": [[142, "afq-profile"]], "anatomical_measures": [[142, "anatomical-measures"], [145, "anatomical-measures"]], "assignment_map": [[142, "assignment-map"], [145, "assignment-map"], [145, "id197"]], "gaussian_weights": [[142, "gaussian-weights"]], "mahalanobis": [[142, "mahalanobis"]], "orient_by_streamline": [[142, "orient-by-streamline"], [143, "orient-by-streamline"]], "peak_values": [[142, "peak-values"], [145, "peak-values"]], "values_from_volume": [[142, "values-from-volume"], [143, "values-from-volume"]], "tracking": [[143, "module-dipy.tracking"]], "Module: tracking._utils": [[143, "module-dipy.tracking._utils"]], "Module: tracking.benchmarks": [[143, "module-dipy.tracking.benchmarks"]], "Module: tracking.benchmarks.bench_streamline": [[143, "module-dipy.tracking.benchmarks.bench_streamline"]], "Module: tracking.direction_getter": [[143, "module-dipy.tracking.direction_getter"]], "Module: tracking.distances": [[143, "module-dipy.tracking.distances"]], "Module: tracking.fbcmeasures": [[143, "module-dipy.tracking.fbcmeasures"]], "Module: tracking.learning": [[143, "module-dipy.tracking.learning"]], "Module: tracking.life": [[143, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[143, "module-dipy.tracking.local_tracking"]], "Module: tracking.localtrack": [[143, "module-dipy.tracking.localtrack"]], "Module: tracking.mesh": [[143, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[143, "module-dipy.tracking.metrics"]], "Module: tracking.propspeed": [[143, "module-dipy.tracking.propspeed"]], "Module: tracking.stopping_criterion": [[143, "module-dipy.tracking.stopping_criterion"]], "Module: tracking.streamline": [[143, "module-dipy.tracking.streamline"]], "Module: tracking.streamlinespeed": [[143, "module-dipy.tracking.streamlinespeed"]], "Module: tracking.utils": [[143, "module-dipy.tracking.utils"]], "Important Notes": [[143, "important-notes"]], "Module: tracking.vox2track": [[143, "module-dipy.tracking.vox2track"]], "assert_array_almost_equal": [[143, "assert-array-almost-equal"]], "bench_compress_streamlines": [[143, "bench-compress-streamlines"]], "bench_length": [[143, "bench-length"]], "bench_set_number_of_points": [[143, "bench-set-number-of-points"]], "generate_streamlines": [[143, "generate-streamlines"]], "length_python": [[143, "length-python"]], "set_number_of_points_python": [[143, "set-number-of-points-python"]], "setup": [[143, "setup"]], "DirectionGetter": [[143, "directiongetter"]], "add_3vecs": [[143, "add-3vecs"]], "approx_polygon_track": [[143, "approx-polygon-track"]], "approximate_mdl_trajectory": [[143, "approximate-mdl-trajectory"]], "cut_plane": [[143, "cut-plane"]], "inner_3vecs": [[143, "inner-3vecs"]], "intersect_segment_cylinder": [[143, "intersect-segment-cylinder"]], "larch_3merge": [[143, "larch-3merge"]], "larch_3split": [[143, "larch-3split"]], "lee_angle_distance": [[143, "lee-angle-distance"]], "lee_perpendicular_distance": [[143, "lee-perpendicular-distance"]], "local_skeleton_clustering": [[143, "local-skeleton-clustering"]], "local_skeleton_clustering_3pts": [[143, "local-skeleton-clustering-3pts"]], "mam_distances": [[143, "mam-distances"]], "minimum_closest_distance": [[143, "minimum-closest-distance"]], "most_similar_track_mam": [[143, "most-similar-track-mam"]], "mul_3vec": [[143, "mul-3vec"]], "mul_3vecs": [[143, "mul-3vecs"]], "norm_3vec": [[143, "norm-3vec"]], "normalized_3vec": [[143, "normalized-3vec"]], "point_segment_sq_distance": [[143, "point-segment-sq-distance"]], "point_track_sq_distance_check": [[143, "point-track-sq-distance-check"]], "sub_3vecs": [[143, "sub-3vecs"]], "track_dist_3pts": [[143, "track-dist-3pts"]], "track_roi_intersection_check": [[143, "track-roi-intersection-check"]], "FBCMeasures": [[143, "fbcmeasures"]], "KDTree": [[143, "kdtree"]], "interp1d": [[143, "interp1d"]], "compute_rfbc": [[143, "compute-rfbc"]], "min_moving_average": [[143, "min-moving-average"]], "detect_corresponding_tracks": [[143, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[143, "detect-corresponding-tracks-plus"]], "FiberFit": [[143, "fiberfit"]], "FiberModel": [[143, "fibermodel"]], "LifeSignalMaker": [[143, "lifesignalmaker"]], "grad_tensor": [[143, "grad-tensor"]], "streamline_gradients": [[143, "streamline-gradients"]], "streamline_signal": [[143, "streamline-signal"]], "streamline_tensors": [[143, "streamline-tensors"]], "unique_rows": [[143, "unique-rows"], [143, "id57"]], "voxel2streamline": [[143, "voxel2streamline"]], "AnatomicalStoppingCriterion": [[143, "anatomicalstoppingcriterion"], [143, "id29"]], "Iterable": [[143, "iterable"]], "LocalTracking": [[143, "localtracking"], [145, "localtracking"]], "ParticleFilteringTracking": [[143, "particlefilteringtracking"], [145, "particlefilteringtracking"]], "StreamlineStatus": [[143, "streamlinestatus"], [143, "id32"]], "local_tracker": [[143, "local-tracker"], [143, "id16"]], "pft_tracker": [[143, "pft-tracker"], [143, "id17"]], "random_coordinates_from_surface": [[143, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[143, "seeds-from-surface-coordinates"]], "triangles_area": [[143, "triangles-area"]], "vertices_to_triangles_values": [[143, "vertices-to-triangles-values"]], "arbitrarypoint": [[143, "arbitrarypoint"]], "bytes": [[143, "bytes"]], "center_of_mass": [[143, "center-of-mass"]], "downsample": [[143, "downsample"]], "endpoint": [[143, "endpoint"]], "frenet_serret": [[143, "frenet-serret"]], "generate_combinations": [[143, "generate-combinations"]], "inside_sphere": [[143, "inside-sphere"]], "inside_sphere_points": [[143, "inside-sphere-points"]], "intersect_sphere": [[143, "intersect-sphere"]], "longest_track_bundle": [[143, "longest-track-bundle"]], "magn": [[143, "magn"]], "mean_curvature": [[143, "mean-curvature"]], "mean_orientation": [[143, "mean-orientation"]], "midpoint": [[143, "midpoint"]], "midpoint2point": [[143, "midpoint2point"]], "principal_components": [[143, "principal-components"]], "splev": [[143, "splev"]], "spline": [[143, "spline"]], "splprep": [[143, "splprep"]], "startpoint": [[143, "startpoint"]], "winding": [[143, "winding"]], "eudx_both_directions": [[143, "eudx-both-directions"]], "ndarray_offset": [[143, "ndarray-offset"]], "ActStoppingCriterion": [[143, "actstoppingcriterion"]], "BinaryStoppingCriterion": [[143, "binarystoppingcriterion"], [145, "binarystoppingcriterion"]], "CmcStoppingCriterion": [[143, "cmcstoppingcriterion"], [145, "cmcstoppingcriterion"]], "StoppingCriterion": [[143, "stoppingcriterion"]], "ThresholdStoppingCriterion": [[143, "thresholdstoppingcriterion"], [145, "thresholdstoppingcriterion"]], "cdist": [[143, "cdist"], [143, "id54"]], "cluster_confidence": [[143, "cluster-confidence"]], "deform_streamlines": [[143, "deform-streamlines"]], "orient_by_rois": [[143, "orient-by-rois"]], "select_by_rois": [[143, "select-by-rois"]], "compress_streamlines": [[143, "compress-streamlines"]], "defaultdict": [[143, "defaultdict"]], "groupby": [[143, "groupby"]], "connectivity_matrix": [[143, "connectivity-matrix"]], "density_map": [[143, "density-map"]], "max_angle_from_curvature": [[143, "max-angle-from-curvature"]], "min_radius_curvature_from_angle": [[143, "min-radius-curvature-from-angle"]], "minimum_at": [[143, "minimum-at"]], "ndbincount": [[143, "ndbincount"]], "near_roi": [[143, "near-roi"]], "path_length": [[143, "path-length"]], "random_seeds_from_mask": [[143, "random-seeds-from-mask"]], "reduce_labels": [[143, "reduce-labels"]], "reduce_rois": [[143, "reduce-rois"]], "seeds_from_mask": [[143, "seeds-from-mask"]], "streamline_near_roi": [[143, "streamline-near-roi"]], "subsegment": [[143, "subsegment"]], "target": [[143, "target"]], "target_line_based": [[143, "target-line-based"]], "wraps": [[143, "wraps"]], "streamline_mapping": [[143, "streamline-mapping"]], "track_counts": [[143, "track-counts"]], "viz": [[144, "module-dipy.viz"]], "Module: viz.app": [[144, "module-dipy.viz.app"]], "Module: viz.gmem": [[144, "module-dipy.viz.gmem"]], "Module: viz.panel": [[144, "module-dipy.viz.panel"]], "Module: viz.plotting": [[144, "module-dipy.viz.plotting"]], "Module: viz.projections": [[144, "module-dipy.viz.projections"]], "Module: viz.regtools": [[144, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[144, "module-dipy.viz.streamline"]], "fetch_viz_icons": [[144, "fetch-viz-icons"]], "read_viz_icons": [[144, "read-viz-icons"]], "GlobalHorizon": [[144, "globalhorizon"], [144, "id7"], [144, "id8"]], "Horizon": [[144, "horizon"]], "apply_shader": [[144, "apply-shader"]], "build_label": [[144, "build-label"], [144, "id9"]], "distinguishable_colormap": [[144, "distinguishable-colormap"]], "horizon": [[144, "id2"], [145, "horizon"]], "slicer_panel": [[144, "slicer-panel"], [144, "id12"]], "compare_maps": [[144, "compare-maps"]], "compare_qti_maps": [[144, "compare-qti-maps"]], "sph_project": [[144, "sph-project"]], "draw_lattice_2d": [[144, "draw-lattice-2d"]], "overlay_images": [[144, "overlay-images"]], "overlay_slices": [[144, "overlay-slices"]], "plot_2d_diffeomorphic_map": [[144, "plot-2d-diffeomorphic-map"]], "plot_slices": [[144, "plot-slices"]], "simple_plot": [[144, "simple-plot"]], "show_bundles": [[144, "show-bundles"]], "workflows": [[145, "module-dipy.workflows"]], "Module: workflows.align": [[145, "module-dipy.workflows.align"]], "Module: workflows.base": [[145, "module-dipy.workflows.base"]], "Module: workflows.combined_workflow": [[145, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[145, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[145, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[145, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[145, "module-dipy.workflows.io"]], "Module: workflows.mask": [[145, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[145, "module-dipy.workflows.multi_io"]], "Module: workflows.reconst": [[145, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[145, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[145, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[145, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[145, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[145, "module-dipy.workflows.workflow"]], "ApplyTransformFlow": [[145, "applytransformflow"]], "ImageRegistrationFlow": [[145, "imageregistrationflow"]], "MotionCorrectionFlow": [[145, "motioncorrectionflow"]], "ResliceFlow": [[145, "resliceflow"]], "SlrWithQbxFlow": [[145, "slrwithqbxflow"]], "SynRegistrationFlow": [[145, "synregistrationflow"]], "Workflow": [[145, "workflow"], [145, "id17"], [145, "id30"], [145, "id56"], [145, "id59"], [145, "id112"], [145, "id150"], [145, "id168"], [145, "id191"], [145, "id196"], [145, "id204"]], "check_dimensions": [[145, "check-dimensions"]], "IntrospectiveArgumentParser": [[145, "introspectiveargumentparser"], [145, "id55"]], "NumpyDocString": [[145, "numpydocstring"], [145, "id53"]], "get_args_default": [[145, "get-args-default"], [145, "id62"]], "none_or_dtype": [[145, "none-or-dtype"]], "CombinedWorkflow": [[145, "combinedworkflow"]], "GibbsRingingFlow": [[145, "gibbsringingflow"]], "LPCAFlow": [[145, "lpcaflow"]], "MPPCAFlow": [[145, "mppcaflow"]], "NLMeansFlow": [[145, "nlmeansflow"]], "Patch2SelfFlow": [[145, "patch2selfflow"]], "Reader": [[145, "reader"]], "dedent_lines": [[145, "dedent-lines"]], "get_level": [[145, "get-level"]], "run_flow": [[145, "run-flow"]], "FetchFlow": [[145, "fetchflow"]], "IoInfoFlow": [[145, "ioinfoflow"]], "SplitFlow": [[145, "splitflow"]], "getmembers": [[145, "getmembers"]], "isfunction": [[145, "isfunction"]], "MaskFlow": [[145, "maskflow"]], "IOIterator": [[145, "ioiterator"]], "basename_without_extension": [[145, "basename-without-extension"]], "common_start": [[145, "common-start"]], "concatenate_inputs": [[145, "concatenate-inputs"]], "connect_output_paths": [[145, "connect-output-paths"]], "glob": [[145, "glob"], [145, "id177"]], "io_iterator": [[145, "io-iterator"]], "io_iterator_": [[145, "id63"], [145, "id205"]], "slash_to_under": [[145, "slash-to-under"]], "ReconstCSAFlow": [[145, "reconstcsaflow"]], "ReconstCSDFlow": [[145, "reconstcsdflow"]], "ReconstDkiFlow": [[145, "reconstdkiflow"]], "ReconstDtiFlow": [[145, "reconstdtiflow"]], "ReconstIvimFlow": [[145, "reconstivimflow"]], "ReconstMAPMRIFlow": [[145, "reconstmapmriflow"]], "ReconstRUMBAFlow": [[145, "reconstrumbaflow"]], "get_mode": [[145, "get-mode"]], "literal_eval": [[145, "literal-eval"]], "LabelsBundlesFlow": [[145, "labelsbundlesflow"]], "MedianOtsuFlow": [[145, "medianotsuflow"]], "RecoBundlesFlow": [[145, "recobundlesflow"]], "BundleAnalysisTractometryFlow": [[145, "bundleanalysistractometryflow"]], "BundleShapeAnalysis": [[145, "bundleshapeanalysis"]], "LinearMixedModelsFlow": [[145, "linearmixedmodelsflow"]], "SNRinCCFlow": [[145, "snrinccflow"]], "buan_bundle_profiles": [[145, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[145, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[145, "pftrackingpamflow"]], "HorizonFlow": [[145, "horizonflow"]], "line_colors": [[145, "line-colors"]], "numpy_to_vtk_colors": [[145, "numpy-to-vtk-colors"]], "API Reference": [[146, "api-reference"]], "dipy_align_affine": [[147, "dipy-align-affine"]], "Usage": [[147, "usage"], [148, "usage"], [149, "usage"], [150, "usage"], [151, "usage"], [152, "usage"], [153, "usage"], [154, "usage"], [155, "usage"], [156, "usage"], [157, "usage"], [158, "usage"], [159, "usage"], [160, "usage"], [161, "usage"], [162, "usage"], [163, "usage"], [164, "usage"], [165, "usage"], [166, "usage"], [167, "usage"], [168, "usage"], [169, "usage"], [170, "usage"], [171, "usage"], [172, "usage"], [173, "usage"], [174, "usage"], [175, "usage"], [176, "usage"]], "Positional Arguments": [[147, "positional-arguments"], [148, "positional-arguments"], [149, "positional-arguments"], [150, "positional-arguments"], [151, "positional-arguments"], [152, "positional-arguments"], [153, "positional-arguments"], [154, "positional-arguments"], [155, "positional-arguments"], [156, "positional-arguments"], [157, "positional-arguments"], [158, "positional-arguments"], [159, "positional-arguments"], [160, "positional-arguments"], [161, "positional-arguments"], [162, "positional-arguments"], [163, "positional-arguments"], [164, "positional-arguments"], [165, "positional-arguments"], [166, "positional-arguments"], [167, "positional-arguments"], [168, "positional-arguments"], [169, "positional-arguments"], [170, "positional-arguments"], [171, "positional-arguments"], [172, "positional-arguments"], [173, "positional-arguments"], [174, "positional-arguments"], [175, "positional-arguments"], [176, "positional-arguments"]], "Optional Arguments": [[147, "optional-arguments"], [148, "optional-arguments"], [149, "optional-arguments"], [150, "optional-arguments"], [151, "optional-arguments"], [152, "optional-arguments"], [153, "optional-arguments"], [154, "optional-arguments"], [155, "optional-arguments"], [156, "optional-arguments"], [157, "optional-arguments"], [158, "optional-arguments"], [159, "optional-arguments"], [160, "optional-arguments"], [161, "optional-arguments"], [162, "optional-arguments"], [163, "optional-arguments"], [164, "optional-arguments"], [165, "optional-arguments"], [166, "optional-arguments"], [167, "optional-arguments"], [168, "optional-arguments"], [169, "optional-arguments"], [170, "optional-arguments"], [171, "optional-arguments"], [172, "optional-arguments"], [173, "optional-arguments"], [174, "optional-arguments"], [175, "optional-arguments"], [176, "optional-arguments"]], "Output Arguments(Optional)": [[147, "output-arguments-optional"], [148, "output-arguments-optional"], [149, "output-arguments-optional"], [150, "output-arguments-optional"], [151, "output-arguments-optional"], [152, "output-arguments-optional"], [153, "output-arguments-optional"], [154, "output-arguments-optional"], [155, "output-arguments-optional"], [156, "output-arguments-optional"], [157, "output-arguments-optional"], [158, "output-arguments-optional"], [159, "output-arguments-optional"], [160, "output-arguments-optional"], [161, "output-arguments-optional"], [162, "output-arguments-optional"], [163, "output-arguments-optional"], [164, "output-arguments-optional"], [165, "output-arguments-optional"], [167, "output-arguments-optional"], [168, "output-arguments-optional"], [169, "output-arguments-optional"], [170, "output-arguments-optional"], [171, "output-arguments-optional"], [172, "output-arguments-optional"], [173, "output-arguments-optional"], [174, "output-arguments-optional"], [175, "output-arguments-optional"], [176, "output-arguments-optional"]], "dipy_align_syn": [[148, "dipy-align-syn"]], "dipy_apply_transform": [[149, "dipy-apply-transform"]], "dipy_buan_lmm": [[150, "dipy-buan-lmm"]], "dipy_buan_profiles": [[151, "dipy-buan-profiles"]], "dipy_correct_motion": [[152, "dipy-correct-motion"]], "dipy_denoise_lpca": [[153, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[154, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[155, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[156, "dipy-denoise-patch2self"]], "dipy_fetch": [[157, "dipy-fetch"]], "dipy_fit_csa": [[158, "dipy-fit-csa"]], "dipy_fit_csd": [[159, "dipy-fit-csd"]], "dipy_fit_dki": [[160, "dipy-fit-dki"]], "dipy_fit_dti": [[161, "dipy-fit-dti"]], "dipy_fit_ivim": [[162, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[163, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[164, "dipy-gibbs-ringing"]], "dipy_horizon": [[165, "dipy-horizon"]], "dipy_info": [[166, "dipy-info"]], "dipy_labelsbundles": [[167, "dipy-labelsbundles"]], "dipy_mask": [[168, "dipy-mask"]], "dipy_median_otsu": [[169, "dipy-median-otsu"]], "dipy_recobundles": [[170, "dipy-recobundles"]], "dipy_reslice": [[171, "dipy-reslice"]], "dipy_slr": [[172, "dipy-slr"]], "dipy_snr_in_cc": [[173, "dipy-snr-in-cc"]], "dipy_split": [[174, "dipy-split"]], "dipy_track": [[175, "dipy-track"]], "dipy_track_pft": [[176, "dipy-track-pft"]], "Command Line Utilities Reference": [[177, "command-line-utilities-reference"]], "Release notes for DIPY version 0.10": [[178, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[179, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[180, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[181, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[182, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[183, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[184, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[185, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[186, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[187, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[188, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[189, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[190, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[191, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[192, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[193, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[194, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[195, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[196, "release-notes-for-dipy-version-1-6"]], "A quick overview of features": [[197, "a-quick-overview-of-features"]], "Systems supported": [[197, "systems-supported"]], "Subscribe": [[198, "subscribe"]], "DIY Stuff about b and q": [[199, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[199, "the-b-matrix-and-siemens-dicom"], [200, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[199, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[201, "generalised-q-sampling-imaging"]], "Theory and concepts": [[202, "theory-and-concepts"]], "Spherical Harmonic bases": [[203, "spherical-harmonic-bases"]], "Spherical coordinates": [[204, "spherical-coordinates"]], "Terms": [[204, "terms"]], "The physics convention": [[204, "the-physics-convention"]], "The mathematics convention": [[204, "the-mathematics-convention"]], "Matlab convention": [[204, "matlab-convention"]]}, "indexentries": {"affine matrix": [[109, "term-Affine-matrix"]], "affine transformation": [[109, "term-Affine-transformation"]], "axis angle": [[109, "term-Axis-angle"]], "euclidean norm": [[109, "term-Euclidean-norm"]], "euler angles": [[109, "term-Euler-angles"]], "gimbal lock": [[109, "term-Gimbal-lock"]], "homogenous coordinates": [[109, "term-Homogenous-coordinates"]], "linear transformation": [[109, "term-Linear-transformation"]], "quaternion": [[109, "term-Quaternion"]], "reflection": [[109, "term-Reflection"]], "rotation matrix": [[109, "term-Rotation-matrix"]], "rotation vector": [[109, "term-Rotation-vector"]], "shear matrix": [[109, "term-Shear-matrix"]], "unit vector": [[109, "term-Unit-vector"]], "bench() (in module dipy)": [[129, "dipy.bench"]], "dipy": [[129, "module-dipy"]], "get_info() (in module dipy)": [[129, "dipy.get_info"]], "module": [[129, "module-dipy"], [130, "module-dipy.__config__"], [131, "module-dipy.align"], [131, "module-dipy.align._public"], [131, "module-dipy.align.bundlemin"], [131, "module-dipy.align.crosscorr"], [131, "module-dipy.align.expectmax"], [131, "module-dipy.align.imaffine"], [131, "module-dipy.align.imwarp"], [131, "module-dipy.align.metrics"], [131, "module-dipy.align.parzenhist"], [131, "module-dipy.align.reslice"], [131, "module-dipy.align.scalespace"], [131, "module-dipy.align.streamlinear"], [131, "module-dipy.align.sumsqdiff"], [131, "module-dipy.align.transforms"], [131, "module-dipy.align.vector_fields"], [132, "module-dipy.boots"], [133, "module-dipy.core"], [133, "module-dipy.core.benchmarks"], [133, "module-dipy.core.benchmarks.bench_sphere"], [133, "module-dipy.core.geometry"], [133, "module-dipy.core.gradients"], [133, "module-dipy.core.graph"], [133, "module-dipy.core.histeq"], [133, "module-dipy.core.interpolation"], [133, "module-dipy.core.ndindex"], [133, "module-dipy.core.onetime"], [133, "module-dipy.core.optimize"], [133, "module-dipy.core.profile"], [133, "module-dipy.core.rng"], [133, "module-dipy.core.sphere"], [133, "module-dipy.core.sphere_stats"], [133, "module-dipy.core.subdivide_octahedron"], [133, "module-dipy.core.wavelet"], [134, "module-dipy.data"], [134, "module-dipy.data.fetcher"], [135, "module-dipy.denoise"], [135, "module-dipy.denoise.adaptive_soft_matching"], [135, "module-dipy.denoise.denspeed"], [135, "module-dipy.denoise.enhancement_kernel"], [135, "module-dipy.denoise.gibbs"], [135, "module-dipy.denoise.localpca"], [135, "module-dipy.denoise.nlmeans"], [135, "module-dipy.denoise.nlmeans_block"], [135, "module-dipy.denoise.noise_estimate"], [135, "module-dipy.denoise.non_local_means"], [135, "module-dipy.denoise.patch2self"], [135, "module-dipy.denoise.pca_noise_estimate"], [135, "module-dipy.denoise.shift_twist_convolution"], [136, "module-dipy.direction"], [136, "module-dipy.direction.bootstrap_direction_getter"], [136, "module-dipy.direction.closest_peak_direction_getter"], [136, "module-dipy.direction.peaks"], [136, "module-dipy.direction.pmf"], [136, "module-dipy.direction.probabilistic_direction_getter"], [137, "module-dipy.io"], [137, "module-dipy.io.bvectxt"], [137, "module-dipy.io.dpy"], [137, "module-dipy.io.gradients"], [137, "module-dipy.io.image"], [137, "module-dipy.io.peaks"], [137, "module-dipy.io.pickles"], [137, "module-dipy.io.stateful_tractogram"], [137, "module-dipy.io.streamline"], [137, "module-dipy.io.utils"], [137, "module-dipy.io.vtk"], [138, "module-dipy.nn"], [138, "module-dipy.nn.histo_resdnn"], [138, "module-dipy.nn.model"], [139, "module-dipy.reconst"], [139, "module-dipy.reconst.base"], [139, "module-dipy.reconst.benchmarks"], [139, "module-dipy.reconst.benchmarks.bench_bounding_box"], [139, "module-dipy.reconst.benchmarks.bench_csd"], [139, "module-dipy.reconst.benchmarks.bench_peaks"], [139, "module-dipy.reconst.benchmarks.bench_squash"], [139, "module-dipy.reconst.benchmarks.bench_vec_val_sum"], [139, "module-dipy.reconst.cache"], [139, "module-dipy.reconst.cross_validation"], [139, "module-dipy.reconst.csdeconv"], [139, "module-dipy.reconst.dki"], [139, "module-dipy.reconst.dki_micro"], [139, "module-dipy.reconst.dsi"], [139, "module-dipy.reconst.dti"], [139, "module-dipy.reconst.eudx_direction_getter"], [139, "module-dipy.reconst.forecast"], [139, "module-dipy.reconst.fwdti"], [139, "module-dipy.reconst.gqi"], [139, "module-dipy.reconst.ivim"], [139, "module-dipy.reconst.mapmri"], [139, "module-dipy.reconst.mcsd"], [139, "module-dipy.reconst.msdki"], [139, "module-dipy.reconst.multi_voxel"], [139, "module-dipy.reconst.odf"], [139, "module-dipy.reconst.qtdmri"], [139, "module-dipy.reconst.qti"], [139, "module-dipy.reconst.quick_squash"], [139, "module-dipy.reconst.recspeed"], [139, "module-dipy.reconst.rumba"], [139, "module-dipy.reconst.sfm"], [139, "module-dipy.reconst.shm"], [139, "module-dipy.reconst.shore"], [139, "module-dipy.reconst.utils"], [139, "module-dipy.reconst.vec_val_sum"], [140, "module-dipy.segment"], [140, "module-dipy.segment.benchmarks"], [140, "module-dipy.segment.benchmarks.bench_quickbundles"], [140, "module-dipy.segment.bundles"], [140, "module-dipy.segment.clustering"], [140, "module-dipy.segment.clustering_algorithms"], [140, "module-dipy.segment.clusteringspeed"], [140, "module-dipy.segment.cythonutils"], [140, "module-dipy.segment.featurespeed"], [140, "module-dipy.segment.mask"], [140, "module-dipy.segment.metric"], [140, "module-dipy.segment.metricspeed"], [140, "module-dipy.segment.mrf"], [140, "module-dipy.segment.threshold"], [140, "module-dipy.segment.tissue"], [141, "module-dipy.sims"], [141, "module-dipy.sims.phantom"], [141, "module-dipy.sims.voxel"], [142, "module-dipy.stats"], [142, "module-dipy.stats.analysis"], [143, "module-dipy.tracking"], [143, "module-dipy.tracking._utils"], [143, "module-dipy.tracking.benchmarks"], [143, "module-dipy.tracking.benchmarks.bench_streamline"], [143, "module-dipy.tracking.direction_getter"], [143, "module-dipy.tracking.distances"], [143, "module-dipy.tracking.fbcmeasures"], [143, "module-dipy.tracking.learning"], [143, "module-dipy.tracking.life"], [143, "module-dipy.tracking.local_tracking"], [143, "module-dipy.tracking.localtrack"], [143, "module-dipy.tracking.mesh"], [143, "module-dipy.tracking.metrics"], [143, "module-dipy.tracking.propspeed"], [143, "module-dipy.tracking.stopping_criterion"], [143, "module-dipy.tracking.streamline"], [143, "module-dipy.tracking.streamlinespeed"], [143, "module-dipy.tracking.utils"], [143, "module-dipy.tracking.vox2track"], [144, "module-dipy.viz"], [144, "module-dipy.viz.app"], [144, "module-dipy.viz.gmem"], [144, "module-dipy.viz.panel"], [144, "module-dipy.viz.plotting"], [144, "module-dipy.viz.projections"], [144, "module-dipy.viz.regtools"], [144, "module-dipy.viz.streamline"], [145, "module-dipy.workflows"], [145, "module-dipy.workflows.align"], [145, "module-dipy.workflows.base"], [145, "module-dipy.workflows.combined_workflow"], [145, "module-dipy.workflows.denoise"], [145, "module-dipy.workflows.docstring_parser"], [145, "module-dipy.workflows.flow_runner"], [145, "module-dipy.workflows.io"], [145, "module-dipy.workflows.mask"], [145, "module-dipy.workflows.multi_io"], [145, "module-dipy.workflows.reconst"], [145, "module-dipy.workflows.segment"], [145, "module-dipy.workflows.stats"], [145, "module-dipy.workflows.tracking"], [145, "module-dipy.workflows.viz"], [145, "module-dipy.workflows.workflow"]], "setup_test() (in module dipy)": [[129, "dipy.setup_test"]], "test() (in module dipy)": [[129, "dipy.test"]], "dipy.__config__": [[130, "module-dipy.__config__"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align._public)": [[131, "dipy.align._public.AffineMap"]], "affinemap (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align._public)": [[131, "dipy.align._public.AffineRegistration"]], "affineregistration (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.AffineRegistration"]], "affinetransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.AffineTransform2D"]], "affinetransform3d (class in dipy.align._public)": [[131, "dipy.align._public.AffineTransform3D"]], "affinetransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.AffineTransform3D"]], "bunch (class in dipy.align)": [[131, "dipy.align.Bunch"]], "bunch (class in dipy.align.imwarp)": [[131, "dipy.align.imwarp.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align._public)": [[131, "dipy.align._public.CCMetric"]], "ccmetric (class in dipy.align.metrics)": [[131, "dipy.align.metrics.CCMetric"]], "diffeomorphicmap (class in dipy.align._public)": [[131, "dipy.align._public.DiffeomorphicMap"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[131, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[131, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align._public)": [[131, "dipy.align._public.EMMetric"]], "emmetric (class in dipy.align.metrics)": [[131, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.IsotropicScaleSpace"]], "isotropicscalespace (class in dipy.align.scalespace)": [[131, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align._public)": [[131, "dipy.align._public.MutualInformationMetric"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.MutualInformationMetric"]], "optimizer (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.Optimizer"]], "optimizer (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.Optimizer"]], "parzenjointhistogram (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.ParzenJointHistogram"]], "parzenjointhistogram (class in dipy.align.parzenhist)": [[131, "dipy.align.parzenhist.ParzenJointHistogram"]], "pool() (in module dipy.align.reslice)": [[131, "dipy.align.reslice.Pool"]], "rigidisoscalingtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidIsoScalingTransform2D"]], "rigidisoscalingtransform3d (class in dipy.align._public)": [[131, "dipy.align._public.RigidIsoScalingTransform3D"]], "rigidisoscalingtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidIsoScalingTransform3D"]], "rigidscalingtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidScalingTransform2D"]], "rigidscalingtransform3d (class in dipy.align._public)": [[131, "dipy.align._public.RigidScalingTransform3D"]], "rigidscalingtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidScalingTransform3D"]], "rigidtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidTransform2D"]], "rigidtransform3d (class in dipy.align._public)": [[131, "dipy.align._public.RigidTransform3D"]], "rigidtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RigidTransform3D"]], "rotationtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RotationTransform2D"]], "rotationtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.RotationTransform3D"]], "ssdmetric (class in dipy.align._public)": [[131, "dipy.align._public.SSDMetric"]], "ssdmetric (class in dipy.align.metrics)": [[131, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.imaffine)": [[131, "dipy.align.imaffine.ScaleSpace"]], "scalespace (class in dipy.align.imwarp)": [[131, "dipy.align.imwarp.ScaleSpace"]], "scalespace (class in dipy.align.scalespace)": [[131, "dipy.align.scalespace.ScaleSpace"]], "scalingtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.ScalingTransform2D"]], "scalingtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.ScalingTransform3D"]], "similaritymetric (class in dipy.align.metrics)": [[131, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align._public)": [[131, "dipy.align._public.StreamlineLinearRegistration"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "streamlines (in module dipy.align.imwarp)": [[131, "dipy.align.imwarp.Streamlines"]], "streamlines (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.Streamlines"]], "symmetricdiffeomorphicregistration (class in dipy.align._public)": [[131, "dipy.align._public.SymmetricDiffeomorphicRegistration"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[131, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "transform (class in dipy.align.transforms)": [[131, "dipy.align.transforms.Transform"]], "translationtransform2d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.TranslationTransform2D"]], "translationtransform3d (class in dipy.align._public)": [[131, "dipy.align._public.TranslationTransform3D"]], "translationtransform3d (class in dipy.align.transforms)": [[131, "dipy.align.transforms.TranslationTransform3D"]], "__init__() (dipy.align.bunch method)": [[131, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align._public.affinemap method)": [[131, "dipy.align._public.AffineMap.__init__"]], "__init__() (dipy.align._public.affineregistration method)": [[131, "dipy.align._public.AffineRegistration.__init__"]], "__init__() (dipy.align._public.affinetransform3d method)": [[131, "dipy.align._public.AffineTransform3D.__init__"]], "__init__() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.__init__"]], "__init__() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.__init__"]], "__init__() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.__init__"]], "__init__() (dipy.align._public.mutualinformationmetric method)": [[131, "dipy.align._public.MutualInformationMetric.__init__"]], "__init__() (dipy.align._public.rigidisoscalingtransform3d method)": [[131, "dipy.align._public.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align._public.rigidscalingtransform3d method)": [[131, "dipy.align._public.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align._public.rigidtransform3d method)": [[131, "dipy.align._public.RigidTransform3D.__init__"]], "__init__() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.__init__"]], "__init__() (dipy.align._public.streamlinelinearregistration method)": [[131, "dipy.align._public.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align._public.symmetricdiffeomorphicregistration method)": [[131, "dipy.align._public.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align._public.translationtransform3d method)": [[131, "dipy.align._public.TranslationTransform3D.__init__"]], "__init__() (dipy.align._public.partial method)": [[131, "dipy.align._public.partial.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[131, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[131, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[131, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[131, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.isotropicscalespace method)": [[131, "dipy.align.imaffine.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[131, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imaffine.optimizer method)": [[131, "dipy.align.imaffine.Optimizer.__init__"]], "__init__() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.__init__"]], "__init__() (dipy.align.imwarp.bunch method)": [[131, "dipy.align.imwarp.Bunch.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[131, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[131, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[131, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[131, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[131, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[131, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.optimizer method)": [[131, "dipy.align.streamlinear.Optimizer.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[131, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[131, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[131, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.combinations method)": [[131, "dipy.align.streamlinear.combinations.__init__"]], "__init__() (dipy.align.transforms.affinetransform2d method)": [[131, "dipy.align.transforms.AffineTransform2D.__init__"]], "__init__() (dipy.align.transforms.affinetransform3d method)": [[131, "dipy.align.transforms.AffineTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform2d method)": [[131, "dipy.align.transforms.RigidIsoScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform3d method)": [[131, "dipy.align.transforms.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform2d method)": [[131, "dipy.align.transforms.RigidScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform3d method)": [[131, "dipy.align.transforms.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform2d method)": [[131, "dipy.align.transforms.RigidTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform3d method)": [[131, "dipy.align.transforms.RigidTransform3D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform2d method)": [[131, "dipy.align.transforms.RotationTransform2D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform3d method)": [[131, "dipy.align.transforms.RotationTransform3D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform2d method)": [[131, "dipy.align.transforms.ScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform3d method)": [[131, "dipy.align.transforms.ScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.__init__"]], "__init__() (dipy.align.transforms.translationtransform2d method)": [[131, "dipy.align.transforms.TranslationTransform2D.__init__"]], "__init__() (dipy.align.transforms.translationtransform3d method)": [[131, "dipy.align.transforms.TranslationTransform3D.__init__"]], "affine_registration() (in module dipy.align)": [[131, "dipy.align.affine_registration"]], "affine_registration() (in module dipy.align._public)": [[131, "dipy.align._public.affine_registration"]], "affine_transform() (in module dipy.align.reslice)": [[131, "dipy.align.reslice.affine_transform"]], "allocate() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.allocate"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "args (dipy.align._public.partial attribute)": [[131, "dipy.align._public.partial.args"]], "bin_index() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.bin_index"]], "bin_index() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.bin_index"]], "bin_normalize_moving() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_moving() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_static() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.bin_normalize_static"]], "bin_normalize_static() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_static"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.bundle_sum_distance"]], "center_streamlines() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.center_streamlines"]], "combinations (class in dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.combinations"]], "compose_matrix() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.compose_matrix"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.compose_matrix44"]], "compose_transformations() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.compose_transformations"]], "compose_vector_fields_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.compose_vector_fields_2d"]], "compose_vector_fields_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.compose_vector_fields_3d"]], "compute_backward() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.compute_backward"]], "compute_backward() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.compute_backward"]], "compute_backward() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_cc_backward_step_2d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.compute_cc_backward_step_2d"]], "compute_cc_backward_step_3d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.compute_cc_backward_step_3d"]], "compute_cc_forward_step_2d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.compute_cc_forward_step_2d"]], "compute_cc_forward_step_3d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.compute_cc_forward_step_3d"]], "compute_demons_step() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_em_demons_step_2d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.compute_em_demons_step_2d"]], "compute_em_demons_step_3d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.compute_em_demons_step_3d"]], "compute_energy_ssd_2d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_energy_ssd_2d"]], "compute_energy_ssd_3d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_energy_ssd_3d"]], "compute_forward() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.compute_forward"]], "compute_forward() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.compute_forward"]], "compute_forward() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.compute_inversion_error"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "compute_masked_class_stats_2d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.compute_masked_class_stats_2d"]], "compute_masked_class_stats_3d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.compute_masked_class_stats_3d"]], "compute_parzen_mi() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.compute_parzen_mi"]], "compute_parzen_mi() (in module dipy.align.parzenhist)": [[131, "dipy.align.parzenhist.compute_parzen_mi"]], "compute_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d"]], "compute_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d"]], "compute_ssd_demons_step_2d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_ssd_demons_step_2d"]], "compute_ssd_demons_step_3d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.compute_ssd_demons_step_3d"]], "create_circle() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_circle"]], "create_harmonic_fields_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_harmonic_fields_2d"]], "create_harmonic_fields_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_harmonic_fields_3d"]], "create_random_displacement_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_random_displacement_2d"]], "create_random_displacement_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_random_displacement_3d"]], "create_sphere() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.create_sphere"]], "cubic_spline() (in module dipy.align.parzenhist)": [[131, "dipy.align.parzenhist.cubic_spline"]], "cubic_spline_derivative() (in module dipy.align.parzenhist)": [[131, "dipy.align.parzenhist.cubic_spline_derivative"]], "decompose_matrix() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.decompose_matrix"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.decompose_matrix44"]], "deprecated_params() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.deprecated_params"]], "determine_num_processes() (in module dipy.align.reslice)": [[131, "dipy.align.reslice.determine_num_processes"]], "determine_num_threads() (in module dipy.align.bundlemin)": [[131, "dipy.align.bundlemin.determine_num_threads"]], "dipy.align": [[131, "module-dipy.align"]], "dipy.align._public": [[131, "module-dipy.align._public"]], "dipy.align.bundlemin": [[131, "module-dipy.align.bundlemin"]], "dipy.align.crosscorr": [[131, "module-dipy.align.crosscorr"]], "dipy.align.expectmax": [[131, "module-dipy.align.expectmax"]], "dipy.align.imaffine": [[131, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[131, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[131, "module-dipy.align.metrics"]], "dipy.align.parzenhist": [[131, "module-dipy.align.parzenhist"]], "dipy.align.reslice": [[131, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[131, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[131, "module-dipy.align.streamlinear"]], "dipy.align.sumsqdiff": [[131, "module-dipy.align.sumsqdiff"]], "dipy.align.transforms": [[131, "module-dipy.align.transforms"]], "dipy.align.vector_fields": [[131, "module-dipy.align.vector_fields"]], "distance() (dipy.align._public.mutualinformationmetric method)": [[131, "dipy.align._public.MutualInformationMetric.distance"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[131, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[131, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[131, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[131, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align._public.mutualinformationmetric method)": [[131, "dipy.align._public.MutualInformationMetric.distance_and_gradient"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[131, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "distance_matrix_mdf() (in module dipy.align.bundlemin)": [[131, "dipy.align.bundlemin.distance_matrix_mdf"]], "distance_matrix_mdf() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.distance_matrix_mdf"]], "docstring_addendum (dipy.align._public.affineregistration attribute)": [[131, "dipy.align._public.AffineRegistration.docstring_addendum"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[131, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "downsample_displacement_field_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.downsample_displacement_field_2d"]], "downsample_displacement_field_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.downsample_displacement_field_3d"]], "downsample_scalar_field_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.downsample_scalar_field_2d"]], "downsample_scalar_field_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.downsample_scalar_field_3d"]], "evolution (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.evolution"]], "evolution (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.evolution"]], "expand_fields() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.expand_fields"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "floating (in module dipy.align)": [[131, "dipy.align.floating"]], "floating (in module dipy.align.imwarp)": [[131, "dipy.align.imwarp.floating"]], "floating (in module dipy.align.metrics)": [[131, "dipy.align.metrics.floating"]], "floating (in module dipy.align.scalespace)": [[131, "dipy.align.scalespace.floating"]], "fopt (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.fopt"]], "fopt (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.fopt"]], "free_iteration() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.free_iteration"]], "free_iteration() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.free_iteration"]], "free_iteration() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "func (dipy.align._public.partial attribute)": [[131, "dipy.align._public.partial.func"]], "gaussian_filter() (in module dipy.align.scalespace)": [[131, "dipy.align.scalespace.gaussian_filter"]], "get_affine() (dipy.align._public.affinemap method)": [[131, "dipy.align._public.AffineMap.get_affine"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[131, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_affine"]], "get_affine() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_affine_inv"]], "get_affine_inv() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_affine_inv"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.get_backward_field"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_dim() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.get_dim"]], "get_direction_and_spacings() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.get_direction_and_spacings"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[131, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_domain_shape"]], "get_domain_shape() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_domain_shape"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.get_energy"]], "get_energy() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.get_energy"]], "get_energy() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_expand_factors"]], "get_expand_factors() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_expand_factors"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.get_forward_field"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_identity_parameters() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.get_identity_parameters"]], "get_image() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_image"]], "get_image() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_image"]], "get_image() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align._public.symmetricdiffeomorphicregistration method)": [[131, "dipy.align._public.SymmetricDiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[131, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[131, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_number_of_parameters() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.get_number_of_parameters"]], "get_scaling() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_scaling"]], "get_scaling() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_scaling"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_sigmas"]], "get_sigmas() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_sigmas"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.get_simplified_transform"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.get_spacing"]], "get_spacing() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.get_spacing"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align._public.mutualinformationmetric method)": [[131, "dipy.align._public.MutualInformationMetric.gradient"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[131, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "gradient() (in module dipy.align.metrics)": [[131, "dipy.align.metrics.gradient"]], "gradient() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align._public.ccmetric method)": [[131, "dipy.align._public.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align._public.ssdmetric method)": [[131, "dipy.align._public.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[131, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[131, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "interpolate_scalar_2d() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.interpolate_scalar_3d"]], "interpret_matrix() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.interpret_matrix"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.inverse"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "invert_vector_field_fixed_point_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.invert_vector_field_fixed_point_2d"]], "invert_vector_field_fixed_point_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"]], "is_valid_affine() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.is_valid_affine"]], "iterate_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d"]], "iterate_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d"]], "jacobian() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.jacobian"]], "keywords (dipy.align._public.partial attribute)": [[131, "dipy.align._public.partial.keywords"]], "length() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.length"]], "load_nifti() (in module dipy.align._public)": [[131, "dipy.align._public.load_nifti"]], "load_trk() (in module dipy.align._public)": [[131, "dipy.align._public.load_trk"]], "message (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.message"]], "message (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.message"]], "mult_aff() (in module dipy.align.imwarp)": [[131, "dipy.align.imwarp.mult_aff"]], "nfev (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.nfev"]], "nfev (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.nfev"]], "nit (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.nit"]], "nit (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.nit"]], "optimize() (dipy.align._public.affineregistration method)": [[131, "dipy.align._public.AffineRegistration.optimize"]], "optimize() (dipy.align._public.streamlinelinearregistration method)": [[131, "dipy.align._public.StreamlineLinearRegistration.optimize"]], "optimize() (dipy.align._public.symmetricdiffeomorphicregistration method)": [[131, "dipy.align._public.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[131, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[131, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[131, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[131, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "param_to_matrix() (dipy.align.transforms.transform method)": [[131, "dipy.align.transforms.Transform.param_to_matrix"]], "partial (class in dipy.align._public)": [[131, "dipy.align._public.partial"]], "precompute_cc_factors_2d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.precompute_cc_factors_2d"]], "precompute_cc_factors_2d_test() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.precompute_cc_factors_2d_test"]], "precompute_cc_factors_3d() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.precompute_cc_factors_3d"]], "precompute_cc_factors_3d_test() (in module dipy.align.crosscorr)": [[131, "dipy.align.crosscorr.precompute_cc_factors_3d_test"]], "print_level() (dipy.align.imaffine.scalespace method)": [[131, "dipy.align.imaffine.ScaleSpace.print_level"]], "print_level() (dipy.align.imwarp.scalespace method)": [[131, "dipy.align.imwarp.ScaleSpace.print_level"]], "print_level() (dipy.align.scalespace.scalespace method)": [[131, "dipy.align.scalespace.ScaleSpace.print_level"]], "print_summary() (dipy.align.imaffine.optimizer method)": [[131, "dipy.align.imaffine.Optimizer.print_summary"]], "print_summary() (dipy.align.streamlinear.optimizer method)": [[131, "dipy.align.streamlinear.Optimizer.print_summary"]], "progressive_slr() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.progressive_slr"]], "qbx_and_merge() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.qbx_and_merge"]], "quantize_positive_2d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.quantize_positive_2d"]], "quantize_positive_3d() (in module dipy.align.expectmax)": [[131, "dipy.align.expectmax.quantize_positive_3d"]], "read_img_arr_or_path() (in module dipy.align._public)": [[131, "dipy.align._public.read_img_arr_or_path"]], "read_mapping() (in module dipy.align)": [[131, "dipy.align.read_mapping"]], "read_mapping() (in module dipy.align._public)": [[131, "dipy.align._public.read_mapping"]], "register_dwi_series() (in module dipy.align)": [[131, "dipy.align.register_dwi_series"]], "register_dwi_series() (in module dipy.align._public)": [[131, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align)": [[131, "dipy.align.register_dwi_to_template"]], "register_dwi_to_template() (in module dipy.align._public)": [[131, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align)": [[131, "dipy.align.register_series"]], "register_series() (in module dipy.align._public)": [[131, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.remove_clusters_by_size"]], "reorient_vector_field_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.reorient_vector_field_2d"]], "reorient_vector_field_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.reorient_vector_field_3d"]], "resample() (in module dipy.align)": [[131, "dipy.align.resample"]], "resample() (in module dipy.align._public)": [[131, "dipy.align._public.resample"]], "resample_displacement_field_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.resample_displacement_field_2d"]], "resample_displacement_field_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.resample_displacement_field_3d"]], "reslice() (in module dipy.align.reslice)": [[131, "dipy.align.reslice.reslice"]], "sample_domain_regular() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.sample_domain_regular"]], "sample_domain_regular() (in module dipy.align.parzenhist)": [[131, "dipy.align.parzenhist.sample_domain_regular"]], "save_nifti() (in module dipy.align._public)": [[131, "dipy.align._public.save_nifti"]], "select_random_set_of_streamlines() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.select_random_set_of_streamlines"]], "set_affine() (dipy.align._public.affinemap method)": [[131, "dipy.align._public.AffineMap.set_affine"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[131, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[131, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_number_of_points() (in module dipy.align._public)": [[131, "dipy.align._public.set_number_of_points"]], "set_number_of_points() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.set_number_of_points"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align._public.mutualinformationmetric method)": [[131, "dipy.align._public.MutualInformationMetric.setup"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[131, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.setup"]], "setup() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[131, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[131, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[131, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.shallow_copy"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "simplify_warp_function_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.simplify_warp_function_2d"]], "simplify_warp_function_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.simplify_warp_function_3d"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.slr_with_qbx"]], "solve_2d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite"]], "solve_3d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[131, "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite"]], "sparse_gradient() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.sparse_gradient"]], "streamline_registration() (in module dipy.align)": [[131, "dipy.align.streamline_registration"]], "streamline_registration() (in module dipy.align._public)": [[131, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align)": [[131, "dipy.align.syn_registration"]], "syn_registration() (in module dipy.align._public)": [[131, "dipy.align._public.syn_registration"]], "time() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.time"]], "transform() (dipy.align._public.affinemap method)": [[131, "dipy.align._public.AffineMap.transform"]], "transform() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.transform"]], "transform() (dipy.align.imaffine.affinemap method)": [[131, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[131, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[131, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_2d_affine() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.transform_2d_affine"]], "transform_2d_affine_nn() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.transform_2d_affine_nn"]], "transform_3d_affine() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.transform_3d_affine"]], "transform_3d_affine_nn() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.transform_3d_affine_nn"]], "transform_centers_of_mass() (in module dipy.align._public)": [[131, "dipy.align._public.transform_centers_of_mass"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align._public.affinemap method)": [[131, "dipy.align._public.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.transform_inverse"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[131, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.transform_origins"]], "transform_points() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.transform_points"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.transform_points_inverse"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "transform_streamlines() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.transform_streamlines"]], "transform_tracking_output() (in module dipy.align._public)": [[131, "dipy.align._public.transform_tracking_output"]], "unlist_streamlines() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.unlist_streamlines"]], "update() (dipy.align._public.symmetricdiffeomorphicregistration method)": [[131, "dipy.align._public.SymmetricDiffeomorphicRegistration.update"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[131, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_gradient_dense() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_sparse() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.update_gradient_sparse"]], "update_gradient_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_sparse"]], "update_pdfs_dense() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_sparse() (dipy.align.imaffine.parzenjointhistogram method)": [[131, "dipy.align.imaffine.ParzenJointHistogram.update_pdfs_sparse"]], "update_pdfs_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[131, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_sparse"]], "use_moving_image_dynamics() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align._public.emmetric method)": [[131, "dipy.align._public.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[131, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[131, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[131, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[131, "dipy.align.metrics.v_cycle_3d"]], "warn() (in module dipy.align._public)": [[131, "dipy.align._public.warn"]], "warn() (in module dipy.align.imaffine)": [[131, "dipy.align.imaffine.warn"]], "warp_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_2d"]], "warp_2d_nn() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_2d_nn"]], "warp_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_3d"]], "warp_3d_nn() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_3d_nn"]], "warp_coordinates_2d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_coordinates_2d"]], "warp_coordinates_3d() (in module dipy.align.vector_fields)": [[131, "dipy.align.vector_fields.warp_coordinates_3d"]], "warp_endomorphism() (dipy.align._public.diffeomorphicmap method)": [[131, "dipy.align._public.DiffeomorphicMap.warp_endomorphism"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[131, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "whole_brain_slr() (in module dipy.align.streamlinear)": [[131, "dipy.align.streamlinear.whole_brain_slr"]], "write_mapping() (in module dipy.align)": [[131, "dipy.align.write_mapping"]], "write_mapping() (in module dipy.align._public)": [[131, "dipy.align._public.write_mapping"]], "xopt (dipy.align.imaffine.optimizer property)": [[131, "dipy.align.imaffine.Optimizer.xopt"]], "xopt (dipy.align.streamlinear.optimizer property)": [[131, "dipy.align.streamlinear.Optimizer.xopt"]], "dipy.boots": [[132, "module-dipy.boots"]], "gradienttable (class in dipy.core.gradients)": [[133, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[133, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.gradients)": [[133, "dipy.core.gradients.HemiSphere"]], "hemisphere (class in dipy.core.sphere)": [[133, "dipy.core.sphere.HemiSphere"]], "hemisphere (class in dipy.core.subdivide_octahedron)": [[133, "dipy.core.subdivide_octahedron.HemiSphere"]], "interpolator (class in dipy.core.interpolation)": [[133, "dipy.core.interpolation.Interpolator"]], "lecuyer() (in module dipy.core.rng)": [[133, "dipy.core.rng.LEcuyer"]], "nearestneighborinterpolator (class in dipy.core.interpolation)": [[133, "dipy.core.interpolation.NearestNeighborInterpolator"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[133, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[133, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[133, "dipy.core.optimize.Optimizer"]], "outsideimage (class in dipy.core.interpolation)": [[133, "dipy.core.interpolation.OutsideImage"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[133, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[133, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[133, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[133, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[133, "dipy.core.sphere.Sphere"]], "timer (class in dipy.core.benchmarks.bench_sphere)": [[133, "dipy.core.benchmarks.bench_sphere.Timer"]], "trilinearinterpolator (class in dipy.core.interpolation)": [[133, "dipy.core.interpolation.TriLinearInterpolator"]], "version (class in dipy.core.optimize)": [[133, "dipy.core.optimize.Version"]], "wichmannhill1982() (in module dipy.core.rng)": [[133, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[133, "dipy.core.rng.WichmannHill2006"]], "__init__() (dipy.core.benchmarks.bench_sphere.timer method)": [[133, "dipy.core.benchmarks.bench_sphere.Timer.__init__"]], "__init__() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.gradients.hemisphere method)": [[133, "dipy.core.gradients.HemiSphere.__init__"]], "__init__() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.interpolation.interpolator method)": [[133, "dipy.core.interpolation.Interpolator.__init__"]], "__init__() (dipy.core.interpolation.nearestneighborinterpolator method)": [[133, "dipy.core.interpolation.NearestNeighborInterpolator.__init__"]], "__init__() (dipy.core.interpolation.outsideimage method)": [[133, "dipy.core.interpolation.OutsideImage.__init__"]], "__init__() (dipy.core.interpolation.trilinearinterpolator method)": [[133, "dipy.core.interpolation.TriLinearInterpolator.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[133, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[133, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[133, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[133, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[133, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[133, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.optimize.version method)": [[133, "dipy.core.optimize.Version.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[133, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[133, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.__init__"]], "__init__() (dipy.core.sphere_stats.permutations method)": [[133, "dipy.core.sphere_stats.permutations.__init__"]], "__init__() (dipy.core.subdivide_octahedron.hemisphere method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[133, "dipy.core.sphere_stats.angular_similarity"]], "architecture() (in module dipy.core.rng)": [[133, "dipy.core.rng.architecture"]], "as_strided() (in module dipy.core.ndindex)": [[133, "dipy.core.ndindex.as_strided"]], "auto_attr() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.auto_attr"]], "auto_attr() (in module dipy.core.onetime)": [[133, "dipy.core.onetime.auto_attr"]], "auto_attr() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.auto_attr"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.b0s_mask"]], "base_version (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.base_version"]], "bench_disperse_charges_alt() (in module dipy.core.benchmarks.bench_sphere)": [[133, "dipy.core.benchmarks.bench_sphere.bench_disperse_charges_alt"]], "btens_to_params() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.cart2sphere"]], "cart2sphere() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[133, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[133, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[133, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.del_node_and_edges"]], "deprecate_with_version() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.deprecate_with_version"]], "dev (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.dev"]], "dipy.core": [[133, "module-dipy.core"]], "dipy.core.benchmarks": [[133, "module-dipy.core.benchmarks"]], "dipy.core.benchmarks.bench_sphere": [[133, "module-dipy.core.benchmarks.bench_sphere"]], "dipy.core.geometry": [[133, "module-dipy.core.geometry"]], "dipy.core.gradients": [[133, "module-dipy.core.gradients"]], "dipy.core.graph": [[133, "module-dipy.core.graph"]], "dipy.core.histeq": [[133, "module-dipy.core.histeq"]], "dipy.core.interpolation": [[133, "module-dipy.core.interpolation"]], "dipy.core.ndindex": [[133, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[133, "module-dipy.core.onetime"]], "dipy.core.optimize": [[133, "module-dipy.core.optimize"]], "dipy.core.profile": [[133, "module-dipy.core.profile"]], "dipy.core.rng": [[133, "module-dipy.core.rng"]], "dipy.core.sphere": [[133, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[133, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[133, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[133, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.disperse_charges"]], "disperse_charges() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.down_short"]], "duration_in_seconds() (dipy.core.benchmarks.bench_sphere.timer method)": [[133, "dipy.core.benchmarks.bench_sphere.Timer.duration_in_seconds"]], "dwt3d() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[133, "dipy.core.sphere_stats.eigenstats"]], "epoch (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.epoch"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.gradients.hemisphere method)": [[133, "dipy.core.gradients.HemiSphere.faces"]], "faces() (dipy.core.sphere.hemisphere method)": [[133, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.faces"]], "faces() (dipy.core.subdivide_octahedron.hemisphere method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.faces_from_sphere_vertices"]], "find_closest() (dipy.core.gradients.hemisphere method)": [[133, "dipy.core.gradients.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[133, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.find_closest"]], "find_closest() (dipy.core.subdivide_octahedron.hemisphere method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[133, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[133, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "floor() (in module dipy.core.rng)": [[133, "dipy.core.rng.floor"]], "fopt (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.gradients.hemisphere class method)": [[133, "dipy.core.gradients.HemiSphere.from_sphere"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[133, "dipy.core.sphere.HemiSphere.from_sphere"]], "from_sphere() (dipy.core.subdivide_octahedron.hemisphere class method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.from_sphere"]], "func_minimize_adhoc() (in module dipy.core.benchmarks.bench_sphere)": [[133, "dipy.core.benchmarks.bench_sphere.func_minimize_adhoc"]], "func_minimize_scipy() (in module dipy.core.benchmarks.bench_sphere)": [[133, "dipy.core.benchmarks.bench_sphere.func_minimize_scipy"]], "generate_bvecs() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "histeq() (in module dipy.core.histeq)": [[133, "dipy.core.histeq.histeq"]], "idwt3d() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[133, "dipy.core.gradients.GradientTable.info"]], "interp_rbf() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interp_rbf"]], "interpolate_scalar_2d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_scalar_3d"]], "interpolate_scalar_nn_2d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_scalar_nn_2d"]], "interpolate_scalar_nn_3d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_scalar_nn_3d"]], "interpolate_vector_2d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_vector_2d"]], "interpolate_vector_3d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.interpolate_vector_3d"]], "inv() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.inv"]], "is_devrelease (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.is_devrelease"]], "is_hemispherical() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.is_hemispherical"]], "is_postrelease (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.is_postrelease"]], "is_prerelease (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.is_prerelease"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "local (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.local"]], "major (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.major"]], "map_coordinates_trilinear_iso() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.map_coordinates_trilinear_iso"]], "message (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.message"]], "micro (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.micro"]], "minimize() (in module dipy.core.optimize)": [[133, "dipy.core.optimize.minimize"]], "minor (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.minor"]], "mirror() (dipy.core.gradients.hemisphere method)": [[133, "dipy.core.gradients.HemiSphere.mirror"]], "mirror() (dipy.core.sphere.hemisphere method)": [[133, "dipy.core.sphere.HemiSphere.mirror"]], "mirror() (dipy.core.subdivide_octahedron.hemisphere method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[133, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.nearest_pos_semi_def"]], "nearestneighbor_interpolate() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.nearestneighbor_interpolate"]], "nfev (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.normalized_vector"]], "optional_package() (in module dipy.core.optimize)": [[133, "dipy.core.optimize.optional_package"]], "optional_package() (in module dipy.core.profile)": [[133, "dipy.core.profile.optional_package"]], "orientation_from_string() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.permutationinverse"]], "permutations (class in dipy.core.sphere_stats)": [[133, "dipy.core.sphere_stats.permutations"]], "perpendicular_directions() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.perpendicular_directions"]], "polar() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.polar"]], "post (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.post"]], "pre (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.pre"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[133, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[133, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[133, "dipy.core.optimize.Optimizer.print_summary"]], "public (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.public"]], "qvals() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[133, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "release (dipy.core.optimize.version property)": [[133, "dipy.core.optimize.Version.release"]], "remove_similar_vertices() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.remove_similar_vertices"]], "reorient_bvecs() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[133, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[133, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[133, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[133, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[133, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.sphere2cart"]], "sphere2cart() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.gradients.hemisphere method)": [[133, "dipy.core.gradients.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[133, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.subdivide"]], "subdivide() (dipy.core.subdivide_octahedron.hemisphere method)": [[133, "dipy.core.subdivide_octahedron.HemiSphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[133, "dipy.core.gradients.GradientTable.tau"]], "test() (in module dipy.core)": [[133, "dipy.core.test"]], "trilinear_interp() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.trilinear_interp"]], "trilinear_interpolate4d() (in module dipy.core.interpolation)": [[133, "dipy.core.interpolation.trilinear_interpolate4d"]], "unique_bvals() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.unique_sets"]], "up() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[133, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.vec2vec_rotmat"]], "vec2vec_rotmat() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[133, "dipy.core.geometry.vector_norm"]], "vector_norm() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.vector_norm"]], "vector_norm() (in module dipy.core.sphere)": [[133, "dipy.core.sphere.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[133, "dipy.core.sphere.Sphere.vertices"]], "warn() (in module dipy.core.gradients)": [[133, "dipy.core.gradients.warn"]], "x (dipy.core.sphere.sphere property)": [[133, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[133, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[133, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[133, "dipy.core.sphere.Sphere.z"]], "dataerror (class in dipy.data)": [[134, "dipy.data.DataError"]], "fetchererror (class in dipy.data.fetcher)": [[134, "dipy.data.fetcher.FetcherError"]], "gradienttable (class in dipy.data)": [[134, "dipy.data.GradientTable"]], "hemisphere (class in dipy.data)": [[134, "dipy.data.HemiSphere"]], "sphere (class in dipy.data)": [[134, "dipy.data.Sphere"]], "tripwire (class in dipy.data.fetcher)": [[134, "dipy.data.fetcher.TripWire"]], "__init__() (dipy.data.dataerror method)": [[134, "dipy.data.DataError.__init__"]], "__init__() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.__init__"]], "__init__() (dipy.data.hemisphere method)": [[134, "dipy.data.HemiSphere.__init__"]], "__init__() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.__init__"]], "__init__() (dipy.data.fetcher.fetchererror method)": [[134, "dipy.data.fetcher.FetcherError.__init__"]], "__init__() (dipy.data.fetcher.tripwire method)": [[134, "dipy.data.fetcher.TripWire.__init__"]], "as_native_array() (in module dipy.data)": [[134, "dipy.data.as_native_array"]], "b0s_mask() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.b0s_mask"]], "bvals() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.bvals"]], "bvecs() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.bvecs"]], "check_md5() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.check_md5"]], "copyfileobj() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.copyfileobj"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.copyfileobj_withprogress"]], "dipy.data": [[134, "module-dipy.data"]], "dipy.data.fetcher": [[134, "module-dipy.data.fetcher"]], "dirname() (in module dipy.data)": [[134, "dipy.data.dirname"]], "dsi_deconv_voxels() (in module dipy.data)": [[134, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[134, "dipy.data.dsi_voxels"]], "edges() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.edges"]], "exists() (in module dipy.data)": [[134, "dipy.data.exists"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.extract_example_tracts"]], "faces() (dipy.data.hemisphere method)": [[134, "dipy.data.HemiSphere.faces"]], "faces() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.faces"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data)": [[134, "dipy.data.fetch_bundle_atlas_hcp842"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data)": [[134, "dipy.data.fetch_bundle_fa_hcp"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundles_2_subjects() (in module dipy.data)": [[134, "dipy.data.fetch_bundles_2_subjects"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data)": [[134, "dipy.data.fetch_cenir_multib"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data)": [[134, "dipy.data.fetch_cfin_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_data"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data)": [[134, "dipy.data.fetch_gold_standard_io"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data)": [[134, "dipy.data.fetch_hbn"]], "fetch_hbn() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data)": [[134, "dipy.data.fetch_isbi2013_2shell"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data)": [[134, "dipy.data.fetch_ivim"]], "fetch_ivim() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data)": [[134, "dipy.data.fetch_mni_template"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_mni_template"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data)": [[134, "dipy.data.fetch_resdnn_weights"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data)": [[134, "dipy.data.fetch_scil_b0"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data)": [[134, "dipy.data.fetch_sherbrooke_3shell"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data)": [[134, "dipy.data.fetch_stanford_hardi"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data)": [[134, "dipy.data.fetch_stanford_labels"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data)": [[134, "dipy.data.fetch_stanford_pve_maps"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data)": [[134, "dipy.data.fetch_stanford_t1"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_syn_data() (in module dipy.data)": [[134, "dipy.data.fetch_syn_data"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_syn_data"]], "fetch_taiwan_ntu_dsi() (in module dipy.data)": [[134, "dipy.data.fetch_taiwan_ntu_dsi"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data)": [[134, "dipy.data.fetch_target_tractogram_hcp"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data)": [[134, "dipy.data.fetch_tissue_data"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.fetch_tissue_data"]], "find_closest() (dipy.data.hemisphere method)": [[134, "dipy.data.HemiSphere.find_closest"]], "find_closest() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.find_closest"]], "from_sphere() (dipy.data.hemisphere class method)": [[134, "dipy.data.HemiSphere.from_sphere"]], "get_3shell_gtab() (in module dipy.data)": [[134, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data)": [[134, "dipy.data.get_bundle_atlas_hcp842"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[134, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data)": [[134, "dipy.data.get_fnames"]], "get_fnames() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[134, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[134, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[134, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[134, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[134, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data)": [[134, "dipy.data.get_target_tractogram_hcp"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data)": [[134, "dipy.data.get_two_hcp842_bundles"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.get_two_hcp842_bundles"]], "gradient_strength() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.data)": [[134, "dipy.data.gradient_table"]], "gradient_table() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.gradient_table"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.gradient_table_from_gradient_strength_bvecs"]], "info (dipy.data.gradienttable property)": [[134, "dipy.data.GradientTable.info"]], "load_nifti() (in module dipy.data)": [[134, "dipy.data.load_nifti"]], "load_nifti() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.load_nifti"]], "load_nifti_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.load_nifti_data"]], "load_npz() (in module dipy.data)": [[134, "dipy.data.load_npz"]], "load_sdp_constraints() (in module dipy.data)": [[134, "dipy.data.load_sdp_constraints"]], "load_trk() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.load_trk"]], "loads_compat() (in module dipy.data)": [[134, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[134, "dipy.data.matlab_life_results"]], "md5() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.md5"]], "mirror() (dipy.data.hemisphere method)": [[134, "dipy.data.HemiSphere.mirror"]], "mrtrix_spherical_functions() (in module dipy.data)": [[134, "dipy.data.mrtrix_spherical_functions"]], "optional_package() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.optional_package"]], "pjoin() (in module dipy.data)": [[134, "dipy.data.pjoin"]], "pjoin() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.pjoin"]], "qvals() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.qvals"]], "read_dib_217_lte_pte_ste() (in module dipy.data)": [[134, "dipy.data.read_DiB_217_lte_pte_ste"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data)": [[134, "dipy.data.read_DiB_70_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data)": [[134, "dipy.data.read_bundles_2_subjects"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_bvals_bvecs() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_bvals_bvecs"]], "read_cenir_multib() (in module dipy.data)": [[134, "dipy.data.read_cenir_multib"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data)": [[134, "dipy.data.read_cfin_dwi"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data)": [[134, "dipy.data.read_cfin_t1"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data)": [[134, "dipy.data.read_five_af_bundles"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data)": [[134, "dipy.data.read_isbi2013_2shell"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data)": [[134, "dipy.data.read_ivim"]], "read_ivim() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data)": [[134, "dipy.data.read_mni_template"]], "read_mni_template() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data)": [[134, "dipy.data.read_qte_lte_pte"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data)": [[134, "dipy.data.read_scil_b0"]], "read_scil_b0() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data)": [[134, "dipy.data.read_sherbrooke_3shell"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data)": [[134, "dipy.data.read_stanford_hardi"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data)": [[134, "dipy.data.read_stanford_labels"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data)": [[134, "dipy.data.read_stanford_pve_maps"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data)": [[134, "dipy.data.read_stanford_t1"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data)": [[134, "dipy.data.read_syn_data"]], "read_syn_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data)": [[134, "dipy.data.read_taiwan_ntu_dsi"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data)": [[134, "dipy.data.read_tissue_data"]], "read_tissue_data() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.read_tissue_data"]], "relist_streamlines() (in module dipy.data)": [[134, "dipy.data.relist_streamlines"]], "save_nifti() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.save_nifti"]], "subdivide() (dipy.data.hemisphere method)": [[134, "dipy.data.HemiSphere.subdivide"]], "subdivide() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.subdivide"]], "tau() (dipy.data.gradienttable method)": [[134, "dipy.data.GradientTable.tau"]], "to_bids_description() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.to_bids_description"]], "tqdm (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.tqdm"]], "two_cingulum_bundles() (in module dipy.data)": [[134, "dipy.data.two_cingulum_bundles"]], "urlopen() (in module dipy.data.fetcher)": [[134, "dipy.data.fetcher.urlopen"]], "vertices() (dipy.data.sphere method)": [[134, "dipy.data.Sphere.vertices"]], "x (dipy.data.sphere property)": [[134, "dipy.data.Sphere.x"]], "y (dipy.data.sphere property)": [[134, "dipy.data.Sphere.y"]], "z (dipy.data.sphere property)": [[134, "dipy.data.Sphere.z"]], "enhancementkernel (class in dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel"]], "hemisphere (class in dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere"]], "pool() (in module dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.Pool"]], "sphere (class in dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.Sphere"]], "version (class in dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.Version"]], "version (in module dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.Version"]], "__init__() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.hemisphere method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.__init__"]], "__init__() (dipy.denoise.gibbs.partial method)": [[135, "dipy.denoise.gibbs.partial.__init__"]], "__init__() (dipy.denoise.localpca.version method)": [[135, "dipy.denoise.localpca.Version.__init__"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[135, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "add_padding_reflection() (in module dipy.denoise.denspeed)": [[135, "dipy.denoise.denspeed.add_padding_reflection"]], "args (dipy.denoise.gibbs.partial attribute)": [[135, "dipy.denoise.gibbs.partial.args"]], "base_version (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.base_version"]], "bench() (in module dipy.denoise)": [[135, "dipy.denoise.bench"]], "ceil() (in module dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.ceil"]], "convolve() (in module dipy.denoise.noise_estimate)": [[135, "dipy.denoise.noise_estimate.convolve"]], "convolve() (in module dipy.denoise.shift_twist_convolution)": [[135, "dipy.denoise.shift_twist_convolution.convolve"]], "convolve_sf() (in module dipy.denoise.shift_twist_convolution)": [[135, "dipy.denoise.shift_twist_convolution.convolve_sf"]], "correspond_indices() (in module dipy.denoise.denspeed)": [[135, "dipy.denoise.denspeed.correspond_indices"]], "deprecated_params() (in module dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.deprecated_params"]], "determine_num_processes() (in module dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.determine_num_processes"]], "determine_num_threads() (in module dipy.denoise.denspeed)": [[135, "dipy.denoise.denspeed.determine_num_threads"]], "determine_num_threads() (in module dipy.denoise.shift_twist_convolution)": [[135, "dipy.denoise.shift_twist_convolution.determine_num_threads"]], "dev (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.dev"]], "dipy.denoise": [[135, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[135, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.denspeed": [[135, "module-dipy.denoise.denspeed"]], "dipy.denoise.enhancement_kernel": [[135, "module-dipy.denoise.enhancement_kernel"]], "dipy.denoise.gibbs": [[135, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[135, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[135, "module-dipy.denoise.nlmeans"]], "dipy.denoise.nlmeans_block": [[135, "module-dipy.denoise.nlmeans_block"]], "dipy.denoise.noise_estimate": [[135, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[135, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[135, "module-dipy.denoise.patch2self"]], "dipy.denoise.pca_noise_estimate": [[135, "module-dipy.denoise.pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[135, "module-dipy.denoise.shift_twist_convolution"]], "disperse_charges() (in module dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.disperse_charges"]], "edges() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.edges"]], "eigh() (in module dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.eigh"]], "epoch (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.epoch"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[135, "dipy.denoise.noise_estimate.estimate_sigma"]], "evaluate_kernel() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel.evaluate_kernel"]], "faces() (dipy.denoise.enhancement_kernel.hemisphere method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.faces"]], "faces() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.faces"]], "find_closest() (dipy.denoise.enhancement_kernel.hemisphere method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.find_closest"]], "find_closest() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.find_closest"]], "firdn() (in module dipy.denoise.nlmeans_block)": [[135, "dipy.denoise.nlmeans_block.firdn"]], "from_sphere() (dipy.denoise.enhancement_kernel.hemisphere class method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.from_sphere"]], "func (dipy.denoise.gibbs.partial attribute)": [[135, "dipy.denoise.gibbs.partial.func"]], "genpca() (in module dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.genpca"]], "get_lookup_table() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_lookup_table"]], "get_orientations() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_orientations"]], "get_sphere() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[135, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_sphere"]], "get_sphere() (in module dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.get_sphere"]], "gettempdir() (in module dipy.denoise.enhancement_kernel)": [[135, "dipy.denoise.enhancement_kernel.gettempdir"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.gibbs_removal"]], "is_devrelease (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.is_devrelease"]], "is_postrelease (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.is_postrelease"]], "is_prerelease (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.is_prerelease"]], "keywords (dipy.denoise.gibbs.partial attribute)": [[135, "dipy.denoise.gibbs.partial.keywords"]], "local (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.local"]], "localpca() (in module dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.localpca"]], "major (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.major"]], "micro (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.micro"]], "minor (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.minor"]], "mirror() (dipy.denoise.enhancement_kernel.hemisphere method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.mirror"]], "mppca() (in module dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[135, "dipy.denoise.nlmeans.nlmeans"]], "nlmeans_3d() (in module dipy.denoise.denspeed)": [[135, "dipy.denoise.denspeed.nlmeans_3d"]], "nlmeans_3d() (in module dipy.denoise.nlmeans)": [[135, "dipy.denoise.nlmeans.nlmeans_3d"]], "nlmeans_block() (in module dipy.denoise.nlmeans_block)": [[135, "dipy.denoise.nlmeans_block.nlmeans_block"]], "nlmeans_block() (in module dipy.denoise.non_local_means)": [[135, "dipy.denoise.non_local_means.nlmeans_block"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[135, "dipy.denoise.non_local_means.non_local_means"]], "optional_package() (in module dipy.denoise.patch2self)": [[135, "dipy.denoise.patch2self.optional_package"]], "partial (class in dipy.denoise.gibbs)": [[135, "dipy.denoise.gibbs.partial"]], "patch2self() (in module dipy.denoise.patch2self)": [[135, "dipy.denoise.patch2self.patch2self"]], "pca_noise_estimate() (in module dipy.denoise.pca_noise_estimate)": [[135, "dipy.denoise.pca_noise_estimate.pca_noise_estimate"]], "piesno() (in module dipy.denoise.noise_estimate)": [[135, "dipy.denoise.noise_estimate.piesno"]], "post (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.post"]], "pre (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.pre"]], "public (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.public"]], "release (dipy.denoise.localpca.version property)": [[135, "dipy.denoise.localpca.Version.release"]], "remove_padding() (in module dipy.denoise.denspeed)": [[135, "dipy.denoise.denspeed.remove_padding"]], "sf_to_sh() (in module dipy.denoise.shift_twist_convolution)": [[135, "dipy.denoise.shift_twist_convolution.sf_to_sh"]], "sh_to_sf() (in module dipy.denoise.shift_twist_convolution)": [[135, "dipy.denoise.shift_twist_convolution.sh_to_sf"]], "subdivide() (dipy.denoise.enhancement_kernel.hemisphere method)": [[135, "dipy.denoise.enhancement_kernel.HemiSphere.subdivide"]], "subdivide() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.subdivide"]], "test() (in module dipy.denoise)": [[135, "dipy.denoise.test"]], "upfir() (in module dipy.denoise.nlmeans_block)": [[135, "dipy.denoise.nlmeans_block.upfir"]], "vertices() (dipy.denoise.enhancement_kernel.sphere method)": [[135, "dipy.denoise.enhancement_kernel.Sphere.vertices"]], "warn() (in module dipy.denoise.localpca)": [[135, "dipy.denoise.localpca.warn"]], "warn() (in module dipy.denoise.patch2self)": [[135, "dipy.denoise.patch2self.warn"]], "x (dipy.denoise.enhancement_kernel.sphere property)": [[135, "dipy.denoise.enhancement_kernel.Sphere.x"]], "y (dipy.denoise.enhancement_kernel.sphere property)": [[135, "dipy.denoise.enhancement_kernel.Sphere.y"]], "z (dipy.denoise.enhancement_kernel.sphere property)": [[135, "dipy.denoise.enhancement_kernel.Sphere.z"]], "basedirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[136, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter"]], "basepmfdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[136, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter"]], "bootdirectiongetter (class in dipy.direction)": [[136, "dipy.direction.BootDirectionGetter"]], "bootdirectiongetter (class in dipy.direction.bootstrap_direction_getter)": [[136, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"]], "bootpmfgen (class in dipy.direction.bootstrap_direction_getter)": [[136, "dipy.direction.bootstrap_direction_getter.BootPmfGen"]], "bootpmfgen (class in dipy.direction.pmf)": [[136, "dipy.direction.pmf.BootPmfGen"]], "closestpeakdirectiongetter (class in dipy.direction)": [[136, "dipy.direction.ClosestPeakDirectionGetter"]], "closestpeakdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[136, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction)": [[136, "dipy.direction.DeterministicMaximumDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[136, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter"]], "eudxdirectiongetter (class in dipy.direction)": [[136, "dipy.direction.EuDXDirectionGetter"]], "eudxdirectiongetter (class in dipy.direction.peaks)": [[136, "dipy.direction.peaks.EuDXDirectionGetter"]], "peaksandmetrics (class in dipy.direction)": [[136, "dipy.direction.PeaksAndMetrics"]], "peaksandmetrics (class in dipy.direction.peaks)": [[136, "dipy.direction.peaks.PeaksAndMetrics"]], "pmfgen (class in dipy.direction.pmf)": [[136, "dipy.direction.pmf.PmfGen"]], "pmfgendirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[136, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter"]], "pool() (in module dipy.direction)": [[136, "dipy.direction.Pool"]], "pool() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.Pool"]], "probabilisticdirectiongetter (class in dipy.direction)": [[136, "dipy.direction.ProbabilisticDirectionGetter"]], "probabilisticdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[136, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter"]], "shcoeffpmfgen (class in dipy.direction.pmf)": [[136, "dipy.direction.pmf.SHCoeffPmfGen"]], "simplepmfgen (class in dipy.direction.pmf)": [[136, "dipy.direction.pmf.SimplePmfGen"]], "sphere (class in dipy.direction)": [[136, "dipy.direction.Sphere"]], "sphere (class in dipy.direction.peaks)": [[136, "dipy.direction.peaks.Sphere"]], "__init__() (dipy.direction.bootdirectiongetter method)": [[136, "dipy.direction.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.closestpeakdirectiongetter method)": [[136, "dipy.direction.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.deterministicmaximumdirectiongetter method)": [[136, "dipy.direction.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.eudxdirectiongetter method)": [[136, "dipy.direction.EuDXDirectionGetter.__init__"]], "__init__() (dipy.direction.peaksandmetrics method)": [[136, "dipy.direction.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.probabilisticdirectiongetter method)": [[136, "dipy.direction.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.__init__"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[136, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[136, "dipy.direction.bootstrap_direction_getter.BootPmfGen.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basedirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.closestpeakdirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.eudxdirectiongetter method)": [[136, "dipy.direction.peaks.EuDXDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[136, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.__init__"]], "__init__() (dipy.direction.peaks.repeat method)": [[136, "dipy.direction.peaks.repeat.__init__"]], "__init__() (dipy.direction.pmf.bootpmfgen method)": [[136, "dipy.direction.pmf.BootPmfGen.__init__"]], "__init__() (dipy.direction.pmf.pmfgen method)": [[136, "dipy.direction.pmf.PmfGen.__init__"]], "__init__() (dipy.direction.pmf.shcoeffpmfgen method)": [[136, "dipy.direction.pmf.SHCoeffPmfGen.__init__"]], "__init__() (dipy.direction.pmf.simplepmfgen method)": [[136, "dipy.direction.pmf.SimplePmfGen.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.deterministicmaximumdirectiongetter method)": [[136, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.probabilisticdirectiongetter method)": [[136, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.repeat method)": [[136, "dipy.direction.repeat.__init__"]], "ang_thr (dipy.direction.eudxdirectiongetter attribute)": [[136, "dipy.direction.EuDXDirectionGetter.ang_thr"]], "ang_thr (dipy.direction.peaks.eudxdirectiongetter attribute)": [[136, "dipy.direction.peaks.EuDXDirectionGetter.ang_thr"]], "deprecated_params() (in module dipy.direction)": [[136, "dipy.direction.deprecated_params"]], "deprecated_params() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.deprecated_params"]], "determine_num_processes() (in module dipy.direction)": [[136, "dipy.direction.determine_num_processes"]], "determine_num_processes() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.determine_num_processes"]], "dipy.direction": [[136, "module-dipy.direction"]], "dipy.direction.bootstrap_direction_getter": [[136, "module-dipy.direction.bootstrap_direction_getter"]], "dipy.direction.closest_peak_direction_getter": [[136, "module-dipy.direction.closest_peak_direction_getter"]], "dipy.direction.peaks": [[136, "module-dipy.direction.peaks"]], "dipy.direction.pmf": [[136, "module-dipy.direction.pmf"]], "dipy.direction.probabilistic_direction_getter": [[136, "module-dipy.direction.probabilistic_direction_getter"]], "edges() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.edges"]], "edges() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.edges"]], "faces() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.faces"]], "faces() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.faces"]], "find_closest() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.find_closest"]], "find_closest() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.find_closest"]], "from_data() (dipy.direction.bootdirectiongetter method)": [[136, "dipy.direction.BootDirectionGetter.from_data"]], "from_data() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[136, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data"]], "from_pmf() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf"]], "from_shcoeff() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff"]], "get_pmf() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[136, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.bootpmfgen method)": [[136, "dipy.direction.pmf.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.pmfgen method)": [[136, "dipy.direction.pmf.PmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.shcoeffpmfgen method)": [[136, "dipy.direction.pmf.SHCoeffPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.simplepmfgen method)": [[136, "dipy.direction.pmf.SimplePmfGen.get_pmf"]], "get_pmf_no_boot() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[136, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf_no_boot"]], "get_pmf_no_boot() (dipy.direction.pmf.bootpmfgen method)": [[136, "dipy.direction.pmf.BootPmfGen.get_pmf_no_boot"]], "get_pmf_value() (dipy.direction.pmf.pmfgen method)": [[136, "dipy.direction.pmf.PmfGen.get_pmf_value"]], "gfa() (in module dipy.direction)": [[136, "dipy.direction.gfa"]], "gfa() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.gfa"]], "initial_direction() (dipy.direction.eudxdirectiongetter method)": [[136, "dipy.direction.EuDXDirectionGetter.initial_direction"]], "initial_direction() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[136, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction"]], "initial_direction() (dipy.direction.peaks.eudxdirectiongetter method)": [[136, "dipy.direction.peaks.EuDXDirectionGetter.initial_direction"]], "local_maxima() (in module dipy.direction)": [[136, "dipy.direction.local_maxima"]], "local_maxima() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.local_maxima"]], "ndindex() (in module dipy.direction)": [[136, "dipy.direction.ndindex"]], "ndindex() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.ndindex"]], "peak_directions() (in module dipy.direction)": [[136, "dipy.direction.peak_directions"]], "peak_directions() (in module dipy.direction.closest_peak_direction_getter)": [[136, "dipy.direction.closest_peak_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction)": [[136, "dipy.direction.peak_directions_nl"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction)": [[136, "dipy.direction.peaks_from_model"]], "peaks_from_model() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.peaks_from_model"]], "qa_thr (dipy.direction.eudxdirectiongetter attribute)": [[136, "dipy.direction.EuDXDirectionGetter.qa_thr"]], "qa_thr (dipy.direction.peaks.eudxdirectiongetter attribute)": [[136, "dipy.direction.peaks.EuDXDirectionGetter.qa_thr"]], "random() (in module dipy.direction.probabilistic_direction_getter)": [[136, "dipy.direction.probabilistic_direction_getter.random"]], "remove_similar_vertices() (in module dipy.direction)": [[136, "dipy.direction.remove_similar_vertices"]], "remove_similar_vertices() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.remove_similar_vertices"]], "repeat (class in dipy.direction)": [[136, "dipy.direction.repeat"]], "repeat (class in dipy.direction.peaks)": [[136, "dipy.direction.peaks.repeat"]], "reshape_peaks_for_visualization() (in module dipy.direction)": [[136, "dipy.direction.reshape_peaks_for_visualization"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "search_descending() (in module dipy.direction)": [[136, "dipy.direction.search_descending"]], "search_descending() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.search_descending"]], "sh_to_sf_matrix() (in module dipy.direction)": [[136, "dipy.direction.sh_to_sf_matrix"]], "sh_to_sf_matrix() (in module dipy.direction.peaks)": [[136, "dipy.direction.peaks.sh_to_sf_matrix"]], "subdivide() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.subdivide"]], "subdivide() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.subdivide"]], "total_weight (dipy.direction.eudxdirectiongetter attribute)": [[136, "dipy.direction.EuDXDirectionGetter.total_weight"]], "total_weight (dipy.direction.peaks.eudxdirectiongetter attribute)": [[136, "dipy.direction.peaks.EuDXDirectionGetter.total_weight"]], "vertices() (dipy.direction.sphere method)": [[136, "dipy.direction.Sphere.vertices"]], "vertices() (dipy.direction.peaks.sphere method)": [[136, "dipy.direction.peaks.Sphere.vertices"]], "x (dipy.direction.sphere property)": [[136, "dipy.direction.Sphere.x"]], "x (dipy.direction.peaks.sphere property)": [[136, "dipy.direction.peaks.Sphere.x"]], "y (dipy.direction.sphere property)": [[136, "dipy.direction.Sphere.y"]], "y (dipy.direction.peaks.sphere property)": [[136, "dipy.direction.peaks.Sphere.y"]], "z (dipy.direction.sphere property)": [[136, "dipy.direction.Sphere.z"]], "z (dipy.direction.peaks.sphere property)": [[136, "dipy.direction.peaks.Sphere.z"]], "dpy (class in dipy.io)": [[137, "dipy.io.Dpy"]], "dpy (class in dipy.io.dpy)": [[137, "dipy.io.dpy.Dpy"]], "dpy (class in dipy.io.streamline)": [[137, "dipy.io.streamline.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[137, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "nifti (dipy.io.streamline.origin attribute)": [[137, "dipy.io.streamline.Origin.NIFTI"]], "nifti1image (class in dipy.io.utils)": [[137, "dipy.io.utils.Nifti1Image"]], "origin (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.Origin"]], "origin (class in dipy.io.streamline)": [[137, "dipy.io.streamline.Origin"]], "peaksandmetrics (class in dipy.io.peaks)": [[137, "dipy.io.peaks.PeaksAndMetrics"]], "perarraydict (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.PerArrayDict"]], "perarraysequencedict (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.PerArraySequenceDict"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[137, "dipy.io.stateful_tractogram.Space.RASMM"]], "rasmm (dipy.io.streamline.space attribute)": [[137, "dipy.io.streamline.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.Space"]], "space (class in dipy.io.streamline)": [[137, "dipy.io.streamline.Space"]], "sphere (class in dipy.io.peaks)": [[137, "dipy.io.peaks.Sphere"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram"]], "statefultractogram (class in dipy.io.streamline)": [[137, "dipy.io.streamline.StatefulTractogram"]], "streamlines (in module dipy.io.dpy)": [[137, "dipy.io.dpy.Streamlines"]], "streamlines (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.Streamlines"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[137, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "trackvis (dipy.io.streamline.origin attribute)": [[137, "dipy.io.streamline.Origin.TRACKVIS"]], "tractogram (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.Tractogram"]], "tractogram (class in dipy.io.streamline)": [[137, "dipy.io.streamline.Tractogram"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[137, "dipy.io.stateful_tractogram.Space.VOX"]], "vox (dipy.io.streamline.space attribute)": [[137, "dipy.io.streamline.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[137, "dipy.io.stateful_tractogram.Space.VOXMM"]], "voxmm (dipy.io.streamline.space attribute)": [[137, "dipy.io.streamline.Space.VOXMM"]], "version (class in dipy.io.image)": [[137, "dipy.io.image.Version"]], "__init__() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.__init__"]], "__init__() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.image.version method)": [[137, "dipy.io.image.Version.__init__"]], "__init__() (dipy.io.peaks.peaksandmetrics method)": [[137, "dipy.io.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[137, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.perarraydict method)": [[137, "dipy.io.stateful_tractogram.PerArrayDict.__init__"]], "__init__() (dipy.io.stateful_tractogram.perarraysequencedict method)": [[137, "dipy.io.stateful_tractogram.PerArraySequenceDict.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[137, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "__init__() (dipy.io.stateful_tractogram.tractogram method)": [[137, "dipy.io.stateful_tractogram.Tractogram.__init__"]], "__init__() (dipy.io.stateful_tractogram.product method)": [[137, "dipy.io.stateful_tractogram.product.__init__"]], "__init__() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.__init__"]], "__init__() (dipy.io.streamline.origin method)": [[137, "dipy.io.streamline.Origin.__init__"]], "__init__() (dipy.io.streamline.space method)": [[137, "dipy.io.streamline.Space.__init__"]], "__init__() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.__init__"]], "__init__() (dipy.io.streamline.tractogram method)": [[137, "dipy.io.streamline.Tractogram.__init__"]], "__init__() (dipy.io.utils.nifti1image method)": [[137, "dipy.io.utils.Nifti1Image.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "affine (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.affine"]], "affine_to_rasmm (dipy.io.stateful_tractogram.tractogram property)": [[137, "dipy.io.stateful_tractogram.Tractogram.affine_to_rasmm"]], "affine_to_rasmm (dipy.io.streamline.tractogram property)": [[137, "dipy.io.streamline.Tractogram.affine_to_rasmm"]], "apply_affine() (dipy.io.stateful_tractogram.tractogram method)": [[137, "dipy.io.stateful_tractogram.Tractogram.apply_affine"]], "apply_affine() (dipy.io.streamline.tractogram method)": [[137, "dipy.io.streamline.Tractogram.apply_affine"]], "apply_affine() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.apply_affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "are_compatible() (dipy.io.streamline.statefultractogram static method)": [[137, "dipy.io.streamline.StatefulTractogram.are_compatible"]], "base_version (dipy.io.image.version property)": [[137, "dipy.io.image.Version.base_version"]], "bisect() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.bisect"]], "close() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.close"]], "close() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.close"]], "close() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "compute_bounding_box() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.compute_bounding_box"]], "copy() (dipy.io.stateful_tractogram.tractogram method)": [[137, "dipy.io.stateful_tractogram.Tractogram.copy"]], "copy() (dipy.io.streamline.tractogram method)": [[137, "dipy.io.streamline.Tractogram.copy"]], "create_nifti_header() (in module dipy.io.utils)": [[137, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.create_tractogram_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[137, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_point (dipy.io.stateful_tractogram.tractogram property)": [[137, "dipy.io.stateful_tractogram.Tractogram.data_per_point"]], "data_per_point (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.data_per_point"]], "data_per_point (dipy.io.streamline.tractogram property)": [[137, "dipy.io.streamline.Tractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "data_per_streamline (dipy.io.stateful_tractogram.tractogram property)": [[137, "dipy.io.stateful_tractogram.Tractogram.data_per_streamline"]], "data_per_streamline (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.data_per_streamline"]], "data_per_streamline (dipy.io.streamline.tractogram property)": [[137, "dipy.io.streamline.Tractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[137, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[137, "dipy.io.utils.decfa_to_float"]], "deepcopy() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.deepcopy"]], "deepcopy() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.deepcopy"]], "deprecate_with_version() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.deprecate_with_version"]], "detect_format() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.detect_format"]], "detect_format() (in module dipy.io.utils)": [[137, "dipy.io.utils.detect_format"]], "dev (dipy.io.image.version property)": [[137, "dipy.io.image.Version.dev"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dimensions (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.dimensions"]], "dipy.io": [[137, "module-dipy.io"]], "dipy.io.bvectxt": [[137, "module-dipy.io.bvectxt"]], "dipy.io.dpy": [[137, "module-dipy.io.dpy"]], "dipy.io.gradients": [[137, "module-dipy.io.gradients"]], "dipy.io.image": [[137, "module-dipy.io.image"]], "dipy.io.peaks": [[137, "module-dipy.io.peaks"]], "dipy.io.pickles": [[137, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[137, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[137, "module-dipy.io.streamline"]], "dipy.io.utils": [[137, "module-dipy.io.utils"]], "dipy.io.vtk": [[137, "module-dipy.io.vtk"]], "edges() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.edges"]], "epoch (dipy.io.image.version property)": [[137, "dipy.io.image.Version.epoch"]], "extend() (dipy.io.stateful_tractogram.perarraydict method)": [[137, "dipy.io.stateful_tractogram.PerArrayDict.extend"]], "extend() (dipy.io.stateful_tractogram.tractogram method)": [[137, "dipy.io.stateful_tractogram.Tractogram.extend"]], "extend() (dipy.io.streamline.tractogram method)": [[137, "dipy.io.streamline.Tractogram.extend"]], "faces() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.faces"]], "files_types (dipy.io.utils.nifti1image attribute)": [[137, "dipy.io.utils.Nifti1Image.files_types"]], "find_closest() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.find_closest"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "from_sft() (dipy.io.streamline.statefultractogram static method)": [[137, "dipy.io.streamline.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_point_keys() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_data_per_streamline_keys() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.get_reference_info"]], "get_reference_info() (in module dipy.io.utils)": [[137, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "get_streamlines_copy() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.get_streamlines_copy"]], "header_class (dipy.io.utils.nifti1image attribute)": [[137, "dipy.io.utils.Nifti1Image.header_class"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_bbox_in_vox_valid() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.is_bbox_in_vox_valid"]], "is_devrelease (dipy.io.image.version property)": [[137, "dipy.io.image.Version.is_devrelease"]], "is_header_compatible() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.is_header_compatible"]], "is_header_compatible() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.is_header_compatible"]], "is_header_compatible() (in module dipy.io.utils)": [[137, "dipy.io.utils.is_header_compatible"]], "is_postrelease (dipy.io.image.version property)": [[137, "dipy.io.image.Version.is_postrelease"]], "is_prerelease (dipy.io.image.version property)": [[137, "dipy.io.image.Version.is_prerelease"]], "is_reference_info_valid() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.is_reference_info_valid"]], "is_reference_info_valid() (in module dipy.io.utils)": [[137, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_generator"]], "load_nifti() (in module dipy.io.image)": [[137, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[137, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[137, "dipy.io.peaks.load_peaks"]], "load_pickle() (in module dipy.io)": [[137, "dipy.io.load_pickle"]], "load_pickle() (in module dipy.io.pickles)": [[137, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_trk"]], "load_vtk() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_vtk_streamlines"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.load_vtp"]], "local (dipy.io.image.version property)": [[137, "dipy.io.image.Version.local"]], "major (dipy.io.image.version property)": [[137, "dipy.io.image.Version.major"]], "make5d() (in module dipy.io.utils)": [[137, "dipy.io.utils.make5d"]], "micro (dipy.io.image.version property)": [[137, "dipy.io.image.Version.micro"]], "minor (dipy.io.image.version property)": [[137, "dipy.io.image.Version.minor"]], "nifti1_symmat() (in module dipy.io.utils)": [[137, "dipy.io.utils.nifti1_symmat"]], "optional_package() (in module dipy.io.utils)": [[137, "dipy.io.utils.optional_package"]], "optional_package() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.optional_package"]], "orientation_from_string() (in module dipy.io)": [[137, "dipy.io.orientation_from_string"]], "orientation_from_string() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.orientation_from_string"]], "orientation_to_string() (in module dipy.io)": [[137, "dipy.io.orientation_to_string"]], "orientation_to_string() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.orientation_to_string"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "origin (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.origin"]], "ornt_mapping() (in module dipy.io)": [[137, "dipy.io.ornt_mapping"]], "ornt_mapping() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.ornt_mapping"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[137, "dipy.io.peaks.peaks_to_niftis"]], "post (dipy.io.image.version property)": [[137, "dipy.io.image.Version.post"]], "pre (dipy.io.image.version property)": [[137, "dipy.io.image.Version.pre"]], "product (class in dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.product"]], "public (dipy.io.image.version property)": [[137, "dipy.io.image.Version.public"]], "read_bvals_bvecs() (in module dipy.io)": [[137, "dipy.io.read_bvals_bvecs"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[137, "dipy.io.gradients.read_bvals_bvecs"]], "read_bvec_file() (in module dipy.io)": [[137, "dipy.io.read_bvec_file"]], "read_bvec_file() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.read_bvec_file"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[137, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.read_track"]], "read_track() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.read_track"]], "read_track() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.read_track"]], "read_tracks() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.read_tracks"]], "read_tracks() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracks() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.read_tracksi"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.read_tracksi"]], "read_tracksi() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.read_tracksi"]], "release (dipy.io.image.version property)": [[137, "dipy.io.image.Version.release"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "remove_invalid_streamlines() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.remove_invalid_streamlines"]], "reorient_on_axis() (in module dipy.io)": [[137, "dipy.io.reorient_on_axis"]], "reorient_on_axis() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.reorient_on_axis"]], "reorient_vectors() (in module dipy.io)": [[137, "dipy.io.reorient_vectors"]], "reorient_vectors() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.reorient_vectors"]], "reshape_peaks_for_visualization() (in module dipy.io.peaks)": [[137, "dipy.io.peaks.reshape_peaks_for_visualization"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[137, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[137, "dipy.io.image.save_nifti"]], "save_nifti() (in module dipy.io.peaks)": [[137, "dipy.io.peaks.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[137, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io)": [[137, "dipy.io.save_pickle"]], "save_pickle() (in module dipy.io.pickles)": [[137, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[137, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_trk"]], "save_vtk() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_vtk_streamlines"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[137, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[137, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "setup_module() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.setup_module"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "space_attributes (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.space_attributes"]], "splitext() (in module dipy.io.bvectxt)": [[137, "dipy.io.bvectxt.splitext"]], "splitext() (in module dipy.io.gradients)": [[137, "dipy.io.gradients.splitext"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "streamlines (dipy.io.stateful_tractogram.tractogram property)": [[137, "dipy.io.stateful_tractogram.Tractogram.streamlines"]], "streamlines (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.streamlines"]], "streamlines (dipy.io.streamline.tractogram property)": [[137, "dipy.io.streamline.Tractogram.streamlines"]], "subdivide() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.subdivide"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_center() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_corner() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_origin() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_rasmm() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_space() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_vox() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "to_voxmm() (dipy.io.streamline.statefultractogram method)": [[137, "dipy.io.streamline.StatefulTractogram.to_voxmm"]], "to_world() (dipy.io.stateful_tractogram.tractogram method)": [[137, "dipy.io.stateful_tractogram.Tractogram.to_world"]], "to_world() (dipy.io.streamline.tractogram method)": [[137, "dipy.io.streamline.Tractogram.to_world"]], "transform_streamlines() (in module dipy.io.vtk)": [[137, "dipy.io.vtk.transform_streamlines"]], "update_header() (dipy.io.utils.nifti1image method)": [[137, "dipy.io.utils.Nifti1Image.update_header"]], "valid_exts (dipy.io.utils.nifti1image attribute)": [[137, "dipy.io.utils.Nifti1Image.valid_exts"]], "version() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.version"]], "version() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.version"]], "version() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.version"]], "vertices() (dipy.io.peaks.sphere method)": [[137, "dipy.io.peaks.Sphere.vertices"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_order (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[137, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "voxel_sizes (dipy.io.streamline.statefultractogram property)": [[137, "dipy.io.streamline.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.write_track"]], "write_track() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.write_track"]], "write_track() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.write_track"]], "write_tracks() (dipy.io.dpy method)": [[137, "dipy.io.Dpy.write_tracks"]], "write_tracks() (dipy.io.dpy.dpy method)": [[137, "dipy.io.dpy.Dpy.write_tracks"]], "write_tracks() (dipy.io.streamline.dpy method)": [[137, "dipy.io.streamline.Dpy.write_tracks"]], "x (dipy.io.peaks.sphere property)": [[137, "dipy.io.peaks.Sphere.x"]], "y (dipy.io.peaks.sphere property)": [[137, "dipy.io.peaks.Sphere.y"]], "z (dipy.io.peaks.sphere property)": [[137, "dipy.io.peaks.Sphere.z"]], "hemisphere (class in dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.HemiSphere"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[138, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[138, "dipy.nn.model.SingleLayerPerceptron"]], "version (class in dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.Version"]], "version (class in dipy.nn.model)": [[138, "dipy.nn.model.Version"]], "__init__() (dipy.nn.histo_resdnn.hemisphere method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[138, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.histo_resdnn.version method)": [[138, "dipy.nn.histo_resdnn.Version.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[138, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[138, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.model.version method)": [[138, "dipy.nn.model.Version.__init__"]], "base_version (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.base_version"]], "base_version (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.base_version"]], "bench() (in module dipy.nn)": [[138, "dipy.nn.bench"]], "dev (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.dev"]], "dev (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.dev"]], "dipy.nn": [[138, "module-dipy.nn"]], "dipy.nn.histo_resdnn": [[138, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[138, "module-dipy.nn.model"]], "doctest_skip_parser() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.doctest_skip_parser"]], "epoch (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.epoch"]], "epoch (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.epoch"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[138, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[138, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "faces() (dipy.nn.histo_resdnn.hemisphere method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.faces"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[138, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "find_closest() (dipy.nn.histo_resdnn.hemisphere method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.find_closest"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[138, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[138, "dipy.nn.model.SingleLayerPerceptron.fit"]], "from_sphere() (dipy.nn.histo_resdnn.hemisphere class method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.from_sphere"]], "get_bval_indices() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.get_bval_indices"]], "get_fnames() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.get_fnames"]], "get_sphere() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.get_sphere"]], "is_devrelease (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.is_devrelease"]], "is_devrelease (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.is_devrelease"]], "is_postrelease (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.is_postrelease"]], "is_postrelease (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.is_postrelease"]], "is_prerelease (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.is_prerelease"]], "is_prerelease (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.is_prerelease"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[138, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "local (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.local"]], "local (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.local"]], "major (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.major"]], "major (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.major"]], "micro (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.micro"]], "micro (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.micro"]], "minor (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.minor"]], "minor (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.minor"]], "mirror() (dipy.nn.histo_resdnn.hemisphere method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.mirror"]], "optional_package() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.optional_package"]], "optional_package() (in module dipy.nn.model)": [[138, "dipy.nn.model.optional_package"]], "post (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.post"]], "post (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.post"]], "pre (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.pre"]], "pre (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.pre"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[138, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[138, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[138, "dipy.nn.model.SingleLayerPerceptron.predict"]], "public (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.public"]], "public (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.public"]], "release (dipy.nn.histo_resdnn.version property)": [[138, "dipy.nn.histo_resdnn.Version.release"]], "release (dipy.nn.model.version property)": [[138, "dipy.nn.model.Version.release"]], "set_logger_level() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.set_logger_level"]], "sf_to_sh() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.sf_to_sh"]], "sh_to_sf() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.sh_to_sf"]], "sph_harm_ind_list() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.sph_harm_ind_list"]], "subdivide() (dipy.nn.histo_resdnn.hemisphere method)": [[138, "dipy.nn.histo_resdnn.HemiSphere.subdivide"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[138, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[138, "dipy.nn.model.SingleLayerPerceptron.summary"]], "test() (in module dipy.nn)": [[138, "dipy.nn.test"]], "unique_bvals_magnitude() (in module dipy.nn.histo_resdnn)": [[138, "dipy.nn.histo_resdnn.unique_bvals_magnitude"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.AxSymShResponse"]], "axsymshresponse (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[139, "dipy.reconst.cache.Cache"]], "cache (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.Cache"]], "cache (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.Cache"]], "cache (class in dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.Cache"]], "cache (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.Cache"]], "cache (class in dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.Cache"]], "cache (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.Cache"]], "cache (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.Cache"]], "cache (class in dipy.reconst.shore)": [[139, "dipy.reconst.shore.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[139, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[139, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosisfit (class in dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[139, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionkurtosismodel (class in dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "eudxdirectiongetter (class in dipy.reconst.eudx_direction_getter)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "gradienttable (class in dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable"]], "gradienttable (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.GradientTable"]], "h() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.IvimFit"]], "ivimmodel() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.IvimModel"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.IvimModelVP"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.OdfFit"]], "odffit (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.OdfFit"]], "odffit (class in dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.OdfFit"]], "odffit (class in dipy.reconst.odf)": [[139, "dipy.reconst.odf.OdfFit"]], "odffit (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.OdfFit"]], "odffit (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.OdfFit"]], "odfmodel (class in dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.OdfModel"]], "odfmodel (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.OdfModel"]], "odfmodel (class in dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.OdfModel"]], "odfmodel (class in dipy.reconst.odf)": [[139, "dipy.reconst.odf.OdfModel"]], "odfmodel (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.OdfModel"]], "odfmodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.OpdtModel"]], "optimizer (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.Optimizer"]], "ordereddict (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.OrderedDict"]], "positivedefiniteleastsquares (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.PositiveDefiniteLeastSquares"]], "qballbasemodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[139, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[139, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[139, "dipy.reconst.base.ReconstFit"]], "reconstfit (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.ReconstFit"]], "reconstfit (class in dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.ReconstFit"]], "reconstfit (class in dipy.reconst.odf)": [[139, "dipy.reconst.odf.ReconstFit"]], "reconstfit (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[139, "dipy.reconst.base.ReconstModel"]], "reconstmodel (class in dipy.reconst.dki)": [[139, "dipy.reconst.dki.ReconstModel"]], "reconstmodel (class in dipy.reconst.dti)": [[139, "dipy.reconst.dti.ReconstModel"]], "reconstmodel (class in dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.ReconstModel"]], "reconstmodel (class in dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.ReconstModel"]], "reconstmodel (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.ReconstModel"]], "reconstmodel (class in dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.ReconstModel"]], "reconstmodel (class in dipy.reconst.odf)": [[139, "dipy.reconst.odf.ReconstModel"]], "reconstmodel (class in dipy.reconst.qti)": [[139, "dipy.reconst.qti.ReconstModel"]], "reconstmodel (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[139, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[139, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[139, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.SphHarmFit"]], "sphharmfit (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.SphHarmModel"]], "sphharmmodel (class in dipy.reconst.shm)": [[139, "dipy.reconst.shm.SphHarmModel"]], "sphere (class in dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.Sphere"]], "tensorfit (class in dipy.reconst.dki)": [[139, "dipy.reconst.dki.TensorFit"]], "tensorfit (class in dipy.reconst.dti)": [[139, "dipy.reconst.dti.TensorFit"]], "tensorfit (class in dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.TensorFit"]], "tensormodel (class in dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.TensorModel"]], "tensormodel (class in dipy.reconst.dti)": [[139, "dipy.reconst.dti.TensorModel"]], "tensormodel (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.TensorModel"]], "version (class in dipy.reconst.dti)": [[139, "dipy.reconst.dti.Version"]], "version (class in dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.Version"]], "version (class in dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.Version"]], "version (class in dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.Version"]], "version (class in dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.Version"]], "version (class in dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.Version"]], "version (class in dipy.reconst.qti)": [[139, "dipy.reconst.qti.Version"]], "version (class in dipy.reconst.shore)": [[139, "dipy.reconst.shore.Version"]], "wcons() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[139, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[139, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.benchmarks.bench_csd.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[139, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[139, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[139, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.csdeconv.sphharmfit method)": [[139, "dipy.reconst.csdeconv.SphHarmFit.__init__"]], "__init__() (dipy.reconst.csdeconv.sphharmmodel method)": [[139, "dipy.reconst.csdeconv.SphHarmModel.__init__"]], "__init__() (dipy.reconst.csdeconv.tensormodel method)": [[139, "dipy.reconst.csdeconv.TensorModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki.reconstmodel method)": [[139, "dipy.reconst.dki.ReconstModel.__init__"]], "__init__() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.__init__"]], "__init__() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki_micro.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.cache method)": [[139, "dipy.reconst.dsi.Cache.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dsi.odffit method)": [[139, "dipy.reconst.dsi.OdfFit.__init__"]], "__init__() (dipy.reconst.dsi.odfmodel method)": [[139, "dipy.reconst.dsi.OdfModel.__init__"]], "__init__() (dipy.reconst.dti.reconstmodel method)": [[139, "dipy.reconst.dti.ReconstModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[139, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.dti.version method)": [[139, "dipy.reconst.dti.Version.__init__"]], "__init__() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.__init__"]], "__init__() (dipy.reconst.forecast.cache method)": [[139, "dipy.reconst.forecast.Cache.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[139, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[139, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.forecast.odffit method)": [[139, "dipy.reconst.forecast.OdfFit.__init__"]], "__init__() (dipy.reconst.forecast.odfmodel method)": [[139, "dipy.reconst.forecast.OdfModel.__init__"]], "__init__() (dipy.reconst.forecast.version method)": [[139, "dipy.reconst.forecast.Version.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[139, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[139, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.fwdti.reconstmodel method)": [[139, "dipy.reconst.fwdti.ReconstModel.__init__"]], "__init__() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.__init__"]], "__init__() (dipy.reconst.gqi.cache method)": [[139, "dipy.reconst.gqi.Cache.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.gqi.odffit method)": [[139, "dipy.reconst.gqi.OdfFit.__init__"]], "__init__() (dipy.reconst.gqi.odfmodel method)": [[139, "dipy.reconst.gqi.OdfModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[139, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[139, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.ivim.reconstmodel method)": [[139, "dipy.reconst.ivim.ReconstModel.__init__"]], "__init__() (dipy.reconst.ivim.version method)": [[139, "dipy.reconst.ivim.Version.__init__"]], "__init__() (dipy.reconst.mapmri.cache method)": [[139, "dipy.reconst.mapmri.Cache.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[139, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mapmri.optimizer method)": [[139, "dipy.reconst.mapmri.Optimizer.__init__"]], "__init__() (dipy.reconst.mapmri.positivedefiniteleastsquares method)": [[139, "dipy.reconst.mapmri.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.reconst.mapmri.reconstfit method)": [[139, "dipy.reconst.mapmri.ReconstFit.__init__"]], "__init__() (dipy.reconst.mapmri.reconstmodel method)": [[139, "dipy.reconst.mapmri.ReconstModel.__init__"]], "__init__() (dipy.reconst.mapmri.version method)": [[139, "dipy.reconst.mapmri.Version.__init__"]], "__init__() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[139, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[139, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[139, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[139, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.mcsd.tensormodel method)": [[139, "dipy.reconst.mcsd.TensorModel.__init__"]], "__init__() (dipy.reconst.mcsd.version method)": [[139, "dipy.reconst.mcsd.Version.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.msdki.reconstmodel method)": [[139, "dipy.reconst.msdki.ReconstModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[139, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[139, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.multi_voxel.reconstfit method)": [[139, "dipy.reconst.multi_voxel.ReconstFit.__init__"]], "__init__() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[139, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[139, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.odf.reconstfit method)": [[139, "dipy.reconst.odf.ReconstFit.__init__"]], "__init__() (dipy.reconst.odf.reconstmodel method)": [[139, "dipy.reconst.odf.ReconstModel.__init__"]], "__init__() (dipy.reconst.qtdmri.cache method)": [[139, "dipy.reconst.qtdmri.Cache.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[139, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qtdmri.version method)": [[139, "dipy.reconst.qtdmri.Version.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[139, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.qti.reconstmodel method)": [[139, "dipy.reconst.qti.ReconstModel.__init__"]], "__init__() (dipy.reconst.qti.version method)": [[139, "dipy.reconst.qti.Version.__init__"]], "__init__() (dipy.reconst.rumba.axsymshresponse method)": [[139, "dipy.reconst.rumba.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.rumba.odffit method)": [[139, "dipy.reconst.rumba.OdfFit.__init__"]], "__init__() (dipy.reconst.rumba.odfmodel method)": [[139, "dipy.reconst.rumba.OdfModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[139, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.__init__"]], "__init__() (dipy.reconst.sfm.cache method)": [[139, "dipy.reconst.sfm.Cache.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[139, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[139, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[139, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[139, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.__init__"]], "__init__() (dipy.reconst.sfm.reconstfit method)": [[139, "dipy.reconst.sfm.ReconstFit.__init__"]], "__init__() (dipy.reconst.sfm.reconstmodel method)": [[139, "dipy.reconst.sfm.ReconstModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[139, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[139, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.cache method)": [[139, "dipy.reconst.shm.Cache.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[139, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.odffit method)": [[139, "dipy.reconst.shm.OdfFit.__init__"]], "__init__() (dipy.reconst.shm.odfmodel method)": [[139, "dipy.reconst.shm.OdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[139, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[139, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[139, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[139, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[139, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[139, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.cache method)": [[139, "dipy.reconst.shore.Cache.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[139, "dipy.reconst.shore.ShoreModel.__init__"]], "__init__() (dipy.reconst.shore.version method)": [[139, "dipy.reconst.shore.Version.__init__"]], "ad() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.ad"]], "ad() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.ad"]], "ad() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.ad"]], "adc() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.adc"]], "adc() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.adc"]], "adc() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.adc"]], "adj_to_countarrs() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.adj_to_countarrs"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "ak() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "akc() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[139, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "all_tensor_evecs() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.all_tensor_evecs"]], "ang_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.ang_thr"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.apparent_kurtosis_coef"]], "argmax_from_adj() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.argmax_from_adj"]], "argmax_from_countarrs() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.argmax_from_countarrs"]], "as_strided() (in module dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.as_strided"]], "auto_attr() (in module dipy.reconst.cache)": [[139, "dipy.reconst.cache.auto_attr"]], "auto_attr() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.auto_attr"]], "auto_attr() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.auto_attr"]], "auto_attr() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.auto_attr"]], "auto_attr() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.auto_attr"]], "auto_attr() (in module dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.auto_attr"]], "auto_attr() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.auto_attr"]], "auto_response() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.axial_diffusivity"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b0s_mask() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask"]], "b0s_mask() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.b0s_mask"]], "b_mat() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.b_mat_isotropic"]], "base_version (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.base_version"]], "base_version (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.base_version"]], "base_version (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.base_version"]], "base_version (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.base_version"]], "base_version (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.base_version"]], "base_version (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.base_version"]], "base_version (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.base_version"]], "base_version (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.base_version"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[139, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "basis() (dipy.reconst.rumba.axsymshresponse method)": [[139, "dipy.reconst.rumba.AxSymShResponse.basis"]], "bench() (in module dipy.reconst)": [[139, "dipy.reconst.bench"]], "bench_bounding_box() (in module dipy.reconst.benchmarks.bench_bounding_box)": [[139, "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box"]], "bench_csdeconv() (in module dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.bench_csdeconv"]], "bench_local_maxima() (in module dipy.reconst.benchmarks.bench_peaks)": [[139, "dipy.reconst.benchmarks.bench_peaks.bench_local_maxima"]], "bench_quick_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[139, "dipy.reconst.benchmarks.bench_squash.bench_quick_squash"]], "bench_vec_val_vect() (in module dipy.reconst.benchmarks.bench_vec_val_sum)": [[139, "dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.bootstrap_data_voxel"]], "bounding_box() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.bounding_box"]], "bvals() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.bvals"]], "bvals() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.bvals"]], "bvecs() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs"]], "bvecs() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.bvecs"]], "c_c() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[139, "dipy.reconst.cache.Cache.cache_clear"]], "cache_clear() (dipy.reconst.dsi.cache method)": [[139, "dipy.reconst.dsi.Cache.cache_clear"]], "cache_clear() (dipy.reconst.forecast.cache method)": [[139, "dipy.reconst.forecast.Cache.cache_clear"]], "cache_clear() (dipy.reconst.gqi.cache method)": [[139, "dipy.reconst.gqi.Cache.cache_clear"]], "cache_clear() (dipy.reconst.mapmri.cache method)": [[139, "dipy.reconst.mapmri.Cache.cache_clear"]], "cache_clear() (dipy.reconst.qtdmri.cache method)": [[139, "dipy.reconst.qtdmri.Cache.cache_clear"]], "cache_clear() (dipy.reconst.sfm.cache method)": [[139, "dipy.reconst.sfm.Cache.cache_clear"]], "cache_clear() (dipy.reconst.shm.cache method)": [[139, "dipy.reconst.shm.Cache.cache_clear"]], "cache_clear() (dipy.reconst.shore.cache method)": [[139, "dipy.reconst.shore.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[139, "dipy.reconst.cache.Cache.cache_get"]], "cache_get() (dipy.reconst.dsi.cache method)": [[139, "dipy.reconst.dsi.Cache.cache_get"]], "cache_get() (dipy.reconst.forecast.cache method)": [[139, "dipy.reconst.forecast.Cache.cache_get"]], "cache_get() (dipy.reconst.gqi.cache method)": [[139, "dipy.reconst.gqi.Cache.cache_get"]], "cache_get() (dipy.reconst.mapmri.cache method)": [[139, "dipy.reconst.mapmri.Cache.cache_get"]], "cache_get() (dipy.reconst.qtdmri.cache method)": [[139, "dipy.reconst.qtdmri.Cache.cache_get"]], "cache_get() (dipy.reconst.sfm.cache method)": [[139, "dipy.reconst.sfm.Cache.cache_get"]], "cache_get() (dipy.reconst.shm.cache method)": [[139, "dipy.reconst.shm.Cache.cache_get"]], "cache_get() (dipy.reconst.shore.cache method)": [[139, "dipy.reconst.shore.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[139, "dipy.reconst.cache.Cache.cache_set"]], "cache_set() (dipy.reconst.dsi.cache method)": [[139, "dipy.reconst.dsi.Cache.cache_set"]], "cache_set() (dipy.reconst.forecast.cache method)": [[139, "dipy.reconst.forecast.Cache.cache_set"]], "cache_set() (dipy.reconst.gqi.cache method)": [[139, "dipy.reconst.gqi.Cache.cache_set"]], "cache_set() (dipy.reconst.mapmri.cache method)": [[139, "dipy.reconst.mapmri.Cache.cache_set"]], "cache_set() (dipy.reconst.qtdmri.cache method)": [[139, "dipy.reconst.qtdmri.Cache.cache_set"]], "cache_set() (dipy.reconst.sfm.cache method)": [[139, "dipy.reconst.sfm.Cache.cache_set"]], "cache_set() (dipy.reconst.shm.cache method)": [[139, "dipy.reconst.shm.Cache.cache_set"]], "cache_set() (dipy.reconst.shore.cache method)": [[139, "dipy.reconst.shore.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.carlson_rf"]], "cart2sphere() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.cart2sphere"]], "cart2sphere() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.cart2sphere"]], "cart2sphere() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.cart2sphere"]], "cart2sphere() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.cart2sphere"]], "cart2sphere() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.cart2sphere"]], "cart2sphere() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.cart2sphere"]], "cart2sphere() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.cart2sphere"]], "check_multi_b() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.check_multi_b"]], "check_multi_b() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.check_multi_b"]], "check_multi_b() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.check_multi_b"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "clear() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.clear"]], "clear() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.clear"]], "close() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.close"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[139, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.color_fa"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.convert_sh_to_legacy"]], "copy() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.copy"]], "create_qspace() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.create_rt_space_grid"]], "crop() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.crop"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.csdeconv"]], "csdeconv() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.csdeconv"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.decompose_tensor"]], "decompose_tensor() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.decompose_tensor"]], "decompose_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.decompose_tensor"]], "decompose_tensor() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.delta"]], "deprecate_with_version() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.deprecate_with_version"]], "deprecate_with_version() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.deprecate_with_version"]], "deprecated_params() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.deprecated_params"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[139, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.determinant"]], "determine_num_processes() (in module dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.determine_num_processes"]], "dev (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.dev"]], "dev (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.dev"]], "dev (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.dev"]], "dev (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.dev"]], "dev (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.dev"]], "dev (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.dev"]], "dev (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.dev"]], "dev (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.dev"]], "deviatoric() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.deviatoric"]], "differential_evolution() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.differential_evolution"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[139, "module-dipy.reconst"]], "dipy.reconst.base": [[139, "module-dipy.reconst.base"]], "dipy.reconst.benchmarks": [[139, "module-dipy.reconst.benchmarks"]], "dipy.reconst.benchmarks.bench_bounding_box": [[139, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[139, "module-dipy.reconst.benchmarks.bench_csd"]], "dipy.reconst.benchmarks.bench_peaks": [[139, "module-dipy.reconst.benchmarks.bench_peaks"]], "dipy.reconst.benchmarks.bench_squash": [[139, "module-dipy.reconst.benchmarks.bench_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[139, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "dipy.reconst.cache": [[139, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[139, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[139, "module-dipy.reconst.csdeconv"]], "dipy.reconst.dki": [[139, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[139, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[139, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[139, "module-dipy.reconst.dti"]], "dipy.reconst.eudx_direction_getter": [[139, "module-dipy.reconst.eudx_direction_getter"]], "dipy.reconst.forecast": [[139, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[139, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[139, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[139, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[139, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[139, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[139, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[139, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[139, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[139, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[139, "module-dipy.reconst.qti"]], "dipy.reconst.quick_squash": [[139, "module-dipy.reconst.quick_squash"]], "dipy.reconst.recspeed": [[139, "module-dipy.reconst.recspeed"]], "dipy.reconst.rumba": [[139, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[139, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[139, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[139, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[139, "module-dipy.reconst.utils"]], "dipy.reconst.vec_val_sum": [[139, "module-dipy.reconst.vec_val_sum"]], "directional_diffusion() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.directional_kurtosis"]], "directional_kurtosis() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.directional_kurtosis"]], "directions (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.directions"]], "directions (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.directions"]], "directions (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.directions"]], "display() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.display"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[139, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[139, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[139, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.dtd_covariance"]], "dti_design_matrix() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.dti_design_matrix"]], "edges() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.edges"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "epoch (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.epoch"]], "epoch (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.epoch"]], "epoch (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.epoch"]], "epoch (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.epoch"]], "epoch (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.epoch"]], "epoch (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.epoch"]], "epoch (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.epoch"]], "epoch (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.epoch"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[139, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[139, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.evals"]], "evals (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.evals"]], "evals (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.evals"]], "evecs (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.evecs"]], "evecs (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.evecs"]], "evecs (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.evecs"]], "evolution (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.evolution"]], "external_write_mode() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.external_write_mode"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[139, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.fa"]], "fa() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "faces() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.faces"]], "factorial() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.factorial"]], "factorial() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.factorial"]], "factorial2() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.factorial2"]], "factorial2() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.factorial2"]], "fftn() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.fftn"]], "fftshift() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.fftshift"]], "find_closest() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.find_closest"]], "find_signal_means() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[139, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.benchmarks.bench_csd.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[139, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.csdeconv.tensormodel method)": [[139, "dipy.reconst.csdeconv.TensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki.reconstmodel method)": [[139, "dipy.reconst.dki.ReconstModel.fit"]], "fit() (dipy.reconst.dki_micro.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dsi.odfmodel method)": [[139, "dipy.reconst.dsi.OdfModel.fit"]], "fit() (dipy.reconst.dti.reconstmodel method)": [[139, "dipy.reconst.dti.ReconstModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[139, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[139, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.forecast.odfmodel method)": [[139, "dipy.reconst.forecast.OdfModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[139, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.fwdti.reconstmodel method)": [[139, "dipy.reconst.fwdti.ReconstModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.gqi.odfmodel method)": [[139, "dipy.reconst.gqi.OdfModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[139, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.ivim.reconstmodel method)": [[139, "dipy.reconst.ivim.ReconstModel.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[139, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mapmri.reconstmodel method)": [[139, "dipy.reconst.mapmri.ReconstModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[139, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.mcsd.tensormodel method)": [[139, "dipy.reconst.mcsd.TensorModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.msdki.reconstmodel method)": [[139, "dipy.reconst.msdki.ReconstModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[139, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.odf.reconstmodel method)": [[139, "dipy.reconst.odf.ReconstModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[139, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[139, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.qti.reconstmodel method)": [[139, "dipy.reconst.qti.ReconstModel.fit"]], "fit() (dipy.reconst.rumba.odfmodel method)": [[139, "dipy.reconst.rumba.OdfModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[139, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[139, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.reconstmodel method)": [[139, "dipy.reconst.sfm.ReconstModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[139, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.odfmodel method)": [[139, "dipy.reconst.shm.OdfModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[139, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[139, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "fmin_l_bfgs_b() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.fmin_l_bfgs_b"]], "fopt (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.fopt"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.forecast_matrix"]], "format_dict (dipy.reconst.multi_voxel.tqdm property)": [[139, "dipy.reconst.multi_voxel.tqdm.format_dict"]], "format_interval() (dipy.reconst.multi_voxel.tqdm static method)": [[139, "dipy.reconst.multi_voxel.tqdm.format_interval"]], "format_meter() (dipy.reconst.multi_voxel.tqdm static method)": [[139, "dipy.reconst.multi_voxel.tqdm.format_meter"]], "format_num() (dipy.reconst.multi_voxel.tqdm static method)": [[139, "dipy.reconst.multi_voxel.tqdm.format_num"]], "format_sizeof() (dipy.reconst.multi_voxel.tqdm static method)": [[139, "dipy.reconst.multi_voxel.tqdm.format_sizeof"]], "forward_sdeconv_mat() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.forward_sdeconv_mat"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[139, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.from_lower_triangular"]], "from_lower_triangular() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.from_lower_triangular"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.from_lower_triangular"]], "from_lower_triangular() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.from_lower_triangular"]], "fromkeys() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.fromkeys"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.ga"]], "ga() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.ga"]], "ga() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.generate_kernel"]], "genlaguerre() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.genlaguerre"]], "genlaguerre() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.genlaguerre"]], "genlaguerre() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.genlaguerre"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.geodesic_anisotropy"]], "get_bval_indices() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.get_bval_indices"]], "get_bval_indices() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.get_bval_indices"]], "get_fnames() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.get_fnames"]], "get_lock() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.get_lock"]], "get_sphere() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.get_sphere"]], "get_sphere() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.get_sphere"]], "get_sphere() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.get_sphere"]], "get_sphere() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.get_sphere"]], "get_sphere() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.get_sphere"]], "gfa() (dipy.reconst.csdeconv.sphharmfit method)": [[139, "dipy.reconst.csdeconv.SphHarmFit.gfa"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[139, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[139, "dipy.reconst.odf.gfa"]], "gradient_strength() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.gradient_strength"]], "gradient_strength() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.gradient_table"]], "gradient_table() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.gradient_table"]], "gradient_table() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.gradient_table"]], "gradient_table() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.gradient_table"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.gradient_table_from_gradient_strength_bvecs"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.hat"]], "hermite() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.hermite"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "ifftshift() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.ifftshift"]], "info (dipy.reconst.benchmarks.bench_csd.gradienttable property)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.info"]], "info (dipy.reconst.mcsd.gradienttable property)": [[139, "dipy.reconst.mcsd.GradientTable.info"]], "initial_direction() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.initial_direction"]], "is_devrelease (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.is_devrelease"]], "is_devrelease (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.is_devrelease"]], "is_devrelease (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.is_devrelease"]], "is_devrelease (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.is_devrelease"]], "is_devrelease (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.is_devrelease"]], "is_devrelease (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.is_devrelease"]], "is_devrelease (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.is_devrelease"]], "is_devrelease (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.is_devrelease"]], "is_postrelease (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.is_postrelease"]], "is_postrelease (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.is_postrelease"]], "is_postrelease (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.is_postrelease"]], "is_postrelease (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.is_postrelease"]], "is_postrelease (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.is_postrelease"]], "is_postrelease (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.is_postrelease"]], "is_postrelease (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.is_postrelease"]], "is_postrelease (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.is_postrelease"]], "is_prerelease (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.is_prerelease"]], "is_prerelease (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.is_prerelease"]], "is_prerelease (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.is_prerelease"]], "is_prerelease (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.is_prerelease"]], "is_prerelease (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.is_prerelease"]], "is_prerelease (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.is_prerelease"]], "is_prerelease (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.is_prerelease"]], "is_prerelease (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.is_prerelease"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[139, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.isotropic_scale_factor"]], "items() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.items"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.k_shear"]], "keys() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.keys"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfa (dipy.reconst.dki_micro.diffusionkurtosisfit property)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[139, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kmax() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kt (dipy.reconst.dki_micro.diffusionkurtosisfit property)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.kurtosis_maximum"]], "kurtosis_maximum() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.lazy_index"]], "lazy_index() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.lazy_index"]], "lazy_index() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.lcr_matrix"]], "le_to_odf() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.le_to_odf"]], "least_squares() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.least_squares"]], "leastsq() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.leastsq"]], "linearity() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.linearity"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.linearity"]], "load_nifti_data() (in module dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.load_nifti_data"]], "load_sdp_constraints() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.load_sdp_constraints"]], "local (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.local"]], "local (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.local"]], "local (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.local"]], "local (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.local"]], "local (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.local"]], "local (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.local"]], "local (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.local"]], "local (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.local"]], "local_maxima() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.local_maxima"]], "local_maxima() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.local_maxima"]], "lower_triangular() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.lower_triangular"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.lower_triangular"]], "lower_triangular() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "lpn() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.lpn"]], "major (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.major"]], "major (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.major"]], "major (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.major"]], "major (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.major"]], "major (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.major"]], "major (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.major"]], "major (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.major"]], "major (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.major"]], "map_coordinates() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.map_coordinates"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[139, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[139, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[139, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[139, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.md"]], "md() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[139, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.mean_signal_bvalue"]], "measure() (in module dipy.reconst.benchmarks.bench_bounding_box)": [[139, "dipy.reconst.benchmarks.bench_bounding_box.measure"]], "measure() (in module dipy.reconst.benchmarks.bench_peaks)": [[139, "dipy.reconst.benchmarks.bench_peaks.measure"]], "measure() (in module dipy.reconst.benchmarks.bench_squash)": [[139, "dipy.reconst.benchmarks.bench_squash.measure"]], "measure() (in module dipy.reconst.benchmarks.bench_vec_val_sum)": [[139, "dipy.reconst.benchmarks.bench_vec_val_sum.measure"]], "message (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.message"]], "mfactorial() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.mfactorial"]], "micro (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.micro"]], "micro (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.micro"]], "micro (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.micro"]], "micro (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.micro"]], "micro (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.micro"]], "micro (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.micro"]], "micro (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.micro"]], "micro (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.micro"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[139, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[139, "dipy.reconst.odf.minmax_normalize"]], "minor (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.minor"]], "minor (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.minor"]], "minor (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.minor"]], "minor (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.minor"]], "minor (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.minor"]], "minor (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.minor"]], "minor (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.minor"]], "minor (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.minor"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mkt() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.mode"]], "mode() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.mode"]], "mode() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.mode"]], "monitor (dipy.reconst.multi_voxel.tqdm attribute)": [[139, "dipy.reconst.multi_voxel.tqdm.monitor"]], "monitor_interval (dipy.reconst.multi_voxel.tqdm attribute)": [[139, "dipy.reconst.multi_voxel.tqdm.monitor_interval"]], "move_to_end() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.move_to_end"]], "moveto() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.moveto"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.msk_from_awf"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.multi_voxel_fit"]], "multi_voxel_fit() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.n_shore"]], "nanmean() (in module dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.nanmean"]], "ndindex() (in module dipy.reconst.benchmarks.bench_squash)": [[139, "dipy.reconst.benchmarks.bench_squash.ndindex"]], "ndindex() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.ndindex"]], "ndindex() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.ndindex"]], "ndindex() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.ndindex"]], "ndindex() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.ndindex"]], "ndindex() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.ndindex"]], "ndindex() (in module dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.ndindex"]], "ndindex() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.ndindex"]], "nfev (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.nfev"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nit (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.nit"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.nlls_fit_tensor"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.normalize_data"]], "normalize_data() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.npa"]], "num_grad() (in module dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.num_grad"]], "odf() (dipy.reconst.csdeconv.sphharmfit method)": [[139, "dipy.reconst.csdeconv.SphHarmFit.odf"]], "odf() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.odf"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dsi.odffit method)": [[139, "dipy.reconst.dsi.OdfFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[139, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.forecast.odffit method)": [[139, "dipy.reconst.forecast.OdfFit.odf"]], "odf() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[139, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.gqi.odffit method)": [[139, "dipy.reconst.gqi.OdfFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[139, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.odffit method)": [[139, "dipy.reconst.rumba.OdfFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[139, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.odffit method)": [[139, "dipy.reconst.shm.OdfFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[139, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.odf_sum"]], "old_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[139, "dipy.reconst.benchmarks.bench_squash.old_squash"]], "ols_fit_dki() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.ols_fit_dki"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[139, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "on_sphere() (dipy.reconst.rumba.axsymshresponse method)": [[139, "dipy.reconst.rumba.AxSymShResponse.on_sphere"]], "optional_package() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.optional_package"]], "optional_package() (in module dipy.reconst.ivim)": [[139, "dipy.reconst.ivim.optional_package"]], "optional_package() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.optional_package"]], "optional_package() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.optional_package"]], "optional_package() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.optional_package"]], "optional_package() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.optional_package"]], "optional_package() (in module dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.optional_package"]], "optional_package() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.optional_package"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.order_from_ncoef"]], "pandas() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.pandas"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.pdf_odf"]], "peaks_from_model() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.peaks_from_model"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[139, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "perpendicular_directions() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.perpendicular_directions"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.phi"]], "pinv() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.pinv"]], "planarity() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.planarity"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.polar_zone_vertices"]], "pop() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.pop"]], "popitem() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.popitem"]], "post (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.post"]], "post (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.post"]], "post (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.post"]], "post (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.post"]], "post (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.post"]], "post (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.post"]], "post (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.post"]], "post (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.post"]], "pre (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.pre"]], "pre (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.pre"]], "pre (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.pre"]], "pre (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.pre"]], "pre (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.pre"]], "pre (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.pre"]], "pre (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.pre"]], "pre (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.pre"]], "predict() (dipy.reconst.benchmarks.bench_csd.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[139, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.csdeconv.sphharmfit method)": [[139, "dipy.reconst.csdeconv.SphHarmFit.predict"]], "predict() (dipy.reconst.csdeconv.tensormodel method)": [[139, "dipy.reconst.csdeconv.TensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.predict"]], "predict() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki_micro.diffusionkurtosismodel method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[139, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[139, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[139, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[139, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[139, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[139, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[139, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.mcsd.tensormodel method)": [[139, "dipy.reconst.mcsd.TensorModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[139, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[139, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[139, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[139, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[139, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[139, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[139, "dipy.reconst.shm.SphHarmFit.predict"]], "print_summary() (dipy.reconst.mapmri.optimizer method)": [[139, "dipy.reconst.mapmri.Optimizer.print_summary"]], "proc_reco_args() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.proc_reco_args"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.psi_l"]], "public (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.public"]], "public (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.public"]], "public (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.public"]], "public (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.public"]], "public (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.public"]], "public (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.public"]], "public (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.public"]], "public (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.public"]], "qa_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.qa_thr"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.qti_signal"]], "quad() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.quad"]], "quadratic_form (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.quadratic_form"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quadratic_form (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.quantize_evecs"]], "quick_squash() (in module dipy.reconst.quick_squash)": [[139, "dipy.reconst.quick_squash.quick_squash"]], "qvals() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.qvals"]], "qvals() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.qvals"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.radial_diffusivity"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.radial_kurtosis"]], "randint() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.randint"]], "rd() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.rd"]], "rd() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.rd"]], "rd() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.rd"]], "read_stanford_labels() (in module dipy.reconst.benchmarks.bench_csd)": [[139, "dipy.reconst.benchmarks.bench_csd.read_stanford_labels"]], "real_sh_descoteaux() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.real_sh_descoteaux"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.real_sh_descoteaux_from_index"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.real_sh_descoteaux_from_index"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.real_sh_descoteaux_from_index"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.real_sh_descoteaux_from_index"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.recursive_response"]], "reduce() (in module dipy.reconst.benchmarks.bench_squash)": [[139, "dipy.reconst.benchmarks.bench_squash.reduce"]], "reduce() (in module dipy.reconst.quick_squash)": [[139, "dipy.reconst.quick_squash.reduce"]], "refresh() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.refresh"]], "release (dipy.reconst.dti.version property)": [[139, "dipy.reconst.dti.Version.release"]], "release (dipy.reconst.forecast.version property)": [[139, "dipy.reconst.forecast.Version.release"]], "release (dipy.reconst.ivim.version property)": [[139, "dipy.reconst.ivim.Version.release"]], "release (dipy.reconst.mapmri.version property)": [[139, "dipy.reconst.mapmri.Version.release"]], "release (dipy.reconst.mcsd.version property)": [[139, "dipy.reconst.mcsd.Version.release"]], "release (dipy.reconst.qtdmri.version property)": [[139, "dipy.reconst.qtdmri.Version.release"]], "release (dipy.reconst.qti.version property)": [[139, "dipy.reconst.qti.Version.release"]], "release (dipy.reconst.shore.version property)": [[139, "dipy.reconst.shore.Version.release"]], "remove_similar_vertices() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.remove_similar_vertices"]], "reset() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.reset"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "response_from_mask_ssst() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.restore_fit_tensor"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rk() (dipy.reconst.dki_micro.diffusionkurtosisfit method)": [[139, "dipy.reconst.dki_micro.DiffusionKurtosisFit.rk"]], "round_bvals() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.round_bvals"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[139, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[139, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[139, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.csdeconv.sphharmmodel method)": [[139, "dipy.reconst.csdeconv.SphHarmModel.sampling_matrix"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[139, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "search_descending() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.search_descending"]], "set_description() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.set_description"]], "set_description_str() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.set_description_str"]], "set_lock() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.set_lock"]], "set_postfix() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.set_postfix"]], "set_postfix_str() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.set_postfix_str"]], "setdefault() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.setdefault"]], "sf_to_sh() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.sf_to_sh"]], "sfactorial() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.sfactorial"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[139, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[139, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.sh_to_rh"]], "sh_to_rh() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.csdeconv.sphharmfit property)": [[139, "dipy.reconst.csdeconv.SphHarmFit.shape"]], "shape (dipy.reconst.dki.tensorfit property)": [[139, "dipy.reconst.dki.TensorFit.shape"]], "shape (dipy.reconst.dti.tensorfit property)": [[139, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.fwdti.tensorfit property)": [[139, "dipy.reconst.fwdti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[139, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[139, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[139, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.csdeconv.sphharmfit property)": [[139, "dipy.reconst.csdeconv.SphHarmFit.shm_coeff"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[139, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[139, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[139, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.shore_order"]], "single_tensor() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.single_tensor"]], "single_tensor() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.single_tensor"]], "single_tensor() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.single_tensor"]], "smooth_pinv() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[139, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve() (dipy.reconst.mapmri.positivedefiniteleastsquares method)": [[139, "dipy.reconst.mapmri.PositiveDefiniteLeastSquares.solve"]], "solve_qp() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[139, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.sph_harm_ind_list"]], "sph_harm_ind_list() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.sph_harm_ind_list"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.sph_harm_ind_list"]], "sphere2cart() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.sphere2cart"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.sphericity"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.sphericity"]], "split_dki_param() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.split_dki_param"]], "split_dki_param() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.squared_radial_component"]], "status_printer() (dipy.reconst.multi_voxel.tqdm static method)": [[139, "dipy.reconst.multi_voxel.tqdm.status_printer"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "subdivide() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.subdivide"]], "sum_on_blocks_1d() (in module dipy.reconst.recspeed)": [[139, "dipy.reconst.recspeed.sum_on_blocks_1d"]], "tau() (dipy.reconst.benchmarks.bench_csd.gradienttable method)": [[139, "dipy.reconst.benchmarks.bench_csd.GradientTable.tau"]], "tau() (dipy.reconst.mcsd.gradienttable method)": [[139, "dipy.reconst.mcsd.GradientTable.tau"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.tensor_prediction"]], "test() (in module dipy.reconst)": [[139, "dipy.reconst.test"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[139, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[139, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.tortuosity"]], "total_weight (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[139, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.total_weight"]], "tqdm (class in dipy.reconst.multi_voxel)": [[139, "dipy.reconst.multi_voxel.tqdm"]], "trace() (dipy.reconst.dki.tensorfit method)": [[139, "dipy.reconst.dki.TensorFit.trace"]], "trace() (dipy.reconst.dti.tensorfit method)": [[139, "dipy.reconst.dti.TensorFit.trace"]], "trace() (dipy.reconst.fwdti.tensorfit method)": [[139, "dipy.reconst.fwdti.TensorFit.trace"]], "trace() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.trace"]], "trace() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.ufa"]], "unique_bvals_magnitude() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.reconst.mcsd)": [[139, "dipy.reconst.mcsd.unique_bvals_tolerance"]], "unique_bvals_tolerance() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.unique_bvals_tolerance"]], "unpause() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.unpause"]], "update() (dipy.reconst.multi_voxel.tqdm method)": [[139, "dipy.reconst.multi_voxel.tqdm.update"]], "update() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.update"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[139, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[139, "dipy.reconst.qti.QtiFit.v_shear"]], "values() (dipy.reconst.sfm.ordereddict method)": [[139, "dipy.reconst.sfm.OrderedDict.values"]], "vec2vec_rotmat() (in module dipy.reconst.csdeconv)": [[139, "dipy.reconst.csdeconv.vec2vec_rotmat"]], "vec2vec_rotmat() (in module dipy.reconst.rumba)": [[139, "dipy.reconst.rumba.vec2vec_rotmat"]], "vec_val_vect() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.vec_val_vect"]], "vec_val_vect() (in module dipy.reconst.dki_micro)": [[139, "dipy.reconst.dki_micro.vec_val_vect"]], "vec_val_vect() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.vec_val_vect"]], "vec_val_vect() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.vec_val_vect"]], "vec_val_vect() (in module dipy.reconst.vec_val_sum)": [[139, "dipy.reconst.vec_val_sum.vec_val_vect"]], "vector_norm() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.vector_norm"]], "vertices() (dipy.reconst.rumba.sphere method)": [[139, "dipy.reconst.rumba.Sphere.vertices"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[139, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "warn() (in module dipy.reconst.forecast)": [[139, "dipy.reconst.forecast.warn"]], "warn() (in module dipy.reconst.mapmri)": [[139, "dipy.reconst.mapmri.warn"]], "warn() (in module dipy.reconst.qtdmri)": [[139, "dipy.reconst.qtdmri.warn"]], "warn() (in module dipy.reconst.qti)": [[139, "dipy.reconst.qti.warn"]], "warn() (in module dipy.reconst.shm)": [[139, "dipy.reconst.shm.warn"]], "warn() (in module dipy.reconst.shore)": [[139, "dipy.reconst.shore.warn"]], "wls_fit_dki() (in module dipy.reconst.dki)": [[139, "dipy.reconst.dki.wls_fit_dki"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[139, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[139, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[139, "dipy.reconst.fwdti.wls_iter"]], "wrapattr() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.wrapattr"]], "write() (dipy.reconst.multi_voxel.tqdm class method)": [[139, "dipy.reconst.multi_voxel.tqdm.write"]], "x (dipy.reconst.rumba.sphere property)": [[139, "dipy.reconst.rumba.Sphere.x"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[139, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "xopt (dipy.reconst.mapmri.optimizer property)": [[139, "dipy.reconst.mapmri.Optimizer.xopt"]], "y (dipy.reconst.rumba.sphere property)": [[139, "dipy.reconst.rumba.Sphere.y"]], "z (dipy.reconst.rumba.sphere property)": [[139, "dipy.reconst.rumba.Sphere.z"]], "abcmeta (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.ABCMeta"]], "arclengthfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.ArcLengthFeature"]], "averagepointwiseeuclideanmetric (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.AveragePointwiseEuclideanMetric"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metric)": [[140, "dipy.segment.metric.AveragePointwiseEuclideanMetric"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"]], "bundlemindistanceasymmetricmetric (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancemetric (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.BundleSumDistanceMatrixMetric"]], "centerofmassfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.CenterOfMassFeature"]], "cluster (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.Clustering"]], "clusters (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.Clusters"]], "clusterscentroid (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.ClustersCentroid"]], "constantobservationmodel (class in dipy.segment.mrf)": [[140, "dipy.segment.mrf.ConstantObservationModel"]], "constantobservationmodel (class in dipy.segment.tissue)": [[140, "dipy.segment.tissue.ConstantObservationModel"]], "cosinemetric (class in dipy.segment.metric)": [[140, "dipy.segment.metric.CosineMetric"]], "cosinemetric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.CosineMetric"]], "cythonfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.CythonFeature"]], "cythonmetric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.CythonMetric"]], "dtype (in module dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.DTYPE"]], "dtype (in module dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.DTYPE"]], "euclideanmetric (in module dipy.segment.metric)": [[140, "dipy.segment.metric.EuclideanMetric"]], "feature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.Feature"]], "identity (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.Identity"]], "identityfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.IdentityFeature"]], "iteratedconditionalmodes (class in dipy.segment.mrf)": [[140, "dipy.segment.mrf.IteratedConditionalModes"]], "iteratedconditionalmodes (class in dipy.segment.tissue)": [[140, "dipy.segment.tissue.IteratedConditionalModes"]], "mdfpy (class in dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.MDFpy"]], "metric (class in dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric"]], "metric (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.Metric"]], "metric (class in dipy.segment.metric)": [[140, "dipy.segment.metric.Metric"]], "metric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.Metric"]], "midpointfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.MidpointFeature"]], "minimumaveragedirectflipmetric (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.MinimumAverageDirectFlipMetric"]], "minimumaveragedirectflipmetric (class in dipy.segment.metric)": [[140, "dipy.segment.metric.MinimumAverageDirectFlipMetric"]], "minimumaveragedirectflipmetric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"]], "qb_new (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.QB_New"]], "quickbundles (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.QuickBundles"]], "quickbundles (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.QuickBundlesX"]], "quickbundlesx (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.RecoBundles"]], "resamplefeature (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.ResampleFeature"]], "resamplefeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.ResampleFeature"]], "streamlinelinearregistration (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.StreamlineLinearRegistration"]], "streamlines (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Streamlines"]], "streamlines (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.Streamlines"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metric)": [[140, "dipy.segment.metric.SumPointwiseEuclideanMetric"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[140, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.TreeCluster"]], "treecluster (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[140, "dipy.segment.clustering.TreeClusterMap"]], "treeclustermap (class in dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap"]], "vectorofendpointsfeature (class in dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.VectorOfEndpointsFeature"]], "__init__() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__"]], "__init__() (dipy.segment.benchmarks.bench_quickbundles.metric method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric.__init__"]], "__init__() (dipy.segment.bundles.bundlemindistanceasymmetricmetric method)": [[140, "dipy.segment.bundles.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.segment.bundles.bundlemindistancemetric method)": [[140, "dipy.segment.bundles.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.segment.bundles.bundlesumdistancematrixmetric method)": [[140, "dipy.segment.bundles.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.segment.bundles.recobundles method)": [[140, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.bundles.streamlinelinearregistration method)": [[140, "dipy.segment.bundles.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.segment.bundles.chain method)": [[140, "dipy.segment.bundles.chain.__init__"]], "__init__() (dipy.segment.clustering.abcmeta method)": [[140, "dipy.segment.clustering.ABCMeta.__init__"]], "__init__() (dipy.segment.clustering.averagepointwiseeuclideanmetric method)": [[140, "dipy.segment.clustering.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[140, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[140, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[140, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[140, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[140, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.metric method)": [[140, "dipy.segment.clustering.Metric.__init__"]], "__init__() (dipy.segment.clustering.minimumaveragedirectflipmetric method)": [[140, "dipy.segment.clustering.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[140, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[140, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.resamplefeature method)": [[140, "dipy.segment.clustering.ResampleFeature.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[140, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[140, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustercentroid method)": [[140, "dipy.segment.clustering_algorithms.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustermapcentroid method)": [[140, "dipy.segment.clustering_algorithms.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustercentroid method)": [[140, "dipy.segment.clusteringspeed.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustermapcentroid method)": [[140, "dipy.segment.clusteringspeed.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusters method)": [[140, "dipy.segment.clusteringspeed.Clusters.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusterscentroid method)": [[140, "dipy.segment.clusteringspeed.ClustersCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundles method)": [[140, "dipy.segment.clusteringspeed.QuickBundles.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundlesx method)": [[140, "dipy.segment.clusteringspeed.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clusteringspeed.treecluster method)": [[140, "dipy.segment.clusteringspeed.TreeCluster.__init__"]], "__init__() (dipy.segment.clusteringspeed.treeclustermap method)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap.__init__"]], "__init__() (dipy.segment.featurespeed.arclengthfeature method)": [[140, "dipy.segment.featurespeed.ArcLengthFeature.__init__"]], "__init__() (dipy.segment.featurespeed.centerofmassfeature method)": [[140, "dipy.segment.featurespeed.CenterOfMassFeature.__init__"]], "__init__() (dipy.segment.featurespeed.cythonfeature method)": [[140, "dipy.segment.featurespeed.CythonFeature.__init__"]], "__init__() (dipy.segment.featurespeed.feature method)": [[140, "dipy.segment.featurespeed.Feature.__init__"]], "__init__() (dipy.segment.featurespeed.identityfeature method)": [[140, "dipy.segment.featurespeed.IdentityFeature.__init__"]], "__init__() (dipy.segment.featurespeed.midpointfeature method)": [[140, "dipy.segment.featurespeed.MidpointFeature.__init__"]], "__init__() (dipy.segment.featurespeed.resamplefeature method)": [[140, "dipy.segment.featurespeed.ResampleFeature.__init__"]], "__init__() (dipy.segment.featurespeed.vectorofendpointsfeature method)": [[140, "dipy.segment.featurespeed.VectorOfEndpointsFeature.__init__"]], "__init__() (dipy.segment.metric.averagepointwiseeuclideanmetric method)": [[140, "dipy.segment.metric.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metric.cosinemetric method)": [[140, "dipy.segment.metric.CosineMetric.__init__"]], "__init__() (dipy.segment.metric.metric method)": [[140, "dipy.segment.metric.Metric.__init__"]], "__init__() (dipy.segment.metric.minimumaveragedirectflipmetric method)": [[140, "dipy.segment.metric.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metric.sumpointwiseeuclideanmetric method)": [[140, "dipy.segment.metric.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.averagepointwiseeuclideanmetric method)": [[140, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cosinemetric method)": [[140, "dipy.segment.metricspeed.CosineMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cythonmetric method)": [[140, "dipy.segment.metricspeed.CythonMetric.__init__"]], "__init__() (dipy.segment.metricspeed.metric method)": [[140, "dipy.segment.metricspeed.Metric.__init__"]], "__init__() (dipy.segment.metricspeed.minimumaveragedirectflipmetric method)": [[140, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metricspeed.sumpointwiseeuclideanmetric method)": [[140, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.mrf.iteratedconditionalmodes method)": [[140, "dipy.segment.mrf.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.tissue.iteratedconditionalmodes method)": [[140, "dipy.segment.tissue.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[140, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "abstractmethod() (in module dipy.segment.clustering)": [[140, "dipy.segment.clustering.abstractmethod"]], "add() (dipy.segment.clustering.treecluster method)": [[140, "dipy.segment.clustering.TreeCluster.add"]], "add() (dipy.segment.clusteringspeed.treecluster method)": [[140, "dipy.segment.clusteringspeed.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.add_cluster"]], "add_noise() (in module dipy.segment.tissue)": [[140, "dipy.segment.tissue.add_noise"]], "apply_affine() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.apply_affine"]], "applymask() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible"]], "are_compatible() (dipy.segment.benchmarks.bench_quickbundles.metric method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric.are_compatible"]], "are_compatible() (dipy.segment.clustering.metric method)": [[140, "dipy.segment.clustering.Metric.are_compatible"]], "are_compatible() (dipy.segment.metric.metric method)": [[140, "dipy.segment.metric.Metric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.cythonmetric method)": [[140, "dipy.segment.metricspeed.CythonMetric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.metric method)": [[140, "dipy.segment.metricspeed.Metric.are_compatible"]], "assert_array_equal() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.assert_array_equal"]], "assert_arrays_equal() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal"]], "assert_equal() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.assert_equal"]], "assign() (dipy.segment.clustering.cluster method)": [[140, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[140, "dipy.segment.clustering.ClusterCentroid.assign"]], "assign() (dipy.segment.clustering_algorithms.clustercentroid method)": [[140, "dipy.segment.clustering_algorithms.ClusterCentroid.assign"]], "assign() (dipy.segment.clusteringspeed.clustercentroid method)": [[140, "dipy.segment.clusteringspeed.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.ba_analysis"]], "bench_quickbundles() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles"]], "binary_dilation() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.binary_dilation"]], "bounding_box() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.bundle_shape_similarity"]], "bundles_distances_mam() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.bundles_distances_mdf"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[140, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clustering_algorithms.clustermapcentroid property)": [[140, "dipy.segment.clustering_algorithms.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clusteringspeed.clustermapcentroid property)": [[140, "dipy.segment.clusteringspeed.ClusterMapCentroid.centroids"]], "chain (class in dipy.segment.bundles)": [[140, "dipy.segment.bundles.chain"]], "check_range() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[140, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[140, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[140, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[140, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[140, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_centroid2clustermap_centroid() (in module dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.clusters_centroid2clustermap_centroid"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "color_fa() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.color_fa"]], "crop() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.crop"]], "deprecated_params() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.deprecated_params"]], "dipy.segment": [[140, "module-dipy.segment"]], "dipy.segment.benchmarks": [[140, "module-dipy.segment.benchmarks"]], "dipy.segment.benchmarks.bench_quickbundles": [[140, "module-dipy.segment.benchmarks.bench_quickbundles"]], "dipy.segment.bundles": [[140, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[140, "module-dipy.segment.clustering"]], "dipy.segment.clustering_algorithms": [[140, "module-dipy.segment.clustering_algorithms"]], "dipy.segment.clusteringspeed": [[140, "module-dipy.segment.clusteringspeed"]], "dipy.segment.cythonutils": [[140, "module-dipy.segment.cythonutils"]], "dipy.segment.featurespeed": [[140, "module-dipy.segment.featurespeed"]], "dipy.segment.mask": [[140, "module-dipy.segment.mask"]], "dipy.segment.metric": [[140, "module-dipy.segment.metric"]], "dipy.segment.metricspeed": [[140, "module-dipy.segment.metricspeed"]], "dipy.segment.mrf": [[140, "module-dipy.segment.mrf"]], "dipy.segment.threshold": [[140, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[140, "module-dipy.segment.tissue"]], "dist() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist"]], "dist() (dipy.segment.benchmarks.bench_quickbundles.metric method)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric.dist"]], "dist() (dipy.segment.clustering.metric method)": [[140, "dipy.segment.clustering.Metric.dist"]], "dist() (dipy.segment.metric.metric method)": [[140, "dipy.segment.metric.Metric.dist"]], "dist() (dipy.segment.metricspeed.cythonmetric method)": [[140, "dipy.segment.metricspeed.CythonMetric.dist"]], "dist() (dipy.segment.metricspeed.metric method)": [[140, "dipy.segment.metricspeed.Metric.dist"]], "dist() (in module dipy.segment.metric)": [[140, "dipy.segment.metric.dist"]], "dist() (in module dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.dist"]], "distance() (dipy.segment.bundles.bundlemindistanceasymmetricmetric method)": [[140, "dipy.segment.bundles.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.segment.bundles.bundlemindistancemetric method)": [[140, "dipy.segment.bundles.BundleMinDistanceMetric.distance"]], "distance() (dipy.segment.bundles.bundlesumdistancematrixmetric method)": [[140, "dipy.segment.bundles.BundleSumDistanceMatrixMetric.distance"]], "distance_matrix() (in module dipy.segment.metricspeed)": [[140, "dipy.segment.metricspeed.distance_matrix"]], "evaluate_aabb_checks() (in module dipy.segment.clusteringspeed)": [[140, "dipy.segment.clusteringspeed.evaluate_aabb_checks"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[140, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "extract() (dipy.segment.featurespeed.cythonfeature method)": [[140, "dipy.segment.featurespeed.CythonFeature.extract"]], "extract() (dipy.segment.featurespeed.feature method)": [[140, "dipy.segment.featurespeed.Feature.extract"]], "extract() (in module dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.extract"]], "feature (dipy.segment.benchmarks.bench_quickbundles.metric attribute)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric.feature"]], "feature (dipy.segment.clustering.metric attribute)": [[140, "dipy.segment.clustering.Metric.feature"]], "feature (dipy.segment.metric.metric attribute)": [[140, "dipy.segment.metric.Metric.feature"]], "feature (dipy.segment.metricspeed.metric attribute)": [[140, "dipy.segment.metricspeed.Metric.feature"]], "fractional_anisotropy() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.fractional_anisotropy"]], "from_iterable() (dipy.segment.bundles.chain method)": [[140, "dipy.segment.bundles.chain.from_iterable"]], "generate_binary_structure() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.generate_binary_structure"]], "get_cluster_map() (dipy.segment.clusteringspeed.quickbundles method)": [[140, "dipy.segment.clusteringspeed.QuickBundles.get_cluster_map"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[140, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_clusters() (dipy.segment.clusteringspeed.treeclustermap method)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap.get_clusters"]], "get_fnames() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.get_fnames"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "get_stats() (dipy.segment.clusteringspeed.quickbundles method)": [[140, "dipy.segment.clusteringspeed.QuickBundles.get_stats"]], "get_stats() (dipy.segment.clusteringspeed.quickbundlesx method)": [[140, "dipy.segment.clusteringspeed.QuickBundlesX.get_stats"]], "get_tree_cluster_map() (dipy.segment.clusteringspeed.quickbundlesx method)": [[140, "dipy.segment.clusteringspeed.QuickBundlesX.get_tree_cluster_map"]], "icm_ising() (dipy.segment.mrf.iteratedconditionalmodes method)": [[140, "dipy.segment.mrf.IteratedConditionalModes.icm_ising"]], "icm_ising() (dipy.segment.tissue.iteratedconditionalmodes method)": [[140, "dipy.segment.tissue.IteratedConditionalModes.icm_ising"]], "infer_shape() (dipy.segment.featurespeed.cythonfeature method)": [[140, "dipy.segment.featurespeed.CythonFeature.infer_shape"]], "infer_shape() (dipy.segment.featurespeed.feature method)": [[140, "dipy.segment.featurespeed.Feature.infer_shape"]], "infer_shape() (in module dipy.segment.featurespeed)": [[140, "dipy.segment.featurespeed.infer_shape"]], "initialize_maximum_likelihood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[140, "dipy.segment.mrf.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_maximum_likelihood() (dipy.segment.tissue.iteratedconditionalmodes method)": [[140, "dipy.segment.tissue.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_param_uniform() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.initialize_param_uniform"]], "initialize_param_uniform() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.initialize_param_uniform"]], "insert() (dipy.segment.clusteringspeed.quickbundlesx method)": [[140, "dipy.segment.clusteringspeed.QuickBundlesX.insert"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[140, "dipy.segment.clustering.TreeCluster.is_leaf"]], "is_leaf (dipy.segment.clusteringspeed.treecluster property)": [[140, "dipy.segment.clusteringspeed.TreeCluster.is_leaf"]], "is_order_invariant (dipy.segment.benchmarks.bench_quickbundles.metric attribute)": [[140, "dipy.segment.benchmarks.bench_quickbundles.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.clustering.metric attribute)": [[140, "dipy.segment.clustering.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.clustering.minimumaveragedirectflipmetric attribute)": [[140, "dipy.segment.clustering.MinimumAverageDirectFlipMetric.is_order_invariant"]], "is_order_invariant (dipy.segment.featurespeed.feature attribute)": [[140, "dipy.segment.featurespeed.Feature.is_order_invariant"]], "is_order_invariant (dipy.segment.metric.metric attribute)": [[140, "dipy.segment.metric.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metric.minimumaveragedirectflipmetric attribute)": [[140, "dipy.segment.metric.MinimumAverageDirectFlipMetric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.metric attribute)": [[140, "dipy.segment.metricspeed.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.minimumaveragedirectflipmetric attribute)": [[140, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.is_order_invariant"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[140, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "iter_preorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap.iter_preorder"]], "length() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.length"]], "load_tractogram() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.load_tractogram"]], "mdf() (in module dipy.segment.metric)": [[140, "dipy.segment.metric.mdf"]], "measure() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.measure"]], "median_filter() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.median_filter"]], "median_otsu() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.multi_median"]], "nbytes() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.nbytes"]], "nbytes() (in module dipy.segment.clustering)": [[140, "dipy.segment.clustering.nbytes"]], "negloglikelihood() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.negloglikelihood"]], "negloglikelihood() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.negloglikelihood"]], "optimize() (dipy.segment.bundles.streamlinelinearregistration method)": [[140, "dipy.segment.bundles.StreamlineLinearRegistration.optimize"]], "otsu() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.otsu"]], "otsu() (in module dipy.segment.threshold)": [[140, "dipy.segment.threshold.otsu"]], "peek() (in module dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.peek"]], "prob_image() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.prob_image"]], "prob_image() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.prob_image"]], "prob_neighborhood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[140, "dipy.segment.mrf.IteratedConditionalModes.prob_neighborhood"]], "prob_neighborhood() (dipy.segment.tissue.iteratedconditionalmodes method)": [[140, "dipy.segment.tissue.IteratedConditionalModes.prob_neighborhood"]], "qbx_and_merge() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.qbx_and_merge"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[140, "dipy.segment.clustering.qbx_and_merge"]], "quickbundles() (in module dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.quickbundles"]], "quickbundlesx() (in module dipy.segment.clustering_algorithms)": [[140, "dipy.segment.clustering_algorithms.quickbundlesx"]], "recognize() (dipy.segment.bundles.recobundles method)": [[140, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[140, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[140, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refdata (dipy.segment.clusteringspeed.treeclustermap property)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[140, "dipy.segment.bundles.RecoBundles.refine"]], "register() (dipy.segment.clustering.abcmeta method)": [[140, "dipy.segment.clustering.ABCMeta.register"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[140, "dipy.segment.clustering.TreeCluster.return_indices"]], "return_indices() (dipy.segment.clusteringspeed.treecluster method)": [[140, "dipy.segment.clusteringspeed.TreeCluster.return_indices"]], "seg_stats() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.seg_stats"]], "seg_stats() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.seg_stats"]], "segment_from_cfa() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.segment_from_cfa"]], "select_random_set_of_streamlines() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.segment.benchmarks.bench_quickbundles)": [[140, "dipy.segment.benchmarks.bench_quickbundles.set_number_of_points"]], "set_number_of_points() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.set_number_of_points"]], "set_number_of_points() (in module dipy.segment.clustering)": [[140, "dipy.segment.clustering.set_number_of_points"]], "setup() (dipy.segment.bundles.bundlemindistancemetric method)": [[140, "dipy.segment.bundles.BundleMinDistanceMetric.setup"]], "size() (dipy.segment.clustering.clustermap method)": [[140, "dipy.segment.clustering.ClusterMap.size"]], "time() (in module dipy.segment.bundles)": [[140, "dipy.segment.bundles.time"]], "time() (in module dipy.segment.clustering)": [[140, "dipy.segment.clustering.time"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[140, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "traverse_postorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[140, "dipy.segment.clusteringspeed.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[140, "dipy.segment.clustering.ClusterCentroid.update"]], "update() (dipy.segment.clustering_algorithms.clustercentroid method)": [[140, "dipy.segment.clustering_algorithms.ClusterCentroid.update"]], "update() (dipy.segment.clusteringspeed.clustercentroid method)": [[140, "dipy.segment.clusteringspeed.ClusterCentroid.update"]], "update_param() (dipy.segment.mrf.constantobservationmodel method)": [[140, "dipy.segment.mrf.ConstantObservationModel.update_param"]], "update_param() (dipy.segment.tissue.constantobservationmodel method)": [[140, "dipy.segment.tissue.ConstantObservationModel.update_param"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[140, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[140, "dipy.segment.threshold.upper_bound_by_rate"]], "warn() (in module dipy.segment.mask)": [[140, "dipy.segment.mask.warn"]], "gradienttable (class in dipy.sims.voxel)": [[141, "dipy.sims.voxel.GradientTable"]], "__init__() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.__init__"]], "add_noise() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.all_tensor_evecs"]], "b0s_mask() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.b0s_mask"]], "bvals() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.bvals"]], "bvecs() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.bvecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.diff2eigenvectors"]], "dipy.sims": [[141, "module-dipy.sims"]], "dipy.sims.phantom": [[141, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[141, "module-dipy.sims.voxel"]], "dki_design_matrix() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.dki_design_matrix"]], "dki_signal() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.dki_signal"]], "dot() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.dot"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.gaussian_parallel"]], "get_fnames() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.get_fnames"]], "gradient_strength() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.gradient_table"]], "info (dipy.sims.voxel.gradienttable property)": [[141, "dipy.sims.voxel.GradientTable.info"]], "kurtosis_element() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.orbital_phantom"]], "qvals() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.qvals"]], "single_tensor() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.single_tensor"]], "single_tensor() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.single_tensor_rtop"]], "sphere2cart() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.sphere2cart"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.sticks_and_ball"]], "tau() (dipy.sims.voxel.gradienttable method)": [[141, "dipy.sims.voxel.GradientTable.tau"]], "vec2vec_rotmat() (in module dipy.sims.phantom)": [[141, "dipy.sims.phantom.vec2vec_rotmat"]], "vec2vec_rotmat() (in module dipy.sims.voxel)": [[141, "dipy.sims.voxel.vec2vec_rotmat"]], "averagepointwiseeuclideanmetric (class in dipy.stats.analysis)": [[142, "dipy.stats.analysis.AveragePointwiseEuclideanMetric"]], "quickbundles (class in dipy.stats.analysis)": [[142, "dipy.stats.analysis.QuickBundles"]], "streamlines (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.Streamlines"]], "__init__() (dipy.stats.analysis.averagepointwiseeuclideanmetric method)": [[142, "dipy.stats.analysis.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.stats.analysis.quickbundles method)": [[142, "dipy.stats.analysis.QuickBundles.__init__"]], "__init__() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.__init__"]], "afq_profile() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.assignment_map"]], "boxsize (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.boxsize"]], "ckdtree (class in dipy.stats.analysis)": [[142, "dipy.stats.analysis.cKDTree"]], "cluster() (dipy.stats.analysis.quickbundles method)": [[142, "dipy.stats.analysis.QuickBundles.cluster"]], "count_neighbors() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.count_neighbors"]], "data (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.data"]], "dipy.stats": [[142, "module-dipy.stats"]], "dipy.stats.analysis": [[142, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.gaussian_weights"]], "indices (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.indices"]], "leafsize (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.leafsize"]], "m (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.m"]], "mahalanobis() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.mahalanobis"]], "map_coordinates() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.map_coordinates"]], "maxes (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.maxes"]], "mins (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.mins"]], "n (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.n"]], "optional_package() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.optional_package"]], "orient_by_streamline() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.orient_by_streamline"]], "peak_values() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.peak_values"]], "query() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.query"]], "query_ball_point() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.query_ball_point"]], "query_ball_tree() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.query_ball_tree"]], "query_pairs() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.query_pairs"]], "save_buan_profiles_hdf5() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.save_buan_profiles_hdf5"]], "set_number_of_points() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.set_number_of_points"]], "size (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.size"]], "sparse_distance_matrix() (dipy.stats.analysis.ckdtree method)": [[142, "dipy.stats.analysis.cKDTree.sparse_distance_matrix"]], "tree (dipy.stats.analysis.ckdtree attribute)": [[142, "dipy.stats.analysis.cKDTree.tree"]], "values_from_volume() (in module dipy.stats.analysis)": [[142, "dipy.stats.analysis.values_from_volume"]], "actstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.ActStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.AnatomicalStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion"]], "binarystoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion"]], "cmcstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.CmcStoppingCriterion"]], "directiongetter (class in dipy.tracking.direction_getter)": [[143, "dipy.tracking.direction_getter.DirectionGetter"]], "endpoint (dipy.tracking.local_tracking.streamlinestatus attribute)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.ENDPOINT"]], "endpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.ENDPOINT"]], "fbcmeasures (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.FBCMeasures"]], "fiberfit (class in dipy.tracking.life)": [[143, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[143, "dipy.tracking.life.FiberModel"]], "invalidpoint (dipy.tracking.local_tracking.streamlinestatus attribute)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.INVALIDPOINT"]], "invalidpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.INVALIDPOINT"]], "iterable (class in dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.Iterable"]], "kdtree (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.KDTree"]], "kdtree.innernode (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.KDTree.innernode"]], "kdtree.leafnode (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.KDTree.leafnode"]], "kdtree.node (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.KDTree.node"]], "lifesignalmaker (class in dipy.tracking.life)": [[143, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.LocalTracking"]], "outsideimage (dipy.tracking.local_tracking.streamlinestatus attribute)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.OUTSIDEIMAGE"]], "outsideimage (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.OUTSIDEIMAGE"]], "ordereddict (class in dipy.tracking.utils)": [[143, "dipy.tracking.utils.OrderedDict"]], "pyerror (dipy.tracking.local_tracking.streamlinestatus attribute)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.PYERROR"]], "pyerror (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.PYERROR"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "reconstfit (class in dipy.tracking.life)": [[143, "dipy.tracking.life.ReconstFit"]], "reconstmodel (class in dipy.tracking.life)": [[143, "dipy.tracking.life.ReconstModel"]], "stoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.StoppingCriterion"]], "streamlinestatus (class in dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.StreamlineStatus"]], "streamlinestatus (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus"]], "streamlines (in module dipy.tracking)": [[143, "dipy.tracking.Streamlines"]], "streamlines (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.Streamlines"]], "streamlines (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.Streamlines"]], "streamlines (in module dipy.tracking.streamlinespeed)": [[143, "dipy.tracking.streamlinespeed.Streamlines"]], "trackpoint (dipy.tracking.local_tracking.streamlinestatus attribute)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.TRACKPOINT"]], "trackpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.TRACKPOINT"]], "thresholdstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[143, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion"]], "__init__() (dipy.tracking.direction_getter.directiongetter method)": [[143, "dipy.tracking.direction_getter.DirectionGetter.__init__"]], "__init__() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[143, "dipy.tracking.fbcmeasures.FBCMeasures.__init__"]], "__init__() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.__init__"]], "__init__() (dipy.tracking.fbcmeasures.interp1d method)": [[143, "dipy.tracking.fbcmeasures.interp1d.__init__"]], "__init__() (dipy.tracking.life.fiberfit method)": [[143, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[143, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[143, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.life.reconstfit method)": [[143, "dipy.tracking.life.ReconstFit.__init__"]], "__init__() (dipy.tracking.life.reconstmodel method)": [[143, "dipy.tracking.life.ReconstModel.__init__"]], "__init__() (dipy.tracking.local_tracking.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.local_tracking.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.local_tracking.iterable method)": [[143, "dipy.tracking.local_tracking.Iterable.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[143, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[143, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.streamlinestatus method)": [[143, "dipy.tracking.local_tracking.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.actstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.ActStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.binarystoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.cmcstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.CmcStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.StoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.streamlinestatus method)": [[143, "dipy.tracking.stopping_criterion.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.thresholdstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion.__init__"]], "__init__() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.__init__"]], "__init__() (dipy.tracking.utils.combinations method)": [[143, "dipy.tracking.utils.combinations.__init__"]], "__init__() (dipy.tracking.utils.defaultdict method)": [[143, "dipy.tracking.utils.defaultdict.__init__"]], "__init__() (dipy.tracking.utils.groupby method)": [[143, "dipy.tracking.utils.groupby.__init__"]], "add_3vecs() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.add_3vecs"]], "apply_affine() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.apply_affine"]], "apply_affine() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.apply_affine"]], "approx_polygon_track() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.approx_polygon_track"]], "approximate_mdl_trajectory() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.approximate_mdl_trajectory"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.arbitrarypoint"]], "assert_array_almost_equal() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.assert_array_almost_equal"]], "assert_array_equal() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.assert_array_equal"]], "bench() (in module dipy.tracking)": [[143, "dipy.tracking.bench"]], "bench_compress_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines"]], "bench_length() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.bench_length"]], "bench_set_number_of_points() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points"]], "bundles_distances_mam() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.bundles_distances_mdf"]], "bundles_distances_mdf() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.bundles_distances_mdf"]], "bytes() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[143, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "cdist() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.cdist"]], "cdist() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.cdist"]], "center_of_mass() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.center_streamlines"]], "check_point() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.StoppingCriterion.check_point"]], "children (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[143, "dipy.tracking.fbcmeasures.KDTree.innernode.children"]], "children (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[143, "dipy.tracking.fbcmeasures.KDTree.leafnode.children"]], "clear() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.clear"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.cluster_confidence"]], "combinations (class in dipy.tracking.utils)": [[143, "dipy.tracking.utils.combinations"]], "compress_streamlines() (in module dipy.tracking.streamlinespeed)": [[143, "dipy.tracking.streamlinespeed.compress_streamlines"]], "compute_rfbc() (in module dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.compute_rfbc"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.connectivity_matrix"]], "copy() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.copy"]], "copy() (dipy.tracking.utils.defaultdict method)": [[143, "dipy.tracking.utils.defaultdict.copy"]], "count_neighbors() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.count_neighbors"]], "cut_plane() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.cut_plane"]], "deepcopy() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.deepcopy"]], "default_factory (dipy.tracking.utils.defaultdict attribute)": [[143, "dipy.tracking.utils.defaultdict.default_factory"]], "defaultdict (class in dipy.tracking.utils)": [[143, "dipy.tracking.utils.defaultdict"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.density_map"]], "deprecate_with_version() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.deprecate_with_version"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[143, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[143, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "determine_num_threads() (in module dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.determine_num_threads"]], "dipy.tracking": [[143, "module-dipy.tracking"]], "dipy.tracking._utils": [[143, "module-dipy.tracking._utils"]], "dipy.tracking.benchmarks": [[143, "module-dipy.tracking.benchmarks"]], "dipy.tracking.benchmarks.bench_streamline": [[143, "module-dipy.tracking.benchmarks.bench_streamline"]], "dipy.tracking.direction_getter": [[143, "module-dipy.tracking.direction_getter"]], "dipy.tracking.distances": [[143, "module-dipy.tracking.distances"]], "dipy.tracking.fbcmeasures": [[143, "module-dipy.tracking.fbcmeasures"]], "dipy.tracking.learning": [[143, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[143, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[143, "module-dipy.tracking.local_tracking"]], "dipy.tracking.localtrack": [[143, "module-dipy.tracking.localtrack"]], "dipy.tracking.mesh": [[143, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[143, "module-dipy.tracking.metrics"]], "dipy.tracking.propspeed": [[143, "module-dipy.tracking.propspeed"]], "dipy.tracking.stopping_criterion": [[143, "module-dipy.tracking.stopping_criterion"]], "dipy.tracking.streamline": [[143, "module-dipy.tracking.streamline"]], "dipy.tracking.streamlinespeed": [[143, "module-dipy.tracking.streamlinespeed"]], "dipy.tracking.utils": [[143, "module-dipy.tracking.utils"]], "dipy.tracking.vox2track": [[143, "module-dipy.tracking.vox2track"]], "dist_to_corner() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.dist_to_corner"]], "dist_to_corner() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.dist_to_corner"]], "downsample() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.downsample"]], "dtype (dipy.tracking.fbcmeasures.interp1d attribute)": [[143, "dipy.tracking.fbcmeasures.interp1d.dtype"]], "endpoint() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.endpoint"]], "eudx_both_directions() (in module dipy.tracking.propspeed)": [[143, "dipy.tracking.propspeed.eudx_both_directions"]], "fill_value (dipy.tracking.fbcmeasures.interp1d property)": [[143, "dipy.tracking.fbcmeasures.interp1d.fill_value"]], "fit() (dipy.tracking.life.fibermodel method)": [[143, "dipy.tracking.life.FiberModel.fit"]], "fit() (dipy.tracking.life.reconstmodel method)": [[143, "dipy.tracking.life.ReconstModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.frenet_serret"]], "from_pve() (dipy.tracking.local_tracking.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.local_tracking.AnatomicalStoppingCriterion.from_pve"]], "from_pve() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.from_pve"]], "fromkeys() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.fromkeys"]], "generate_combinations() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.generate_combinations"]], "generate_streamline() (dipy.tracking.direction_getter.directiongetter method)": [[143, "dipy.tracking.direction_getter.DirectionGetter.generate_streamline"]], "generate_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.generate_streamlines"]], "get_direction() (dipy.tracking.direction_getter.directiongetter method)": [[143, "dipy.tracking.direction_getter.DirectionGetter.get_direction"]], "get_exclude() (dipy.tracking.local_tracking.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.local_tracking.AnatomicalStoppingCriterion.get_exclude"]], "get_exclude() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_exclude"]], "get_fnames() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.get_fnames"]], "get_include() (dipy.tracking.local_tracking.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.local_tracking.AnatomicalStoppingCriterion.get_include"]], "get_include() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[143, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_include"]], "get_points_rfbc_thresholded() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[143, "dipy.tracking.fbcmeasures.FBCMeasures.get_points_rfbc_thresholded"]], "grad_tensor() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.gradient"]], "groupby (class in dipy.tracking.utils)": [[143, "dipy.tracking.utils.groupby"]], "idx (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[143, "dipy.tracking.fbcmeasures.KDTree.leafnode.idx"]], "initial_direction() (dipy.tracking.direction_getter.directiongetter method)": [[143, "dipy.tracking.direction_getter.DirectionGetter.initial_direction"]], "inner_3vecs() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.inner_3vecs"]], "inside_sphere() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.inside_sphere_points"]], "interp1d (class in dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.interp1d"]], "interpolate_scalar_3d() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.interpolate_scalar_3d"]], "interpolate_vector_3d() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.interpolate_vector_3d"]], "intersect_segment_cylinder() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.intersect_segment_cylinder"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.intersect_sphere"]], "items() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.items"]], "keys() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.keys"]], "larch_3merge() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.larch_3merge"]], "larch_3split() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.larch_3split"]], "lee_angle_distance() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.lee_angle_distance"]], "lee_perpendicular_distance() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.lee_perpendicular_distance"]], "length() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.length"]], "length() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.length"]], "length() (in module dipy.tracking.streamlinespeed)": [[143, "dipy.tracking.streamlinespeed.length"]], "length() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.length"]], "length_python() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.length_python"]], "load_tractogram() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.load_tractogram"]], "local_skeleton_clustering() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.local_skeleton_clustering"]], "local_skeleton_clustering_3pts() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.local_skeleton_clustering_3pts"]], "local_tracker() (in module dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.local_tracker"]], "local_tracker() (in module dipy.tracking.localtrack)": [[143, "dipy.tracking.localtrack.local_tracker"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.magn"]], "mam_distances() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.mam_distances"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.mean_orientation"]], "measure() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.measure"]], "midpoint() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.midpoint2point"]], "min_moving_average() (in module dipy.tracking.fbcmeasures)": [[143, "dipy.tracking.fbcmeasures.min_moving_average"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "minimum_at() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.minimum_at"]], "minimum_closest_distance() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.minimum_closest_distance"]], "most_similar_track_mam() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.most_similar_track_mam"]], "move_to_end() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.move_to_end"]], "mul_3vec() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.mul_3vec"]], "mul_3vecs() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.mul_3vecs"]], "nbytes() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.nbytes"]], "ndarray_offset() (in module dipy.tracking.propspeed)": [[143, "dipy.tracking.propspeed.ndarray_offset"]], "ndbincount() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.near_roi"]], "norm_3vec() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.norm_3vec"]], "normalized_3vec() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.normalized_3vec"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.path_length"]], "pft_tracker() (in module dipy.tracking.local_tracking)": [[143, "dipy.tracking.local_tracking.pft_tracker"]], "pft_tracker() (in module dipy.tracking.localtrack)": [[143, "dipy.tracking.localtrack.pft_tracker"]], "point_segment_sq_distance() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.point_segment_sq_distance"]], "point_track_sq_distance_check() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.point_track_sq_distance_check"]], "pop() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.pop"]], "popitem() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.popitem"]], "predict() (dipy.tracking.life.fiberfit method)": [[143, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.principal_components"]], "query() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.query"]], "query_ball_point() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.query_ball_point"]], "query_ball_tree() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.query_ball_tree"]], "query_pairs() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.query_pairs"]], "random() (in module dipy.tracking.localtrack)": [[143, "dipy.tracking.localtrack.random"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[143, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[143, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.set_number_of_points"]], "set_number_of_points() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.set_number_of_points"]], "set_number_of_points() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.set_number_of_points"]], "set_number_of_points() (in module dipy.tracking.streamlinespeed)": [[143, "dipy.tracking.streamlinespeed.set_number_of_points"]], "set_number_of_points_python() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.set_number_of_points_python"]], "setdefault() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.setdefault"]], "setup() (dipy.tracking.life.fibermodel method)": [[143, "dipy.tracking.life.FiberModel.setup"]], "setup() (in module dipy.tracking.benchmarks.bench_streamline)": [[143, "dipy.tracking.benchmarks.bench_streamline.setup"]], "sparse_distance_matrix() (dipy.tracking.fbcmeasures.kdtree method)": [[143, "dipy.tracking.fbcmeasures.KDTree.sparse_distance_matrix"]], "splev() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.splev"]], "spline() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.spline"]], "split (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[143, "dipy.tracking.fbcmeasures.KDTree.innernode.split"]], "split_dim (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[143, "dipy.tracking.fbcmeasures.KDTree.innernode.split_dim"]], "splprep() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.splprep"]], "startpoint() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.streamline_gradients"]], "streamline_mapping() (in module dipy.tracking.vox2track)": [[143, "dipy.tracking.vox2track.streamline_mapping"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[143, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.streamline_tensors"]], "sub_3vecs() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.sub_3vecs"]], "subsegment() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.target_line_based"]], "test() (in module dipy.tracking)": [[143, "dipy.tracking.test"]], "track_counts() (in module dipy.tracking.vox2track)": [[143, "dipy.tracking.vox2track.track_counts"]], "track_dist_3pts() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.track_dist_3pts"]], "track_roi_intersection_check() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.track_roi_intersection_check"]], "transform_streamlines() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.transform_streamlines"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.transform_tracking_output"]], "tree (dipy.tracking.fbcmeasures.kdtree property)": [[143, "dipy.tracking.fbcmeasures.KDTree.tree"]], "triangles_area() (in module dipy.tracking.mesh)": [[143, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.unique_rows"]], "unique_rows() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.unlist_streamlines"]], "update() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.update"]], "values() (dipy.tracking.utils.ordereddict method)": [[143, "dipy.tracking.utils.OrderedDict.values"]], "values_from_volume() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[143, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[143, "dipy.tracking.life.voxel2streamline"]], "warn() (in module dipy.tracking.distances)": [[143, "dipy.tracking.distances.warn"]], "warn() (in module dipy.tracking.streamline)": [[143, "dipy.tracking.streamline.warn"]], "warn() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.warn"]], "winding() (in module dipy.tracking.metrics)": [[143, "dipy.tracking.metrics.winding"]], "wraps() (in module dipy.tracking.utils)": [[143, "dipy.tracking.utils.wraps"]], "globalhorizon (class in dipy.viz.app)": [[144, "dipy.viz.app.GlobalHorizon"]], "globalhorizon (class in dipy.viz.gmem)": [[144, "dipy.viz.gmem.GlobalHorizon"]], "globalhorizon (class in dipy.viz.panel)": [[144, "dipy.viz.panel.GlobalHorizon"]], "horizon (class in dipy.viz.app)": [[144, "dipy.viz.app.Horizon"]], "rasmm (dipy.viz.app.space attribute)": [[144, "dipy.viz.app.Space.RASMM"]], "space (class in dipy.viz.app)": [[144, "dipy.viz.app.Space"]], "statefultractogram (class in dipy.viz.app)": [[144, "dipy.viz.app.StatefulTractogram"]], "streamlines (in module dipy.viz.app)": [[144, "dipy.viz.app.Streamlines"]], "vox (dipy.viz.app.space attribute)": [[144, "dipy.viz.app.Space.VOX"]], "voxmm (dipy.viz.app.space attribute)": [[144, "dipy.viz.app.Space.VOXMM"]], "__init__() (dipy.viz.app.globalhorizon method)": [[144, "dipy.viz.app.GlobalHorizon.__init__"]], "__init__() (dipy.viz.app.horizon method)": [[144, "dipy.viz.app.Horizon.__init__"]], "__init__() (dipy.viz.app.space method)": [[144, "dipy.viz.app.Space.__init__"]], "__init__() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.__init__"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[144, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.panel.globalhorizon method)": [[144, "dipy.viz.panel.GlobalHorizon.__init__"]], "add_cluster_actors() (dipy.viz.app.horizon method)": [[144, "dipy.viz.app.Horizon.add_cluster_actors"]], "affine (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.affine"]], "apply_shader() (in module dipy.viz.app)": [[144, "dipy.viz.app.apply_shader"]], "are_compatible() (dipy.viz.app.statefultractogram static method)": [[144, "dipy.viz.app.StatefulTractogram.are_compatible"]], "build_label() (in module dipy.viz.app)": [[144, "dipy.viz.app.build_label"]], "build_label() (in module dipy.viz.panel)": [[144, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.app.horizon method)": [[144, "dipy.viz.app.Horizon.build_scene"]], "build_show() (dipy.viz.app.horizon method)": [[144, "dipy.viz.app.Horizon.build_show"]], "compare_maps() (in module dipy.viz.plotting)": [[144, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[144, "dipy.viz.plotting.compare_qti_maps"]], "compute_bounding_box() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.compute_bounding_box"]], "data_per_point (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.data_per_streamline"]], "dimensions (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.dimensions"]], "dipy.viz": [[144, "module-dipy.viz"]], "dipy.viz.app": [[144, "module-dipy.viz.app"]], "dipy.viz.gmem": [[144, "module-dipy.viz.gmem"]], "dipy.viz.panel": [[144, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[144, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[144, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[144, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[144, "module-dipy.viz.streamline"]], "distinguishable_colormap() (in module dipy.viz.app)": [[144, "dipy.viz.app.distinguishable_colormap"]], "doctest_skip_parser() (in module dipy.viz.projections)": [[144, "dipy.viz.projections.doctest_skip_parser"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.draw_lattice_2d"]], "fetch_viz_icons() (in module dipy.viz)": [[144, "dipy.viz.fetch_viz_icons"]], "from_sft() (dipy.viz.app.statefultractogram static method)": [[144, "dipy.viz.app.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.get_data_per_streamline_keys"]], "get_streamlines_copy() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.get_streamlines_copy"]], "horizon() (in module dipy.viz.app)": [[144, "dipy.viz.app.horizon"]], "is_bbox_in_vox_valid() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.is_bbox_in_vox_valid"]], "length() (in module dipy.viz.app)": [[144, "dipy.viz.app.length"]], "optional_package() (in module dipy.viz)": [[144, "dipy.viz.optional_package"]], "optional_package() (in module dipy.viz.app)": [[144, "dipy.viz.app.optional_package"]], "optional_package() (in module dipy.viz.panel)": [[144, "dipy.viz.panel.optional_package"]], "optional_package() (in module dipy.viz.plotting)": [[144, "dipy.viz.plotting.optional_package"]], "optional_package() (in module dipy.viz.projections)": [[144, "dipy.viz.projections.optional_package"]], "optional_package() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.optional_package"]], "optional_package() (in module dipy.viz.streamline)": [[144, "dipy.viz.streamline.optional_package"]], "origin (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.origin"]], "overlay_images() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.overlay_slices"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.plot_slices"]], "qbx_and_merge() (in module dipy.viz.app)": [[144, "dipy.viz.app.qbx_and_merge"]], "read_viz_icons() (in module dipy.viz)": [[144, "dipy.viz.read_viz_icons"]], "remove_cluster_actors() (dipy.viz.app.horizon method)": [[144, "dipy.viz.app.Horizon.remove_cluster_actors"]], "remove_invalid_streamlines() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.remove_invalid_streamlines"]], "save_tractogram() (in module dipy.viz.app)": [[144, "dipy.viz.app.save_tractogram"]], "setup_module() (in module dipy.viz.app)": [[144, "dipy.viz.app.setup_module"]], "setup_module() (in module dipy.viz.panel)": [[144, "dipy.viz.panel.setup_module"]], "setup_module() (in module dipy.viz.projections)": [[144, "dipy.viz.projections.setup_module"]], "setup_module() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.setup_module"]], "show_bundles() (in module dipy.viz.streamline)": [[144, "dipy.viz.streamline.show_bundles"]], "simple_plot() (in module dipy.viz.regtools)": [[144, "dipy.viz.regtools.simple_plot"]], "slicer_panel() (in module dipy.viz.app)": [[144, "dipy.viz.app.slicer_panel"]], "slicer_panel() (in module dipy.viz.panel)": [[144, "dipy.viz.panel.slicer_panel"]], "space (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.space"]], "space_attributes (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.space_attributes"]], "sph_project() (in module dipy.viz.projections)": [[144, "dipy.viz.projections.sph_project"]], "streamlines (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.streamlines"]], "to_center() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_center"]], "to_corner() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_corner"]], "to_origin() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_rasmm"]], "to_space() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_space"]], "to_vox() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.viz.app.statefultractogram method)": [[144, "dipy.viz.app.StatefulTractogram.to_voxmm"]], "voxel_order (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.viz.app.statefultractogram property)": [[144, "dipy.viz.app.StatefulTractogram.voxel_sizes"]], "warn() (in module dipy.viz.plotting)": [[144, "dipy.viz.plotting.warn"]], "affinemap (class in dipy.workflows.align)": [[145, "dipy.workflows.align.AffineMap"]], "applytransformflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.ApplyTransformFlow"]], "binarystoppingcriterion (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.BinaryStoppingCriterion"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.BundleShapeAnalysis"]], "ccmetric (class in dipy.workflows.align)": [[145, "dipy.workflows.align.CCMetric"]], "closestpeakdirectiongetter (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.ClosestPeakDirectionGetter"]], "cmcstoppingcriterion (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.CmcStoppingCriterion"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "constrainedsphericaldeconvmodel (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ConstrainedSphericalDeconvModel"]], "csaodfmodel (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.CsaOdfModel"]], "deterministicmaximumdirectiongetter (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.DeterministicMaximumDirectionGetter"]], "diffeomorphicmap (class in dipy.workflows.align)": [[145, "dipy.workflows.align.DiffeomorphicMap"]], "diffusionkurtosismodel (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.DiffusionKurtosisModel"]], "emmetric (class in dipy.workflows.align)": [[145, "dipy.workflows.align.EMMetric"]], "fetchflow (class in dipy.workflows.io)": [[145, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[145, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser"]], "introspectiveargumentparser (class in dipy.workflows.flow_runner)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[145, "dipy.workflows.io.IoInfoFlow"]], "ivimmodel() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.IvimModel"]], "lpcaflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "localtracking (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.LocalTracking"]], "mppcaflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[145, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.base)": [[145, "dipy.workflows.base.NumpyDocString"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[145, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "particlefilteringtracking (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.ParticleFilteringTracking"]], "patch2selfflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.Patch2SelfFlow"]], "probabilisticdirectiongetter (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.ProbabilisticDirectionGetter"]], "rasmm (dipy.workflows.segment.space attribute)": [[145, "dipy.workflows.segment.Space.RASMM"]], "rasmm (dipy.workflows.tracking.space attribute)": [[145, "dipy.workflows.tracking.Space.RASMM"]], "reader (class in dipy.workflows.docstring_parser)": [[145, "dipy.workflows.docstring_parser.Reader"]], "recobundles (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.RecoBundles"]], "recobundlesflow (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.ResliceFlow"]], "rumbasdmodel (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.RumbaSDModel"]], "snrinccflow (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.SNRinCCFlow"]], "ssdmetric (class in dipy.workflows.align)": [[145, "dipy.workflows.align.SSDMetric"]], "slrwithqbxflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.SlrWithQbxFlow"]], "space (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.Space"]], "space (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.Space"]], "splitflow (class in dipy.workflows.io)": [[145, "dipy.workflows.io.SplitFlow"]], "statefultractogram (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.StatefulTractogram"]], "statefultractogram (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.StatefulTractogram"]], "streamlines (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.Streamlines"]], "symmetricdiffeomorphicregistration (class in dipy.workflows.align)": [[145, "dipy.workflows.align.SymmetricDiffeomorphicRegistration"]], "synregistrationflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.SynRegistrationFlow"]], "tensormodel (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.TensorModel"]], "tensormodel (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.TensorModel"]], "thresholdstoppingcriterion (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.ThresholdStoppingCriterion"]], "vox (dipy.workflows.segment.space attribute)": [[145, "dipy.workflows.segment.Space.VOX"]], "vox (dipy.workflows.tracking.space attribute)": [[145, "dipy.workflows.tracking.Space.VOX"]], "voxmm (dipy.workflows.segment.space attribute)": [[145, "dipy.workflows.segment.Space.VOXMM"]], "voxmm (dipy.workflows.tracking.space attribute)": [[145, "dipy.workflows.tracking.Space.VOXMM"]], "workflow (class in dipy.workflows.align)": [[145, "dipy.workflows.align.Workflow"]], "workflow (class in dipy.workflows.combined_workflow)": [[145, "dipy.workflows.combined_workflow.Workflow"]], "workflow (class in dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.Workflow"]], "workflow (class in dipy.workflows.io)": [[145, "dipy.workflows.io.Workflow"]], "workflow (class in dipy.workflows.mask)": [[145, "dipy.workflows.mask.Workflow"]], "workflow (class in dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.Workflow"]], "workflow (class in dipy.workflows.segment)": [[145, "dipy.workflows.segment.Workflow"]], "workflow (class in dipy.workflows.stats)": [[145, "dipy.workflows.stats.Workflow"]], "workflow (class in dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.Workflow"]], "workflow (class in dipy.workflows.viz)": [[145, "dipy.workflows.viz.Workflow"]], "workflow (class in dipy.workflows.workflow)": [[145, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.affinemap method)": [[145, "dipy.workflows.align.AffineMap.__init__"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[145, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.__init__"]], "__init__() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.__init__"]], "__init__() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[145, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[145, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[145, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[145, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.symmetricdiffeomorphicregistration method)": [[145, "dipy.workflows.align.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[145, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.workflow method)": [[145, "dipy.workflows.align.Workflow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.base.numpydocstring method)": [[145, "dipy.workflows.base.NumpyDocString.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.combined_workflow.workflow method)": [[145, "dipy.workflows.combined_workflow.Workflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[145, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[145, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[145, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[145, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[145, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.denoise.workflow method)": [[145, "dipy.workflows.denoise.Workflow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[145, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[145, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[145, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[145, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.io.workflow method)": [[145, "dipy.workflows.io.Workflow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[145, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.mask.workflow method)": [[145, "dipy.workflows.mask.Workflow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.reconst.constrainedsphericaldeconvmodel method)": [[145, "dipy.workflows.reconst.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.workflows.reconst.csaodfmodel method)": [[145, "dipy.workflows.reconst.CsaOdfModel.__init__"]], "__init__() (dipy.workflows.reconst.diffusionkurtosismodel method)": [[145, "dipy.workflows.reconst.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[145, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[145, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[145, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[145, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[145, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[145, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[145, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.reconst.rumbasdmodel method)": [[145, "dipy.workflows.reconst.RumbaSDModel.__init__"]], "__init__() (dipy.workflows.reconst.tensormodel method)": [[145, "dipy.workflows.reconst.TensorModel.__init__"]], "__init__() (dipy.workflows.reconst.workflow method)": [[145, "dipy.workflows.reconst.Workflow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[145, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[145, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundles method)": [[145, "dipy.workflows.segment.RecoBundles.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[145, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.space method)": [[145, "dipy.workflows.segment.Space.__init__"]], "__init__() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.__init__"]], "__init__() (dipy.workflows.segment.workflow method)": [[145, "dipy.workflows.segment.Workflow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[145, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[145, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[145, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.stats.tensormodel method)": [[145, "dipy.workflows.stats.TensorModel.__init__"]], "__init__() (dipy.workflows.stats.workflow method)": [[145, "dipy.workflows.stats.Workflow.__init__"]], "__init__() (dipy.workflows.tracking.binarystoppingcriterion method)": [[145, "dipy.workflows.tracking.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.workflows.tracking.closestpeakdirectiongetter method)": [[145, "dipy.workflows.tracking.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.workflows.tracking.cmcstoppingcriterion method)": [[145, "dipy.workflows.tracking.CmcStoppingCriterion.__init__"]], "__init__() (dipy.workflows.tracking.deterministicmaximumdirectiongetter method)": [[145, "dipy.workflows.tracking.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[145, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.localtracking method)": [[145, "dipy.workflows.tracking.LocalTracking.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[145, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.particlefilteringtracking method)": [[145, "dipy.workflows.tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.workflows.tracking.probabilisticdirectiongetter method)": [[145, "dipy.workflows.tracking.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.workflows.tracking.space method)": [[145, "dipy.workflows.tracking.Space.__init__"]], "__init__() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.__init__"]], "__init__() (dipy.workflows.tracking.thresholdstoppingcriterion method)": [[145, "dipy.workflows.tracking.ThresholdStoppingCriterion.__init__"]], "__init__() (dipy.workflows.tracking.workflow method)": [[145, "dipy.workflows.tracking.Workflow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[145, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.viz.workflow method)": [[145, "dipy.workflows.viz.Workflow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[145, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_description() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_epilogue() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_sub_flow_args() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "add_workflow() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.add_workflow"]], "affine (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.affine"]], "affine (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.affine"]], "affine_registration() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.affine_registration"]], "allocate() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.allocate"]], "anatomical_measures() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.anatomical_measures"]], "are_compatible() (dipy.workflows.segment.statefultractogram static method)": [[145, "dipy.workflows.segment.StatefulTractogram.are_compatible"]], "are_compatible() (dipy.workflows.tracking.statefultractogram static method)": [[145, "dipy.workflows.tracking.StatefulTractogram.are_compatible"]], "assignment_map() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.assignment_map"]], "assignment_map() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.assignment_map"]], "auto_response_ssst() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.auto_response_ssst"]], "axial_diffusivity() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.axial_diffusivity"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.basename_without_extension"]], "binary_dilation() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.binary_dilation"]], "bounding_box() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.bounding_box"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.buan_bundle_profiles"]], "bundle_shape_similarity() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.bundle_shape_similarity"]], "check_dimensions() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.check_dimensions"]], "color_fa() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.color_fa"]], "common_start() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.common_start"]], "compute_backward() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.compute_backward"]], "compute_backward() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.compute_backward"]], "compute_backward() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.compute_backward"]], "compute_bounding_box() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.compute_bounding_box"]], "compute_bounding_box() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.compute_bounding_box"]], "compute_demons_step() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.compute_demons_step"]], "compute_forward() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.compute_forward"]], "compute_forward() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.compute_forward"]], "compute_forward() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.compute_inversion_error"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_nifti_header() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.create_nifti_header"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "data_per_point (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.data_per_point"]], "data_per_point (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.data_per_streamline"]], "data_per_streamline (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.data_per_streamline"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[145, "dipy.workflows.docstring_parser.dedent_lines"]], "deprecated_params() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.deprecated_params"]], "deprecated_params() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.deprecated_params"]], "dimensions (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.dimensions"]], "dimensions (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.dimensions"]], "dipy.workflows": [[145, "module-dipy.workflows"]], "dipy.workflows.align": [[145, "module-dipy.workflows.align"]], "dipy.workflows.base": [[145, "module-dipy.workflows.base"]], "dipy.workflows.combined_workflow": [[145, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[145, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[145, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[145, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[145, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[145, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[145, "module-dipy.workflows.multi_io"]], "dipy.workflows.reconst": [[145, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[145, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[145, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[145, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[145, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[145, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.eof"]], "estimate_sigma() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.estimate_sigma"]], "evaluate_results() (dipy.workflows.segment.recobundles method)": [[145, "dipy.workflows.segment.RecoBundles.evaluate_results"]], "expand_fields() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.expand_fields"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "fit() (dipy.workflows.reconst.constrainedsphericaldeconvmodel method)": [[145, "dipy.workflows.reconst.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.workflows.reconst.diffusionkurtosismodel method)": [[145, "dipy.workflows.reconst.DiffusionKurtosisModel.fit"]], "fit() (dipy.workflows.reconst.tensormodel method)": [[145, "dipy.workflows.reconst.TensorModel.fit"]], "fit() (dipy.workflows.stats.tensormodel method)": [[145, "dipy.workflows.stats.TensorModel.fit"]], "fractional_anisotropy() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.fractional_anisotropy"]], "free_iteration() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.free_iteration"]], "free_iteration() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.free_iteration"]], "free_iteration() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.free_iteration"]], "from_sft() (dipy.workflows.segment.statefultractogram static method)": [[145, "dipy.workflows.segment.StatefulTractogram.from_sft"]], "from_sft() (dipy.workflows.tracking.statefultractogram static method)": [[145, "dipy.workflows.tracking.StatefulTractogram.from_sft"]], "geodesic_anisotropy() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.geodesic_anisotropy"]], "get_affine() (dipy.workflows.align.affinemap method)": [[145, "dipy.workflows.align.AffineMap.get_affine"]], "get_args_default() (in module dipy.workflows.base)": [[145, "dipy.workflows.base.get_args_default"]], "get_args_default() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.get_args_default"]], "get_backward_field() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.get_backward_field"]], "get_data_per_point_keys() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_point_keys() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.get_data_per_streamline_keys"]], "get_data_per_streamline_keys() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.get_data_per_streamline_keys"]], "get_energy() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.get_energy"]], "get_energy() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.get_energy"]], "get_energy() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.get_energy"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[145, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[145, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[145, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[145, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_flow_args() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.get_flow_args"]], "get_forward_field() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.get_forward_field"]], "get_io_iterator() (dipy.workflows.align.workflow method)": [[145, "dipy.workflows.align.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.combined_workflow.workflow method)": [[145, "dipy.workflows.combined_workflow.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.denoise.workflow method)": [[145, "dipy.workflows.denoise.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.io.workflow method)": [[145, "dipy.workflows.io.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.mask.workflow method)": [[145, "dipy.workflows.mask.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.reconst.workflow method)": [[145, "dipy.workflows.reconst.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.segment.workflow method)": [[145, "dipy.workflows.segment.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.stats.workflow method)": [[145, "dipy.workflows.stats.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.tracking.workflow method)": [[145, "dipy.workflows.tracking.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.viz.workflow method)": [[145, "dipy.workflows.viz.Workflow.get_io_iterator"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[145, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[145, "dipy.workflows.flow_runner.get_level"]], "get_map() (dipy.workflows.align.symmetricdiffeomorphicregistration method)": [[145, "dipy.workflows.align.SymmetricDiffeomorphicRegistration.get_map"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_mode() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.get_mode"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[145, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[145, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.workflow class method)": [[145, "dipy.workflows.align.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.combined_workflow.workflow class method)": [[145, "dipy.workflows.combined_workflow.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[145, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[145, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[145, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[145, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[145, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.workflow class method)": [[145, "dipy.workflows.denoise.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[145, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[145, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[145, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.workflow class method)": [[145, "dipy.workflows.io.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[145, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.workflow class method)": [[145, "dipy.workflows.mask.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[145, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[145, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[145, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[145, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[145, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[145, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[145, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.workflow class method)": [[145, "dipy.workflows.reconst.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[145, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[145, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[145, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.workflow class method)": [[145, "dipy.workflows.segment.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[145, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[145, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[145, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.workflow class method)": [[145, "dipy.workflows.stats.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[145, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[145, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.workflow class method)": [[145, "dipy.workflows.tracking.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[145, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.workflow class method)": [[145, "dipy.workflows.viz.Workflow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[145, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_simplified_transform() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.get_simplified_transform"]], "get_sphere() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.get_sphere"]], "get_streamlines_copy() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.get_streamlines_copy"]], "get_streamlines_copy() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.get_streamlines_copy"]], "get_sub_runs() (dipy.workflows.align.workflow method)": [[145, "dipy.workflows.align.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.combined_workflow.workflow method)": [[145, "dipy.workflows.combined_workflow.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.denoise.workflow method)": [[145, "dipy.workflows.denoise.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.io.workflow method)": [[145, "dipy.workflows.io.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.mask.workflow method)": [[145, "dipy.workflows.mask.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.reconst.workflow method)": [[145, "dipy.workflows.reconst.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.segment.workflow method)": [[145, "dipy.workflows.segment.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.stats.workflow method)": [[145, "dipy.workflows.stats.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.tracking.workflow method)": [[145, "dipy.workflows.tracking.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.viz.workflow method)": [[145, "dipy.workflows.viz.Workflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[145, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "getmembers() (in module dipy.workflows.io)": [[145, "dipy.workflows.io.getmembers"]], "gibbs_removal() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.gibbs_removal"]], "glob() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.glob"]], "glob() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.glob"]], "gradient_table() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.gradient_table"]], "gradient_table() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.gradient_table"]], "gradient_table() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.gradient_table"]], "gradient_table() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.gradient_table"]], "horizon() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.horizon"]], "initialize_iteration() (dipy.workflows.align.ccmetric method)": [[145, "dipy.workflows.align.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.workflows.align.ssdmetric method)": [[145, "dipy.workflows.align.SSDMetric.initialize_iteration"]], "interpret_matrix() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.inverse"]], "io_iterator() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.io_iterator_"]], "io_iterator_() (in module dipy.workflows.workflow)": [[145, "dipy.workflows.workflow.io_iterator_"]], "is_bbox_in_vox_valid() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.is_bbox_in_vox_valid"]], "is_bbox_in_vox_valid() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.is_bbox_in_vox_valid"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.is_empty"]], "isfunction() (in module dipy.workflows.io)": [[145, "dipy.workflows.io.isfunction"]], "line_colors() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.line_colors"]], "literal_eval() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.literal_eval"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[145, "dipy.workflows.io.FetchFlow.load_module"]], "load_nifti() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.load_nifti"]], "load_nifti() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.load_nifti"]], "load_nifti() (in module dipy.workflows.io)": [[145, "dipy.workflows.io.load_nifti"]], "load_nifti() (in module dipy.workflows.mask)": [[145, "dipy.workflows.mask.load_nifti"]], "load_nifti() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.load_nifti"]], "load_nifti() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.load_nifti"]], "load_nifti() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.load_nifti"]], "load_nifti() (in module dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.load_nifti"]], "load_nifti() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.load_nifti"]], "load_nifti_data() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.load_nifti_data"]], "load_peaks() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.load_peaks"]], "load_peaks() (in module dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.load_peaks"]], "load_peaks() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.load_peaks"]], "load_tractogram() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.load_tractogram"]], "load_tractogram() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.load_tractogram"]], "load_tractogram() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.load_tractogram"]], "localpca() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.localpca"]], "lower_triangular() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.lower_triangular"]], "manage_output_overwrite() (dipy.workflows.align.workflow method)": [[145, "dipy.workflows.align.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.combined_workflow.workflow method)": [[145, "dipy.workflows.combined_workflow.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.denoise.workflow method)": [[145, "dipy.workflows.denoise.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.io.workflow method)": [[145, "dipy.workflows.io.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.mask.workflow method)": [[145, "dipy.workflows.mask.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.reconst.workflow method)": [[145, "dipy.workflows.reconst.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.segment.workflow method)": [[145, "dipy.workflows.segment.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.stats.workflow method)": [[145, "dipy.workflows.stats.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.tracking.workflow method)": [[145, "dipy.workflows.tracking.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.viz.workflow method)": [[145, "dipy.workflows.viz.Workflow.manage_output_overwrite"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[145, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "max (dipy.workflows.reconst.csaodfmodel attribute)": [[145, "dipy.workflows.reconst.CsaOdfModel.max"]], "mean_diffusivity() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.mean_diffusivity"]], "median_otsu() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.median_otsu"]], "min (dipy.workflows.reconst.csaodfmodel attribute)": [[145, "dipy.workflows.reconst.CsaOdfModel.min"]], "mppca() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.mppca"]], "nifti1_symmat() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.nifti1_symmat"]], "nlmeans() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.nlmeans"]], "none_or_dtype() (in module dipy.workflows.base)": [[145, "dipy.workflows.base.none_or_dtype"]], "numpy_to_vtk_colors() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.numpy_to_vtk_colors"]], "optimize() (dipy.workflows.align.symmetricdiffeomorphicregistration method)": [[145, "dipy.workflows.align.SymmetricDiffeomorphicRegistration.optimize"]], "optional_package() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.optional_package"]], "optional_package() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.optional_package"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "optional_parameters (dipy.workflows.flow_runner.introspectiveargumentparser property)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.optional_parameters"]], "origin (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.origin"]], "origin (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.origin"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "output_parameters (dipy.workflows.flow_runner.introspectiveargumentparser property)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.output_parameters"]], "patch2self() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.patch2self"]], "pca_noise_estimate() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.pca_noise_estimate"]], "peak_values() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.peak_values"]], "peaks_from_model() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.peaks_from_model"]], "peaks_to_niftis() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.peaks_to_niftis"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.peek"]], "pjoin() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.pjoin"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "positional_parameters (dipy.workflows.flow_runner.introspectiveargumentparser property)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.positional_parameters"]], "predict() (dipy.workflows.reconst.constrainedsphericaldeconvmodel method)": [[145, "dipy.workflows.reconst.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.workflows.reconst.diffusionkurtosismodel method)": [[145, "dipy.workflows.reconst.DiffusionKurtosisModel.predict"]], "predict() (dipy.workflows.reconst.tensormodel method)": [[145, "dipy.workflows.reconst.TensorModel.predict"]], "predict() (dipy.workflows.stats.tensormodel method)": [[145, "dipy.workflows.stats.TensorModel.predict"]], "radial_diffusivity() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.radial_diffusivity"]], "read() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.read"]], "read_bvals_bvecs() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.read_bvals_bvecs"]], "read_bvals_bvecs() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.read_bvals_bvecs"]], "read_bvals_bvecs() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.read_bvals_bvecs"]], "read_bvals_bvecs() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.read_bvals_bvecs"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "recognize() (dipy.workflows.segment.recobundles method)": [[145, "dipy.workflows.segment.RecoBundles.recognize"]], "refine() (dipy.workflows.segment.recobundles method)": [[145, "dipy.workflows.segment.RecoBundles.refine"]], "remove_invalid_streamlines() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.remove_invalid_streamlines"]], "remove_invalid_streamlines() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.remove_invalid_streamlines"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.reset"]], "reslice() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.reslice"]], "run() (dipy.workflows.align.applytransformflow method)": [[145, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[145, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[145, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[145, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[145, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[145, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.align.workflow method)": [[145, "dipy.workflows.align.Workflow.run"]], "run() (dipy.workflows.combined_workflow.workflow method)": [[145, "dipy.workflows.combined_workflow.Workflow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[145, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[145, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[145, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[145, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[145, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.denoise.workflow method)": [[145, "dipy.workflows.denoise.Workflow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[145, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[145, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[145, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.io.workflow method)": [[145, "dipy.workflows.io.Workflow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[145, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.mask.workflow method)": [[145, "dipy.workflows.mask.Workflow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[145, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[145, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[145, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[145, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[145, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[145, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[145, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.reconst.workflow method)": [[145, "dipy.workflows.reconst.Workflow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[145, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[145, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[145, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.segment.workflow method)": [[145, "dipy.workflows.segment.Workflow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[145, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[145, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[145, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.stats.workflow method)": [[145, "dipy.workflows.stats.Workflow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[145, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[145, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.workflow method)": [[145, "dipy.workflows.tracking.Workflow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[145, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.viz.workflow method)": [[145, "dipy.workflows.viz.Workflow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[145, "dipy.workflows.workflow.Workflow.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[145, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[145, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "save_nifti() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.save_nifti"]], "save_nifti() (in module dipy.workflows.denoise)": [[145, "dipy.workflows.denoise.save_nifti"]], "save_nifti() (in module dipy.workflows.io)": [[145, "dipy.workflows.io.save_nifti"]], "save_nifti() (in module dipy.workflows.mask)": [[145, "dipy.workflows.mask.save_nifti"]], "save_nifti() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.save_nifti"]], "save_nifti() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.save_nifti"]], "save_nifti() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.save_nifti"]], "save_peaks() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.save_peaks"]], "save_qa_metric() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.save_qa_metric"]], "save_tractogram() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.save_tractogram"]], "save_tractogram() (in module dipy.workflows.tracking)": [[145, "dipy.workflows.tracking.save_tractogram"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[145, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "segment_from_cfa() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.segment_from_cfa"]], "set_affine() (dipy.workflows.align.affinemap method)": [[145, "dipy.workflows.align.AffineMap.set_affine"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[145, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[145, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "setup_module() (in module dipy.workflows.viz)": [[145, "dipy.workflows.viz.setup_module"]], "shallow_copy() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.shallow_copy"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "show_argument() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[145, "dipy.workflows.multi_io.slash_to_under"]], "slr_with_qbx() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.slr_with_qbx"]], "space (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.space"]], "space (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.space"]], "space_attributes (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.space_attributes"]], "space_attributes (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.space_attributes"]], "split_dki_param() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.split_dki_param"]], "streamlines (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.streamlines"]], "streamlines (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.streamlines"]], "time() (in module dipy.workflows.segment)": [[145, "dipy.workflows.segment.time"]], "time() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.time"]], "to_center() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_center"]], "to_center() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_center"]], "to_corner() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_corner"]], "to_corner() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_corner"]], "to_origin() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_origin"]], "to_origin() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_rasmm"]], "to_rasmm() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_rasmm"]], "to_space() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_space"]], "to_space() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_space"]], "to_vox() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_vox"]], "to_vox() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.workflows.segment.statefultractogram method)": [[145, "dipy.workflows.segment.StatefulTractogram.to_voxmm"]], "to_voxmm() (dipy.workflows.tracking.statefultractogram method)": [[145, "dipy.workflows.tracking.StatefulTractogram.to_voxmm"]], "transform() (dipy.workflows.align.affinemap method)": [[145, "dipy.workflows.align.AffineMap.transform"]], "transform() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.transform"]], "transform_inverse() (dipy.workflows.align.affinemap method)": [[145, "dipy.workflows.align.AffineMap.transform_inverse"]], "transform_inverse() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.transform_inverse"]], "transform_points() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.transform_points_inverse"]], "transform_streamlines() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.transform_streamlines"]], "transform_streamlines() (in module dipy.workflows.stats)": [[145, "dipy.workflows.stats.transform_streamlines"]], "update() (dipy.workflows.align.symmetricdiffeomorphicregistration method)": [[145, "dipy.workflows.align.SymmetricDiffeomorphicRegistration.update"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[145, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]], "update_argument() (dipy.workflows.flow_runner.introspectiveargumentparser method)": [[145, "dipy.workflows.flow_runner.IntrospectiveArgumentParser.update_argument"]], "use_moving_image_dynamics() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.workflows.align.emmetric method)": [[145, "dipy.workflows.align.EMMetric.use_static_image_dynamics"]], "voxel_order (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.voxel_order"]], "voxel_order (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.workflows.segment.statefultractogram property)": [[145, "dipy.workflows.segment.StatefulTractogram.voxel_sizes"]], "voxel_sizes (dipy.workflows.tracking.statefultractogram property)": [[145, "dipy.workflows.tracking.StatefulTractogram.voxel_sizes"]], "warn() (in module dipy.workflows.align)": [[145, "dipy.workflows.align.warn"]], "warn() (in module dipy.workflows.docstring_parser)": [[145, "dipy.workflows.docstring_parser.warn"]], "warn() (in module dipy.workflows.reconst)": [[145, "dipy.workflows.reconst.warn"]], "warp_endomorphism() (dipy.workflows.align.diffeomorphicmap method)": [[145, "dipy.workflows.align.DiffeomorphicMap.warp_endomorphism"]]}}