{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": {"link": "../dipy.io/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>"}, "next": {"link": "../dipy.reconst/", "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>"}, "title": "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "meta": {}, "body": "<section id=\"module-dipy.nn\">\n<span id=\"nn\"></span><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code><a class=\"headerlink\" href=\"#module-dipy.nn\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.bench\" title=\"dipy.nn.bench\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">bench</span></code></a>([label,\u00a0verbose,\u00a0extra_argv])</p></td>\n<td><p>Run benchmarks for module using nose.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.test\" title=\"dipy.nn.test\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">test</span></code></a>([label,\u00a0verbose,\u00a0extra_argv,\u00a0doctests,\u00a0...])</p></td>\n<td><p>Run tests for module using nose.</p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"module-dipy.nn.histo_resdnn\">\n<span id=\"module-nn-histo-resdnn\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn.histo_resdnn</span></code><a class=\"headerlink\" href=\"#module-dipy.nn.histo_resdnn\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Class and helper functions for fitting the Histological ResDNN model.</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere\" title=\"dipy.nn.histo_resdnn.HemiSphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a>([x,\u00a0y,\u00a0z,\u00a0theta,\u00a0phi,\u00a0xyz,\u00a0...])</p></td>\n<td><p>Points on the unit sphere.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN\" title=\"dipy.nn.histo_resdnn.HistoResDNN\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">HistoResDNN</span></code></a>([sh_order,\u00a0basis_type,\u00a0verbose])</p></td>\n<td><p>This class is intended for the ResDNN Histology Network model.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version\" title=\"dipy.nn.histo_resdnn.Version\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Version</span></code></a>(version)</p></td>\n<td><p>This class abstracts handling of a project's versions.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.doctest_skip_parser\" title=\"dipy.nn.histo_resdnn.doctest_skip_parser\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">doctest_skip_parser</span></code></a>(func)</p></td>\n<td><p>Decorator replaces custom skip test markup in doctests.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_bval_indices\" title=\"dipy.nn.histo_resdnn.get_bval_indices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_bval_indices</span></code></a>(bvals,\u00a0bval[,\u00a0tol])</p></td>\n<td><p>Get indices where the b-value is <cite>bval</cite></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_fnames\" title=\"dipy.nn.histo_resdnn.get_fnames\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fnames</span></code></a>([name])</p></td>\n<td><p>Provide full paths to example or test datasets.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_sphere\" title=\"dipy.nn.histo_resdnn.get_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_sphere</span></code></a>([name])</p></td>\n<td><p>provide triangulated spheres</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.optional_package\" title=\"dipy.nn.histo_resdnn.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.set_logger_level\" title=\"dipy.nn.histo_resdnn.set_logger_level\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_logger_level</span></code></a>(log_level)</p></td>\n<td><p>Change the logger of the HistoResDNN to one on the following: DEBUG, INFO, WARNING, CRITICAL, ERROR</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sf_to_sh\" title=\"dipy.nn.histo_resdnn.sf_to_sh\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sf_to_sh</span></code></a>(sf,\u00a0sphere[,\u00a0sh_order,\u00a0basis_type,\u00a0...])</p></td>\n<td><p>Spherical function to spherical harmonics (SH).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sh_to_sf\" title=\"dipy.nn.histo_resdnn.sh_to_sf\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sh_to_sf</span></code></a>(sh,\u00a0sphere[,\u00a0sh_order,\u00a0basis_type,\u00a0...])</p></td>\n<td><p>Spherical harmonics (SH) to spherical function (SF).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sph_harm_ind_list\" title=\"dipy.nn.histo_resdnn.sph_harm_ind_list\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sph_harm_ind_list</span></code></a>(sh_order[,\u00a0full_basis])</p></td>\n<td><p>Returns the degree (<code class=\"docutils literal notranslate\"><span class=\"pre\">m</span></code>) and order (<code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code>) of all the symmetric spherical harmonics of degree less then or equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.unique_bvals_magnitude\" title=\"dipy.nn.histo_resdnn.unique_bvals_magnitude\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unique_bvals_magnitude</span></code></a>(bvals[,\u00a0bmag,\u00a0rbvals])</p></td>\n<td><p>This function gives the unique rounded b-values of the data</p></td>\n</tr>\n</tbody>\n</table>\n</section>\n<section id=\"module-dipy.nn.model\">\n<span id=\"module-nn-model\"></span><h2>Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn.model</span></code><a class=\"headerlink\" href=\"#module-dipy.nn.model\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton\" title=\"dipy.nn.model.MultipleLayerPercepton\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton</span></code></a>([input_shape,\u00a0...])</p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron\" title=\"dipy.nn.model.SingleLayerPerceptron\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron</span></code></a>([input_shape,\u00a0...])</p></td>\n<td><p><p class=\"rubric\">Methods</p>\n</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.Version\" title=\"dipy.nn.model.Version\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Version</span></code></a>(version)</p></td>\n<td><p>This class abstracts handling of a project's versions.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.optional_package\" title=\"dipy.nn.model.optional_package\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional_package</span></code></a>(name[,\u00a0trip_msg])</p></td>\n<td><p>Return package-like thing and module setup for package <cite>name</cite></p></td>\n</tr>\n</tbody>\n</table>\n<section id=\"bench\">\n<h3>bench<a class=\"headerlink\" href=\"#bench\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.bench\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">bench</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'fast'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extra_argv</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.bench\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run benchmarks for module using nose.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>label</strong><span class=\"classifier\">{\u2018fast\u2019, \u2018full\u2019, \u2018\u2019, attribute identifier}, optional</span></dt><dd><p>Identifies the benchmarks to run. This can be a string to pass to\nthe nosetests executable with the \u2018-A\u2019 option, or one of several\nspecial values.  Special values are:</p>\n<ul class=\"simple\">\n<li><p>\u2018fast\u2019 - the default - which corresponds to the <code class=\"docutils literal notranslate\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code>\noption of \u2018not slow\u2019.</p></li>\n<li><p>\u2018full\u2019 - fast (as above) and slow benchmarks as in the\n\u2018no -A\u2019 option to nosetests - this is the same as \u2018\u2019.</p></li>\n<li><p>None or \u2018\u2019 - run all tests.</p></li>\n<li><p>attribute_identifier - string passed directly to nosetests as \u2018-A\u2019.</p></li>\n</ul>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Verbosity value for benchmark outputs, in the range 1-10. Default is 1.</p>\n</dd>\n<dt><strong>extra_argv</strong><span class=\"classifier\">list, optional</span></dt><dd><p>List with any extra arguments to pass to nosetests.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>success</strong><span class=\"classifier\">bool</span></dt><dd><p>Returns True if running the benchmarks works, False if an error\noccurred.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Benchmarks are like tests, but have names starting with \u201cbench\u201d instead\nof \u201ctest\u201d, and can be found under the \u201cbenchmarks\u201d sub-directory of the\nmodule.</p>\n<p>Each NumPy module exposes <cite>bench</cite> in its namespace to run all benchmarks\nfor it.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span> \n<span class=\"go\">Running benchmarks for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">using 562341 items:</span>\n<span class=\"go\">unique:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">unique1d:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">ratio: 1.0</span>\n<span class=\"go\">nUnique: 56230 == 56230</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">OK</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> \n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"test\">\n<h3>test<a class=\"headerlink\" href=\"#test\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.test\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">test</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'fast'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extra_argv</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">doctests</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coverage</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_warnings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run tests for module using nose.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>label</strong><span class=\"classifier\">{\u2018fast\u2019, \u2018full\u2019, \u2018\u2019, attribute identifier}, optional</span></dt><dd><p>Identifies the tests to run. This can be a string to pass to\nthe nosetests executable with the \u2018-A\u2019 option, or one of several\nspecial values.  Special values are:</p>\n<ul class=\"simple\">\n<li><p>\u2018fast\u2019 - the default - which corresponds to the <code class=\"docutils literal notranslate\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code>\noption of \u2018not slow\u2019.</p></li>\n<li><p>\u2018full\u2019 - fast (as above) and slow tests as in the\n\u2018no -A\u2019 option to nosetests - this is the same as \u2018\u2019.</p></li>\n<li><p>None or \u2018\u2019 - run all tests.</p></li>\n<li><p>attribute_identifier - string passed directly to nosetests as \u2018-A\u2019.</p></li>\n</ul>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Verbosity value for test outputs, in the range 1-10. Default is 1.</p>\n</dd>\n<dt><strong>extra_argv</strong><span class=\"classifier\">list, optional</span></dt><dd><p>List with any extra arguments to pass to nosetests.</p>\n</dd>\n<dt><strong>doctests</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>If True, run doctests in module. Default is False.</p>\n</dd>\n<dt><strong>coverage</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>If True, report coverage of NumPy code. Default is False.\n(This requires the\n<a class=\"reference external\" href=\"https://pypi.org/project/coverage/\">coverage module</a>).</p>\n</dd>\n<dt><strong>raise_warnings</strong><span class=\"classifier\">None, str or sequence of warnings, optional</span></dt><dd><p>This specifies which warnings to configure as \u2018raise\u2019 instead\nof being shown once during the test execution. Valid strings are:</p>\n<ul class=\"simple\">\n<li><p>\u201cdevelop\u201d : equals <code class=\"docutils literal notranslate\"><span class=\"pre\">(Warning,)</span></code></p></li>\n<li><p>\u201crelease\u201d : equals <code class=\"docutils literal notranslate\"><span class=\"pre\">()</span></code>, do not raise on any warnings.</p></li>\n</ul>\n</dd>\n<dt><strong>timer</strong><span class=\"classifier\">bool or int, optional</span></dt><dd><p>Timing of individual tests with <code class=\"docutils literal notranslate\"><span class=\"pre\">nose-timer</span></code> (which needs to be\ninstalled).  If True, time tests and report on all of them.\nIf an integer (say <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code>), report timing results for <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code> slowest\ntests.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>result</strong><span class=\"classifier\">object</span></dt><dd><p>Returns the result of running the tests as a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">nose.result.TextTestResult</span></code> object.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Each NumPy module exposes <cite>test</cite> in its namespace to run all tests for it.\nFor example, to run all tests for numpy.lib:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n<span class=\"go\">Running unit tests for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Ran 976 tests in 3.933s</span>\n</pre></div>\n</div>\n<p>OK</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span> \n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">knownfail</span> \n<span class=\"go\">[]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"hemisphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere\" title=\"dipy.nn.histo_resdnn.HemiSphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#hemisphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">HemiSphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.core/#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x, y, z</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>theta, phi</strong><span class=\"classifier\">1-D array_like</span></dt><dd><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</dd>\n<dt><strong>xyz</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Vertices as x-y-z coordinates.</p>\n</dd>\n<dt><strong>faces</strong><span class=\"classifier\">(N, 3) ndarray</span></dt><dd><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</dd>\n<dt><strong>edges</strong><span class=\"classifier\">(N, 2) ndarray</span></dt><dd><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</dd>\n<dt><strong>tol</strong><span class=\"classifier\">float</span></dt><dd><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Sphere</span></code></dt><dd></dd>\n</dl>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x</strong></dt><dd></dd>\n<dt><strong>y</strong></dt><dd></dd>\n<dt><strong>z</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.find_closest\" title=\"dipy.nn.histo_resdnn.HemiSphere.find_closest\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">find_closest</span></code></a>(xyz)</p></td>\n<td><p>Find the index of the vertex in the Sphere closest to the input vector, taking into account antipodal symmetry</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.from_sphere\" title=\"dipy.nn.histo_resdnn.HemiSphere.from_sphere\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_sphere</span></code></a>(sphere[,\u00a0tol])</p></td>\n<td><p>Create instance from a Sphere</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.mirror\" title=\"dipy.nn.histo_resdnn.HemiSphere.mirror\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">mirror</span></code></a>()</p></td>\n<td><p>Create a full Sphere from a HemiSphere</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.subdivide\" title=\"dipy.nn.histo_resdnn.HemiSphere.subdivide\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">subdivide</span></code></a>([n])</p></td>\n<td><p>Create a more subdivided HemiSphere</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><strong>edges</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><p><strong>faces</strong></p></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><p><strong>vertices</strong></p></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">theta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">phi</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">faces</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edges</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.faces\">\n<span class=\"sig-name descname\"><span class=\"pre\">faces</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.find_closest\">\n<span class=\"sig-name descname\"><span class=\"pre\">find_closest</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xyz</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>xyz</strong><span class=\"classifier\">array-like, 3 elements</span></dt><dd><p>A unit vector</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>idx</strong><span class=\"classifier\">int</span></dt><dd><p>The index into the Sphere.vertices array that gives the closest\nvertex (in angle).</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.from_sphere\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.mirror\">\n<span class=\"sig-name descname\"><span class=\"pre\">mirror</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HemiSphere.subdivide\">\n<span class=\"sig-name descname\"><span class=\"pre\">subdivide</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"historesdnn\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN\" title=\"dipy.nn.histo_resdnn.HistoResDNN\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HistoResDNN</span></code></a><a class=\"headerlink\" href=\"#historesdnn\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HistoResDNN\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">HistoResDNN</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">basis_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tournier07'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HistoResDNN\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p>This class is intended for the ResDNN Histology Network model.</p>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights\" title=\"dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fetch_default_weights</span></code></a>()</p></td>\n<td><p>Load the model pre-training weights to use for the fitting.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.load_model_weights\" title=\"dipy.nn.histo_resdnn.HistoResDNN.load_model_weights\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">load_model_weights</span></code></a>(weights_path)</p></td>\n<td><p>Load the custom pre-training weights to use for the fitting.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.predict\" title=\"dipy.nn.histo_resdnn.HistoResDNN.predict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">predict</span></code></a>(data,\u00a0gtab[,\u00a0mask,\u00a0chunk_size])</p></td>\n<td><p>Wrapper function to faciliate prediction of larger dataset.</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HistoResDNN.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">basis_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tournier07'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The model was re-trained for usage with a different basis function\n(\u2018tournier07\u2019) like the proposed model in [1, 2].</p>\n<p>To obtain the pre-trained model, use::\n&gt;&gt;&gt; resdnn_model = HistoResDNN() # doctest: +SKIP\n&gt;&gt;&gt; fetch_model_weights_path = get_fnames(\u2018histo_resdnn_weights\u2019) # doctest: +SKIP\n&gt;&gt;&gt; resdnn_model.load_model_weights(fetch_model_weights_path) # doctest: +SKIP</p>\n<p>This model is designed to take as input raw DWI signal on a sphere\n(ODF) represented as SH of order 8 in the tournier basis and predict\nfODF of order 8 in the tournier basis. Effectively, this model is\nmimicking a CSD fit.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients for a\nsymmetric basis. Default: 8</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">{\u2018tournier07\u2019, \u2018descoteaux07\u2019}, optional</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> (default) or <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>.</p>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">bool (optional)</span></dt><dd><p>Whether to show information about the processing.\nDefault: False</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<aside class=\"footnote-list brackets\">\n<aside class=\"footnote brackets\" id=\"id1\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>1<span class=\"fn-bracket\">]</span></span>\n<p>Nath, V., Schilling, K. G., Parvathaneni, P., Hansen,\nC. B., Hainline, A. E., Huo, Y., \u2026 &amp; Stepniewska, I. (2019).\nDeep learning reveals untapped information for local white-matter\nfiber reconstruction in diffusion-weighted MRI.\nMagnetic resonance imaging, 62, 220-227.</p>\n</aside>\n<aside class=\"footnote brackets\" id=\"id2\" role=\"note\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Nath, V., Schilling, K. G., Hansen, C. B., Parvathaneni,\nP., Hainline, A. E., Bermudez, C., \u2026 &amp; St\u0119pniewska, I. (2019).\nDeep learning captures more accurate diffusion fiber orientations\ndistributions than constrained spherical deconvolution.\narXiv preprint arXiv:1911.07927.</p>\n</aside>\n</aside>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights\">\n<span class=\"sig-name descname\"><span class=\"pre\">fetch_default_weights</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the model pre-training weights to use for the fitting.\nWill not work if the declared SH_ORDER does not match the weights\nexpected input.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HistoResDNN.load_model_weights\">\n<span class=\"sig-name descname\"><span class=\"pre\">load_model_weights</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">weights_path</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.load_model_weights\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the custom pre-training weights to use for the fitting.\nWill not work if the declared SH_ORDER does not match the weights\nexpected input.</p>\n<dl class=\"simple\">\n<dt>The weights for a sh_order of 8 can be obtained via the function:</dt><dd><p>get_fnames(\u2018histo_resdnn_weights\u2019).</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>weights_path</strong><span class=\"classifier\">str</span></dt><dd><p>Path to the file containing the weights (hdf5, saved by tensorflow)</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.HistoResDNN.predict\">\n<span class=\"sig-name descname\"><span class=\"pre\">predict</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gtab</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mask</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">chunk_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1000</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wrapper function to faciliate prediction of larger dataset.\nThe function will mask, normalize, split, predict and \u2018re-assemble\u2019\nthe data as a volume.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>data</strong><span class=\"classifier\">np.ndarray</span></dt><dd><p>DWI signal in a 4D array</p>\n</dd>\n<dt><strong>gtab</strong><span class=\"classifier\">GradientTable class instance</span></dt><dd><p>The acquisition scheme matching the data (must contain at least\none b0)</p>\n</dd>\n<dt><strong>mask</strong><span class=\"classifier\">np.ndarray (optional)</span></dt><dd><p>Binary mask of the brain to avoid unnecessary computation and\nunreliable prediction outside the brain.\nDefault: Compute prediction only for nonzero voxels (with at least\none nonzero DWI value).</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>pred_sh_coef</strong><span class=\"classifier\">np.ndarray (x, y, z, M)</span></dt><dd><p>Predicted fODF (as SH). The volume has matching shape to the input\ndata, but with <code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> as a last\ndimension.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"version\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version\" title=\"dipy.nn.histo_resdnn.Version\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><a class=\"headerlink\" href=\"#version\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Version</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">_BaseVersion</span></code></p>\n<p>This class abstracts handling of a project\u2019s versions.</p>\n<p>A <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version\" title=\"dipy.nn.histo_resdnn.Version\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a> instance is comparison aware and can be compared and\nsorted using the standard Python interfaces.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.0a5&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span>\n<span class=\"go\">&lt;Version(&#39;1.0a5&#39;)&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v2</span>\n<span class=\"go\">&lt;Version(&#39;1.0&#39;)&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&lt;</span> <span class=\"n\">v2</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">==</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&gt;</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&lt;=</span> <span class=\"n\">v2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.base_version\" title=\"dipy.nn.histo_resdnn.Version.base_version\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">base_version</span></code></a></dt><dd><p>The \u201cbase version\u201d of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.dev\" title=\"dipy.nn.histo_resdnn.Version.dev\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dev</span></code></a></dt><dd><p>The development number of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.epoch\" title=\"dipy.nn.histo_resdnn.Version.epoch\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">epoch</span></code></a></dt><dd><p>The epoch of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_devrelease\" title=\"dipy.nn.histo_resdnn.Version.is_devrelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_devrelease</span></code></a></dt><dd><p>Whether this version is a development release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_postrelease\" title=\"dipy.nn.histo_resdnn.Version.is_postrelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_postrelease</span></code></a></dt><dd><p>Whether this version is a post-release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_prerelease\" title=\"dipy.nn.histo_resdnn.Version.is_prerelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_prerelease</span></code></a></dt><dd><p>Whether this version is a pre-release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.local\" title=\"dipy.nn.histo_resdnn.Version.local\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">local</span></code></a></dt><dd><p>The local version segment of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.major\" title=\"dipy.nn.histo_resdnn.Version.major\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">major</span></code></a></dt><dd><p>The first item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.micro\" title=\"dipy.nn.histo_resdnn.Version.micro\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">micro</span></code></a></dt><dd><p>The third item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.minor\" title=\"dipy.nn.histo_resdnn.Version.minor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">minor</span></code></a></dt><dd><p>The second item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.post\" title=\"dipy.nn.histo_resdnn.Version.post\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">post</span></code></a></dt><dd><p>The post-release number of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.pre\" title=\"dipy.nn.histo_resdnn.Version.pre\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">pre</span></code></a></dt><dd><p>The pre-release segment of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.public\" title=\"dipy.nn.histo_resdnn.Version.public\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">public</span></code></a></dt><dd><p>The public portion of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">release</span></code></a></dt><dd><p>The components of the \u201crelease\u201d segment of the version.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></span></span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a Version object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>version</strong> \u2013 The string representation of a version which will be parsed and normalized\nbefore use.</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>InvalidVersion</strong> \u2013 If the <code class=\"docutils literal notranslate\"><span class=\"pre\">version</span></code> does not conform to PEP 440 in any way then this\nexception will be raised.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.base_version\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">base_version</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.base_version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The \u201cbase version\u201d of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!1.2.3+abc.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1!1.2.3&#39;</span>\n</pre></div>\n</div>\n<p>The \u201cbase version\u201d is the public version of the project without any pre or post\nrelease markers.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.dev\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">dev</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.dev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The development number of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dev</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dev</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.epoch\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">epoch</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.epoch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The epoch of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">epoch</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">epoch</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.is_devrelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_devrelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.is_devrelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a development release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_devrelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_devrelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.is_postrelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_postrelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.is_postrelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a post-release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_postrelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.post1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_postrelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.is_prerelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_prerelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.is_prerelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a pre-release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3a1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3b1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3rc1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.local\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">local</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.local\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The local version segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">local</span>\n<span class=\"go\">&#39;abc&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.major\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">major</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.major\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The first item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">major</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.micro\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">micro</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.micro\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The third item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">micro</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">micro</span>\n<span class=\"go\">0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.minor\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">minor</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.minor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The second item of <a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"dipy.nn.histo_resdnn.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">minor</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">minor</span>\n<span class=\"go\">0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.post\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">post</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.post\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The post-release number of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.post1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">post</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.pre\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">pre</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.11)\"><span class=\"pre\">Tuple</span></a><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.pre\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pre-release segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3a1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;a&#39;, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3b1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;b&#39;, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3rc1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;rc&#39;, 1)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.public\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">public</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.public\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The public portion of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.Version.release\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">release</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.11)\"><span class=\"pre\">Tuple</span></a><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">]</span></span></em><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.Version.release\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The components of the \u201crelease\u201d segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(1, 2, 3)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!2.0.0.post0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(2, 0, 0)</span>\n</pre></div>\n</div>\n<p>Includes trailing zeroes but not the epoch or any pre-release / development /\npost-release suffixes.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"doctest-skip-parser\">\n<h3>doctest_skip_parser<a class=\"headerlink\" href=\"#doctest-skip-parser\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.doctest_skip_parser\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">doctest_skip_parser</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.doctest_skip_parser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator replaces custom skip test markup in doctests.</p>\n<p>Say a function has a docstring:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"c1\"># skip if not HAVE_AMODULE</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"o\">+</span> <span class=\"k\">else</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"c1\"># skip if HAVE_BMODULE</span>\n</pre></div>\n</div>\n<p>This decorator will evaluate the expresssion after <code class=\"docutils literal notranslate\"><span class=\"pre\">skip</span> <span class=\"pre\">if</span></code>.  If this\nevaluates to True, then the comment is replaced by <code class=\"docutils literal notranslate\"><span class=\"pre\">#</span> <span class=\"pre\">doctest:</span> <span class=\"pre\">+SKIP</span></code>.\nIf False, then the comment is just removed. The expression is evaluated in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">globals</span></code> scope of <cite>func</cite>.</p>\n<p>For example, if the module global <code class=\"docutils literal notranslate\"><span class=\"pre\">HAVE_AMODULE</span></code> is False, and module\nglobal <code class=\"docutils literal notranslate\"><span class=\"pre\">HAVE_BMODULE</span></code> is False, the returned function will have\ndocstring:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> \n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span> <span class=\"o\">+</span> <span class=\"k\">else</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">something</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"get-bval-indices\">\n<h3>get_bval_indices<a class=\"headerlink\" href=\"#get-bval-indices\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.get_bval_indices\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_bval_indices</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bval</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">20</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.get_bval_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get indices where the b-value is <cite>bval</cite></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>bvals: ndarray</strong></dt><dd><p>Array containing the b-values</p>\n</dd>\n<dt><strong>bval: float or int</strong></dt><dd><p>b-value to extract indices</p>\n</dd>\n<dt><strong>tol: int</strong></dt><dd><p>The tolerated gap between the b-values to extract\nand the actual b-values.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt>Array of indices where the b-value is <cite>bval</cite></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"get-fnames\">\n<h3>get_fnames<a class=\"headerlink\" href=\"#get-fnames\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.get_fnames\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_fnames</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'small_64D'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.get_fnames\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provide full paths to example or test datasets.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>the filename/s of which dataset to return, one of:</p>\n<ul class=\"simple\">\n<li><p>\u2018small_64D\u2019 small region of interest nifti,bvecs,bvals 64 directions</p></li>\n<li><p>\u2018small_101D\u2019 small region of interest nifti, bvecs, bvals\n101 directions</p></li>\n<li><p>\u2018aniso_vox\u2019 volume with anisotropic voxel size as Nifti</p></li>\n<li><p>\u2018fornix\u2019 300 tracks in Trackvis format (from Pittsburgh\nBrain Competition)</p></li>\n<li><p>\u2018gqi_vectors\u2019 the scanner wave vectors needed for a GQI acquisitions\nof 101 directions tested on Siemens 3T Trio</p></li>\n<li><p>\u2018small_25\u2019 small ROI (10x8x2) DTI data (b value 2000, 25 directions)</p></li>\n<li><p>\u2018test_piesno\u2019 slice of N=8, K=14 diffusion data</p></li>\n<li><p>\u2018reg_c\u2019 small 2D image used for validating registration</p></li>\n<li><p>\u2018reg_o\u2019 small 2D image used for validation registration</p></li>\n<li><p>\u2018cb_2\u2019 two vectorized cingulum bundles</p></li>\n</ul>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>fnames</strong><span class=\"classifier\">tuple</span></dt><dd><p>filenames for dataset</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"kn\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fimg</span><span class=\"p\">,</span> <span class=\"n\">fbvals</span><span class=\"p\">,</span> <span class=\"n\">fbvecs</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;small_101D&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">fbvals</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">fbvecs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fimg</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">102</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">102</span><span class=\"p\">,)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">102</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"get-sphere\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#get-sphere\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.get_sphere\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">get_sphere</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'symmetric362'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>which sphere - one of:\n* \u2018symmetric362\u2019\n* \u2018symmetric642\u2019\n* \u2018symmetric724\u2019\n* \u2018repulsion724\u2019\n* \u2018repulsion100\u2019\n* \u2018repulsion200\u2019</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>sphere</strong><span class=\"classifier\">a dipy.core.sphere.Sphere class instance</span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"optional-package\">\n<h3>optional_package<a class=\"headerlink\" href=\"#optional-package\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.optional_package\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">optional_package</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trip_msg</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"kn\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"set-logger-level\">\n<h3>set_logger_level<a class=\"headerlink\" href=\"#set-logger-level\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.set_logger_level\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">set_logger_level</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_level</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.set_logger_level\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Change the logger of the HistoResDNN to one on the following:\nDEBUG, INFO, WARNING, CRITICAL, ERROR</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>log_level</strong><span class=\"classifier\">str</span></dt><dd><p>Log level for the HistoResDNN only</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"sf-to-sh\">\n<h3>sf_to_sh<a class=\"headerlink\" href=\"#sf-to-sh\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.sf_to_sh\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sf_to_sh</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">basis_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">full_basis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">legacy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">smooth</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.sf_to_sh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical function to spherical harmonics (SH).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sf</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Values of a function on the given <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The points on which the sf is defined.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients for a symmetric\nbasis and <code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> coefficients for a full\nSH basis.</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}, optional</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 [R35636a4a5d66-2]_[R35636a4a5d66-3]_ basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#r35636a4a5d66-1\" id=\"id3\">[1]</a> basis,\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>True for using a SH basis containing even and odd order SH functions.\nFalse for using a SH basis consisting only of even order SH functions.</p>\n</dd>\n<dt><strong>legacy: bool, optional</strong></dt><dd><p>True to use a legacy basis definition for backward compatibility\nwith previous <code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> implementations.</p>\n</dd>\n<dt><strong>smooth</strong><span class=\"classifier\">float, optional</span></dt><dd><p>Lambda-regularization in the SH fit.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>sh</strong><span class=\"classifier\">ndarray</span></dt><dd><p>SH coefficients representing the input function.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"r35636a4a5d66-1\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id3\">1</a><span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</div>\n<div class=\"citation\" id=\"r35636a4a5d66-2\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</div>\n<div class=\"citation\" id=\"r35636a4a5d66-3\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>3<span class=\"fn-bracket\">]</span></span>\n<p>Tournier J-D, Smith R, Raffelt D, Tabbara R, Dhollander T,\nPietsch M, et al. MRtrix3: A fast, flexible and open software\nframework for medical image processing and visualisation.\nNeuroImage. 2019 Nov 15;202:116-137.</p>\n</div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"sh-to-sf\">\n<h3>sh_to_sf<a class=\"headerlink\" href=\"#sh-to-sf\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.sh_to_sf\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sh_to_sf</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sphere</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">basis_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">full_basis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">legacy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.sh_to_sf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical harmonics (SH) to spherical function (SF).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sh</strong><span class=\"classifier\">ndarray</span></dt><dd><p>SH coefficients representing a spherical function.</p>\n</dd>\n<dt><strong>sphere</strong><span class=\"classifier\">Sphere</span></dt><dd><p>The points on which to sample the spherical function.</p>\n</dd>\n<dt><strong>sh_order</strong><span class=\"classifier\">int, optional</span></dt><dd><p>Maximum SH order in the SH fit.  For <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>, there will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients for a symmetric\nbasis and <code class=\"docutils literal notranslate\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> coefficients for a full\nSH basis.</p>\n</dd>\n<dt><strong>basis_type</strong><span class=\"classifier\">{None, \u2018tournier07\u2019, \u2018descoteaux07\u2019}, optional</span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for the default DIPY basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> for the Tournier 2007 [R30944dc1667c-2]_[R30944dc1667c-3]_ basis,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> for the Descoteaux 2007 <a class=\"reference internal\" href=\"#r30944dc1667c-1\" id=\"id7\">[1]</a> basis,\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code>).</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>True to use a SH basis containing even and odd order SH functions.\nElse, use a SH basis consisting only of even order SH functions.</p>\n</dd>\n<dt><strong>legacy: bool, optional</strong></dt><dd><p>True to use a legacy basis definition for backward compatibility\nwith previous <code class=\"docutils literal notranslate\"><span class=\"pre\">tournier07</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">descoteaux07</span></code> implementations.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>sf</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Spherical function values on the <code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<div role=\"list\" class=\"citation-list\">\n<div class=\"citation\" id=\"r30944dc1667c-1\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span><a role=\"doc-backlink\" href=\"#id7\">1</a><span class=\"fn-bracket\">]</span></span>\n<p>Descoteaux, M., Angelino, E., Fitzgibbons, S. and Deriche, R.\nRegularized, Fast, and Robust Analytical Q-ball Imaging.\nMagn. Reson. Med. 2007;58:497-510.</p>\n</div>\n<div class=\"citation\" id=\"r30944dc1667c-2\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>2<span class=\"fn-bracket\">]</span></span>\n<p>Tournier J.D., Calamante F. and Connelly A. Robust determination\nof the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution.\nNeuroImage. 2007;35(4):1459-1472.</p>\n</div>\n<div class=\"citation\" id=\"r30944dc1667c-3\" role=\"doc-biblioentry\">\n<span class=\"label\"><span class=\"fn-bracket\">[</span>3<span class=\"fn-bracket\">]</span></span>\n<p>Tournier J-D, Smith R, Raffelt D, Tabbara R, Dhollander T,\nPietsch M, et al. MRtrix3: A fast, flexible and open software\nframework for medical image processing and visualisation.\nNeuroImage. 2019 Nov 15;202:116-137.</p>\n</div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"sph-harm-ind-list\">\n<h3>sph_harm_ind_list<a class=\"headerlink\" href=\"#sph-harm-ind-list\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.sph_harm_ind_list\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">sph_harm_ind_list</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sh_order</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">full_basis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.sph_harm_ind_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the degree (<code class=\"docutils literal notranslate\"><span class=\"pre\">m</span></code>) and order (<code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code>) of all the symmetric spherical\nharmonics of degree less then or equal to <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>. The results,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">m_list</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">n_list</span></code> are kx1 arrays, where k depends on <code class=\"docutils literal notranslate\"><span class=\"pre\">sh_order</span></code>.\nThey can be passed to <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">real_sh_descoteaux_from_index()</span></code> and\n:func:<code class=\"docutils literal notranslate\"><span class=\"pre\">real_sh_tournier_from_index</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>sh_order</strong><span class=\"classifier\">int</span></dt><dd><p>even int &gt; 0, max order to return</p>\n</dd>\n<dt><strong>full_basis: bool, optional</strong></dt><dd><p>True for SH basis with even and odd order terms</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>m_list</strong><span class=\"classifier\">array</span></dt><dd><p>degrees of even spherical harmonics</p>\n</dd>\n<dt><strong>n_list</strong><span class=\"classifier\">array</span></dt><dd><p>orders of even spherical harmonics</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">shm.real_sh_descoteaux_from_index</span></code>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">shm.real_sh_tournier_from_index</span></code></dt><dd></dd>\n</dl>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"unique-bvals-magnitude\">\n<h3>unique_bvals_magnitude<a class=\"headerlink\" href=\"#unique-bvals-magnitude\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.histo_resdnn.unique_bvals_magnitude\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.histo_resdnn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">unique_bvals_magnitude</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bvals</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bmag</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rbvals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.histo_resdnn.unique_bvals_magnitude\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function gives the unique rounded b-values of the data</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>bvals</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Array containing the b-values</p>\n</dd>\n<dt><strong>bmag</strong><span class=\"classifier\">int</span></dt><dd><p>The order of magnitude that the bvalues have to differ to be\nconsidered an unique b-value. B-values are also rounded up to\nthis order of magnitude. Default: derive this value from the\nmaximal b-value provided: <span class=\"math notranslate nohighlight\">\\(bmag=log_{10}(max(bvals)) - 1\\)</span>.</p>\n</dd>\n<dt><strong>rbvals</strong><span class=\"classifier\">bool, optional</span></dt><dd><p>If True function also returns all individual rounded b-values.\nDefault: False</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>ubvals</strong><span class=\"classifier\">ndarray</span></dt><dd><p>Array containing the rounded unique b-values</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"multiplelayerpercepton\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton\" title=\"dipy.nn.model.MultipleLayerPercepton\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton</span></code></a><a class=\"headerlink\" href=\"#multiplelayerpercepton\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.model.</span></span><span class=\"sig-name descname\"><span class=\"pre\">MultipleLayerPercepton</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_shape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(28,</span> <span class=\"pre\">28)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(128,)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'relu'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dropout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'softmax'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loss</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'sparse_categorical_crossentropy'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optimizer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'adam'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.evaluate\" title=\"dipy.nn.model.MultipleLayerPercepton.evaluate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">evaluate</span></code></a>(x_test,\u00a0y_test[,\u00a0verbose])</p></td>\n<td><p>Evaluate the model on test dataset.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.fit\" title=\"dipy.nn.model.MultipleLayerPercepton.fit\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fit</span></code></a>(x_train,\u00a0y_train[,\u00a0epochs])</p></td>\n<td><p>Train the model on train dataset.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.predict\" title=\"dipy.nn.model.MultipleLayerPercepton.predict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">predict</span></code></a>(x_test)</p></td>\n<td><p>Predict the output from input samples.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.summary\" title=\"dipy.nn.model.MultipleLayerPercepton.summary\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">summary</span></code></a>()</p></td>\n<td><p>Get the summary of the model.</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_shape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(28,</span> <span class=\"pre\">28)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(128,)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'relu'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dropout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'softmax'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loss</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'sparse_categorical_crossentropy'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optimizer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'adam'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Multiple Layer Perceptron with Dropout.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>input_shape</strong><span class=\"classifier\">tuple</span></dt><dd><p>Shape of data to be trained</p>\n</dd>\n<dt><strong>num_hidden</strong><span class=\"classifier\">array-like</span></dt><dd><p>List of number of nodes in hidden layers</p>\n</dd>\n<dt><strong>act_hidden</strong><span class=\"classifier\">string</span></dt><dd><p>Activation function used in hidden layer</p>\n</dd>\n<dt><strong>dropout</strong><span class=\"classifier\">float</span></dt><dd><p>Dropout ratio</p>\n</dd>\n<dt><strong>num_out</strong><span class=\"classifier\">10</span></dt><dd><p>Number of nodes in output layer</p>\n</dd>\n<dt><strong>act_out</strong><span class=\"classifier\">string</span></dt><dd><p>Activation function used in output layer</p>\n</dd>\n<dt><strong>optimizer</strong><span class=\"classifier\">string</span></dt><dd><p>Select optimizer. Default adam.</p>\n</dd>\n<dt><strong>loss</strong><span class=\"classifier\">string</span></dt><dd><p>Select loss function for measuring accuracy.\nDefault sparse_categorical_crossentropy.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton.evaluate\">\n<span class=\"sig-name descname\"><span class=\"pre\">evaluate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_test</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y_test</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton.evaluate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evaluate the model on test dataset.</p>\n<p>The evaluate method will evaluate the model on a test\ndataset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_test</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_test is the test dataset</p>\n</dd>\n<dt><strong>y_test</strong><span class=\"classifier\">ndarray shape=(BatchSize,)</span></dt><dd><p>the y_test is the labels of the test dataset</p>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">int (Default = 2)</span></dt><dd><p>By setting verbose 0, 1 or 2 you just say how do you want to\n\u2018see\u2019 the training progress for each epoch.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>evaluate</strong><span class=\"classifier\">List</span></dt><dd><p>return list of loss value and accuracy value on test dataset</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton.fit\">\n<span class=\"sig-name descname\"><span class=\"pre\">fit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_train</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y_train</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">epochs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Train the model on train dataset.</p>\n<p>The fit method will train the model for a fixed\nnumber of epochs (iterations) on a dataset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_train</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_train is the train dataset</p>\n</dd>\n<dt><strong>y_train</strong><span class=\"classifier\">ndarray shape=(BatchSize,)</span></dt><dd><p>the y_train is the labels of the train dataset</p>\n</dd>\n<dt><strong>epochs</strong><span class=\"classifier\">int (Default = 5)</span></dt><dd><p>the number of epochs</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>hist</strong><span class=\"classifier\">object</span></dt><dd><p>A History object. Its History.history attribute is a record of\ntraining loss values and metrics values at successive epochs</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton.predict\">\n<span class=\"sig-name descname\"><span class=\"pre\">predict</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_test</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the output from input samples.</p>\n<p>The predict method will generates output predictions\nfor the input samples.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_train</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_test is the test dataset or input samples</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>predict</strong><span class=\"classifier\">ndarray shape(TestSize,OutputSize)</span></dt><dd><p>Numpy array(s) of predictions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.MultipleLayerPercepton.summary\">\n<span class=\"sig-name descname\"><span class=\"pre\">summary</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.MultipleLayerPercepton.summary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the summary of the model.</p>\n<p>The summary is textual and includes information about:\nThe layers and their order in the model.\nThe output shape of each layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>summary</strong><span class=\"classifier\">NoneType</span></dt><dd><p>the summary of the model</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"singlelayerperceptron\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron\" title=\"dipy.nn.model.SingleLayerPerceptron\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron</span></code></a><a class=\"headerlink\" href=\"#singlelayerperceptron\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.model.</span></span><span class=\"sig-name descname\"><span class=\"pre\">SingleLayerPerceptron</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_shape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(28,</span> <span class=\"pre\">28)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">128</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'relu'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dropout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'softmax'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optimizer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'adam'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loss</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'sparse_categorical_crossentropy'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.evaluate\" title=\"dipy.nn.model.SingleLayerPerceptron.evaluate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">evaluate</span></code></a>(x_test,\u00a0y_test[,\u00a0verbose])</p></td>\n<td><p>Evaluate the model on test dataset.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.fit\" title=\"dipy.nn.model.SingleLayerPerceptron.fit\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fit</span></code></a>(x_train,\u00a0y_train[,\u00a0epochs])</p></td>\n<td><p>Train the model on train dataset.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.predict\" title=\"dipy.nn.model.SingleLayerPerceptron.predict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">predict</span></code></a>(x_test)</p></td>\n<td><p>Predict the output from input samples.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.summary\" title=\"dipy.nn.model.SingleLayerPerceptron.summary\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">summary</span></code></a>()</p></td>\n<td><p>Get the summary of the model.</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_shape</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">(28,</span> <span class=\"pre\">28)</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">128</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_hidden</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'relu'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dropout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">act_out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'softmax'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">optimizer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'adam'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loss</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'sparse_categorical_crossentropy'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Single Layer Perceptron with Dropout.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>input_shape</strong><span class=\"classifier\">tuple</span></dt><dd><p>Shape of data to be trained</p>\n</dd>\n<dt><strong>num_hidden</strong><span class=\"classifier\">int</span></dt><dd><p>Number of nodes in hidden layer</p>\n</dd>\n<dt><strong>act_hidden</strong><span class=\"classifier\">string</span></dt><dd><p>Activation function used in hidden layer</p>\n</dd>\n<dt><strong>dropout</strong><span class=\"classifier\">float</span></dt><dd><p>Dropout ratio</p>\n</dd>\n<dt><strong>num_out</strong><span class=\"classifier\">10</span></dt><dd><p>Number of nodes in output layer</p>\n</dd>\n<dt><strong>act_out</strong><span class=\"classifier\">string</span></dt><dd><p>Activation function used in output layer</p>\n</dd>\n<dt><strong>optimizer</strong><span class=\"classifier\">string</span></dt><dd><p>Select optimizer. Default adam.</p>\n</dd>\n<dt><strong>loss</strong><span class=\"classifier\">string</span></dt><dd><p>Select loss function for measuring accuracy.\nDefault sparse_categorical_crossentropy.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron.evaluate\">\n<span class=\"sig-name descname\"><span class=\"pre\">evaluate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_test</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y_test</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron.evaluate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evaluate the model on test dataset.</p>\n<p>The evaluate method will evaluate the model on a test\ndataset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_test</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_test is the test dataset</p>\n</dd>\n<dt><strong>y_test</strong><span class=\"classifier\">ndarray shape=(BatchSize,)</span></dt><dd><p>the y_test is the labels of the test dataset</p>\n</dd>\n<dt><strong>verbose</strong><span class=\"classifier\">int (Default = 2)</span></dt><dd><p>By setting verbose 0, 1 or 2 you just say how do you want to\n\u2018see\u2019 the training progress for each epoch.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>evaluate</strong><span class=\"classifier\">List</span></dt><dd><p>return list of loss value and accuracy value on test dataset</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron.fit\">\n<span class=\"sig-name descname\"><span class=\"pre\">fit</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_train</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">y_train</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">epochs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">5</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Train the model on train dataset.</p>\n<p>The fit method will train the model for a fixed\nnumber of epochs (iterations) on a dataset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_train</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_train is the train dataset</p>\n</dd>\n<dt><strong>y_train</strong><span class=\"classifier\">ndarray shape=(BatchSize,)</span></dt><dd><p>the y_train is the labels of the train dataset</p>\n</dd>\n<dt><strong>epochs</strong><span class=\"classifier\">int (Default = 5)</span></dt><dd><p>the number of epochs</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>hist</strong><span class=\"classifier\">object</span></dt><dd><p>A History object. Its History.history attribute is a record of\ntraining loss values and metrics values at successive epochs</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron.predict\">\n<span class=\"sig-name descname\"><span class=\"pre\">predict</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_test</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the output from input samples.</p>\n<p>The predict method will generates output predictions\nfor the input samples.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>x_train</strong><span class=\"classifier\">ndarray</span></dt><dd><p>the x_test is the test dataset or input samples</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><strong>predict</strong><span class=\"classifier\">ndarray shape(TestSize,OutputSize)</span></dt><dd><p>Numpy array(s) of predictions.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.SingleLayerPerceptron.summary\">\n<span class=\"sig-name descname\"><span class=\"pre\">summary</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.SingleLayerPerceptron.summary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the summary of the model.</p>\n<p>The summary is textual and includes information about:\nThe layers and their order in the model.\nThe output shape of each layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>summary</strong><span class=\"classifier\">NoneType</span></dt><dd><p>the summary of the model</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"id11\">\n<h3><a class=\"reference internal\" href=\"#dipy.nn.model.Version\" title=\"dipy.nn.model.Version\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.model.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Version</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.Version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">_BaseVersion</span></code></p>\n<p>This class abstracts handling of a project\u2019s versions.</p>\n<p>A <a class=\"reference internal\" href=\"#dipy.nn.model.Version\" title=\"dipy.nn.model.Version\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a> instance is comparison aware and can be compared and\nsorted using the standard Python interfaces.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.0a5&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span>\n<span class=\"go\">&lt;Version(&#39;1.0a5&#39;)&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v2</span>\n<span class=\"go\">&lt;Version(&#39;1.0&#39;)&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&lt;</span> <span class=\"n\">v2</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">==</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&gt;</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&gt;=</span> <span class=\"n\">v2</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v1</span> <span class=\"o\">&lt;=</span> <span class=\"n\">v2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Attributes<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.base_version\" title=\"dipy.nn.model.Version.base_version\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">base_version</span></code></a></dt><dd><p>The \u201cbase version\u201d of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.dev\" title=\"dipy.nn.model.Version.dev\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">dev</span></code></a></dt><dd><p>The development number of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.epoch\" title=\"dipy.nn.model.Version.epoch\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">epoch</span></code></a></dt><dd><p>The epoch of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_devrelease\" title=\"dipy.nn.model.Version.is_devrelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_devrelease</span></code></a></dt><dd><p>Whether this version is a development release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_postrelease\" title=\"dipy.nn.model.Version.is_postrelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_postrelease</span></code></a></dt><dd><p>Whether this version is a post-release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_prerelease\" title=\"dipy.nn.model.Version.is_prerelease\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_prerelease</span></code></a></dt><dd><p>Whether this version is a pre-release.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.local\" title=\"dipy.nn.model.Version.local\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">local</span></code></a></dt><dd><p>The local version segment of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.major\" title=\"dipy.nn.model.Version.major\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">major</span></code></a></dt><dd><p>The first item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.micro\" title=\"dipy.nn.model.Version.micro\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">micro</span></code></a></dt><dd><p>The third item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.minor\" title=\"dipy.nn.model.Version.minor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">minor</span></code></a></dt><dd><p>The second item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.post\" title=\"dipy.nn.model.Version.post\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">post</span></code></a></dt><dd><p>The post-release number of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.pre\" title=\"dipy.nn.model.Version.pre\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">pre</span></code></a></dt><dd><p>The pre-release segment of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.public\" title=\"dipy.nn.model.Version.public\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">public</span></code></a></dt><dd><p>The public portion of the version.</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">release</span></code></a></dt><dd><p>The components of the \u201crelease\u201d segment of the version.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></span></span><a class=\"headerlink\" href=\"#dipy.nn.model.Version.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a Version object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>version</strong> \u2013 The string representation of a version which will be parsed and normalized\nbefore use.</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>InvalidVersion</strong> \u2013 If the <code class=\"docutils literal notranslate\"><span class=\"pre\">version</span></code> does not conform to PEP 440 in any way then this\nexception will be raised.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.base_version\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">base_version</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.base_version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The \u201cbase version\u201d of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!1.2.3+abc.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">base_version</span>\n<span class=\"go\">&#39;1!1.2.3&#39;</span>\n</pre></div>\n</div>\n<p>The \u201cbase version\u201d is the public version of the project without any pre or post\nrelease markers.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.dev\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">dev</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.dev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The development number of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dev</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dev</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.epoch\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">epoch</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.epoch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The epoch of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">epoch</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">epoch</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.is_devrelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_devrelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.is_devrelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a development release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_devrelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_devrelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.is_postrelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_postrelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.is_postrelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a post-release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_postrelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.post1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_postrelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.is_prerelease\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">is_prerelease</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><span class=\"pre\">bool</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.is_prerelease\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether this version is a pre-release.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3a1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3b1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3rc1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_prerelease</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.local\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">local</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.local\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The local version segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">local</span>\n<span class=\"go\">&#39;abc&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.major\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">major</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.major\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The first item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">major</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.micro\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">micro</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.micro\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The third item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">micro</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">micro</span>\n<span class=\"go\">0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.minor\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">minor</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.minor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The second item of <a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\" title=\"dipy.nn.model.Version.release\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">release</span></code></a> or <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if unavailable.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">minor</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">minor</span>\n<span class=\"go\">0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.post\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">post</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.post\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The post-release number of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3.post1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">post</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.pre\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">pre</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.11)\"><span class=\"pre\">Tuple</span></a><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.11)\"><span class=\"pre\">None</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.pre\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pre-release segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span><span class=\"p\">)</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3a1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;a&#39;, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3b1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;b&#39;, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3rc1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"go\">(&#39;rc&#39;, 1)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.public\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">public</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><span class=\"pre\">str</span></a></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.public\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The public portion of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3+abc.dev1&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"go\">&#39;1.2.3&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.Version.release\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">release</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.11)\"><span class=\"pre\">Tuple</span></a><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><span class=\"pre\">int</span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">]</span></span></em><a class=\"headerlink\" href=\"#dipy.nn.model.Version.release\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The components of the \u201crelease\u201d segment of the version.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1.2.3&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(1, 2, 3)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Version</span><span class=\"p\">(</span><span class=\"s2\">&quot;1!2.0.0.post0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">release</span>\n<span class=\"go\">(2, 0, 0)</span>\n</pre></div>\n</div>\n<p>Includes trailing zeroes but not the epoch or any pre-release / development /\npost-release suffixes.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"id12\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id12\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"dipy.nn.model.optional_package\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">dipy.nn.model.</span></span><span class=\"sig-name descname\"><span class=\"pre\">optional_package</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">trip_msg</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.nn.model.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl class=\"simple\">\n<dt><strong>name</strong><span class=\"classifier\">str</span></dt><dd><p>package name</p>\n</dd>\n<dt><strong>trip_msg</strong><span class=\"classifier\">None or str</span></dt><dd><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl>\n<dt><strong>pkg_like</strong><span class=\"classifier\">module or <code class=\"docutils literal notranslate\"><span class=\"pre\">TripWire</span></code> instance</span></dt><dd><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</dd>\n<dt><strong>have_pkg</strong><span class=\"classifier\">bool</span></dt><dd><p>True if import for package was successful, false otherwise</p>\n</dd>\n<dt><strong>module_setup</strong><span class=\"classifier\">function</span></dt><dd><p>callable usually set as <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Typical use would be something like this at the top of a module using an\noptional package:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.utils.optpkg</span> <span class=\"kn\">import</span> <span class=\"n\">optional_package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">have_pkg</span><span class=\"p\">,</span> <span class=\"n\">setup_module</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;not_a_package&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Of course in this case the package doesn\u2019t exist, and so, in the module:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">have_pkg</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">some_function</span><span class=\"p\">()</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">TripWireError</span>: <span class=\"n\">We need package not_a_package for these functions, but</span>\n<span class=\"go\">``import not_a_package`` raised an ImportError</span>\n</pre></div>\n</div>\n<p>If the module does exist - we get the module</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Or a submodule if that\u2019s what we asked for</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">optional_package</span><span class=\"p\">(</span><span class=\"s1\">&#39;os.path&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">subpkg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dirname&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/dipy.reconst", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "N", "next"], ["reference/dipy.io", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "P", "previous"]], "sourcename": "reference/dipy.nn.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.nn.histo_resdnn\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn.histo_resdnn</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.nn.model\">Module: <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn.model</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#bench\">bench</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.bench\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bench()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#test\">test</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.test\"><code class=\"docutils literal notranslate\"><span class=\"pre\">test()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#hemisphere\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.faces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.faces()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.find_closest\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.find_closest()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.from_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.from_sphere()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.mirror\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.mirror()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HemiSphere.subdivide\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HemiSphere.subdivide()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#historesdnn\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HistoResDNN</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HistoResDNN</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HistoResDNN.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HistoResDNN.fetch_default_weights()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.load_model_weights\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HistoResDNN.load_model_weights()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.HistoResDNN.predict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">HistoResDNN.predict()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#version\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.base_version\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.base_version</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.dev\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.dev</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.epoch\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.epoch</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_devrelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_devrelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_postrelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_postrelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.is_prerelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_prerelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.local\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.local</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.major\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.major</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.micro\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.micro</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.minor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.minor</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.post\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.post</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.pre\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.pre</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.public\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.public</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.Version.release\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.release</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#doctest-skip-parser\">doctest_skip_parser</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.doctest_skip_parser\"><code class=\"docutils literal notranslate\"><span class=\"pre\">doctest_skip_parser()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-bval-indices\">get_bval_indices</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_bval_indices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_bval_indices()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-fnames\">get_fnames</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_fnames\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_fnames()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#get-sphere\">get_sphere</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.get_sphere\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_sphere()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#optional-package\">optional_package</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.optional_package\"><code class=\"docutils literal notranslate\"><span class=\"pre\">optional_package()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#set-logger-level\">set_logger_level</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.set_logger_level\"><code class=\"docutils literal notranslate\"><span class=\"pre\">set_logger_level()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sf-to-sh\">sf_to_sh</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sf_to_sh\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sf_to_sh()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sh-to-sf\">sh_to_sf</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sh_to_sf\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sh_to_sf()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sph-harm-ind-list\">sph_harm_ind_list</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.sph_harm_ind_list\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sph_harm_ind_list()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#unique-bvals-magnitude\">unique_bvals_magnitude</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.histo_resdnn.unique_bvals_magnitude\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unique_bvals_magnitude()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multiplelayerpercepton\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.evaluate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton.evaluate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.fit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton.fit()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.predict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton.predict()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.MultipleLayerPercepton.summary\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleLayerPercepton.summary()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#singlelayerperceptron\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.evaluate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron.evaluate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.fit\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron.fit()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.predict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron.predict()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.SingleLayerPerceptron.summary\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SingleLayerPerceptron.summary()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id11\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.base_version\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.base_version</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.dev\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.dev</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.epoch\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.epoch</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_devrelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_devrelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_postrelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_postrelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.is_prerelease\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.is_prerelease</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.local\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.local</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.major\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.major</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.micro\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.micro</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.minor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.minor</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.post\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.post</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.pre\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.pre</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.public\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.public</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.Version.release\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Version.release</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id12\">optional_package</a><ul>\n<li><a class=\"reference internal\" href=\"#dipy.nn.model.optional_package\"><code class=\"docutils literal notranslate\"><span class=\"pre\">optional_package()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.nn", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}