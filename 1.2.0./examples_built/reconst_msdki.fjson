{"parents": [], "prev": null, "next": null, "title": "Mean signal diffusion kurtosis imaging (MSDKI)", "meta": {}, "body": "<div class=\"section\" id=\"mean-signal-diffusion-kurtosis-imaging-msdki\">\n<span id=\"example-reconst-msdki\"></span><h1>Mean signal diffusion kurtosis imaging (MSDKI)<a class=\"headerlink\" href=\"#mean-signal-diffusion-kurtosis-imaging-msdki\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Several microstructural models have been proposed to increase the specificity\nof diffusion-weighted data; however, improper model assumptions are known to\ncompromise the validity of the model\u2019s estimates <a class=\"reference internal\" href=\"#netohe2019\" id=\"id1\"><span>[NetoHe2019]</span></a>. To avoid\nmisleading interpretation, it might be enough to characterize\ndiffusion-weighted data using signal representation techniques. For example,\nassuming that the degree of non-Gaussian diffusion decreases with tissue\ndegeneration, this can be sensitive to general microstructural alterations.\nAlthough this cannot be used to distinguish different mechanisms of\nmicrostructural changes (e.g. axonal loss vs demyelination), the degree of\nnon-Gaussian diffusion can provide insights on the general condition of tissue\nmicrostructure and provide useful markers to understanding, for instance, the\nrelationship between brain microstructure changes and alterations in behaviour\n(e.g. <a class=\"reference internal\" href=\"#price2017\" id=\"id2\"><span>[Price2017]</span></a>).</p>\n<p>Diffusion Kurtosis Imaging is one of the conventional ways to estimate the\ndegree of non-Gaussian diffusion (see <a class=\"reference internal\" href=\"../reconst_dki/#example-reconst-dki\"><span class=\"std std-ref\">Reconstruction of the diffusion signal with the kurtosis tensor model</span></a>). However,\nas previously pointed <a class=\"reference internal\" href=\"#netohe2015\" id=\"id3\"><span>[NetoHe2015]</span></a>, standard kurtosis measures do not only\ndepend on microstructural properties but also on mesoscopic properties such as\nfiber dispersion or the intersection angle of crossing fibers.</p>\n<p>In the following example, we show how one can process the diffusion kurtosis\nfrom mean signals (also known as powder-averaged signals) and obtain a\ncharacterization of non-Gaussian diffusion independently to the degree of fiber\norganization <a class=\"reference internal\" href=\"#netohe2018\" id=\"id4\"><span>[NetoHe2018]</span></a>. In the first part of this example, the properties\nof the measures obtained from the mean signal diffusion kurtosis imaging\n<a class=\"reference internal\" href=\"#netohe2018\" id=\"id5\"><span>[NetoHe2018]</span></a> are illustrated using synthetic data. Secondly, the mean signal\ndiffusion kurtosis imaging will be applied to in-vivo MRI data.</p>\n<p>Let\u2019s import all relevant modules:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Reconstruction modules</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.dki</span> <span class=\"k\">as</span> <span class=\"nn\">dki</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.msdki</span> <span class=\"k\">as</span> <span class=\"nn\">msdki</span>\n\n<span class=\"c1\"># For simulations</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"k\">import</span> <span class=\"n\">multi_tensor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere</span> <span class=\"k\">import</span> <span class=\"n\">disperse_charges</span><span class=\"p\">,</span> <span class=\"n\">HemiSphere</span>\n\n<span class=\"c1\"># For in-vivo data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_fnames</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.gradients</span> <span class=\"k\">import</span> <span class=\"n\">read_bvals_bvecs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">load_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.mask</span> <span class=\"k\">import</span> <span class=\"n\">median_otsu</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"testing-msdki-in-synthetic-data\">\n<h2>Testing MSDKI in synthetic data<a class=\"headerlink\" href=\"#testing-msdki-in-synthetic-data\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We simulate representative diffusion-weighted signals using MultiTensor\nsimulations (for more information on this type of simulations see\n<a class=\"reference internal\" href=\"../simulate_multi_tensor/#example-simulate-multi-tensor\"><span class=\"std std-ref\">MultiTensor Simulation</span></a>). For this example, simulations are\nproduced based on the sum of four diffusion tensors to represent the intra-\nand extra-cellular spaces of two fiber populations. The parameters of these\ntensors are adjusted according to <a class=\"reference internal\" href=\"#netohe2015\" id=\"id6\"><span>[NetoHe2015]</span></a> (see also\n<a class=\"reference internal\" href=\"../simulate_dki/#example-simulate-dki\"><span class=\"std std-ref\">DKI MultiTensor Simulation</span></a>).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.00099</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">0.00226</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">0.00099</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">0.00226</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">,</span> <span class=\"mf\">0.00087</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>For the acquisition parameters of the synthetic data, we use 60 gradient\ndirections for two non-zero b-values (1000 and 2000 <span class=\"math notranslate nohighlight\">\\(s/mm^{2}\\)</span>) and two\nzero bvalues (note that, such as the standard DKI, MSDKI requires at least\nthree different b-values).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Sample the spherical coordinates of 60 random diffusion-weighted directions.</span>\n<span class=\"n\">n_pts</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n<span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">)</span>\n<span class=\"n\">phi</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Convert direction to cartesian coordinates.</span>\n<span class=\"n\">hsph_initial</span> <span class=\"o\">=</span> <span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Evenly distribute the 60 directions</span>\n<span class=\"n\">hsph_updated</span><span class=\"p\">,</span> <span class=\"n\">potential</span> <span class=\"o\">=</span> <span class=\"n\">disperse_charges</span><span class=\"p\">(</span><span class=\"n\">hsph_initial</span><span class=\"p\">,</span> <span class=\"mi\">5000</span><span class=\"p\">)</span>\n<span class=\"n\">directions</span> <span class=\"o\">=</span> <span class=\"n\">hsph_updated</span><span class=\"o\">.</span><span class=\"n\">vertices</span>\n\n<span class=\"c1\"># Reconstruct acquisition parameters for 2 non-zero=b-values and 2 b0s</span>\n<span class=\"n\">bvals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mi\">1000</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">),</span> <span class=\"mi\">2000</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">)))</span>\n<span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)),</span> <span class=\"n\">directions</span><span class=\"p\">,</span> <span class=\"n\">directions</span><span class=\"p\">))</span>\n\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Simulations are looped for different intra- and extra-cellular water\nvolume fractions and different intersection angles of the two-fiber\npopulations.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Array containing the intra-cellular volume fractions tested</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mf\">80.0</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Array containing the intersection angle</span>\n<span class=\"n\">ang</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">90.0</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">91</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Matrix where synthetic signals will be stored</span>\n<span class=\"n\">dwi</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">ang</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">bvals</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">f_i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">):</span>\n    <span class=\"c1\"># estimating volume fractions for individual tensors</span>\n    <span class=\"n\">fractions</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">100</span> <span class=\"o\">-</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"mi\">100</span> <span class=\"o\">-</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">]])</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">a_i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">):</span>\n        <span class=\"c1\"># defining the directions for individual tensors</span>\n        <span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">ang</span><span class=\"p\">[</span><span class=\"n\">a_i</span><span class=\"p\">],</span> <span class=\"mf\">0.0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">[</span><span class=\"n\">a_i</span><span class=\"p\">],</span> <span class=\"mf\">0.0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)]</span>\n\n        <span class=\"c1\"># producing signals using Dipy&#39;s function multi_tensor</span>\n        <span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">sticks</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">S0</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">angles</span><span class=\"p\">,</span>\n                                      <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">dwi</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">,</span> <span class=\"n\">a_i</span><span class=\"p\">,</span> <span class=\"p\">:]</span> <span class=\"o\">=</span> <span class=\"n\">signal</span>\n</pre></div>\n</div>\n<p>Now that all synthetic signals were produced, we can go forward with\nMSDKI fitting. As other Dipy\u2019s reconstruction techniques, the MSDKI model has\nto be first defined for the specific GradientTable object of the synthetic\ndata. For MSDKI, this is done by instantiating the MeanDiffusionKurtosisModel\nobject in the following way:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">msdki_model</span> <span class=\"o\">=</span> <span class=\"n\">msdki</span><span class=\"o\">.</span><span class=\"n\">MeanDiffusionKurtosisModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>MSDKI can then be fitted to the synthetic data by calling the <code class=\"docutils literal notranslate\"><span class=\"pre\">fit</span></code> function\nof this object:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">msdki_fit</span> <span class=\"o\">=</span> <span class=\"n\">msdki_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dwi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>From the above fit object we can extract the two main parameters of the MSDKI,\ni.e.: 1) the mean signal diffusion (MSD); and 2) the mean signal kurtosis (MSK)</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span> <span class=\"n\">MSD</span> <span class=\"o\">=</span> <span class=\"n\">msdki_fit</span><span class=\"o\">.</span><span class=\"n\">msd</span>\n <span class=\"n\">MSK</span> <span class=\"o\">=</span> <span class=\"n\">msdki_fit</span><span class=\"o\">.</span><span class=\"n\">msk</span>\n\n\n<span class=\"n\">For</span> <span class=\"n\">a</span> <span class=\"n\">reference</span><span class=\"p\">,</span> <span class=\"n\">we</span> <span class=\"n\">also</span> <span class=\"n\">calculate</span> <span class=\"n\">the</span> <span class=\"n\">mean</span> <span class=\"n\">diffusivity</span> <span class=\"p\">(</span><span class=\"n\">MD</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">mean</span>\n</pre></div>\n</div>\n<p>kurtosis (MK) from the standard DKI.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dki_model</span> <span class=\"o\">=</span> <span class=\"n\">dki</span><span class=\"o\">.</span><span class=\"n\">DiffusionKurtosisModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"n\">dki_fit</span> <span class=\"o\">=</span> <span class=\"n\">dki_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dwi</span><span class=\"p\">)</span>\n\n<span class=\"n\">MD</span> <span class=\"o\">=</span> <span class=\"n\">dki_fit</span><span class=\"o\">.</span><span class=\"n\">md</span>\n<span class=\"n\">MK</span> <span class=\"o\">=</span> <span class=\"n\">dki_fit</span><span class=\"o\">.</span><span class=\"n\">mk</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we plot the results as a function of the ground truth intersection\nangle and for different volume fractions of intra-cellular water.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fig1</span><span class=\"p\">,</span> <span class=\"n\">axs</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">nrows</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">ncols</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">f_i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">):</span>\n    <span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">,</span> <span class=\"n\">MSD</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                   <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;:math:`F: </span><span class=\"si\">%.2f</span><span class=\"s1\">`&#39;</span> <span class=\"o\">%</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">])</span>\n    <span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">,</span> <span class=\"n\">MSK</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                   <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;:math:`F: </span><span class=\"si\">%.2f</span><span class=\"s1\">`&#39;</span> <span class=\"o\">%</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">])</span>\n    <span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">,</span> <span class=\"n\">MD</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                   <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;:math:`F: </span><span class=\"si\">%.2f</span><span class=\"s1\">`&#39;</span> <span class=\"o\">%</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">])</span>\n    <span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">,</span> <span class=\"n\">MK</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">],</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                   <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;:math:`F: </span><span class=\"si\">%.2f</span><span class=\"s1\">`&#39;</span> <span class=\"o\">%</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">f_i</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Adjust properties of the first panel of the figure</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Intersection angle&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSD&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Intersection angle&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSK&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"s1\">&#39;center left&#39;</span><span class=\"p\">,</span> <span class=\"n\">bbox_to_anchor</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">))</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Intersection angle&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MD&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Intersection angle&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MK&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"s1\">&#39;center left&#39;</span><span class=\"p\">,</span> <span class=\"n\">bbox_to_anchor</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">))</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">fig1</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSDKI_simulations.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id10\">\n<img alt=\"../../_images/MSDKI_simulations.png\" src=\"../../_images/MSDKI_simulations.png\" />\n<p class=\"caption\"><span class=\"caption-text\">MSDKI and DKI measures for data of two crossing synthetic fibers.\nUpper panels show the MSDKI measures: 1) mean signal diffusivity (left\npanel); and 2) mean signal kurtosis (right panel).\nFor reference, lower panels show the measures obtained by standard DKI:\n1) mean diffusivity (left panel); and 2) mean kurtosis (right panel).\nAll estimates are plotted as a function of the intersecting angle of the\ntwo crossing fibers. Different curves correspond to different ground truth\naxonal volume fraction of intra-cellular space.</span><a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this image\">\u00b6</a></p>\n</div>\n<p>The results of the above figure, demonstrate that both MSD and MSK are\nsensitive to axonal volume fraction (i.e. a microstructure property) but are\nindependent to the intersectiong angle of the two crossing fibers (i.e.\nindependent to properties regarding fiber orientation). In contrast, DKI\nmeasures seem to be independent to both axonal volume fraction and\nintersection angle.</p>\n</div>\n<div class=\"section\" id=\"reconstructing-diffusion-data-using-msdki\">\n<h2>Reconstructing diffusion data using MSDKI<a class=\"headerlink\" href=\"#reconstructing-diffusion-data-using-msdki\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Now that the properties of MSDKI were illustrated, let\u2019s apply MSDKI to in-vivo\ndiffusion-weighted data. As the example for the standard DKI\n(see <a class=\"reference internal\" href=\"../reconst_dki/#example-reconst-dki\"><span class=\"std std-ref\">Reconstruction of the diffusion signal with the kurtosis tensor model</span></a>), we use fetch to download a multi-shell\ndataset which was kindly provided by Hansen and Jespersen (more details about\nthe data are provided in their paper <a class=\"reference internal\" href=\"../../interfaces/basic_flow/#hansen2016\" id=\"id7\"><span>[Hansen2016]</span></a>). The total size of the\ndownloaded data is 192 MBytes, however you only need to fetch it once.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fraw</span><span class=\"p\">,</span> <span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span><span class=\"p\">,</span> <span class=\"n\">t1_fname</span> <span class=\"o\">=</span> <span class=\"n\">get_fnames</span><span class=\"p\">(</span><span class=\"s1\">&#39;cfin_multib&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">load_nifti</span><span class=\"p\">(</span><span class=\"n\">fraw</span><span class=\"p\">)</span>\n<span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span> <span class=\"o\">=</span> <span class=\"n\">read_bvals_bvecs</span><span class=\"p\">(</span><span class=\"n\">fbval</span><span class=\"p\">,</span> <span class=\"n\">fbvec</span><span class=\"p\">)</span>\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Before fitting the data, we preform some data pre-processing. For illustration,\nwe only mask the data to avoid unnecessary calculations on the background of\nthe image; however, you could also apply other pre-processing techniques.\nFor example, some state of the art denoising algorithms are available in <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a>\n(e.g. the non-local means filter <span class=\"xref std std-ref\">example-denoise-nlmeans</span> or the\nlocal pca <span class=\"xref std std-ref\">example-denoise-localpca</span>).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">maskdata</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">median_otsu</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">vol_idx</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">median_radius</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">numpass</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                             <span class=\"n\">autocrop</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">dilate</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now that we have loaded and pre-processed the data we can go forward\nwith MSDKI fitting. As for the synthetic data, the MSDKI model has to be first\ndefined for the data\u2019s GradientTable object:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">msdki_model</span> <span class=\"o\">=</span> <span class=\"n\">msdki</span><span class=\"o\">.</span><span class=\"n\">MeanDiffusionKurtosisModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The data can then be fitted by calling the <code class=\"docutils literal notranslate\"><span class=\"pre\">fit</span></code> function of this object:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">msdki_fit</span> <span class=\"o\">=</span> <span class=\"n\">msdki_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s then extract the two main MSDKI\u2019s parameters: 1) mean signal diffusion\n(MSD); and 2) mean signal kurtosis (MSK).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">MSD</span> <span class=\"o\">=</span> <span class=\"n\">msdki_fit</span><span class=\"o\">.</span><span class=\"n\">msd</span>\n<span class=\"n\">MSK</span> <span class=\"o\">=</span> <span class=\"n\">msdki_fit</span><span class=\"o\">.</span><span class=\"n\">msk</span>\n</pre></div>\n</div>\n<p>For comparison, we calculate also the mean diffusivity (MD) and mean kurtosis\n(MK) from the standard DKI.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dki_model</span> <span class=\"o\">=</span> <span class=\"n\">dki</span><span class=\"o\">.</span><span class=\"n\">DiffusionKurtosisModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"n\">dki_fit</span> <span class=\"o\">=</span> <span class=\"n\">dki_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask</span><span class=\"p\">)</span>\n\n<span class=\"n\">MD</span> <span class=\"o\">=</span> <span class=\"n\">dki_fit</span><span class=\"o\">.</span><span class=\"n\">md</span>\n<span class=\"n\">MK</span> <span class=\"o\">=</span> <span class=\"n\">dki_fit</span><span class=\"o\">.</span><span class=\"n\">mk</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s now visualize the data using matplotlib for a selected axial slice.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">axial_slice</span> <span class=\"o\">=</span> <span class=\"mi\">9</span>\n\n<span class=\"n\">fig2</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n                        <span class=\"n\">subplot_kw</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;xticks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span> <span class=\"s1\">&#39;yticks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[]})</span>\n\n<span class=\"n\">fig2</span><span class=\"o\">.</span><span class=\"n\">subplots_adjust</span><span class=\"p\">(</span><span class=\"n\">hspace</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"n\">wspace</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">MSD</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_slice</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">2.0e-3</span><span class=\"p\">,</span>\n                  <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSD (MSDKI)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">MSK</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_slice</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                  <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSK (MSDKI)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">MD</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_slice</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mf\">2.0e-3</span><span class=\"p\">,</span>\n                  <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MD (DKI)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">MK</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">axial_slice</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                  <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;MK (DKI)&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">fig2</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;MSDKI_invivo.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This figure shows that the contrast of in-vivo MSD and MSK maps (upper panels)\nare similar to the contrast of MD and MSK maps (lower panels); however, in the\nupper part we insure that direct contributions of fiber dispersion were\nremoved. The upper panels also reveal that MSDKI measures are let sensitive\nto noise artefacts than standard DKI measures (as pointed by <a class=\"reference internal\" href=\"#netohe2018\" id=\"id8\"><span>[NetoHe2018]</span></a>),\nparticularly one can appriciate that MSK maps always present positive values\nin brain white matter regions, while implausible negative kurtosis values are\npresent in the MK maps in the same regions.</p>\n<div class=\"section\" id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"netohe2019\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id1\">NetoHe2019</a></span></dt>\n<dd><p>Neto Henriques R, Jespersen SN, Shemesh N (2019). Microscopic\nanisotropy misestimation in spherical\u2010mean single diffusion\nencoding MRI. Magnetic Resonance in Medicine (In press).\ndoi: 10.1002/mrm.27606</p>\n</dd>\n<dt class=\"label\" id=\"price2017\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id2\">Price2017</a></span></dt>\n<dd><p>Price D, Tyler LK, Neto Henriques R, Campbell KR, Williams N,\nTreder M, Taylor J, Cam-CAN, Henson R (2017). Age-Related\nDelay in Visual and Auditory Evoked Responses is Mediated by\nWhite- and Gray-matter Differences. Nature Communications 8,\n15671. doi: 10.1038/ncomms15671.</p>\n</dd>\n<dt class=\"label\" id=\"jensen2005\"><span class=\"brackets\">Jensen2005</span></dt>\n<dd><p>Jensen JH, Helpern JA, Ramani A, Lu H, Kaczynski K (2005).\nDiffusional Kurtosis Imaging: The Quantification of\nNon_Gaussian Water Diffusion by Means of Magnetic Resonance\nImaging. Magnetic Resonance in Medicine 53: 1432-1440</p>\n</dd>\n<dt class=\"label\" id=\"netohe2015\"><span class=\"brackets\">NetoHe2015</span><span class=\"fn-backref\">(<a href=\"#id3\">1</a>,<a href=\"#id6\">2</a>)</span></dt>\n<dd><p>Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</p>\n</dd>\n<dt class=\"label\" id=\"netohe2018\"><span class=\"brackets\">NetoHe2018</span><span class=\"fn-backref\">(<a href=\"#id4\">1</a>,<a href=\"#id5\">2</a>,<a href=\"#id8\">3</a>)</span></dt>\n<dd><p>Henriques RN, 2018. Advanced Methods for Diffusion MRI Data\nAnalysis and their Application to the Healthy Ageing Brain\n(Doctoral thesis). Downing College, University of Cambridge.\n<a class=\"reference external\" href=\"https://doi.org/10.17863/CAM.29356\">https://doi.org/10.17863/CAM.29356</a></p>\n</dd>\n<dt class=\"label\" id=\"hansen2016\"><span class=\"brackets\"><a class=\"fn-backref\" href=\"#id7\">Hansen2016</a></span></dt>\n<dd><p>Hansen, B, Jespersen, SN (2016). Data for evaluation of fast\nkurtosis strategies, b-value optimization and exploration of\ndiffusion MRI contrast. Scientific Data 3: 160072\ndoi:10.1038/sdata.2016.72</p>\n</dd>\n</dl>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/9e43930bb74757f21b138aa9c33fe4e8/reconst_msdki.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/reconst_msdki.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Mean signal diffusion kurtosis imaging (MSDKI)</a><ul>\n<li><a class=\"reference internal\" href=\"#testing-msdki-in-synthetic-data\">Testing MSDKI in synthetic data</a></li>\n<li><a class=\"reference internal\" href=\"#reconstructing-diffusion-data-using-msdki\">Reconstructing diffusion data using MSDKI</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/reconst_msdki", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}