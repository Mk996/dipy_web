{"parents": [], "prev": null, "next": null, "title": "Advanced interactive visualization", "meta": {}, "body": "<section id=\"advanced-interactive-visualization\">\n<span id=\"example-viz-advanced\"></span><h1>Advanced interactive visualization<a class=\"headerlink\" href=\"#advanced-interactive-visualization\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>In <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a> we created a thin interface to access many of the capabilities\navailable in the FURY 3D visualization library but tailored to the\nneeds of structural and diffusion imaging.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">ui</span>\n</pre></div>\n</div>\n<p>In <code class=\"docutils literal notranslate\"><span class=\"pre\">window</span></code> we have all the objects that connect what needs to be rendered\nto the display or the disk e.g., for saving screenshots. So, there you will\nfind key objects and functions like the <code class=\"docutils literal notranslate\"><span class=\"pre\">Scene</span></code> class which holds and\nprovides access to all the actors and the <code class=\"docutils literal notranslate\"><span class=\"pre\">show</span></code> function which displays what\nis in the scene on a window. Also, this module provides access to functions\nfor opening/saving dialogs and printing screenshots (see <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot</span></code>).</p>\n<p>In the <code class=\"docutils literal notranslate\"><span class=\"pre\">actor</span></code> module we can find all the different primitives e.g.,\nstreamtubes, lines, image slices, etc.</p>\n<p>In the <code class=\"docutils literal notranslate\"><span class=\"pre\">ui</span></code> module we have some other objects which allow to add buttons\nand sliders and these interact both with windows and actors. Because of this\nthey need input from the operating system so they can process events.</p>\n<p>Let\u2019s get started. In this tutorial, we will visualize some bundles\ntogether with FA or T1. We will be able to change the slices using\na <code class=\"docutils literal notranslate\"><span class=\"pre\">LineSlider2D</span></code> widget.</p>\n<p>First we need to fetch and load some datasets.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">Streamlines</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data.fetcher</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_bundles_2_subjects</span><span class=\"p\">,</span> <span class=\"n\">read_bundles_2_subjects</span>\n\n<span class=\"n\">fetch_bundles_2_subjects</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>The following function outputs a dictionary with the required bundles e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">af</span>\n<span class=\"pre\">left</span></code> (left arcuate fasciculus) and maps, e.g. FA for a specific subject.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">read_bundles_2_subjects</span><span class=\"p\">(</span><span class=\"s1\">&#39;subj_1&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;t1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fa&#39;</span><span class=\"p\">],</span>\n                              <span class=\"p\">[</span><span class=\"s1\">&#39;af.left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cst.right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cc_1&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>We will use 3 bundles, FA and the affine transformation that brings the voxel\ncoordinates to world coordinates (RAS 1mm).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">Streamlines</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;af.left&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">streamlines</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;cst.right&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">streamlines</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;cc_1&#39;</span><span class=\"p\">])</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;fa&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">&#39;affine&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>With our current design it is easy to decide in which space you want the\nstreamlines and slices to appear. The default we have here is to appear in\nworld coordinates (RAS 1mm).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">world_coords</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>\n<p>If we want to see the objects in native space we need to make sure that all\nobjects which are currently in world coordinates are transformed back to\nnative space using the inverse of the affine.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">world_coords</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">transform_streamlines</span>\n    <span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">transform_streamlines</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">inv</span><span class=\"p\">(</span><span class=\"n\">affine</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Now we create, a <code class=\"docutils literal notranslate\"><span class=\"pre\">Scene</span></code> object and add the streamlines using the <code class=\"docutils literal notranslate\"><span class=\"pre\">line</span></code>\nfunction and an image plane using the <code class=\"docutils literal notranslate\"><span class=\"pre\">slice</span></code> function.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n<span class=\"n\">stream_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">world_coords</span><span class=\"p\">:</span>\n    <span class=\"n\">image_actor_z</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">slicer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">image_actor_z</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">slicer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can also change also the opacity of the slicer.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">slicer_opacity</span> <span class=\"o\">=</span> <span class=\"mf\">0.6</span>\n<span class=\"n\">image_actor_z</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">(</span><span class=\"n\">slicer_opacity</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can add additonal slicers by copying the original and adjusting the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">display_extent</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">image_actor_x</span> <span class=\"o\">=</span> <span class=\"n\">image_actor_z</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"n\">x_midpoint</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">image_actor_x</span><span class=\"o\">.</span><span class=\"n\">display_extent</span><span class=\"p\">(</span><span class=\"n\">x_midpoint</span><span class=\"p\">,</span>\n                             <span class=\"n\">x_midpoint</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                             <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                             <span class=\"mi\">0</span><span class=\"p\">,</span>\n                             <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">image_actor_y</span> <span class=\"o\">=</span> <span class=\"n\">image_actor_z</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"n\">y_midpoint</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">image_actor_y</span><span class=\"o\">.</span><span class=\"n\">display_extent</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                             <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                             <span class=\"n\">y_midpoint</span><span class=\"p\">,</span>\n                             <span class=\"n\">y_midpoint</span><span class=\"p\">,</span>\n                             <span class=\"mi\">0</span><span class=\"p\">,</span>\n                             <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Connect the actors with the Scene.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">stream_actor</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">image_actor_z</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">image_actor_x</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">image_actor_y</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we would like to change the position of each <code class=\"docutils literal notranslate\"><span class=\"pre\">image_actor</span></code> using a\nslider. The sliders are widgets which require access to different areas of the\nvisualization pipeline and therefore we don\u2019t recommend using them with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">show</span></code>. The more appropriate way is to use them with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ShowManager</span></code>\nobject which allows accessing the pipeline in different areas. Here is how:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">show_m</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">ShowManager</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n<span class=\"n\">show_m</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>After we have initialized the <code class=\"docutils literal notranslate\"><span class=\"pre\">ShowManager</span></code> we can go ahead and create\nsliders to move the slices and change their opacity.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">line_slider_z</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">LineSlider2D</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                <span class=\"n\">max_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                                <span class=\"n\">text_template</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">{value:.0f}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">140</span><span class=\"p\">)</span>\n\n<span class=\"n\">line_slider_x</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">LineSlider2D</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                <span class=\"n\">max_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                                <span class=\"n\">text_template</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">{value:.0f}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">140</span><span class=\"p\">)</span>\n\n<span class=\"n\">line_slider_y</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">LineSlider2D</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                <span class=\"n\">max_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                                <span class=\"n\">text_template</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">{value:.0f}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">140</span><span class=\"p\">)</span>\n\n<span class=\"n\">opacity_slider</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">LineSlider2D</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span>\n                                 <span class=\"n\">max_value</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                                 <span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"n\">slicer_opacity</span><span class=\"p\">,</span>\n                                 <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">140</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we will write callbacks for the sliders and register them.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">change_slice_z</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"p\">):</span>\n    <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span>\n    <span class=\"n\">image_actor_z</span><span class=\"o\">.</span><span class=\"n\">display_extent</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">change_slice_x</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span>\n    <span class=\"n\">image_actor_x</span><span class=\"o\">.</span><span class=\"n\">display_extent</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">change_slice_y</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"p\">):</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span>\n    <span class=\"n\">image_actor_y</span><span class=\"o\">.</span><span class=\"n\">display_extent</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">change_opacity</span><span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"p\">):</span>\n    <span class=\"n\">slicer_opacity</span> <span class=\"o\">=</span> <span class=\"n\">slider</span><span class=\"o\">.</span><span class=\"n\">value</span>\n    <span class=\"n\">image_actor_z</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">(</span><span class=\"n\">slicer_opacity</span><span class=\"p\">)</span>\n    <span class=\"n\">image_actor_x</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">(</span><span class=\"n\">slicer_opacity</span><span class=\"p\">)</span>\n    <span class=\"n\">image_actor_y</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">(</span><span class=\"n\">slicer_opacity</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">line_slider_z</span><span class=\"o\">.</span><span class=\"n\">on_change</span> <span class=\"o\">=</span> <span class=\"n\">change_slice_z</span>\n<span class=\"n\">line_slider_x</span><span class=\"o\">.</span><span class=\"n\">on_change</span> <span class=\"o\">=</span> <span class=\"n\">change_slice_x</span>\n<span class=\"n\">line_slider_y</span><span class=\"o\">.</span><span class=\"n\">on_change</span> <span class=\"o\">=</span> <span class=\"n\">change_slice_y</span>\n<span class=\"n\">opacity_slider</span><span class=\"o\">.</span><span class=\"n\">on_change</span> <span class=\"o\">=</span> <span class=\"n\">change_opacity</span>\n</pre></div>\n</div>\n<p>We\u2019ll also create text labels to identify the sliders.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">build_label</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">TextBlock2D</span><span class=\"p\">()</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">text</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">font_size</span> <span class=\"o\">=</span> <span class=\"mi\">18</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">font_family</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Arial&#39;</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">justification</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">bold</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">italic</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">shadow</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">background_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">label</span>\n\n\n<span class=\"n\">line_slider_label_z</span> <span class=\"o\">=</span> <span class=\"n\">build_label</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z Slice&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">line_slider_label_x</span> <span class=\"o\">=</span> <span class=\"n\">build_label</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;X Slice&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">line_slider_label_y</span> <span class=\"o\">=</span> <span class=\"n\">build_label</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;Y Slice&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">opacity_slider_label</span> <span class=\"o\">=</span> <span class=\"n\">build_label</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;Opacity&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we will create a <code class=\"docutils literal notranslate\"><span class=\"pre\">panel</span></code> to contain the sliders and labels.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">panel</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Panel2D</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n                   <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n                   <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n                   <span class=\"n\">align</span><span class=\"o\">=</span><span class=\"s2\">&quot;right&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">center</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1030</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">)</span>\n\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_label_x</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_x</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.38</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_label_y</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.55</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_y</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.38</span><span class=\"p\">,</span> <span class=\"mf\">0.55</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_label_z</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.35</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">line_slider_z</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.38</span><span class=\"p\">,</span> <span class=\"mf\">0.35</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">opacity_slider_label</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.15</span><span class=\"p\">))</span>\n<span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"n\">opacity_slider</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.38</span><span class=\"p\">,</span> <span class=\"mf\">0.15</span><span class=\"p\">))</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">panel</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Then, we can render all the widgets and everything else in the screen and\nstart the interaction using <code class=\"docutils literal notranslate\"><span class=\"pre\">show_m.start()</span></code>.</p>\n<p>However, if you change the window size, the panel will not update its position\nproperly. The solution to this issue is to update the position of the panel\nusing its <code class=\"docutils literal notranslate\"><span class=\"pre\">re_align</span></code> method every time the window size changes.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">global</span> <span class=\"n\">size</span>\n<span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">GetSize</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">win_callback</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">global</span> <span class=\"n\">size</span>\n    <span class=\"k\">if</span> <span class=\"n\">size</span> <span class=\"o\">!=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">GetSize</span><span class=\"p\">():</span>\n        <span class=\"n\">size_old</span> <span class=\"o\">=</span> <span class=\"n\">size</span>\n        <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">GetSize</span><span class=\"p\">()</span>\n        <span class=\"n\">size_change</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">size_old</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">panel</span><span class=\"o\">.</span><span class=\"n\">re_align</span><span class=\"p\">(</span><span class=\"n\">size_change</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">show_m</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Finally, please set the following variable to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> to interact with the\ndatasets in 3D.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">(</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">reset_clipping_range</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n\n    <span class=\"n\">show_m</span><span class=\"o\">.</span><span class=\"n\">add_window_callback</span><span class=\"p\">(</span><span class=\"n\">win_callback</span><span class=\"p\">)</span>\n    <span class=\"n\">show_m</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n    <span class=\"n\">show_m</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"k\">else</span><span class=\"p\">:</span>\n\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;bundles_and_3_slices.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1200</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">),</span>\n                  <span class=\"n\">reset_camera</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id2\">\n<img alt=\"../../_images/bundles_and_3_slices.png\" src=\"../../_images/bundles_and_3_slices.png\" />\n<figcaption>\n<p><span class=\"caption-text\">A few bundles with interactive slicing.</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">del</span> <span class=\"n\">show_m</span>\n</pre></div>\n</div>\n<section id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"citation\">\n<dt class=\"label\" id=\"garyfallidis2021\"><span class=\"brackets\">Garyfallidis2021</span></dt>\n<dd><p>Garyfallidis, Eleftherios, Serge Koudoro, Javier Guaje,\nMarc-Alexandre C\u00f4t\u00e9, Soham Biswas, David Reagan, Nasim Anousheh,\nFilipi Silva, Geoffrey Fox, and Fury Contributors.\n\u201cFURY: advanced scientific visualization.\u201d Journal of Open Source Software\n6 no. 64 (2021): 3384.\n<a class=\"reference external\" href=\"https://doi.org/10.21105/joss.03384\">https://doi.org/10.21105/joss.03384</a></p>\n</dd>\n</dl>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/836df926c453674abed197a7e126e1d5/viz_advanced.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/viz_advanced.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Advanced interactive visualization</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/viz_advanced", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}