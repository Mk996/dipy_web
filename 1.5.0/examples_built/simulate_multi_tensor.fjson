{"parents": [], "prev": null, "next": null, "title": "MultiTensor Simulation", "meta": {}, "body": "<section id=\"multitensor-simulation\">\n<span id=\"example-simulate-multi-tensor\"></span><h1>MultiTensor Simulation<a class=\"headerlink\" href=\"#multitensor-simulation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>In this example we show how someone can simulate the signal and the ODF of a\nsingle voxel using a MultiTensor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"kn\">import</span> <span class=\"n\">multi_tensor</span><span class=\"p\">,</span> <span class=\"n\">multi_tensor_odf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">get_sphere</span>\n</pre></div>\n</div>\n<p>For the simulation we will need a GradientTable with the b-values and b-vectors\nHere we use the one we created in <a class=\"reference internal\" href=\"../gradients_spheres/#example-gradients-spheres\"><span class=\"std std-ref\">Gradients and Spheres</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">gradients_spheres</span> <span class=\"kn\">import</span> <span class=\"n\">gtab</span>\n</pre></div>\n</div>\n<p>In <code class=\"docutils literal notranslate\"><span class=\"pre\">mevals</span></code> we save the eigenvalues of each tensor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mevals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>In <code class=\"docutils literal notranslate\"><span class=\"pre\">angles</span></code> we save in polar coordinates (<span class=\"math notranslate nohighlight\">\\(\\theta, \\phi\\)</span>) the principal\naxis of each tensor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n<p>In <code class=\"docutils literal notranslate\"><span class=\"pre\">fractions</span></code> we save the percentage of the contribution of each tensor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fractions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The function <code class=\"docutils literal notranslate\"><span class=\"pre\">multi_tensor</span></code> will return the simulated signal and an array\nwith the principal axes of the tensors in cartesian coordinates.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">sticks</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">S0</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">angles</span><span class=\"p\">,</span>\n                         <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We can also add Rician noise with a specific SNR.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">signal_noisy</span><span class=\"p\">,</span> <span class=\"n\">sticks</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">S0</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">angles</span><span class=\"p\">,</span>\n                         <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;noiseless&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">signal_noisy</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;with noise&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"c1\">#plt.show()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;simulated_signal.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id2\">\n<img alt=\"../../_images/simulated_signal.png\" src=\"../../_images/simulated_signal.png\" />\n<figcaption>\n<p><span class=\"caption-text\"><strong>Simulated MultiTensor signal</strong></span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<p>For the ODF simulation we will need a sphere. Because we are interested in a\nsimulation of only a single voxel, we can use a sphere with very high\nresolution. We generate that by subdividing the triangles of one of <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a>\u2019s\ncached spheres, which we can read in the following way.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;repulsion724&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">subdivide</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">mevals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"n\">fractions</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n\n<span class=\"c1\"># Enables/disables interactive visualization</span>\n<span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">odf_slicer</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">&#39;plasma&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n\n<span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as multi_tensor_simulation&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;multi_tensor_simulation.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id3\">\n<img alt=\"../../_images/multi_tensor_simulation.png\" src=\"../../_images/multi_tensor_simulation.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Simulating a MultiTensor ODF.</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/a1252ccc95c38ed8d26932207ff90b18/simulate_multi_tensor.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/simulate_multi_tensor.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">MultiTensor Simulation</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/simulate_multi_tensor", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}