{"parents": [], "prev": null, "next": null, "title": "Direct Bundle Registration", "meta": {}, "body": "<section id=\"direct-bundle-registration\">\n<span id=\"example-bundle-registration\"></span><h1>Direct Bundle Registration<a class=\"headerlink\" href=\"#direct-bundle-registration\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This example explains how you can register two bundles from two different\nsubjects directly in the space of streamlines <a class=\"reference internal\" href=\"../../reference_cmd/dipy_slr/#garyfallidis15\" id=\"id1\"><span>[Garyfallidis15]</span></a>, <a class=\"reference internal\" href=\"../../reference_cmd/dipy_slr/#garyfallidis14\" id=\"id2\"><span>[Garyfallidis14]</span></a>.</p>\n<p>To show the concept we will use two pre-saved cingulum bundles. The algorithm\nused here is called Streamline-based Linear Registration (SLR) <a class=\"reference internal\" href=\"../../reference_cmd/dipy_slr/#garyfallidis15\" id=\"id3\"><span>[Garyfallidis15]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"kn\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"kn\">import</span> <span class=\"n\">two_cingulum_bundles</span>\n\n<span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2</span> <span class=\"o\">=</span> <span class=\"n\">two_cingulum_bundles</span><span class=\"p\">()</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.align.streamlinear</span> <span class=\"kn\">import</span> <span class=\"n\">StreamlineLinearRegistration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"kn\">import</span> <span class=\"n\">set_number_of_points</span>\n</pre></div>\n</div>\n<p>An important step before running the registration is to resample the\nstreamlines so that they both have the same number of points per streamline.\nHere we will use 20 points. This step is not optional. Inputting streamlines\nwith a different number of points will break the theoretical advantages of using\nthe SLR as explained in <a class=\"reference internal\" href=\"../../reference_cmd/dipy_slr/#garyfallidis15\" id=\"id4\"><span>[Garyfallidis15]</span></a>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cb_subj1</span> <span class=\"o\">=</span> <span class=\"n\">set_number_of_points</span><span class=\"p\">(</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">cb_subj2</span> <span class=\"o\">=</span> <span class=\"n\">set_number_of_points</span><span class=\"p\">(</span><span class=\"n\">cb_subj2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Let\u2019s say now that we want to move the <code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj2</span></code> (moving) so that it can be\naligned with <code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj1</span></code> (static). Here is how this is done.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">srr</span> <span class=\"o\">=</span> <span class=\"n\">StreamlineLinearRegistration</span><span class=\"p\">()</span>\n\n<span class=\"n\">srm</span> <span class=\"o\">=</span> <span class=\"n\">srr</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">static</span><span class=\"o\">=</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"o\">=</span><span class=\"n\">cb_subj2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>After the optimization is finished we can apply the transformation to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cb_subj2</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cb_subj2_aligned</span> <span class=\"o\">=</span> <span class=\"n\">srm</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">cb_subj2</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">show_both_bundles</span><span class=\"p\">(</span><span class=\"n\">bundles</span><span class=\"p\">,</span> <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n    <span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">()</span>\n    <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">bundle</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">bundles</span><span class=\"p\">):</span>\n        <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">colors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"n\">lines_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n        <span class=\"n\">lines_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n        <span class=\"n\">lines_actor</span><span class=\"o\">.</span><span class=\"n\">RotateZ</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n        <span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lines_actor</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">show</span><span class=\"p\">:</span>\n        <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">fname</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">scene</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">show_both_bundles</span><span class=\"p\">([</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2</span><span class=\"p\">],</span>\n                  <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">],</span>\n                  <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                  <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;before_registration.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id5\">\n<img alt=\"../../_images/before_registration.png\" src=\"../../_images/before_registration.png\" />\n<figcaption>\n<p><span class=\"caption-text\">Before bundle registration.</span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">show_both_bundles</span><span class=\"p\">([</span><span class=\"n\">cb_subj1</span><span class=\"p\">,</span> <span class=\"n\">cb_subj2_aligned</span><span class=\"p\">],</span>\n                  <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">orange</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">],</span>\n                  <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                  <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;after_registration.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<figure class=\"align-center\" id=\"id6\">\n<img alt=\"../../_images/after_registration.png\" src=\"../../_images/after_registration.png\" />\n<figcaption>\n<p><span class=\"caption-text\">After bundle registration.</span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this image\">\u00b6</a></p>\n</figcaption>\n</figure>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"sa\">r</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">As you can see the two cingulum bundles are well aligned although they contain</span>\n<span class=\"s2\">many streamlines of different lengths and shapes.</span>\n\n<span class=\"s2\">Streamline-based Linear Registration (SLR) is a method which given two sets of</span>\n<span class=\"s2\">streamlines (fixed and moving) and a streamline-based cost function, will</span>\n<span class=\"s2\">minimize the cost function and transform the moving set of streamlines (target)</span>\n<span class=\"s2\">to the fixed (reference), so that they maximally overlap under the condition</span>\n<span class=\"s2\">that the transform stays linear.</span>\n\n<span class=\"s2\">We denote a single streamline with s and a set of streamlines with S.</span>\n<span class=\"s2\">A streamline s is an ordered sequence of line segments connecting 3D vector</span>\n<span class=\"s2\">points :math:`\\mathbf</span><span class=\"si\">{x}</span><span class=\"s2\">_</span><span class=\"si\">{k}</span><span class=\"s2\"> \\in \\mathbb</span><span class=\"si\">{R}</span><span class=\"s2\">^</span><span class=\"si\">{3}</span><span class=\"s2\">` with :math:`k \\in[1, K]` where K is the</span>\n<span class=\"s2\">total number of points of streamline s. Given two bundles(two sets of</span>\n<span class=\"s2\">streamlines), we denote :math:`S_</span><span class=\"si\">{a}</span><span class=\"s2\">=\\left\\{s_</span><span class=\"si\">{1}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, \\ldots, S_</span><span class=\"si\">{A}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">\\right\\}` and</span>\n<span class=\"s2\">:math:`S_</span><span class=\"si\">{b}</span><span class=\"s2\">=\\left\\{s_</span><span class=\"si\">{1}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">, \\ldots, s_</span><span class=\"si\">{B}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right\\}`, where A and B are the</span>\n<span class=\"s2\">total numbers of streamlines in each set respectively. We want to minimize a</span>\n<span class=\"s2\">cost function so that we can align the two sets together. For this purpose, we</span>\n<span class=\"s2\">introduce a new cost function, the Bundle-based Minimum Distance (BMD), which</span>\n<span class=\"s2\">is defined as:</span>\n\n<span class=\"s2\">.. math::</span>\n\n<span class=\"s2\">    \\operatorname</span><span class=\"si\">{BMD}</span><span class=\"s2\">\\left(S_</span><span class=\"si\">{a}</span><span class=\"s2\">, S_</span><span class=\"si\">{b}</span><span class=\"s2\">\\right)=\\frac</span><span class=\"si\">{1}{4}</span><span class=\"s2\">\\left(\\frac</span><span class=\"si\">{1}{A}</span><span class=\"s2\"> \\\\</span>\n<span class=\"s2\">        \\sum_{i=1}^</span><span class=\"si\">{A}</span><span class=\"s2\"> \\min _</span><span class=\"si\">{j}</span><span class=\"s2\"> D(i, j)+\\frac</span><span class=\"si\">{1}{B}</span><span class=\"s2\"> \\sum_{j=1}^</span><span class=\"si\">{B}</span><span class=\"s2\"> \\\\</span>\n<span class=\"s2\">        \\min _</span><span class=\"si\">{i}</span><span class=\"s2\"> D(i, j)\\right)^</span><span class=\"si\">{2}</span><span class=\"s2\"></span>\n\n\n<span class=\"s2\">where D is the rectangular matrix given by all pairwise Minimum average</span>\n<span class=\"s2\">Direct-Flip (MDF) streamline distances (Garyfallidis et al., 2012). Therefore,</span>\n<span class=\"s2\">every element of matrix D is equal to</span>\n<span class=\"s2\">:math:`D_{i j}=M D F\\left(s^</span><span class=\"si\">{a}</span><span class=\"s2\">{ }_</span><span class=\"si\">{i}</span><span class=\"s2\">, s^</span><span class=\"si\">{b}</span><span class=\"s2\">{ }_</span><span class=\"si\">{j}</span><span class=\"s2\">\\right)`.</span>\n\n<span class=\"s2\">Notice, how in Eq. (1), the most similar streamlines from one streamline set</span>\n<span class=\"s2\">to the other are weighted more by averaging the minimum values of the rows</span>\n<span class=\"s2\">and columns of matrix D. This makes our method robust to fanning streamlines</span>\n<span class=\"s2\">near endpoints of bundles and spurious streamlines if any in the bundle. The</span>\n<span class=\"s2\">MDF is a symmetric distance between two individual streamlines. It was</span>\n<span class=\"s2\">primarily used for clustering (Garyfallidis et al., 2010; Visser et al., 2011)</span>\n<span class=\"s2\">and tractography simplification (see Garyfallidis et al., 2012). This distance</span>\n<span class=\"s2\">can be applied only when both streamlines have the same number of points.</span>\n<span class=\"s2\">Therefore we assume from now on that an initial interpolation of streamlines</span>\n<span class=\"s2\">has been applied, so that all streamlines have the same number of points K,</span>\n<span class=\"s2\">and all segments of each streamline have equal length. The length of each</span>\n<span class=\"s2\">segment is equal to the length of the streamline divided by the number of</span>\n<span class=\"s2\">segments :math:`(K-1)`. This is achieved by a simple linear interpolation with the</span>\n<span class=\"s2\">starting and ending points of the streamlines intact. When K is small, the</span>\n<span class=\"s2\">interpolation provides a rough representation of the streamline, but as K</span>\n<span class=\"s2\">becomes larger and larger the shape of the interpolated streamline becomes</span>\n<span class=\"s2\">identical with the shape of the initial streamline. Under this assumption, the</span>\n<span class=\"s2\">MDF for two streamlines :math:`S_</span><span class=\"si\">{a}</span><span class=\"s2\">` and :math:`S_</span><span class=\"si\">{b}</span><span class=\"s2\">` is defined as:</span>\n\n\n<span class=\"s2\">.. math::</span>\n\n<span class=\"s2\">    \\operatorname</span><span class=\"si\">{MDF}</span><span class=\"s2\">\\left(s_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, s_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right)=\\min \\\\</span>\n<span class=\"s2\">        \\left(d_{\\text {direct }}\\left(s_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, s_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right), \\\\</span>\n<span class=\"s2\">        d_{\\text {flipped }}\\left(s_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, s_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right)\\right)</span>\n\n\n<span class=\"s2\">where :math:`d_{\\text {direct }}` is the direct distance which is defined as:</span>\n\n<span class=\"s2\">.. math::</span>\n\n<span class=\"s2\">    d_{\\text {direct }}\\left(s_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, s_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right)=\\frac</span><span class=\"si\">{1}{K}</span><span class=\"s2\"> \\\\</span>\n<span class=\"s2\">        \\sum_{k=1}^</span><span class=\"si\">{K}</span><span class=\"s2\">\\left\\|\\mathbf</span><span class=\"si\">{x}</span><span class=\"s2\">_</span><span class=\"si\">{k}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">-\\mathbf</span><span class=\"si\">{x}</span><span class=\"s2\">_</span><span class=\"si\">{k}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right\\|_</span><span class=\"si\">{2}</span><span class=\"s2\"></span>\n\n<span class=\"s2\">where :math:`x_</span><span class=\"si\">{k}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">` is the k-th point of streamline :math:`S_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">` and :math:`x_</span><span class=\"si\">{k}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">`</span>\n<span class=\"s2\">is the k-th point of streamline :math:`S_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">`. :math:`d_{\\text {flipped }}` is the one</span>\n<span class=\"s2\">of the streamlines flipped and it is defined as:</span>\n\n<span class=\"s2\">.. math::</span>\n\n<span class=\"s2\">    d_{\\text {flipped }}\\left(s_</span><span class=\"si\">{i}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">, s_</span><span class=\"si\">{j}</span><span class=\"s2\">^</span><span class=\"si\">{b}</span><span class=\"s2\">\\right)=\\frac</span><span class=\"si\">{1}{K}</span><span class=\"s2\"> \\\\</span>\n<span class=\"s2\">        \\sum_{k=1}^</span><span class=\"si\">{K}</span><span class=\"s2\">\\left\\|\\mathbf</span><span class=\"si\">{x}</span><span class=\"s2\">_</span><span class=\"si\">{k}</span><span class=\"s2\">^</span><span class=\"si\">{a}</span><span class=\"s2\">-\\mathbf</span><span class=\"si\">{x}</span><span class=\"s2\">_{K-k+1}^</span><span class=\"si\">{b}</span><span class=\"s2\">\\\\</span>\n<span class=\"s2\">        \\right\\|_</span><span class=\"si\">{2}</span><span class=\"s2\"></span>\n\n<span class=\"s2\">and K is the total number of points in :math:`x^</span><span class=\"si\">{a}</span><span class=\"s2\">` and :math:`x^</span><span class=\"si\">{b}</span><span class=\"s2\">`.</span>\n<span class=\"s2\">The MDF has two very useful properties. First, it takes into consideration that</span>\n<span class=\"s2\">streamlines have no preferred orientation. Second, it is a mathematically sound</span>\n<span class=\"s2\">metric distance in the space of streamlines as proved in Garyfallidis et al.</span>\n<span class=\"s2\">(2012). This means that the MDF is nonnegative, 0 only when both streamlines</span>\n<span class=\"s2\">are identical, symmetric and it satisfies the triangle inequality. Now that we</span>\n<span class=\"s2\">have defined our cost function in Eq. (1) we can formulate the following</span>\n<span class=\"s2\">optimization problem. Given a fixed bundle S and a moving bundle M we would</span>\n<span class=\"s2\">like to find the vector of parameters t which transforms M to S using a linear</span>\n<span class=\"s2\">transformation T so that BMD is minimum:</span>\n\n<span class=\"s2\">.. math::</span>\n\n<span class=\"s2\">    \\operatorname</span><span class=\"si\">{SLR}</span><span class=\"s2\">(S, M)=\\\\underset{\\mathbf</span><span class=\"si\">{t}</span><span class=\"s2\">}{\\operatorname</span><span class=\"si\">{argmin}</span><span class=\"s2\">} \\\\</span>\n<span class=\"s2\">        \\operatorname</span><span class=\"si\">{BMD}</span><span class=\"s2\">(S, T(M, \\mathbf</span><span class=\"si\">{t}</span><span class=\"s2\">))</span>\n\n\n<span class=\"s2\">Here, :math:`\\mathbf</span><span class=\"si\">{t}</span><span class=\"s2\">` is a vector in :math:`\\mathbb</span><span class=\"si\">{R}</span><span class=\"s2\">^</span><span class=\"si\">{n}</span><span class=\"s2\">` holding the parameters of</span>\n<span class=\"s2\">the linear transform where n = 12 for affine or n = 6 for rigid registration.</span>\n<span class=\"s2\">From this vector we can then compose the transformation matrix which is applied</span>\n<span class=\"s2\">to all the points of bundle M.</span>\n\n\n<span class=\"s2\">References</span>\n<span class=\"s2\">----------</span>\n\n<span class=\"s2\">.. [Garyfallidis15] Garyfallidis et al., &quot;Robust and efficient linear</span>\n<span class=\"s2\">                    registration of white-matter fascicles in the space</span>\n<span class=\"s2\">                    of streamlines&quot;, Neuroimage, 117:124-140, 2015.</span>\n<span class=\"s2\">.. [Garyfallidis14] Garyfallidis et al., &quot;Direct native-space fiber bundle</span>\n<span class=\"s2\">                    alignment for group comparisons&quot;, ISMRM, 2014.</span>\n</pre></div>\n</div>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"admonition-title\">Example source code</p>\n<p>You can download <a class=\"reference download internal\" download=\"\" href=\"../../_downloads/06de93bf642e69b6cebf8560c9eeefa1/bundle_registration.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/bundle_registration.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Direct Bundle Registration</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "examples_built/bundle_registration", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}